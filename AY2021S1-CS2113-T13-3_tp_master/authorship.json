[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    mainClassName \u003d \"seedu.WhereGotTime\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    archiveBaseName \u003d \"WhereGotTime\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 3,
      "-": 44
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yeap Chun Lik | [Github](https://github.com/yeapcl) | [Portfolio](team/yeapcl.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ng Wei Siong| [Github](https://github.com/weisiong24) | [Portfolio](team/weisiong24.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tammy Koh | [Github](https://github.com/tammykoh) | [Portfolio](team/tammykoh.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Manuntag Manuel II Papa | [Github](https://github.com/manuelmanuntag96) | [Portfolio](team/manuelmanuntag96.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Huang Shaohang | [Github](https://github.com/yellow-fellow) | [Portfolio](team/yellow-fellow.md)"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 5,
      "-": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "## Table of content"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "**1. Setting Up**\\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "**2. Design**\\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "**3. Implementation**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "## 1. Setting Up"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "**Prerequisites:**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* IntelliJ IDE"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "Refer to the guide [_Setting Up_](SettingUp.md)."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "## 2. Design"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### 2.1 Architecture"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "The **Architecture Diagram** below shows a high-level design of WhereGotTime. The design is based "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "on multi-tier architecture where the processing, UI, logic and data management are separated. The upper"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "tiers make use of services provided by lower tiers."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/Overall Architecture.png)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "Here is a quick overview of the main components of WhereGotTime:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `WhereGotTime` - initializes the components in the app"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `UI` - the user interface of the app"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `Parser` - analyzes and interprets user input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `Command` - executes the action required by user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `Storage` - reads and writes data to file "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `Common` - collection of classes used by multiple components"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   * `Users` - the users who have logged into WhereGotTime"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   * `Timetable` - the timetable of each of the users"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   * `Event` - an object representing a lesson in the timetable"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "**How architecture components interact**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "The following Sequence Diagram displays how components interact when the user inputs `clear /fri`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "![Architecture Sequence Diagram](images/ArchitectureSequenceDiagram.PNG)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "## 3. Design \u0026 Implementation"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "This section describes how features/functions are implemented."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Parser Component"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "![](images/Parser.PNG)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "The Parser object uses its parse method to parse inputs passed to it from Ui. This method returns a Command object to be executed by"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "WhereGotTime."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### Add Function"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "#### System Architecture of the Add Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/Architect-digram.PNG)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "The Architecture Diagram given above explains the high-level design of the add command.\u003cbr/\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Below we will discuss a quick overview of each component."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* UI: The User Interface of the app\u003cbr/\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Add Command: The main logic command of the add function\u003cbr/\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Timetable: The arraylist where events that are added are stored accordingly\u003cbr/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "#### Design of the Add Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "UML Class Diagram of the Add function:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/uml.PNG)\u003cbr/\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "1) The Add function gets the inputs from the User and places it to the event class so that "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "it can parser to string.\u003cbr/\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "2)  It will then pass the event data onto UI class to display and inform user of the event added "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "to the timetable.\u003cbr/\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "3) Next,the add function will pass all the parameters (event name,day,time"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "and location) to the timetable class into its arraylist divided by the day of the week\u003cbr/\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "#### Sequence Design of Add Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/seqdiagram.jpg)\u003cbr/\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "#### Improvements made to Version 2.0\u003cbr/\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* To ensure that the users do not enter duplicate event that has the same timing or in between the time "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "that is entered. "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* A verification check is added to the add command of the version 2.0 of WhereGotTime."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "E.g."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* add /CS2113 Lec /Mon /1200-1400 /LT21\u003cbr/\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* add /CS2113 Lec /Mon /1300-1400 /LT22\u003cbr/\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* add /CS2040C Tut /Mon /1100-1300 /LT32\u003cbr/\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "The above would result in the first line being add,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "while the other two will result in the app giving an error message"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "prompting the user to re-enter again.\u003cbr/\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### Edit Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "#### Class Diagram \u003cbr/\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/ClassDiagram_EditCommand.png)\u003cbr/\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "### Delete Function"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "#### System Architecture of the Delete Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/DeleteCommand_ArchitectureDiagram.png)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "The Architecture Diagram given above explains the high-level design of the delete command.\u003cbr/\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* UI: The User Interface of the app\u003cbr/\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* DeleteCommand: The main logic command of the delete function\u003cbr/\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Timetable: The arraylist where events that are added are stored accordingly\u003cbr/\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* WhereGotTime: The main logic component of the app\u003cbr/\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "#### Design of the Delete Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/DeleteCommand_umlDiagram.png)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `DeleteCommand` gets the input from the User and gets the relevant timetable from `Timetable`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `DeleteCommand` then proceeds to delete the event in the timetable based on the index in the user input"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `DeleteCommand` passes the day, deleted event and size of timetable to the `UI`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `UI` updates the user of the successful deletion of the event"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "#### Sequence Design of Delete Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/DeleteCommand_SequenceDiagram.png)\u003cbr/\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "### Clear Function"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "#### System Architecture of the Clear Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/ClearCommand_ArchitectureDiagram.png)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "The Architecture Diagram given above explains the high-level design of the clear command.\u003cbr/\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* UI: The User Interface of the app\u003cbr/\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* ClearCommand: The main logic command of the clear function\u003cbr/\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Timetable: The arraylist where events that are added are stored accordingly\u003cbr/\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* WhereGotTime: The main logic component of the app\u003cbr/\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "#### Design of the Clear Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/ClearCommand_umlDiagram.png)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `ClearCommand` gets the input from the User and gets the relevant timetable from `Timetable`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `ClearCommand` then proceeds to clear all events from the timetable"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `ClearCommand` passes the day and cleared lesson to the `UI`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `UI` updates the user of the successful clearing of events"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "#### Sequence Design of Clear Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/ClearCommand_SequenceDiagram.png)\u003cbr/\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "### List Function"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "#### System Architecture of the List Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/ListCommand_ArchitectureDiagram.png)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "The Architecture Diagram given above explains the high-level design of the list command.\u003cbr/\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* UI: The User Interface of the app\u003cbr/\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* ListCommand: The main logic command of the list function\u003cbr/\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Timetable: The arraylist where events that are added are stored accordingly\u003cbr/\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* WhereGotTime: The main logic component of the app\u003cbr/\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "#### Design of the List Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/ListCommand_umlDiagram.png)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `ListCommand` gets the input from the User and gets the relevant user\u0027s timetable(s) from `Timetable`"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `ListCommand` then passes the user\u0027s timetable(s) to the `UI`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `UI` prints all the classes in the timetable"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "#### Sequence Design of List Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/ListCommand_SequenceDiagram.png)\u003cbr/\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "### Find Function"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "#### System Architecture of the Find Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/FindCommand_ArchitectureDiagram.png)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "The Architecture Diagram given above explains the high-level design of the find command.\u003cbr/\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* UI: The User Interface of the app\u003cbr/\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* FindCommand: The main logic command of the find function\u003cbr/\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Timetable: The arraylist where events that are added are stored accordingly\u003cbr/\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* WhereGotTime: The main logic component of the app\u003cbr/\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "#### Design of the Find Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/FindCommand_umlDiagram.png)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `FindCommand` gets the input from the User and gets the timetable from `Timetable`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `FindCommand` then searches through the timetable to find event that match the keyword entered by User"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `FindCommand` passes the matching events to `UI`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. `UI` prints the matching events"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "#### Sequence Design of Find Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/FindCommand_SequenceDiagram.png)\u003cbr/\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### Compare Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "#### System Architecture of the Compare Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/CompareCommand_ClassDiagram.jpg) \u003cbr/\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "The System Architecture given above explains the high-level design of the \u003cb\u003eCOMPARE\u003c/b\u003e command.\u003cbr/\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "Listed below are some features we will be highlighting:\u003cbr/\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "* Ui: The User Interface of the app\u003cbr/\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "* CompareCommand: The main logic command of the \u003cb\u003eCOMPARE\u003c/b\u003e function\u003cbr/\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "* Timetable: The arraylist where events that are added are stored accordingly\u003cbr/\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "* User: User(s) of the program\u003cbr/\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "* UserList: An arraylist of User\u003cbr/\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "#### Design of the Compare Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/CompareCommand_UML_Diagram.jpg)\u003cbr/\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "1) The \u003cb\u003eCOMPARE\u003c/b\u003e function gets the inputs from the User and retrieves the User\u0027s / Target User\u0027s\u003cbr/\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "timetables based on a specific day. It will then compare the timetables and return an arraylist"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "of common timeslots.\u003cbr/\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "2)  It will then pass the arraylist onto Ui class to display the range of common \u003cbr/\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "timeslots the User and Target User have on a specific day of the week.\u003cbr/\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "#### Sequence Design of Compare Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/CompareCommand_SequenceDesign.jpg) \u003cbr/\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "#### Improvements made to Version 2.0\u003cbr/\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "* Display a range of timings instead of individual hours\u003cbr/\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "* Remove edge cases\u003cbr/\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "E.g.\u003cbr/\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "* compare /Alex /Mon\u003cbr/\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "* compare /Tammy /Mon\u003cbr/\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "These cases above would no longer output \"0000HR, 0100HR\" etc but"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "instead \"0000HR - 1000HR\""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### Login Function"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "#### System Architecture of the Login Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/LogInCommand_Architecture_Diagram_v001.png)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "* UI: The User Interface of the app\u003cbr/\u003e"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "* LogInCommand: The main logic command of the Login function\u003cbr/\u003e"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "* Parser: The main logic that takes input data and builds the command."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "* User: The Class where username, password, etc are stored"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "* UserList: The Class that creates an ArrayList where the User objects will be stored"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "#### Class Diagram"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/LogInCommand_Class_Diagram_v002.png)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "1.) The LogInCommand checks the UserList to check if the inputted user already exists."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "2.) In the case that the User is a first time user, the LogInCommand will create a new User object then add it into "
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "the UserList. "
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "#### Sequence Diagram"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](images/LogInCommand_Sequence_v002.png)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "1.) When the user inputs a Login Command, a LogInCommand Object is created with the input member Username and Password."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "2.) The Login Command is then executed by sending the users UserList, ui Ui and the User nowUser to the method where "
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "it search the users to check if the input Username already exists with the correct password."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "3.) If the User already exists, it will return the User back to the method as currentUser. Otherwise, it will create a"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "User with the input Username and Password."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "#### Improvements made to Version 2.0\u003cbr/\u003e"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "* In order to protect the User\u0027s privacy, the User\u0027s Passwords have been encrypted on the save file. "
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "* A Cryptography Class with encipherPassword and decipherPassword has been implemented as part of the version 2.0 of "
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "WhereGotTime."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "* Added Storage capability to allow saving and loading of user\u0027s timetable"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "* revamped edit command so that it\u0027s more intuitive and user-friendly"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "## Product scope"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Our Application, WhereGotTime is developed for University students."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "It was developed to solve the inconvenience students face when accessing timetables and lecture venues and"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "to keep track of their timetable."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "It is also developed to assist in finding common available time slots for students to study with their peers."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "## User Stories"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v1.0|new user|login to my own timetable|be sure that it is my own timetable that is shown there|"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v1.0|new user|add events into my timetable for the day|refer to the timetable to remind me of the event|"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v1.0|new user|edit events that I have entered into my timetable for the day|easily change the details as I need it|"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v1.0|new user|delete events in my timetable for the day|remove an event in the timetable that I do not wish to keep|"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v1.0|new user|clear my timetable for the day|so that I can remove all the entries I have entered wrongly|"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v1.0|new user|compare my timetable with my friends|schedule a common time for revision together|"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v2.0|user|have my password encrypted|only I can access my own timetables|"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v2.0|user|be assured that my inputs are correctly added|my input are correctly convey into the timetable|"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v2.0|user|access my saved timetables|I do not have to manually enter the timetables again|"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "## Instructions for manual testing"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "login /Alex /123123\u003cbr/\u003e"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CS2113 Lec /mon /1200-1300 /LT21\u003cbr/\u003e"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CS3243 Lec /mon /1400-1500 /LT22\u003cbr/\u003e"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CS2040C Tut /mon /0800-1000 /COM1-2\u003cbr/\u003e"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CG2028 Tut /Thu /0900-1100 /E4-4-1\u003cbr/\u003e"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CG2023 Lec /Fri /1700-1800 /E7-3-10\u003cbr/\u003e"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "list /all\u003cbr/\u003e"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "list /mon\u003cbr/\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "edit /mon\u003cbr/\u003e"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "/3 /1300-1400\u003cbr/\u003e"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "edit /fri\u003cbr/\u003e"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "/1 /0900-1100\u003cbr/\u003e"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "list /all\u003cbr/\u003e"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "list /mon\u003cbr/\u003e"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "login /Tammy /321321\u003cbr/\u003e"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CS2113 Lec /mon /1200-1300 /LT21\u003cbr/\u003e"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CS2040C Tut /mon /0800-1000 /COM1-2\u003cbr/\u003e"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CG2028 Tut /Thu /0900-1100 /E4-4-1\u003cbr/\u003e"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "compare /Alex /mon\u003cbr/\u003e"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "list /mon\u003cbr/\u003e"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "edit /mon\u003cbr/\u003e"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "/2 /1000-1200\u003cbr/\u003e"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "compare /Alex /mon\u003cbr/\u003e"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "login /Alex /123123\u003cbr/\u003e"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "delete /mon /2\u003cbr/\u003e"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "clear /fri\u003cbr/\u003e"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "bye\u003cbr/\u003e"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 21,
      "tammykoh": 135,
      "manuelmanuntag96": 36,
      "yellow-fellow": 31,
      "-": 19,
      "weisiong24": 82
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "# WhereGotTime"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "An useful timetable app where you can enter events and compare timetable to find common timeslot between you and your peers."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "-": 6,
      "weisiong24": 2
    }
  },
  {
    "path": "docs/SettingUp.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "# Setting Up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "## Setting up the project in your computer"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. **Fork** this repo, and **clone** the fork into your computer."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to configure IntelliJ to use **JDK11**."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. **Verify the setup**:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "   1. Run `WhereGotTime`, you should see something like the following:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       ```"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "      Executing task \u0027WhereGotTime.main()\u0027..."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       \u003e Task :compileJava UP-TO-DATE"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       \u003e Task :processResources NO-SOURCE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       \u003e Task :classes UP-TO-DATE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       \u003e Task :WhereGotTime.main()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        _    _ _                   _____       _ _____ _                "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       | |  | | |                 |  __ \\     | |_   _(_)               "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       | |  | | |__   ___ _ __ ___| |  \\/ ___ | |_| |  _ _ __ ___   ___ "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       | |/\\| | \u0027_ \\ / _ \\ \u0027__/ _ \\ | __ / _ \\| __| | | | \u0027_ ` _ \\ / _ \\"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       \\  /\\  / | | |  __/ | |  __/ |_\\ \\ (_) | |_| | | | | | | | |  __/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        \\/  \\/|_| |_|\\___|_|  \\___|\\____/\\___/ \\__\\_/ |_|_| |_| |_|\\___|"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                                                                        "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       Hello! Welcome to WhereGotTime!"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       Please enter your time table details."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       You may refer to the User Guide for instructions."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "       ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "      ```"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   1. Run the test to ensure they all pass."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "      * Method 1: Use IntelliJ JUnit test runner"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "         * To run all test, right-click on the `src/test/java/seedu.duke` folder and select `Run \u0027Tests in \u0027seedu.duke\u0027\u0027`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "         * To run a test , right-click on the class and select `Run \u0027(class_name)\u0027\u0027`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "      * Method 2: Using Gradle"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "         * (Windows) Open the terminal in intelliJ and run the command `gradlew clean test`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "         * (Mac/Linux) Open the terminal in intelliJ and run the command `./gradlew clean test`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "         "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "## Before Writing Code"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. **Configure the coding style**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   Follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   Additionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. **Set up CI**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. **Learn the design**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about Duke\u0027s architecture from our [DeveloperGuide](DeveloperGuide.md)."
      }
    ],
    "authorContributionMap": {
      "yeapcl": 1,
      "tammykoh": 52
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "WhereGotTime is an application for the student to check their timetable and compare them against their peers for a common timeslot to be able so that they can schedule a study time together"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Table of Contents"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "{:toc}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "1. Down the latest version of  WhereGotTime.jar from [here](https://github.com/AY2021S1-CS2113-T13-3/tp/releases/tag/v2.1)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "1. Copy the jar file into an empty folder you want to use as the home folder for your WhereGotTime."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "1. Open a command window in that folder"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "1. Run the command java -jar {filename}.jar e.g., java -jar Duke.jar (i.e., run the command in the same folder as the jar file)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "1. Type the command in the command box and press Enter to execute it. e.g. typing bye and pressing Enter will close the app.\u003cbr/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Some example commands you can try:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    1. login /JohnSnow /123123: login as JohnSnow"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    1. add /CS2113 Lec /mon /1600-1800 /LT23: Adds an event named CS2113 Lecture for current logged in the student (JohnSnow) to Time Table"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    1. edit /mon \u003cbr/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "       /1 /1300-1400 : Edits first event named CS2113 on Monday for current logged in (JohnSnow) in the TimeTable"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    1. list /all: list of all the classes that JohnSnow has in a new line, enumerated."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    1. find /CS2113: finds all the classes that JohnSnow has containing \"CS2113\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    1. delete /mon /1 : Deletes the 1st class shown in the current list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    1. clear /mon: Deletes all classes in the current list for JohnSnow for his Monday timetable"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    1. remove /JohnSnow /123123: Remove JohnSnow and all his timetable"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Login user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "* Remove user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Add timetable"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Edit timetable"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* List timetable"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Compare timetable"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Find class"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Delete timetable"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Clear timetable"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Help command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* Exit program"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Main menu"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "The greeting screen of WhereGotTime is preceded by Storage initialisation messages that indicate if previously saved data, if any, is "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "loaded successfully."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "For example, if this is your first time running the application, the expected greeting screen is as follows:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Data folder not found! Creating one..."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "No existing WhereGotTime.txt found! Creating one..."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Storage initialisation completed without issue."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " _    _ _                   _____       _ _____ _                "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "| |  | | |                 |  __ \\     | |_   _(_)               "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "| |  | | |__   ___ _ __ ___| |  \\/ ___ | |_| |  _ _ __ ___   ___ "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "| |/\\| | \u0027_ \\ / _ \\ \u0027__/ _ \\ | __ / _ \\| __| | | | \u0027_ ` _ \\ / _ \\"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "\\  /\\  / | | |  __/ | |  __/ |_\\ \\ (_) | |_| | | | | | | | |  __/"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " \\/  \\/|_| |_|\\___|_|  \\___|\\____/\\___/ \\__\\_/ |_|_| |_| |_|\\___|"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                                                                 "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Hello! Welcome to WhereGotTime, a special timetable program that helps "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "you and your friend find common unoccupied slots in the timetable!"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "You\u0027re currently not logged in."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Tip: enter \u0027help\u0027 for a list of commands."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Note that the Storage initialisation message is dependent on the status of WhereGotTime.txt, for example, if this is second time using the application,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "and provided that the folder containing the previously stored information is not altered, the expected output is as follows:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Data folder found! Finding WhereGotTime.txt..."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Existing WhereGotTime.txt found. Loading previously saved timetable information..."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Timetable information loaded successfully!"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Storage initialisation completed without issue."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Viewing help menu: `help`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Whenever you require assistance and want to see a list of valid commands and their input format, type `help` in the console and press Enter."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "You\u0027re currently not logged in."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Here are the list of commands for WhereGotTime."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "\t1. Login command\t: login /(username) /(6-digit password)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "\t2. Add command\t\t: add /(module name with optional descriptions) /(day) /(startTime-endTime) /(location)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "\t3. List command\t\t: list /all OR list /(day)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "\t4. Edit command\t\t: edit /(day)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "\t5. Delete command\t: delete /(day) /(index)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "\t6. Clear command\t: clear /(day) OR clear /all"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "\t7. Find command\t\t: find /(keyword)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "\t8. Compare command\t: compare"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "\t9. Remove command\t: remove /(username) /(6-digit password)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "\t10. Bye command\t\t: bye"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- the brackets shown above should be omitted when entering commands"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- if this is your first time using WhereGotTime, using the Login command would "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "  create a new user profile that matches (username) and (6-digit password)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- command and \u0027day\u0027 are not case sensitive, but username and password are."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- startTime and endTime should be in 24-hour format and in 1-hour block. e.g. 0900, 1300, 2300, etc."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- \u0027day\u0027 should be 3-letter, e.g. Mon, TUE, wed, etc."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Tips:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- `help` is invalid in `edit` and `compare` modes due to the presence of intuitive on-screen prompts to guide you through the process."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- if you\u0027re logged in, entering `help` will also display your username."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### Login user: `login`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Creates a new User with inputted username and password (if first time user)."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Logs the existing user back into the app. (existing user)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`login /(username) /(6-digit password)`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`login /JohnSnow /123456`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Expected Output:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " _    _ _                   _____       _ _____ _                "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "| |  | | |                 |  __ \\     | |_   _(_)               "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "| |  | | |__   ___ _ __ ___| |  \\/ ___ | |_| |  _ _ __ ___   ___ "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "| |/\\| | \u0027_ \\ / _ \\ \u0027__/ _ \\ | __ / _ \\| __| | | | \u0027_ ` _ \\ / _ \\"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "\\  /\\  / | | |  __/ | |  __/ |_\\ \\ (_) | |_| | | | | | | | |  __/"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " \\/  \\/|_| |_|\\___|_|  \\___|\\____/\\___/ \\__\\_/ |_|_| |_| |_|\\___|"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                                                                 "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Hello! Welcome to WhereGotTime, a special timetable program that helps "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "you and your friend find common unoccupied slots in the timetable!"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "You\u0027re currently not logged in."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Tip: enter \u0027help\u0027 for a list of commands."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "login /JohnSnow /123456"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Hello JohnSnow!"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### Remove user: `remove`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Remove existing User and their timetable with inputted username and password."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "`remove /username /password(6-digit)`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`remove /JohnSnow /123456`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Expected Output:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "remove /JohnSnow /123456"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "JohnSnow has been removed."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "### Adding a timetable: `add`"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Adds a new timetable to the list of timetable arraylist."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`add /(module name with optional descriptions) /(day) /(startTime-endTime) /(location)`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`add /CS2113 Lec /Mon /0900-1200 /LT33`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`add /CS2040C Tut /MON /1300-1500 /COM1-2`"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`add /CG2028 Tut /wed /1200-1300 /E4-4-1`"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Expected Output:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CS2113 Lec /Mon /0900-1200 /LT33"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Got it! I\u0027ve added the following event on mon"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "CS2113 Lec LT33 0900-1200"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CS2040C Tut /MON /1300-1500 /COM1-2"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Got it! I\u0027ve added the following event on mon"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "CS2040C Tut COM1-2 1300-1500"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CG2028 Tut /wed /1200-1300 /E4-4-1"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Got it! I\u0027ve added the following event on wed"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "CG2028 Tut E4-4-1 1200-1300"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Editing a timetable : `edit`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "This command allows the currently logged-in user to edit a lesson\u0027s time, provided the lesson exists."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "The newly provided timings will be subject to a series of checks (stated in the conditions below), "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "before a successful edit can be allowed."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Conditions:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- the user must first be logged in"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- there should be at least one lesson in that `day`"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- newStartTime and newEndTime will be rejected if:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    1. either one is not in 4-digit format (e.g. 09000)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    2. either one is not in 1-hour block (e.g. 0903)"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    3. either one has invalid hours and minutes (e.g. 2861, 0989)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    4. both are identical (e.g. 0900-0900)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    5. start time is later than end time (e.g. 1100-0900)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`edit /day`"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`/(index) /(newStartTime-newEndTime)`"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`edit /mon`"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`/2 /1400-1500`"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`edit /wed`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`/1 /1100-1300`"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Expected Output:"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "edit /mon"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Hey JohnSnow, here are the lessons in your mon timetable, sorted from the earliest class."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    1. CS2113 Lec LT33 0900-1200"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    2. CS2040C Tut COM1-2 1300-1500"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "To edit, enter:"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/(index) /(newStartTime-newEndTime)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/2 /1400-1500"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Got it! I have edited the lesson as follows:"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "ORIGINAL    : CS2040C Tut COM1-2 1300-1500"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "EDITED      : CS2040C Tut COM1-2 1400-1500"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "edit /wed"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Hey JohnSnow, here are the lessons in your wed timetable, sorted from the earliest class."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    1. CG2028 Tut E4-4-1 1200-1300"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "To edit, enter:"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/(index) /(newStartTime-newEndTime)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/1 /1100-1300"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Got it! I have edited the lesson as follows:"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "ORIGINAL    : CG2028 Tut E4-4-1 1200-1300"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "EDITED      : CG2028 Tut E4-4-1 1100-1300"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Note: if you do not have a lesson on that day, for example if you enter `edit /fri`, the expected output is:"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "edit /fri"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Hey JohnSnow, there is no class in your fri timetable!"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Note: if the new timings are identical to the lesson\u0027s original timings, the expected output is:"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "edit /mon"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Hey Alex, here are the lessons in your mon timetable, sorted from the earliest class."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    1. CS2113 NUS 0900-1200"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    2. CS2040C NUS 1400-1500"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "To edit, enter:"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/(index) /(newStartTime-newEndTime)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/1 /0900-1200"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ":( OOPS!!! You have entered a timing that is exactly the "
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "same as the original one! Hence, no changes were made!"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "### Listing a timetable: `list`"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "Lists all the classes on a particular day or on all days"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`list /all` or `list /(day)`"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "`list /mon`"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "`list /all`"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Expected Output:"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "list /all"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Here are the classes in your timetable for mon, sorted according to time:"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    1. CS2113 Lec LT33 0900-1200"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    2. CS2040C Tut COM1-2 1400-1500"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "There is no class in your timetable for tue!"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Here are the classes in your timetable for wed, sorted according to time:"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    1. CG2028 Tut E4-4-1 1100-1300"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "There is no class in your timetable for thu!"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "There is no class in your timetable for fri!"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "There is no class in your timetable for sat!"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "There is no class in your timetable for sun!"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "### Comparing timetables: `compare`"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Compare the timetables between current user and another user and returns a range of common available free timeslots.\u003cbr/\u003e"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Scenario"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- assuming the currently logged in user is JohnSnow, and he didn\u0027t clear his monday timetable as shown above"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- assuming there is another user named \"WhiteWalker\" with his own set of monday timetable"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- to compare the currently logged in user (i.e. \"JohnSnow\") vs \"WhiteWalker\""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "Format: \u003cbr/\u003e"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "`compare`\u003cbr/\u003e"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "`TargetUser\u0027s index`\u003cbr/\u003e"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "`day`\u003cbr/\u003e"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "  "
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "Example of usage: \u003cbr/\u003e"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "`compare`\u003cbr/\u003e"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "`1`\u003cbr/\u003e"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "`mon`\u003cbr/\u003e"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "Expected output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "compare"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Hey JohnSnow, please enter the index number of the user that you would like to compare with."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "\t1. WhiteWalker"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "1"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Please input the day (Mon-Sun) that you would like to compare."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "mon"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Your common unoccupied timeslots are: "
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "0000HR to 0959HR"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "1300HR to 2359HR"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "### Finding a class: `find`"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "Lists all the classes based on the keyword entered by user"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Note: the keyword is case-sensitive."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`find /(keyword)`"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "`find /CG2028`"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "`find /Tut`"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "find /CG2028"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Here are the class(es) in your timetable that matches the keyword \"CG2028\":"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "1. (Wednesday) CG2028 Tut E4-4-1 1100-1300"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "find /Tut"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Here are the class(es) in your timetable that matches the keyword \"Tut\":"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "1. (Monday) CS2040C Tut COM1-2 1400-1500"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "2. (Wednesday) CG2028 Tut E4-4-1 1100-1300"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "### Deleting a class: `delete`"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "Deletes a class as specified by the user "
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`delete /(day) /(index)`"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`delete /wed /1`"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Expected Output:"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "delete /wed /1"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Noted. I have removed this class from your timetable:"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "CG2028 Tut E4-4-1 1100-1300"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Now you have 0 class(es) for wed in the timetable."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "### Clearing timetable: `clear`"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Clears all the classes on the day (or all days) as specified by the user "
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`clear /(day)` or `clear /all`"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "`clear /wed`"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "`clear /all`"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Expected Output:"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "clear /wed"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ":( OOPS!!! There is no class in your timetable for wed!"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "clear /all"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "I have removed these classes from your mon timetable:"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "\t1. CS2113 Lec LT33 0900-1200"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "\t2. CS2040C Tut COM1-2 1400-1500"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Your timetable has been cleared."
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "### Exiting the program: `bye`"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Exits the program\u003cbr/\u003e"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Thanks for using WhereGotTime. Hope to see you again soon!"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "```"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Login user "
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    `login /(username) /(6-digit password)`"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Add timetable "
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    `add /(module name with optional descriptions) /(day) /(startTime-endTime) /(location)`"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Edit timetable"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "weisiong24"
        },
        "content": " "
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    `edit /(day)` \u003cbr/\u003e"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    `/(index) /(newStartTime-newEndTime)`"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* List timetable "
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    "
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    `list /all` OR `list /(day)`"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "* Compare timetables "
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    "
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    `compare`"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "* Find "
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    `find /(keyword)`"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Delete timetable "
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    "
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    `delete /(day) /(index)`"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Clear timetable "
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    "
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    `clear /(day)` OR `clear /all`"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Help Command "
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    "
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    `help`"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "* Remove user "
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    `remove /(username) /(6-digit password)`  "
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Exit program "
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    "
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    `bye`  "
      }
    ],
    "authorContributionMap": {
      "yeapcl": 310,
      "tammykoh": 37,
      "manuelmanuntag96": 21,
      "yellow-fellow": 16,
      "-": 29,
      "weisiong24": 88
    }
  },
  {
    "path": "docs/team/manuelmanuntag96.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "# MANUNTAG MANUEL - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "WhereGotTime is an application for students to add, edit and check their timetable schedules."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "It is also able to compare timetable with their peers to find a common timeslot "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "so that they can schedule a study time together."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "Given below are my contributions to the project."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "## Summary of Contributions"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "### Code contributed"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "[tP Code](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dmanuelmanuntag96\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "### A summary of the enhancements implemented"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "- Implemented a login feature to enable Users to edit their own timetables without affecting other\u0027s work."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "- Implemented a remove feature to enable Users to remove User data and their timetables."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "- Created the User class for user functionality"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "- Created the UserList class for User Arraylist functionality"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "- Implemented a Cryptography class that can encrypt and decrypt User\u0027s password before saving into save file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "### Contributions to the User Guide"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "- Added documentation for the `login` and `remove` feature"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "- Updated expected outputs for the `login` and `remove` features"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "### Contributions to the Developer Guide "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "- Edited the Architecture, Class Diagram and Sequence Diagram of the Login Feature"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "- Added the design and implementation for the `login` command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "### Contributions to team-based tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " - Added to labels for issue tracking in GitHub for teammates to use"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " - Added to the user stories and features in the issue tracking and assigned them accordingly"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " - Helped to test the program for bugs"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 15,
      "weisiong24": 17
    }
  },
  {
    "path": "docs/team/tammykoh.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "# Koh Rui Wen Tammy - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "WhereGotTime is an application for students to add, edit and check their timetable schedules."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "It is also able to compare timetable with their peers to find a common timeslot "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "so that they can schedule a study time together."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "Given below are my contributions to the project."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "## Summary of Contributions"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* **New Feature:**  Added the ability to list the user\u0027s timetable"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    * What it does: allows the user to view their entire timetable, or their timetable on a particular day "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    * Justification: this feature allows users to view their timetable, so they know what they have on in that day or for that week"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* **New Feature:** Added the ability to find classes"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    * What it does: allows the user to search for their classes based on keywords"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    * Justification: this feature improves the product as users do not have to look through the timetable for their class but can use this product to help them quickly search for it"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* **New Feature:** Added the ability to delete a class"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    * What it does: allows the user to delete a particular class in the day"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    * Justification: this feature improves the product as users may accidentally input a class incorrectly, so they have a means to remove that class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* **New Feature:** Added the ability to clear classes"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    * What it does: allows the user to clear all the classes in a day or clear the entire timetable"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    * Justification: this feature improves the product as users may have to make significant changes to the timetable such as moving into a new semester where all the classes will be different "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* **Code Contributed:** [Link to RepoSense](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dtammykoh\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* **Enhancement to Existing Features:**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    * Created a SortTimetable Class to sort the classes in the timetable by their time so that it is easier to view (pull request #97)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* **Documentation:**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    * User Guide:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        * Added documentation for the `list`, `delete`, `clear`, and `find` feature"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        * Updated expected outputs for the `list` and `clear` features"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    * Developer Guide:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        * Added the \u0027Setting Up\u0027 Guide"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        * Updated the overall architecture and added diagram on how the architecture components interact"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        * Added the design and implementation for the `list`, `delete`, `clear`, and `find` command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "* **Community:**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    * Created issues on github and assigned them accordingly"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    * Helped to test the program for bugs"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    "
      }
    ],
    "authorContributionMap": {
      "tammykoh": 45
    }
  },
  {
    "path": "docs/team/weisiong24.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "# Ng Wei Siong - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "## Project: WhereGotTime"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "WhereGotTime is an application for students to add, edit and check their timetable schedules."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "It is also able to compare timetable with their peers to find a common timeslot "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "so that they can schedule a study time together."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Given below are my contributions to the project."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* New Feature:  Added the ability to Add user timetable details into our application"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    * What it does: allows user to enter their timetable schedules (time,day,location and description) into the timetable using AddCommand Class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    * Justification: This feature allows user to add in their timetable schedules using the application add format so that their inputs will be captured"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* New Feature: Added checks to user input when using the Add Command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    * What it does: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        * Implemented time, day and description checks on the user input and display error message to allow user to retype to the correct format"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        * Implemented format checks (NumberFormat Exception and Out of bound Exception) into Add command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        * Implemented check on the add command so that user follows the specified format when entering data"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        * Implemented duplication check for user to indicate duplicate entries entered"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    * Justification: This enhancement guides our user to enter their data correctly into our application for further usage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Code contributed: [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dweisiong24\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Contributions to team-based tasks : "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    * Creates and updates the team project board in Github with user stories and features for the milestone v1.0 "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    * Added more labels for issue tracking in GitHub for teammates to use"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "* Documentation:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    * User Guide:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        * Added the format of the user guide to allow teammates to add on"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        * Added User guide for add command ,exit command and Command summary"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        * Updated the introduction, quick start and feature to base on our Project"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    * Developer guide:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        * Added the design and implementation of Add command with uml and architecture and sequence design"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        * Provided a format for Developer Guide for other teammates to add on"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        * Updated the Target User Profile, Value Proposition and User Stories based on our Project"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        * Updated the Manual testing commands "
      }
    ],
    "authorContributionMap": {
      "weisiong24": 40
    }
  },
  {
    "path": "docs/team/yeapcl.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "# Yeap Chun Lik - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "WhereGotTime is an application for students to add, edit and check their timetable schedules."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "It is also able to compare timetable with their peers to find a common timeslot "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "so that they can schedule a study time together."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "Given below are my contributions to the project."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "* Code Contributed:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "[Link to RepoSense](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dyeapcl)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "* #### General"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    - Provided skeleton framework (adapted from my iP) for which the application is built upon"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    - Provided general direction on user experience (UX) and how the application should behave to ensure high usability"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    - Ensured all features form a cohesive UX for our target user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    - 100% JUnit test coverage for EditCommand"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "* #### Enhancements"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    * New Feature: Added the structure and ability to store and load user\u0027s credentials and timetable information automatically"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        * What it does: Allows storage and access of users\u0027 credentials and timetable so that information is preserved"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        * Justification: This feature is important to save users\u0027 information so that they do not have to go through the process of manually entering the information again"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        * Highlights:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            * The storage saves the encrypted password to protect the security of the account."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            * Storage saves all information on-the-go during program runtime. This protects against unsaved data loss caused by unexpected crash"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    * New Feature: Added the ability to edit an existing lesson\u0027s time information"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        * What it does: Allows user to edit either the start or end timings of an existing lessons"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        * Justification: This feature allows user to edit or update their timetables as lessons during initial course planning can be fluid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        * Highlights:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            * Provided on-screen prompts for intuitive and user-friendly editing UX"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            * Many checks are in place to prevent invalid or illogical timings, e.g. new timings are identical to old ones, start time is later than end time, and many more."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    * New Feature: Added help feature for user to get an overview of the available commands and input format"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        * What it does: displays a comprehensive list of commands, format, instructions and tips"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        * Justifications: the many features of our application can be overwhelmed especially for first-time user, hence a help instruction is always helpful in situation like this."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Furthermore, the help instructions are written as dummy-proof and as meticulous as far as possible to ensure swift understanding for fast-typist."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Contributions to the User Guide"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- Updated all expected outputs for all commands"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- Provided comprehensive documentations for Main Menu, `help`, and `edit` commands"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Contributions to the Developer Guide "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "- Provided overall architecture, Class Diagram and Sequence Diagram of the EditCommand feature"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Contributions to team-based tasks"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " - Added and managed issues on GitHub and assigning tasks to relevant teammates"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " - Added user stories and suggested features on GitHub\u0027s issue page"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " - Review PRs to check if codes can be improved or refactored"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " - Keeping track of all issues assigned to ensure project achieves milestone on time"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "### Review/mentoring and other contributions"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "* Assisted with code reviews and suggested improvements to teammates\u0027 PRs"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    * [Example 1](https://github.com/AY2021S1-CS2113-T13-3/tp/pull/181#pullrequestreview-523577115)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    * [Example 2](https://github.com/AY2021S1-CS2113-T13-3/tp/pull/77#pullrequestreview-516325424)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    * [Example 3](https://github.com/AY2021S1-CS2113-T13-3/tp/pull/187#discussion_r517997089)"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 58
    }
  },
  {
    "path": "docs/team/yellow-fellow.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "# Huang Shaohang - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "## Project: WhereGotTime"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "WhereGotTime is an application for students to add, edit and check their timetable schedules."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "It is also able to compare timetables with their peers to find a common timeslot "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "so that they can schedule a study time together."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "Given below are my contributions to the project."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "* New Feature:  Added the ability to COMPARE users\u0027 timetables and return the common range(s) of available timings"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    * What it does: allows user to enter the specified target user he or she would like to COMPARE timetables with, followed by entering a day of the week"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    * Justification: This feature encapsulates the main part of the application, which is to allow users to find out their common timeslots with their friends / peers for projects / meetings"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "* New Feature: Added the ability to retrieve a user\u0027s timetable with a String input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    * What it does: Retrieve a target user\u0027s timetable for processing purposes"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "* New Feature: Added checks to user input when using the COMPARE Command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    * What it does: User can only input the index of the target user as per displayed in the list of users. Any non-integer inputs / out of range inputs are rejected and user will be prompted to input again."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    * Justification: This enhancement guides our user to enter their data correctly into our application for further usage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "* Code contributed: [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dyellow-fellow\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "* Contributions to team-based tasks : "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    * Creates and updates the team project board in Github with user stories and features for the milestone v1.0 "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    * Added more labels for issue tracking in GitHub for teammates to use"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "* Documentation:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    * User Guide:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        * Added User Guide for COMPARE command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        * Updated expected outputs of COMPARE command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    * Developer guide:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        * Added the design and implementation of COMPARE command with uml and architecture and sequence design"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        * Updated the Manual Testing commands "
      }
    ],
    "authorContributionMap": {
      "yellow-fellow": 37
    }
  },
  {
    "path": "src/main/java/seedu/WhereGotTime.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class WhereGotTime {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private UserList users;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public WhereGotTime() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            users \u003d new UserList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            storage \u003d new Storage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            storage.load(users);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (WhereGotTimeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            users \u003d new UserList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        User nowUser \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                c.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                storage.write(users);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                if (c.isLogIn()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    nowUser \u003d c.getCurrentUser();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            } catch (WhereGotTimeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        new WhereGotTime().run();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 43,
      "tammykoh": 3,
      "manuelmanuntag96": 4,
      "-": 3,
      "weisiong24": 3
    }
  },
  {
    "path": "src/main/java/seedu/command/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.timetable.SortTimetable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public AddCommand(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"LogLogInCommand\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser/*, Storage storage*/) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        /*/Lec /day /time /location*/"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        setupInputLogger();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        if (nowUser !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            String[] parsedInputs \u003d input.split(\"/\", 5);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            String[] timeInputs \u003d parsedInputs[3].split(\"-\", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            String day \u003d parsedInputs[2].toLowerCase().trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            assert day.length() \u003d\u003d 3 : \"Wrong format of day entered\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            logger.log(Level.INFO, \"Timetable name successfully added:  \" + parsedInputs[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            logger.log(Level.INFO, \"Day successfully add:  \" + parsedInputs[2]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            logger.log(Level.INFO, \"Time successfully add:  \" + parsedInputs[3]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            logger.log(Level.INFO, \"Location successfully add:  \" + parsedInputs[4] + \"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                for (int i \u003d 0; i \u003c users.getTotalUserCount(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    if ((users.getUser(i + 1).getName().equals(nowUser.getName()))) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        Event newEvent \u003d new Event(parsedInputs[1].trim(), parsedInputs[4].trim(),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                                timeInputs[0].trim(), timeInputs[1].trim());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        ArrayList\u003cEvent\u003e timetable \u003d users.getUser(i + 1).getTimetable().getTimetable(day);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        timetable.add(newEvent);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStart \u003d Integer.parseInt(timeInputs[0].trim());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEnd \u003d Integer.parseInt(timeInputs[1].trim());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartHour \u003d Integer.parseInt(timeInputs[0].trim().substring(0, 2));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartMin \u003d Integer.parseInt(timeInputs[0].trim().substring(2));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndHour \u003d Integer.parseInt(timeInputs[1].trim().substring(0, 2));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndMin \u003d Integer.parseInt(timeInputs[1].trim().substring(2));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            if (timeStartHour \u003c 0 || timeStartHour \u003e 23) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                timetable.remove(newEvent);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                throw new WhereGotTimeException(\"Invalid Hour! It should be within \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        + \"24-hour format.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            } else if (timeStartMin \u003c 0 || timeStartMin \u003e 59) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                timetable.remove(newEvent);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                throw new WhereGotTimeException(\"Invalid minute! It should be within \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        + \"24-hour format.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            if (timeEndHour \u003c 0 || timeEndHour \u003e 23) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                timetable.remove(newEvent);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                throw new WhereGotTimeException(\"Invalid Hour! It should be within \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        + \"24-hour format.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            } else if (timeEndMin \u003c 0 || timeEndMin \u003e 59) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                timetable.remove(newEvent);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                throw new WhereGotTimeException(\"Invalid minute! It should be within \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        + \"24-hour format.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            if (timeStart \u003d\u003d timeEnd) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                timetable.remove(newEvent);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                                throw new WhereGotTimeException(\"Start time cannot be the same as End time\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            } else if (timeStart \u003e timeEnd) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                timetable.remove(newEvent);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                                throw new WhereGotTimeException(\"Start time cannot be later than End time\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            if (timeStart \u003e 2300 || timeEnd \u003e 2359) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                timetable.remove(newEvent);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                                throw new WhereGotTimeException(\"Start and End time must be \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        + \"in 24 hour format\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            if ((timeStartMin % 60) !\u003d 0 || (timeEndMin % 60) !\u003d 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                timetable.remove(newEvent);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                throw new WhereGotTimeException(\"The timings should be in 1 hour block! \""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        + \"e.g. 0900, 1200, 1500, etc\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            if (parsedInputs[4].contains(\"/\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                timetable.remove(newEvent);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                throw new WhereGotTimeException(\"\\nInvalid location Format \\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        + \"Correct format is add /name /day /timeStart-timeEnd /location\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        + \"E.g: add /CS2113 Lec /mon /2000-2100 /LT1\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        } catch (NumberFormatException n) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            timetable.remove(newEvent);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                            throw new WhereGotTimeException(\"\\nInvalid Time Format \\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    + \"Correct format is add /name /day /timeStart-timeEnd /location\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    + \"E.g: add /CS2113 Lec /mon /2000-2100 /LT1\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                            throw new WhereGotTimeException(\"An add command needs to be in a\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    + \"add /name /day /time /location\u0027 format!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        switch (day) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        case \"mon\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            ArrayList\u003cEvent\u003e mon \u003d users.getUser(i + 1).getTimetable().monTimetable;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            for (int j \u003d 0; j \u003c mon.size() - 1; j++) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeStartInt \u003d Integer.parseInt(mon.get(j).getTimeStart());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeStartNextInt \u003d Integer.parseInt(mon.get(j + 1).getTimeStart());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeEndInt \u003d Integer.parseInt(mon.get(j).getTimeEnd());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeEndNextInt \u003d Integer.parseInt(mon.get(j + 1).getTimeEnd());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                if (timeStartInt \u003d\u003d timeStartNextInt || timeEndInt \u003d\u003d timeEndNextInt"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 100 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 200 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 300 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 400 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 500 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 100 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 200 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 300 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 400 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 500 \u0026\u0026 timeEndInt \u003e timeStartNextInt)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    mon.remove(j + 1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                                    throw new WhereGotTimeException(\"Duplicate Timetable Detected! Please re-enter\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        case \"tue\":"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            ArrayList\u003cEvent\u003e tue \u003d users.getUser(i + 1).getTimetable().tueTimetable;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            for (int j \u003d 0; j \u003c tue.size() - 1; j++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeStartInt \u003d Integer.parseInt(tue.get(j).getTimeStart());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeStartNextInt \u003d Integer.parseInt(tue.get(j + 1).getTimeStart());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeEndInt \u003d Integer.parseInt(tue.get(j).getTimeEnd());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeEndNextInt \u003d Integer.parseInt(tue.get(j + 1).getTimeEnd());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                if (timeStartInt \u003d\u003d timeStartNextInt || timeEndInt \u003d\u003d timeEndNextInt"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 100 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 200 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 300 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 400 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 500 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 100 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 200 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 300 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 400 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 500 \u0026\u0026 timeEndInt \u003e timeStartNextInt)) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    tue.remove(j + 1);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                                    throw new WhereGotTimeException(\"Duplicate Timetable Detected! Please re-enter\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        case \"wed\":"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            ArrayList\u003cEvent\u003e wed \u003d users.getUser(i + 1).getTimetable().wedTimetable;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            for (int j \u003d 0; j \u003c wed.size() - 1; j++) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeStartInt \u003d Integer.parseInt(wed.get(j).getTimeStart());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeStartNextInt \u003d Integer.parseInt(wed.get(j + 1).getTimeStart());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeEndInt \u003d Integer.parseInt(wed.get(j).getTimeEnd());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeEndNextInt \u003d Integer.parseInt(wed.get(j + 1).getTimeEnd());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                if (timeStartInt \u003d\u003d timeStartNextInt || timeEndInt \u003d\u003d timeEndNextInt"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 100 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 200 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 300 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 400 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 500 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 100 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 200 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 300 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 400 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 500 \u0026\u0026 timeEndInt \u003e timeStartNextInt)) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    wed.remove(j + 1);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                                    throw new WhereGotTimeException(\"Duplicate Timetable Detected! Please re-enter\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        case \"thu\":"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            ArrayList\u003cEvent\u003e thu \u003d users.getUser(i + 1).getTimetable().thuTimetable;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            for (int j \u003d 0; j \u003c thu.size() - 1; j++) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeStartInt \u003d Integer.parseInt(thu.get(j).getTimeStart());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeStartNextInt \u003d Integer.parseInt(thu.get(j + 1).getTimeStart());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeEndInt \u003d Integer.parseInt(thu.get(j).getTimeEnd());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeEndNextInt \u003d Integer.parseInt(thu.get(j + 1).getTimeEnd());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                if (timeStartInt \u003d\u003d timeStartNextInt || timeEndInt \u003d\u003d timeEndNextInt"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 100 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 200 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 300 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 400 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 500 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 100 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 200 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 300 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 400 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 500 \u0026\u0026 timeEndInt \u003e timeStartNextInt)) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    thu.remove(j + 1);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                                    throw new WhereGotTimeException(\"Duplicate Timetable Detected! Please re-enter\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        case \"fri\":"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            ArrayList\u003cEvent\u003e fri \u003d users.getUser(i + 1).getTimetable().friTimetable;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            for (int j \u003d 0; j \u003c fri.size() - 1; j++) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeStartInt \u003d Integer.parseInt(fri.get(j).getTimeStart());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeStartNextInt \u003d Integer.parseInt(fri.get(j + 1).getTimeStart());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeEndInt \u003d Integer.parseInt(fri.get(j).getTimeEnd());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeEndNextInt \u003d Integer.parseInt(fri.get(j + 1).getTimeEnd());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                if (timeStartInt \u003d\u003d timeStartNextInt || timeEndInt \u003d\u003d timeEndNextInt"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 100 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 200 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 300 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 400 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 500 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 100 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 200 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 300 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 400 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 500 \u0026\u0026 timeEndInt \u003e timeStartNextInt)) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    fri.remove(j + 1);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                                    throw new WhereGotTimeException(\"Duplicate Timetable Detected! Please re-enter\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        case \"sat\":"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            ArrayList\u003cEvent\u003e sat \u003d users.getUser(i + 1).getTimetable().satTimetable;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            for (int j \u003d 0; j \u003c sat.size() - 1; j++) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeStartInt \u003d Integer.parseInt(sat.get(j).getTimeStart());"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeStartNextInt \u003d Integer.parseInt(sat.get(j + 1).getTimeStart());"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeEndInt \u003d Integer.parseInt(sat.get(j).getTimeEnd());"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeEndNextInt \u003d Integer.parseInt(sat.get(j + 1).getTimeEnd());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                if (timeStartInt \u003d\u003d timeStartNextInt || timeEndInt \u003d\u003d timeEndNextInt"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 100 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 200 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 300 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 400 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 500 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 100 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 200 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 300 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 400 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 500 \u0026\u0026 timeEndInt \u003e timeStartNextInt)) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    sat.remove(j + 1);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                                    throw new WhereGotTimeException(\"Duplicate Timetable Detected! Please re-enter\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        case \"sun\":"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            ArrayList\u003cEvent\u003e sun \u003d users.getUser(i + 1).getTimetable().sunTimetable;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            for (int j \u003d 0; j \u003c sun.size() - 1; j++) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeStartInt \u003d Integer.parseInt(sun.get(j).getTimeStart());"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeStartNextInt \u003d Integer.parseInt(sun.get(j + 1).getTimeStart());"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeEndInt \u003d Integer.parseInt(sun.get(j).getTimeEnd());"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                int timeEndNextInt \u003d Integer.parseInt(sun.get(j + 1).getTimeEnd());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                if (timeStartInt \u003d\u003d timeStartNextInt || timeEndInt \u003d\u003d timeEndNextInt"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 100 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 200 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 300 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 400 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeStartInt + 500 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 100 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 200 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 300 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 400 \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                        || (timeEndNextInt \u003d\u003d timeStartInt + 500 \u0026\u0026 timeEndInt \u003e timeStartNextInt)) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    sun.remove(j + 1);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                                    throw new WhereGotTimeException(\"Duplicate Timetable Detected! Please re-enter\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        ui.printEvent(newEvent, day);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                        SortTimetable.sortTimetable(users, nowUser, day);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        logger.log(Level.INFO, day + \" timetable successfully add:  \" + timetable + \"\\n\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new WhereGotTimeException(\"An add command needs to be in \""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        + \"a \u0027add /name /day /time /location\u0027 format!\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            logger.log(Level.WARNING, \"Not logged in\" + \"\\n\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"Sorry! You are not Logged in to any account :-(\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    private void setupInputLogger() {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        LogManager.getLogManager().reset();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        logger.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            FileHandler fh \u003d new FileHandler(\"AddCommand.log\", true);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            fh.setLevel(Level.INFO);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            fh.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            logger.addHandler(fh);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            logger.log(Level.SEVERE, \"File logging not working\");"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 30,
      "tammykoh": 1,
      "manuelmanuntag96": 1,
      "weisiong24": 276
    }
  },
  {
    "path": "src/main/java/seedu/command/ByeCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Terminates Duke program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //@Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser/*, Storage storage*/) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 19,
      "manuelmanuntag96": 1,
      "weisiong24": 1
    }
  },
  {
    "path": "src/main/java/seedu/command/ClearCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.exception.NotLoggedInException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " * Clears timetable of user on a particular day or the entire timetable."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public ClearCommand(String information) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        super(information);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"LogClearCommand\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        setupInputLogger();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        logger.log(Level.INFO, \"Beginning ClearCommand...\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (nowUser \u003d\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.WARNING, \"User not logged in, ending ClearCommand function\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new NotLoggedInException(\"Sorry! You are not logged in to any account :-(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int userIndex \u003d -1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (int i \u003d 0; i \u003c users.getTotalUserCount(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if ((users.getUser(i + 1).getName().equals(nowUser.getName()))) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                userIndex \u003d i + 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                logger.log(Level.INFO, \"User has been found, user index: \" + userIndex);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String[] parsedInputs \u003d input.split(\"/\", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String day \u003d parsedInputs[1].toLowerCase();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int[] counter \u003d {0};"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (day.equals(\"all\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.INFO, \"Deleting everything in the timetable...\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            deleteTimetable(users, ui, userIndex, counter, day, \"mon\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            deleteTimetable(users, ui, userIndex, counter, day, \"tue\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            deleteTimetable(users, ui, userIndex, counter, day, \"wed\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            deleteTimetable(users, ui, userIndex, counter, day, \"thu\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            deleteTimetable(users, ui, userIndex, counter, day, \"fri\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            deleteTimetable(users, ui, userIndex, counter, day, \"sat\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            deleteTimetable(users, ui, userIndex, counter, day, \"sun\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.INFO, \"Deleting all classes on \" + day);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            deleteTimetable(users, ui, userIndex, counter, day, day);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        logger.log(Level.INFO, \"ClearCommand function has ended successfully\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Clears timetable of user on a particular day."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param users list of users."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param ui user interface."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param userIndex index of current user."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param counter counts the number of empty days in the timetable."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param input the input entered by the user."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param day the day in the timetable that is currently being deleted."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @throws WhereGotTimeException if timetable for clearing a single day is empty."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void deleteTimetable(UserList users, Ui ui, int userIndex, int[] counter, String input, String day)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throws WhereGotTimeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ArrayList\u003cEvent\u003e timetable \u003d (users.getUser(userIndex).getTimetable()).getTimetable(day);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ArrayList\u003cObject\u003e deletedTimetable \u003d new ArrayList\u003c\u003e(timetable);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (!timetable.isEmpty()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            timetable.clear();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.INFO, \"Successfully deleted class(es) on \" + day);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (input.equals(day)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.INFO, \"Timetable on \" + day + \" is empty\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"There is no class in your timetable for \" + day + \"!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            counter[0]++;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ui.printClear(deletedTimetable, counter[0], input, day);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private void setupInputLogger() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        LogManager.getLogManager().reset();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        logger.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            FileHandler fh \u003d new FileHandler(\"ClearCommand.log\", true);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            fh.setLevel(Level.INFO);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            fh.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.addHandler(fh);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.SEVERE, \"File logging is not functional\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 8,
      "tammykoh": 100
    }
  },
  {
    "path": "src/main/java/seedu/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    protected User currentUser \u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    protected boolean isLogIn \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Creates a new command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param input the command given by the user in string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Command(String input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Executes the Command based on the TaskList, Ui and Storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param users the UserList given to execute command on."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param ui    the corresponding messages based on the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws WhereGotTimeException if execution encounters error."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public abstract void execute(UserList users, Ui ui, User nowUser) throws WhereGotTimeException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public User getCurrentUser() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return currentUser;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public boolean isLogIn() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        return isLogIn;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 32,
      "manuelmanuntag96": 5,
      "weisiong24": 6
    }
  },
  {
    "path": "src/main/java/seedu/command/CompareCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.exception.NotLoggedInException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "public class CompareCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    public CompareCommand(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            ArrayList\u003cInteger\u003e outputArray \u003d new ArrayList\u003c\u003e(Arrays.asList(0, 1, 2, 3, 4, 5, 6, 7, 8, 9,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            //@@author yeapcl"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            if (nowUser \u003d\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new NotLoggedInException(\"Sorry! You are not logged in to any account!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                int tempInt \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                int sameUserIndex \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                System.out.println(\"Hey \" + nowUser.getName() + \", please enter the index number of the \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        + \"user that you would like to compare with.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                for (User u : users.getUserList()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    if (u \u003d\u003d nowUser) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        sameUserIndex \u003d tempInt;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    System.out.println(\"\\t\" + tempInt + \". \" + u.getName());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    tempInt++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                String indexString \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                int indexInt \u003d Integer.parseInt(indexString);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                if (indexInt \u003e (users.getTotalUserCount() - 1)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    throw new WhereGotTimeException(\"You have entered an invalid index number!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                } else if (indexInt \u003d\u003d sameUserIndex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    indexInt +\u003d 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                //@@author"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                ArrayList\u003cEvent\u003e nowUserTimetable;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                ArrayList\u003cEvent\u003e targetUserTimetable;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                final User targetUser \u003d users.getUser(indexInt);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                System.out.println(\"Please input the day (Mon-Sun) that you would like to compare.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                String date \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                if (targetUser \u003d\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    throw new WhereGotTimeException(\"No such user!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                switch (date.toLowerCase()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                case \"mon\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    nowUserTimetable \u003d nowUser.getTimetable().getTimetable(\"mon\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    targetUserTimetable \u003d targetUser.getTimetable().getTimetable(\"mon\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                case \"tue\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    nowUserTimetable \u003d nowUser.getTimetable().getTimetable(\"tue\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    targetUserTimetable \u003d targetUser.getTimetable().getTimetable(\"tue\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                case \"wed\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    nowUserTimetable \u003d nowUser.getTimetable().getTimetable(\"wed\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    targetUserTimetable \u003d targetUser.getTimetable().getTimetable(\"wed\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                case \"thu\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    nowUserTimetable \u003d nowUser.getTimetable().getTimetable(\"thu\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    targetUserTimetable \u003d targetUser.getTimetable().getTimetable(\"thu\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                case \"fri\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    nowUserTimetable \u003d nowUser.getTimetable().getTimetable(\"fri\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    targetUserTimetable \u003d targetUser.getTimetable().getTimetable(\"fri\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                case \"sat\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    nowUserTimetable \u003d nowUser.getTimetable().getTimetable(\"sat\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    targetUserTimetable \u003d targetUser.getTimetable().getTimetable(\"sat\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                case \"sun\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    nowUserTimetable \u003d nowUser.getTimetable().getTimetable(\"sun\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    targetUserTimetable \u003d targetUser.getTimetable().getTimetable(\"sun\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    throw new WhereGotTimeException(\"Sorry! I don\u0027t know what day you mean!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                 * Compare targetUser and nowUser Timetables (ArrayList\u003cObject\u003e)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                 * Assuming for each day of the week, timetable ArrayList\u003cObject\u003e contains only [0:23] timeslots"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                 * Loop below returns an outputArray that holds the common available hours in that day"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                for (Event event : nowUserTimetable) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    int tempX \u003d (Integer.parseInt(event.getTimeStart().substring(0, 2)));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    int tempY \u003d (Integer.parseInt(event.getTimeEnd().substring(0, 2)));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    for (int i \u003d tempX; i \u003c tempY; i++) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                        outputArray.remove(Integer.valueOf(i));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                for (Event event : targetUserTimetable) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    int tempX \u003d (Integer.parseInt(event.getTimeStart().substring(0, 2)));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    int tempY \u003d (Integer.parseInt(event.getTimeEnd().substring(0, 2)));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    for (int i \u003d tempX; i \u003c tempY; i++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                        outputArray.remove(Integer.valueOf(i));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                ui.printCompare(outputArray);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            throw new WhereGotTimeException(\"Please provide an integer input!\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 45,
      "tammykoh": 1,
      "yellow-fellow": 86
    }
  },
  {
    "path": "src/main/java/seedu/command/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.exception.NotLoggedInException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Deletes a task from the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public DeleteCommand(String information) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        super(information);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"LogDeleteCommand\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        setupInputLogger();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        logger.log(Level.INFO, \"Beginning DeleteCommand...\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (nowUser \u003d\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.WARNING, \"User not logged in, ending DeleteCommand function\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new NotLoggedInException(\"Sorry! You are not logged in to any account :-(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String[] parsedInputs \u003d input.split(\"/\", 3);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String day \u003d parsedInputs[1].trim().toLowerCase();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            index \u003d Integer.parseInt(parsedInputs[2]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.INFO, \"Deleting item \" + index + \", on \" + day);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            for (int i \u003d 0; i \u003c users.getTotalUserCount(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                if ((users.getUser(i + 1).getName().equals(nowUser.getName()))) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    ArrayList\u003cEvent\u003e timetable \u003d (users.getUser(i + 1).getTimetable()).getTimetable(day);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    String removedClass \u003d timetable.get(index - 1).toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    timetable.remove(index - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    ui.printDelete(removedClass, day, timetable.size());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    logger.log(Level.INFO, \"Lesson has been deleted successfully\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.WARNING, \"Index entered is not an integer, ending session...\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"You\u0027ve entered an invalid index!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.WARNING, \"No such index in timetable, ending session...\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"You\u0027ve entered an invalid index!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        logger.log(Level.INFO, \"DeleteCommand function has ended successfully\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private void setupInputLogger() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        LogManager.getLogManager().reset();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        logger.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            FileHandler fh \u003d new FileHandler(\"DeleteCommand.log\", true);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            fh.setLevel(Level.INFO);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            fh.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.addHandler(fh);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.SEVERE, \"File logging is not functional\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 17,
      "tammykoh": 61
    }
  },
  {
    "path": "src/main/java/seedu/command/EditCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.IdenticalTimingsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.IllogicalTimingException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.IncorrectCommandFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.InvalidTimingFormatException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.NotLoggedInException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.timetable.SortTimetable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Command to edit a timetable."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"LogEditCommand\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Constructor for editing an event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public EditCommand(String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Parses timings to be edited and check for validity."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param users   object of UserList containing all available user\u0027s data"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param ui      containing the outputs to print"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param nowUser object of currently logged in user"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws WhereGotTimeException           all possible exceptions extended from WhereGotTimeException can be thrown"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws NotLoggedInException            if user invoke edit command without first logging in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws IncorrectCommandFormatException if user inputs a format that is not valid, e.g. extra or missing fields"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws IdenticalTimingsException       if the new timings are identical with original timings"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws InvalidIndexException           if the user inputs an index that is out of bound"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        setupInputLogger();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (nowUser \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            logger.log(Level.WARNING, \"Not logged in\" + \"\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new NotLoggedInException(\"Sorry! You are not logged in to any account!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String[] parsedInputs \u003d input.split(\"/\", 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (parsedInputs.length !\u003d 2) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new IncorrectCommandFormatException(\"Incorrect format for edit command! Enter \u0027help\u0027 for the correct \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    + \"input format!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String date \u003d parsedInputs[1].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        logger.log(Level.INFO, \"Correct date added: \" + parsedInputs[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ArrayList\u003cEvent\u003e dateTimetable \u003d nowUser.getTimetable().getTimetable(date);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (dateTimetable.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            ui.printEditEmptyClass(nowUser, date);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            logger.log(Level.WARNING, \"No class in this day.\" + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                ui.printEditLessonList(nowUser, date, dateTimetable);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                String editInput \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                String[] parsedEditInput \u003d editInput.split(\"/\", 3);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                if (parsedEditInput.length !\u003d 3) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    throw new IncorrectCommandFormatException(\"You have entered an invalid edit format!\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                } else if (!parsedEditInput[0].isEmpty()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    throw new IncorrectCommandFormatException(\"You have entered an invalid edit format!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                int index \u003d Integer.parseInt(parsedEditInput[1].trim());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                logger.log(Level.INFO, \"Correct index added: \" + index);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                String[] newTime \u003d parsedEditInput[2].split(\"-\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                if (newTime.length !\u003d 2) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    logger.log(Level.WARNING, \"Invalid time format!\" + \"\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    throw new IncorrectCommandFormatException(\"Invalid time format. Enter \u0027help\u0027 for the \""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                            + \"correct input format!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                checkTimeValidity(newTime);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                logger.log(Level.INFO, \"Correct start time added: \" + newTime[0]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                logger.log(Level.INFO, \"Correct end time added: \" + newTime[1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                Event originalEvent;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                for (int i \u003d 0; i \u003c users.getTotalUserCount(); i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    if ((users.getUser(i + 1).getName().equals(nowUser.getName()))) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        originalEvent \u003d nowUser.getTimetable().getTimetable(date).get(index - 1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        String originalStartTime \u003d originalEvent.getTimeStart();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        String originalEndTime \u003d originalEvent.getTimeEnd();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        if (newTime[0].equals(originalStartTime) \u0026\u0026 newTime[1].equals(originalEndTime)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                            logger.log(Level.WARNING, \"Identical class detected.\" + \"\\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                            throw new IdenticalTimingsException(\"You have entered a timing that is exactly \""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                                    + \"the \\nsame as the original one! Hence, no changes were made!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        Event modifiedEvent \u003d new Event(originalEvent.getDescription(),"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                                originalEvent.getLocation(), newTime[0], newTime[1]);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        nowUser.getTimetable().getTimetable(date).set(index - 1, modifiedEvent);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        ui.printEdit(originalEvent, modifiedEvent);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        logger.log(Level.INFO, \"Class edited successfully:\\n\" + originalEvent + \"\\n\" + modifiedEvent);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                SortTimetable.sortTimetable(users, nowUser, date);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                logger.log(Level.WARNING, \"Invalid edit format!\" + \"\\n\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new IncorrectCommandFormatException(\"You\u0027ve entered an invalid edit format!\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                logger.log(Level.WARNING, \"Invalid index!\" + \"\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new InvalidIndexException(\"You\u0027ve entered an invalid index!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Checks for time validity."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param time the array of new times to be edited"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws WhereGotTimeException        all possible exceptions extending from WhereGotTimeException can be thrown"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws InvalidTimingFormatException if user inputs a time that is not 4-digit, not conforming to 24-hour"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *                                      format and not in 1-hour block"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws IllogicalTimingException     if user inputs identical start and end time, or if start time is later"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *                                      than end time"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private void checkTimeValidity(String[] time) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String startTimeHour \u003d time[0].substring(0, 2);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String startTimeMinute \u003d time[0].substring(2);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String endTimeHour \u003d time[1].substring(0, 2);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String endTimeMinute \u003d time[1].substring(2);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int startTimeHourInt \u003d Integer.parseInt(startTimeHour);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int startTimeMinuteInt \u003d Integer.parseInt(startTimeMinute);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int endTimeHourInt \u003d Integer.parseInt((endTimeHour));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int endTimeMinuteInt \u003d Integer.parseInt(endTimeMinute);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int startTime \u003d Integer.parseInt(time[0]);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int endTime \u003d Integer.parseInt(time[1]);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (time[0].length() !\u003d 4 || time[1].length() !\u003d 4) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new InvalidTimingFormatException(\"Invalid hour format! It should be in \""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    + \"24-hour format and in 1-hour block! e.g. 0900, 1300, 2300, etc.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else if (startTimeHourInt \u003c 0 || startTimeHourInt \u003e 23) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new InvalidTimingFormatException(\"Invalid hour for start time! It should be in \""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    + \"24-hour format and in 1-hour block! e.g. 0900, 1300, 2300, etc.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else if (startTimeMinuteInt \u003c 0 || startTimeMinuteInt \u003e 59) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new InvalidTimingFormatException(\"Invalid minute for start time! It should be in \""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    + \"24-hour format and in 1-hour block! e.g. 0900, 1300, 2300, etc.\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else if (endTimeHourInt \u003c 0 || endTimeHourInt \u003e 23) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new InvalidTimingFormatException(\"Invalid hour for end time! It should be in \""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    + \"24-hour format and in 1-hour block! e.g. 0900, 1300, 2300, etc.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else if (endTimeMinuteInt \u003c 0 || endTimeMinuteInt \u003e 59) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new InvalidTimingFormatException(\"Invalid minute for end time! It should be in \""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    + \"24-hour format and in 1-hour block! e.g. 0900, 1300, 2300, etc.\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else if ((startTimeMinuteInt % 60) !\u003d 0 || (endTimeMinuteInt % 60) !\u003d 0) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new InvalidTimingFormatException(\"The timings should be in 1-hour block! e.g. 0900, 1300, 2300, etc\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else if (startTime \u003d\u003d endTime) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new IllogicalTimingException(\"Start time cannot be the same as end time!\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else if (startTime \u003e endTime) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new IllogicalTimingException(\"Start time cannot be later than end time!\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private void setupInputLogger() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        LogManager.getLogManager().reset();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        logger.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            FileHandler fh \u003d new FileHandler(\"EditCommand.log\", true);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fh.setLevel(Level.INFO);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fh.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            logger.addHandler(fh);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            logger.log(Level.SEVERE, \"File logging fails!\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 195
    }
  },
  {
    "path": "src/main/java/seedu/command/FindCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.exception.NotLoggedInException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " * Finds class(es) in the timetable that matches the keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        super(keyword);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"LogFindCommand\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        setupInputLogger();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        logger.log(Level.INFO, \"Beginning FindCommand...\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (nowUser \u003d\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.WARNING, \"User not logged in, ending FindCommand function\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new NotLoggedInException(\"Sorry! You are not logged in to any account :-(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String[] parsedInputs \u003d input.split(\"/\", 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String keyword \u003d parsedInputs[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int userIndex \u003d -1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (int i \u003d 0; i \u003c users.getTotalUserCount(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            if ((users.getUser(i + 1).getName().equals(nowUser.getName()))) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                userIndex \u003d i + 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                logger.log(Level.INFO, \"User has been found, user index: \" + userIndex);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assert userIndex !\u003d -1 : \"User not found\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        logger.log(Level.INFO, \"Begin searching through timetable for keyword\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String classesFound \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ArrayList\u003cEvent\u003e timetableMon \u003d (users.getUser(userIndex).getTimetable()).getTimetable(\"mon\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (Object c : timetableMon) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String classEvent \u003d c.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if (classEvent.contains(keyword)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                classesFound \u003d classesFound + \"\\n\" + count + \". (Monday) \" + classEvent;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ArrayList\u003cEvent\u003e timetableTue \u003d (users.getUser(userIndex).getTimetable()).getTimetable(\"tue\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (Object c : timetableTue) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String classEvent \u003d c.toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if (classEvent.contains(keyword)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                classesFound \u003d classesFound + \"\\n\" + count + \". (Tuesday) \" + classEvent;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ArrayList\u003cEvent\u003e timetableWed \u003d (users.getUser(userIndex).getTimetable()).getTimetable(\"wed\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (Object c : timetableWed) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String classEvent \u003d c.toString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if (classEvent.contains(keyword)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                classesFound \u003d classesFound + \"\\n\" + count + \". (Wednesday) \" + classEvent;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ArrayList\u003cEvent\u003e timetableThu \u003d (users.getUser(userIndex).getTimetable()).getTimetable(\"thu\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (Object c : timetableThu) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String classEvent \u003d c.toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if (classEvent.contains(keyword)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                classesFound \u003d classesFound + \"\\n\" + count + \". (Thursday) \" + classEvent;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ArrayList\u003cEvent\u003e timetableFri \u003d (users.getUser(userIndex).getTimetable()).getTimetable(\"fri\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (Object c : timetableFri) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String classEvent \u003d c.toString();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if (classEvent.contains(keyword)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                classesFound \u003d classesFound + \"\\n\" + count + \". (Friday) \" + classEvent;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ArrayList\u003cEvent\u003e timetableSat \u003d (users.getUser(userIndex).getTimetable()).getTimetable(\"sat\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (Object c : timetableSat) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String classEvent \u003d c.toString();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if (classEvent.contains(keyword)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                classesFound \u003d classesFound + \"\\n\" + count + \". (Saturday) \" + classEvent;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ArrayList\u003cEvent\u003e timetableSun \u003d (users.getUser(userIndex).getTimetable()).getTimetable(\"sun\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (Object c : timetableSun) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String classEvent \u003d c.toString();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if (classEvent.contains(keyword)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                classesFound \u003d classesFound + \"\\n\" + count + \". (Sunday) \" + classEvent;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        logger.log(Level.INFO, \"Search has ended\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ui.printFind(classesFound, keyword);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        logger.log(Level.INFO, \"FindCommand function has ended successfully\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private void setupInputLogger() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        LogManager.getLogManager().reset();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        logger.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            FileHandler fh \u003d new FileHandler(\"FindCommand.log\", true);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            fh.setLevel(Level.INFO);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            fh.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.addHandler(fh);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.SEVERE, \"File logging is not functional\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 12,
      "tammykoh": 125
    }
  },
  {
    "path": "src/main/java/seedu/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Command to display help instructions."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Check if user is logged in and display help instructions."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param users object of UserList containing all available user\u0027s data"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param ui containing the outputs to print"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param nowUser object of currently logged in user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        boolean isLoggedIn \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (nowUser \u003d\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            isLoggedIn \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui.printHelp(isLoggedIn, nowUser);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 33
    }
  },
  {
    "path": "src/main/java/seedu/command/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.exception.NotLoggedInException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Prints a list of all tasks to the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public ListCommand(String input) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"LogListCommand\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        setupInputLogger();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        logger.log(Level.INFO, \"Beginning ListCommand...\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int userIndex \u003d -1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (nowUser \u003d\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.WARNING, \"User not logged in, ending ListCommand function\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new NotLoggedInException(\"Sorry! You are not logged in to any account!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (int i \u003d 0; i \u003c users.getTotalUserCount(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            if ((users.getUser(i + 1).getName().equals(nowUser.getName()))) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                userIndex \u003d i + 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                logger.log(Level.INFO, \"User has been found, user index: \" + userIndex);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assert userIndex !\u003d -1 : \"User not found\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String day \u003d input.substring(1).toLowerCase();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (day.equals(\"all\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.INFO, \"List all classes\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, userIndex, \"mon\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, userIndex, \"tue\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, userIndex, \"wed\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, userIndex, \"thu\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, userIndex, \"fri\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, userIndex, \"sat\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, userIndex, \"sun\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.INFO, \"List classes only on \" + day);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, userIndex, day);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        logger.log(Level.INFO, \"ListCommand function has ended successfully\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private void setupInputLogger() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        LogManager.getLogManager().reset();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        logger.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            FileHandler fh \u003d new FileHandler(\"ListCommand.log\", true);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            fh.setLevel(Level.INFO);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            fh.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.addHandler(fh);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            logger.log(Level.SEVERE, \"File logging is not functional\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 14,
      "tammykoh": 72
    }
  },
  {
    "path": "src/main/java/seedu/command/LogInCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " * Adds an event to the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class LogInCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public LogInCommand(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"LogAddCommand\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        boolean doesExist \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        setupInputLogger();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String[] position \u003d input.split(\"/\", 3);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        position[1] \u003d position[1].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d users.getTotalUserCount(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if (position[1].equals((users.getUser(i)).getName())) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                if (position[2].equals((users.getUser(i)).getPassword())) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    currentUser \u003d users.getUser(i);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    ui.greetReturningUser(currentUser);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    doesExist \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    logger.log(Level.WARNING,\"Wrong Password\" + \"\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    throw new WhereGotTimeException(\"Wrong Password\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        if (doesExist \u003d\u003d false) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            User newUser \u003d new User(position[1], position[2]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            currentUser \u003d newUser;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            users.addUser(newUser);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            ui.greetUser(currentUser);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            logger.log(Level.INFO,\"User Name successfully added:  \" + position[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        isLogIn \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assert isLogIn() \u003d\u003d true : \"Username or Password is missing\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        logger.log(Level.INFO, \"end of processing\"  + \"\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private void setupInputLogger() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        LogManager.getLogManager().reset();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        logger.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            FileHandler fh \u003d new FileHandler(\"LogInCommand.log\",true);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            fh.setLevel(Level.INFO);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            fh.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            logger.addHandler(fh);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            logger.log(Level.SEVERE,\"File logging not working\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 6,
      "manuelmanuntag96": 73,
      "weisiong24": 2
    }
  },
  {
    "path": "src/main/java/seedu/command/RemoveUserCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class RemoveUserCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public RemoveUserCommand(String information) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        super(information);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String[] position \u003d input.split(\"/\",3);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        position[1] \u003d position[1].trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        position[2] \u003d position[2].trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.removeUser(position[1], position[2]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 24
    }
  },
  {
    "path": "src/main/java/seedu/exception/IdenticalTimingsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class IdenticalTimingsException extends WhereGotTimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public IdenticalTimingsException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 8
    }
  },
  {
    "path": "src/main/java/seedu/exception/IllogicalTimingException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class IllogicalTimingException extends WhereGotTimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public IllogicalTimingException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 7
    }
  },
  {
    "path": "src/main/java/seedu/exception/IncorrectCommandFormatException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class IncorrectCommandFormatException extends WhereGotTimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public IncorrectCommandFormatException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 7
    }
  },
  {
    "path": "src/main/java/seedu/exception/InvalidIndexException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class InvalidIndexException extends WhereGotTimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public InvalidIndexException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 7
    }
  },
  {
    "path": "src/main/java/seedu/exception/InvalidTimingFormatException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class InvalidTimingFormatException extends WhereGotTimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public InvalidTimingFormatException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 7
    }
  },
  {
    "path": "src/main/java/seedu/exception/NotLoggedInException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class NotLoggedInException extends WhereGotTimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public NotLoggedInException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 7
    }
  },
  {
    "path": "src/main/java/seedu/exception/WhereGotTimeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class WhereGotTimeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Returns an exception error."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param message the reason for exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public WhereGotTimeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 13
    }
  },
  {
    "path": "src/main/java/seedu/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.ClearCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.command.CompareCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.EditCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.LogInCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.command.RemoveUserCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Parses the user\u0027s input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final String COMMAND_CLEAR \u003d \"clear\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String COMMAND_HELP \u003d \"help\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private static final String COMMAND_REMOVE \u003d \"remove\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private static final String COMMAND_LOGIN \u003d \"login\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    private static final String COMMAND_ADD \u003d \"add\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String COMMAND_EDIT \u003d \"edit\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    private static final String COMMAND_COMPARE \u003d \"compare\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static final int MAX_PASSWORD_LENGTH \u003d 6;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Returns a Command object based on user\u0027s string input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param input user\u0027s string input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @return a new Command object based on user\u0027s input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws WhereGotTimeException if user\u0027s input does not match any of the command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static Command parse(String input) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String[] parsedInputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        switch (parsedInputs[0].toLowerCase()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case COMMAND_CLEAR:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            checkClearValidity(parsedInputs);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            return new ClearCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            checkListValidity(parsedInputs);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            return new ListCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            checkDeleteValidity(parsedInputs);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new DeleteCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        case COMMAND_REMOVE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            checkRemoveValidity(parsedInputs);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            return new RemoveUserCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case COMMAND_FIND:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            checkFindValidity(parsedInputs);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            return new FindCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        case COMMAND_LOGIN:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            checkLogInValidity(parsedInputs);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            return new LogInCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        case COMMAND_ADD:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            checkAddValidity(parsedInputs);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return new AddCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case COMMAND_EDIT:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            checkEditValidity(parsedInputs);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new EditCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case COMMAND_HELP:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case COMMAND_BYE:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        case COMMAND_COMPARE:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            return new CompareCommand(parsedInputs[0]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"Sorry! I don\u0027t know what that means. Enter \u0027help\u0027 for a \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    + \"list of valid commands!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void checkEditValidity(String[] input) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"There is no description in your edit command!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void checkAddValidity(String[] input) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new WhereGotTimeException(\"There is no description in your add command!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            } else if (!input[1].contains(\"/\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new WhereGotTimeException(\"An add command needs to be in a\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        + \" \u0027add /name /day /time /location\u0027 format!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            String[] position \u003d input[1].split(\" /\", 4);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            if (position[0].isEmpty()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new WhereGotTimeException(\"There is no name in your add command!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            } else if (position[1].isEmpty()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new WhereGotTimeException(\"There is no day in your add command!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            } else if (position[2].isEmpty()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new WhereGotTimeException(\"There is no time in your add command!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            } else if (position[3].isEmpty()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new WhereGotTimeException(\"There is no location in your add command!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            if (position[1].length() !\u003d 3) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new WhereGotTimeException(\"\\nInvalid day Format \\n\" "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        + \"Correct format is add /name /day /timeStart-timeEnd /location\\n\" "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        + \"E.g: add /CS2113 Lec /mon /2000-2100 /LT1\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            if (!position[0].contains(\"/\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                throw new WhereGotTimeException(\"An add command needs to be in \""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        + \"a \u0027add /name /day /time /location\u0027 format!\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"An add command needs to be in a \u0027add /name /day /time /location\u0027 format!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void checkListValidity(String[] input) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"There is no description in your list command!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (!input[1].contains(\"/\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"A list command needs to be in a \u0027list /day\u0027 format!\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String[] position \u003d input[1].split(\"/\",2);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (!position[0].isEmpty()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"Unexpected input found! A list command needs to be in \""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    + \"a \u0027list /day\u0027 format.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (position[1].isEmpty()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"There is no day in your list command!\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void checkClearValidity(String[] input) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"There is no description in your clear command!\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (!input[1].contains(\"/\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"An clear command needs to be in a \u0027clear /day\u0027 format!\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String[] position \u003d input[1].split(\"/\",3);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (!position[0].isEmpty()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"Unexpected input found! A clear command needs to be in \""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    + \"a \u0027clear /day\u0027 format.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (position[1].isEmpty()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"There is no day in your clear command!\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void checkDeleteValidity(String[] input) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"There is no description in your delete command!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (!input[1].contains(\"/\")) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"A delete command needs to be in a \u0027delete /day /index\u0027 format!\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            String[] position \u003d input[1].split(\"/\",3);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if (!position[0].isEmpty()) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new WhereGotTimeException(\"Unexpected input found! A delete command needs to be in a\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                        + \"\u0027delete /day /index format.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            } else if (position[1].isEmpty() || position[1].equals(\" \")) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new WhereGotTimeException(\"There is no day in your delete command!\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            } else if (position[2].isEmpty()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new WhereGotTimeException(\"There is no index in your delete command!\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"A delete command needs to be in a \u0027/day /index\u0027 format!\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private static void checkRemoveValidity(String[] input) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new WhereGotTimeException(\"There is no description in your remove command!\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            String[] position \u003d input[1].split(\"/\", 3);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            position[1] \u003d position[1].trim();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if (position[1].isEmpty()) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                throw new WhereGotTimeException(\"There is no username in your remove command!\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if (position[2].isEmpty()) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                throw new WhereGotTimeException(\"A remove requires a password!\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if (position[2].length() !\u003d MAX_PASSWORD_LENGTH) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                throw new WhereGotTimeException(\"Password needs to be 6-digits long!\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if (!position[2].matches(\"[0-9]+\")) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                throw new WhereGotTimeException(\"Password needs to be a 6-digits number!\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if (!position[1].matches(\"^[a-zA-Z]*$\")) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                throw new WhereGotTimeException(\"Username needs to contain one word with only Alphabets!\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new WhereGotTimeException(\"Wrong format! Please follow the format login /username /password\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void checkLogInValidity(String[] input) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"There is no description in your login command!\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            String[] position \u003d input[1].split(\"/\", 3);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            position[1] \u003d position[1].trim();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    "
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if (position[1].isEmpty()) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                throw new WhereGotTimeException(\"There is no username in your login command!\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if (position[2].isEmpty()) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                throw new WhereGotTimeException(\"A login requires a password!\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if (position[2].length() !\u003d MAX_PASSWORD_LENGTH) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new WhereGotTimeException(\"Password needs to be 6-digits long!\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if (!position[2].matches(\"[0-9]+\")) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new WhereGotTimeException(\"Password needs to be a 6-digits number!\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            } else if (!position[1].matches(\"^[a-zA-Z]*$\")) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new WhereGotTimeException(\"Username needs to contain one word with only Alphabets!\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new WhereGotTimeException(\"Wrong format! Please follow the format login /username /password\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Checks the validity of the KEYWORD for find."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param input user\u0027s string input."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws WhereGotTimeException if the KEYWORD is an empty field."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void checkFindValidity(String[] input) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"There is no description in your find command!\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (!input[1].contains(\"/\")) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"A find command needs to be in a \u0027find /keyword\u0027 format!\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String[] position \u003d input[1].split(\"/\",2);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (!position[0].isEmpty()) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"Unexpected input found! A find command needs to be in \""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    + \"a \u0027find /keyword\u0027 format.\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (position[1].isEmpty()) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"There is no keyword in your find command!\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 102,
      "tammykoh": 58,
      "manuelmanuntag96": 59,
      "yellow-fellow": 3,
      "weisiong24": 25
    }
  },
  {
    "path": "src/main/java/seedu/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.Cryptography;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Manages the loading and saving of data to or from a text file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String FP \u003d \"data/WhereGotTime.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String[] days \u003d {\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\"};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Creates a new file if it does not exist."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws WhereGotTimeException if an I/O error has occurred."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Storage() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        initialise();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Initialises a file by checking path validity."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws WhereGotTimeException if an I/O error has occurred."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private void initialise() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        File storageFile \u003d new File(FP);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        File storageFolder \u003d new File(storageFile.getParent());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (storageFolder.exists() \u0026\u0026 storageFolder.isDirectory()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"Data folder found! Finding WhereGotTime.txt...\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"Data folder not found! Creating one...\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            if (!storageFolder.mkdir()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                throw new WhereGotTimeException(\"Attempt to create a data folder failed.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            if (storageFile.createNewFile()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                System.out.println(\"No existing WhereGotTime.txt found! Creating one...\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                System.out.println(\"Existing WhereGotTime.txt found. Loading previously saved \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        + \"timetable information...\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                System.out.println(\"Timetable information loaded successfully!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"Attempt to create WhereGotTime.txt failed.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"Storage initialisation completed without issue.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Loads data from the text file to task arraylist."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws WhereGotTimeException if an I/O error has occurred."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void load(UserList users) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Scanner reader;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            reader \u003d new Scanner(new File(FP));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"Attempt to read WhereGotTime.txt failed.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        while (reader.hasNextLine()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            loadTask(reader, users);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Parses the saved tasks according to specified format in order to be loaded."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param reader reads user\u0027s string input."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param users object of UserList containing all available user\u0027s data"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws WhereGotTimeException if an I/O error has occurred."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private void loadTask(Scanner reader, UserList users) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String firstLine \u003d reader.nextLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int totalUser \u003d 0;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (firstLine.contains(\"Total user: \")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            totalUser \u003d Integer.parseInt(firstLine.substring(12));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"WhereGotTime.txt formatting is incorrect.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (int i \u003d 0; i \u003c totalUser; i++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            String[] userCredentials \u003d reader.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            User newUser \u003d new User(userCredentials[0].trim(), "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    Cryptography.decipherPassword(userCredentials[1].trim()));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            users.addUser((newUser));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            for (String day : days) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                reader.nextLine();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                String line \u003d reader.nextLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                if (line.isEmpty()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                String[] timetables \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                for (String s : timetables) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String[] lessons \u003d s.split(\"/\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String description \u003d lessons[1].trim();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String location \u003d lessons[2].trim();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String timeRange \u003d lessons[3].trim();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String[] times \u003d timeRange.split(\"-\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    Event lessonEvent \u003d new Event(description, location, times[0].trim(), times[1].trim());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    ArrayList\u003cEvent\u003e timetable \u003d users.getUser(i + 1).getTimetable().getTimetable(day);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    timetable.add(lessonEvent);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Writes data to the text file."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param users object of UserList containing all available user\u0027s data"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws WhereGotTimeException if an I/O error has occurred."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void write(UserList users) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        //ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            FileWriter fw \u003d new FileWriter(new File(FP));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            writeTask(fw, users);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"Attempt to write to WhereGotTime.txt failed.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Writes specific task details to the text file in given format."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param fw FileWriter object."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param users object of UserList containing all available user\u0027s data          "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws IOException if an I/O error has occurred."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private void writeTask(FileWriter fw, UserList users) throws IOException, WhereGotTimeException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        fw.write(\"Total user: \" + users.getTotalUserCount());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        fw.append(\"\\n\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (User u : users.getUserList()) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            fw.write(u.getName() + \" | \" + u.getEncipheredPassword());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fw.append(\"\\n\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            for (String day : days) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                fw.write(day);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                fw.append(\"\\n\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                ArrayList\u003cEvent\u003e timetableIndividualDay \u003d u.getTimetable().getTimetable(day);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                int timetableSize \u003d timetableIndividualDay.size();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                for (int k \u003d 0; k \u003c timetableSize; k++) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String classDescription \u003d timetableIndividualDay.get(k).getDescription();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String location \u003d timetableIndividualDay.get(k).getLocation();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String startTime \u003d timetableIndividualDay.get(k).getTimeStart();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String endTime \u003d timetableIndividualDay.get(k).getTimeEnd();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    fw.write(\"/\" + classDescription + \" /\" + location + \" /\" + startTime"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                            + \"-\" + endTime);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    if (!(k \u003d\u003d (timetableSize - 1))) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        fw.write(\" | \");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                fw.append(\"\\n\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 175,
      "manuelmanuntag96": 4
    }
  },
  {
    "path": "src/main/java/seedu/task/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public Event(String description, String location, String timeStart, String timeEnd) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        super(description, location, timeStart, timeEnd);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return description + \" \" + location + \" \" + timeStart + \"-\" + timeEnd;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 11,
      "manuelmanuntag96": 2
    }
  },
  {
    "path": "src/main/java/seedu/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Provides blueprint for a Task object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected String location;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected String timeStart;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected String timeEnd;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Initialises a new Task object, and marks it as undone by default."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param description the description of a particular task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public Task(String description, String location, String timeStart, String timeEnd) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.timeStart \u003d timeStart;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.timeEnd \u003d timeEnd;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Returns a task\u0027s description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @return the description of the task in string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Returns the task description and status based on given format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @return the description and task status based on a given format."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return this.description + this.location + this.timeStart + this.timeEnd;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    public String getTimeStart() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        return this.timeStart;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    public String getTimeEnd() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        return this.timeEnd;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String getLocation() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return this.location;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 39,
      "manuelmanuntag96": 8,
      "yellow-fellow": 8
    }
  },
  {
    "path": "src/main/java/seedu/timetable/SortTimetable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class SortTimetable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static void sortTimetable(UserList users, User nowUser, String day) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assert nowUser !\u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int userIndex \u003d -1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (int i \u003d 0; i \u003c users.getTotalUserCount(); i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if ((users.getUser(i + 1).getName() \u003d\u003d nowUser.getName())) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                userIndex \u003d i + 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ArrayList\u003cEvent\u003e timetable \u003d (users.getUser(userIndex).getTimetable()).getTimetable(day);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ArrayList\u003cEvent\u003e sortedTimetable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        sortedTimetable.clear();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assert !timetable.isEmpty();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        while (timetable.size() !\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            int earliestClassTime \u003d 2400;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            int earliestClassIndex \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            int currentClassIndex \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            for (Event event : timetable) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                int currentClassTime \u003d Integer.parseInt(event.getTimeStart());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                if (currentClassTime \u003c earliestClassTime) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    earliestClassIndex \u003d currentClassIndex;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    earliestClassTime \u003d currentClassTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                currentClassIndex++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            sortedTimetable.add(timetable.get(earliestClassIndex));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            timetable.remove(earliestClassIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (Event event : sortedTimetable) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            timetable.add(event);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 6,
      "tammykoh": 42
    }
  },
  {
    "path": "src/main/java/seedu/timetable/Timetable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class Timetable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public ArrayList\u003cEvent\u003e monTimetable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public ArrayList\u003cEvent\u003e tueTimetable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public ArrayList\u003cEvent\u003e wedTimetable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public ArrayList\u003cEvent\u003e thuTimetable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public ArrayList\u003cEvent\u003e friTimetable;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public ArrayList\u003cEvent\u003e satTimetable;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public ArrayList\u003cEvent\u003e sunTimetable;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public Timetable() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.monTimetable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.tueTimetable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.wedTimetable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.thuTimetable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.friTimetable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.satTimetable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.sunTimetable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public ArrayList\u003cEvent\u003e getTimetable(String day) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        switch (day.toLowerCase()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"mon\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return monTimetable;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"tue\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return tueTimetable;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"wed\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return wedTimetable;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"thu\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return thuTimetable;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"fri\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return friTimetable;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"sat\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return satTimetable;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"sun\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return sunTimetable;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"Sorry! I don\u0027t know what day you mean!\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    + \"Note: \u0027day\u0027 should be 3-letter, e.g. Mon, TUE, wed, etc.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 6,
      "tammykoh": 10,
      "manuelmanuntag96": 15,
      "weisiong24": 19
    }
  },
  {
    "path": "src/main/java/seedu/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Prints relevant messages to user based on user interaction."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String MESSAGE_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String MESSAGE_SAD_FACE \u003d \":(\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private static final String MESSAGE_LOGO \u003d \" _    _ _                   _____       _ _____ _                \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            + \"| |  | | |                 |  __ \\\\     | |_   _(_)               \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            + \"| |  | | |__   ___ _ __ ___| |  \\\\/ ___ | |_| |  _ _ __ ___   ___ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            + \"| |/\\\\| | \u0027_ \\\\ / _ \\\\ \u0027__/ _ \\\\ | __ / _ \\\\| __| | | | \u0027_ ` _ \\\\ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            + \"\\\\  /\\\\  / | | |  __/ | |  __/ |_\\\\ \\\\ (_) | |_| | | | | | | | |  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            + \" \\\\/  \\\\/|_| |_|\\\\___|_|  \\\\___|\\\\____/\\\\___/ \\\\__\\\\_/ |_|_| |_| |_|\\\\___|\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            + \"                                                                 \\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String MESSAGE_GREETINGS \u003d \"\\n\" + MESSAGE_LOGO + \"Hello! Welcome to WhereGotTime, a special \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            + \"timetable program that helps \\nyou and your friend find common unoccupied slots in the timetable!\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            + \"\\n\\nYou\u0027re currently not logged in.\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            + \"\\n\\nTip: enter \u0027help\u0027 for a list of commands.\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private final Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints a horizontal divider line."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(MESSAGE_LINE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Reads user inputs."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @return String the inputs provided by users, where leading and trailing spaces are trimmed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints welcome message."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(MESSAGE_LINE + MESSAGE_GREETINGS + MESSAGE_LINE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints out all tasks saved in the array list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param users the array list to print."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param userIndex the index of the current user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param day the day in the timetable to print."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printList(UserList users, int userIndex, String day) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ArrayList\u003cEvent\u003e timetable \u003d (users.getUser(userIndex).getTimetable()).getTimetable(day);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (!timetable.isEmpty()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            int count \u003d 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"Here are the classes in your timetable for \" + day"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    + \", sorted according to time:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            for (Object c : timetable) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                System.out.println(\"    \" + count + \". \" + c);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"There is no class in your timetable for \" + day + \"!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints out the event task given by the user."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "     * @param event the task to be added to the array list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public void printEvent(Event event, String date) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        System.out.println(\"Got it! I\u0027ve added the following event on \" + date + \"\\n\" + event);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        //System.out.println(\"Now now have \" + taskList.getTotalTaskCount() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints out the task that has been deleted."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param deletedClass the class that has been deleted."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param day          the day on which the task that has been deleted is on."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param size         the number of classes left on that day."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void printDelete(String deletedClass, String day, int size) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Noted. I have removed this class from your timetable:\\n\" + deletedClass);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" class(es) for \" + day + \" in the timetable.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Prints out the day of the timetable that has been cleared."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param timetable the timetable of the day to be cleared."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param counter the number of empty days in the timetable."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param input the input by the user."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param day the current day being cleared."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void printClear(ArrayList\u003cObject\u003e timetable, int counter, String input, String day) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int size \u003d timetable.size();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"I have removed this class from your \" + day + \" timetable:\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (size \u003e 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"I have removed these classes from your \" + day + \" timetable:\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (Object c : timetable) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"\\t\" + count + \". \" + c);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (!input.equals(\"all\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Your \" + day + \" timetable has been cleared.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (counter \u003d\u003d 7) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Your timetable is empty. There is nothing to clear.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (day.equals(\"sun\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Your timetable has been cleared.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints all result(s) that matches the search keyword."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param classesFound string of classes that contains the keyword."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param keyword  the word that the user searches."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void printFind(String classesFound, String keyword) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (!classesFound.equals(\"\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.print(\"Here are the class(es) in your timetable \""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    + \"that matches the keyword \\\"\" + keyword + \"\\\":\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(classesFound);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"None of your classes contain the keyword \\\"\" + keyword + \"\\\".\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printHelp(boolean isLoggedIn, User nowUser) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (isLoggedIn) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.print(\"Hi \" + nowUser.getName() + \".\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.print(\"You\u0027re currently not logged in.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"\\nHere are the list of commands for WhereGotTime.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"\\t1. Login command\\t: login /(username) /(6-digit password)\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"\\t2. Add command\\t\\t: add /(module name with optional descriptions) /(day) \""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                + \"/(startTime-endTime) /(location)\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"\\t3. List command\\t\\t: list /all OR list /(day)\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"\\t4. Edit command\\t\\t: edit /(day)\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"\\t5. Delete command\\t: delete /(day) /(index)\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"\\t6. Clear command\\t: clear /(day) OR clear /all\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"\\t7. Find command\\t\\t: find /(keyword)\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        System.out.println(\"\\t8. Compare command\\t: compare\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"\\t9. Remove command\\t: remove /(username) /(6-digit password)\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"\\t10. Bye command\\t\\t: bye\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"\\nNote:\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"- the brackets shown above should be omitted when entering commands\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"- if this is your first time using WhereGotTime, using the Login command \""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                + \"would \\n  create a new user profile that matches (username) and (6-digit password)\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"- command and \u0027day\u0027 are not case sensitive, but username and password are.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"- startTime and endTime should be in 24-hour format and in 1-hour block. \""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                + \"e.g. 0900, 1300, 2300, etc.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"- \u0027day\u0027 should be 3-letter, e.g. Mon, TUE, wed, etc.\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printEditEmptyClass(User nowUser, String date) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Hey \" + nowUser.getName() + \", there is no class in your \" + date + \" timetable!\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printEditLessonList(User nowUser, String date, ArrayList\u003cEvent\u003e dateTimetable) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Hey \" + nowUser.getName() + \", here are the lessons in your \" + date + \" timetable, \""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                + \"sorted from the earliest class.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int listIndex \u003d 1;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (Event e : dateTimetable) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"    \" + listIndex + \". \" + e);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            listIndex++;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"\\nTo edit, enter:\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"/(index) /(newStartTime-newEndTime)\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            "
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printEdit(Event original, Event edited) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Got it! I have edited the lesson as follows:\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"ORIGINAL    : \" + original.toString());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"EDITED      : \" + edited.toString());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints farewell message."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Thanks for using WhereGotTime. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void greetUser(User currentUser) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\"Hello \" + currentUser.getName() + \"!\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void greetReturningUser(User currentUser) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\"Hello again \" + currentUser.getName() + \"!\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints error message."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param message the error message to be printed."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(MESSAGE_SAD_FACE + \" OOPS!!! \" + message);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    public void printCompare(ArrayList\u003cInteger\u003e outputArray) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        ArrayList\u003cInteger\u003e fullArray \u003d new ArrayList\u003c\u003e(Arrays.asList(0, 1, 2, 3, 4, 5, 6, 7, 8, 9,"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23));"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        int checkPoint \u003d 0;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Your common unoccupied timeslots are: \\n\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        for (int availableTime : fullArray) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            if ((availableTime \u003e\u003d 1) \u0026\u0026 (!(outputArray.contains(availableTime - 1)))"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    \u0026\u0026 (!(outputArray.contains(availableTime)))) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                checkPoint++;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            if (!(outputArray.contains(availableTime))) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                int tempMinusOne \u003d availableTime - 1;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                if (checkPoint \u003c 10) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    if (tempMinusOne \u003c 10) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                        System.out.println(\"0\" + checkPoint + \"00HR to 0\" + tempMinusOne + \"59HR\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                        System.out.println(\"0\" + checkPoint + \"00HR to \" + tempMinusOne + \"59HR\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    if (tempMinusOne \u003c 10) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                        System.out.println(checkPoint + \"00HR to 0\" + tempMinusOne + \"59HR\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                        System.out.println(checkPoint + \"00HR to \" + tempMinusOne + \"59HR\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                if (availableTime !\u003d 23) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    checkPoint \u003d availableTime + 1;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        if (checkPoint !\u003d 23) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            if (checkPoint \u003c 10) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                System.out.println(\"0\" + checkPoint + \"00HR to \" + \"2359HR\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                System.out.println(checkPoint + \"00HR to \" + \"2359HR\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 157,
      "tammykoh": 48,
      "manuelmanuntag96": 10,
      "yellow-fellow": 43,
      "weisiong24": 5
    }
  },
  {
    "path": "src/main/java/seedu/user/Cryptography.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class Cryptography {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String encipherPassword(String plainText) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int plainTextLength \u003d plainText.length();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int[] numbers \u003d new int[plainTextLength];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        // Creating array of string length "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        char[] ch \u003d new char[plainTextLength];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        // Copy character by character into array "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 0; i \u003c plainTextLength; i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            ch[i] \u003d plainText.charAt(i);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 0; i \u003c plainTextLength; i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            numbers[i] \u003d ((int)(plainText.charAt(i) - \u00270\u0027));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int[] cipherNum \u003d new int[plainTextLength];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 0; i \u003c plainTextLength; i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if (i \u003d\u003d 0 | i \u003d\u003d 2 | i \u003d\u003d 4) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                cipherNum[i] \u003d 1 * numbers[i] + 2 * numbers[i + 1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                if (cipherNum[i] \u003e\u003d 10) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    cipherNum[i] \u003d cipherNum[i] % 10; "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                cipherNum[i + 1] \u003d 0 * numbers[i] + 3 * numbers[i + 1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                if (cipherNum[i + 1] \u003e\u003d 10) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    cipherNum[i + 1] \u003d cipherNum[i + 1] % 10;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        StringBuilder strNum \u003d new StringBuilder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int num : cipherNum) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            strNum.append(num);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String cipherText;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        cipherText \u003d strNum.toString(); "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return cipherText;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String decipherPassword(String cipherText) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int cipherTextLength \u003d cipherText.length();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int[] numbers \u003d new int[cipherTextLength];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        char[] ch \u003d new char[cipherTextLength];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 0; i \u003c cipherTextLength; i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            ch[i] \u003d cipherText.charAt(i);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 0; i \u003c cipherTextLength; i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            numbers[i] \u003d ((int)(cipherText.charAt(i) - \u00270\u0027));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int[] plainNum \u003d new int[cipherTextLength];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 0; i \u003c cipherTextLength; i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if (i \u003d\u003d 0 | i \u003d\u003d 2 | i \u003d\u003d 4) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                plainNum[i] \u003d 21 * numbers[i] - 14 * numbers[i + 1];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                if (plainNum[i] \u003c 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    plainNum[i] \u003d 10 + plainNum[i];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    plainNum[i] \u003d plainNum[i] % 10;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } else if (plainNum[i] \u003e\u003d 10) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    plainNum[i] \u003d plainNum[i] % 10;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                plainNum[i + 1] \u003d 0 * numbers[i] + 7 * numbers[i + 1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                if (plainNum[i] \u003c 0) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    plainNum[i] \u003d 10 - plainNum[i];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    plainNum[i] \u003d plainNum[i] % 10;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } else if (plainNum[i + 1] \u003e\u003d 10) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    plainNum[i + 1] \u003d plainNum[i + 1] % 10;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        StringBuilder strNum \u003d new StringBuilder();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int num : plainNum) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            strNum.append(num);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String plainText;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        plainText \u003d strNum.toString();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return plainText;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 1,
      "manuelmanuntag96": 103
    }
  },
  {
    "path": "src/main/java/seedu/user/User.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.timetable.Timetable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class User {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected String password;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected Timetable timetable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected String encipheredPassword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public User(String name, String passWord) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.password \u003d passWord;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.timetable \u003d new Timetable();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.encipheredPassword \u003d Cryptography.encipherPassword(passWord);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String getPassword() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return password;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public String getEncipheredPassword() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return encipheredPassword;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public Timetable getTimetable() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return timetable;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public ArrayList\u003cArrayList\u003cEvent\u003e\u003e combineAllTimetable() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ArrayList\u003cArrayList\u003cEvent\u003e\u003e combinedTimeTable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        combinedTimeTable.add(getTimetable().monTimetable);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        combinedTimeTable.add(getTimetable().tueTimetable);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        combinedTimeTable.add(getTimetable().wedTimetable);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        combinedTimeTable.add(getTimetable().thuTimetable);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        combinedTimeTable.add(getTimetable().friTimetable);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        combinedTimeTable.add(getTimetable().satTimetable);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        combinedTimeTable.add(getTimetable().sunTimetable);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return combinedTimeTable;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 21,
      "manuelmanuntag96": 27
    }
  },
  {
    "path": "src/main/java/seedu/user/UserList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class UserList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static final int MAX_SIZE \u003d 100;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private final ArrayList\u003cUser\u003e users;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public UserList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.users \u003d new ArrayList\u003c\u003e(MAX_SIZE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public UserList(ArrayList\u003cUser\u003e users) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.users \u003d new ArrayList\u003c\u003e(users);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void addUser(User user) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.add(user);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public ArrayList\u003cUser\u003e getUserList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return users;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public User getUser(int index) throws WhereGotTimeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            return users.get(index - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new WhereGotTimeException(\"Invalid user number!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public int getTotalUserCount() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return users.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    public User getUserByName(String userName) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        for (User user : this.users) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            if (user.getName().equals(userName)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                return user;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void removeUser(String userName, String passWord)  throws WhereGotTimeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        boolean isMatch \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        if (users.isEmpty()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new WhereGotTimeException(\"No users exist!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 0; i \u003c users.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if (users.get(i).getName().equals(userName)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                if (users.get(i).getPassword().equals(passWord)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    users.remove(i);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    System.out.println(userName + \" has been removed.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    isMatch \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    throw new WhereGotTimeException(\"Wrong Password\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        if (isMatch \u003d\u003d false) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new WhereGotTimeException(userName + \" does not exist!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 5,
      "manuelmanuntag96": 58,
      "yellow-fellow": 9
    }
  },
  {
    "path": "src/test/java/seedu/WhereGotTimeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "class WhereGotTimeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/*    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 4,
      "-": 8
    }
  },
  {
    "path": "src/test/java/seedu/command/AddCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "class AddCommandTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    String name \u003d \"CS2040C\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    String location \u003d \"LT23\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    String timeStart \u003d \"1600\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    String timeEnd \u003d \"1900\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    String locationTest \u003d \"/LT23\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    void testAddCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        Event e \u003d new Event(name, location,timeStart,timeEnd);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        assertEquals(\"CS2040C LT23 1600-1900\",e.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    void testLocation() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        Event e1 \u003d new Event(name, locationTest,timeStart,timeEnd);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        assertNotEquals(e1.toString(),\"CS2040C LT23 1600-1900\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 2,
      "weisiong24": 28
    }
  },
  {
    "path": "src/test/java/seedu/command/ClearCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.exception.NotLoggedInException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "class ClearCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final PrintStream originalErr \u003d System.err;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setErr(new PrintStream(errContent));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_userNotLoggedIn_expectNotLoggedInException() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String clearDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertThrows(NotLoggedInException.class, () -\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ClearCommand clearCommand \u003d new ClearCommand(clearDay);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            clearCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_invalidDay_expectWhereGotTimeException() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String clearDay \u003d \"/hey\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ClearCommand clearCommand \u003d new ClearCommand(clearDay);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            clearCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_singleDay_emptyTimetable_expectWhereGotTimeException() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String clearDay \u003d \"/fri\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ClearCommand clearCommand \u003d new ClearCommand(clearDay);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            clearCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_allDays_emptyTimetable_expectWhereGotTimeException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String clearDay \u003d \"/all\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ClearCommand clearCommand \u003d new ClearCommand(clearDay);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        clearCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(sw);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Your timetable is empty. There is nothing to clear.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String expected \u003d sw.toString().replaceAll(\"\\r\", \"\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertEquals(expected, outContent.toString().replaceAll(\"\\r\", \"\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_successfulClearing() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String addInput \u003d \"/CS2113 Lec /Mon /0900-1200 /LT14\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String clearDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ClearCommand clearCommand \u003d new ClearCommand(clearDay);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        clearCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(sw);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Got it! I\u0027ve added the following event on mon\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"CS2113 Lec LT14 0900-1200\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"I have removed this class from your mon timetable:\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"\\t1. CS2113 Lec LT14 0900-1200\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Your mon timetable has been cleared.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String expected \u003d sw.toString().replaceAll(\"\\r\", \"\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertEquals(expected, outContent.toString().replaceAll(\"\\r\", \"\"));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setErr(originalErr);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 131
    }
  },
  {
    "path": "src/test/java/seedu/command/CompareCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.exception.NotLoggedInException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "class CompareCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final PrintStream originalErr \u003d System.err;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setErr(new PrintStream(errContent));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_userNotLoggedIn_expectNotLoggedInException() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String command \u003d \"compare\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertThrows(NotLoggedInException.class, () -\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            CompareCommand compareCommand \u003d new CompareCommand(command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            compareCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_invalidIndex() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String addInput \u003d \"/CS2113 Lec /Mon /0900-1200 /LT14\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String command \u003d \"compare\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String userIndex \u003d \"x\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(userIndex.getBytes());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            CompareCommand compareCommand \u003d new CompareCommand(command);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            compareCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setErr(originalErr);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 73
    }
  },
  {
    "path": "src/test/java/seedu/command/DeleteCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.exception.NotLoggedInException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "class DeleteCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final PrintStream originalErr \u003d System.err;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setErr(new PrintStream(errContent));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_userNotLoggedIn_expectNotLoggedInException() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String deleteLesson \u003d \"/mon /1\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertThrows(NotLoggedInException.class, () -\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            DeleteCommand deleteCommand \u003d new DeleteCommand(deleteLesson);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            deleteCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_invalidDay_expectWhereGotTimeException() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String deleteLesson \u003d \"/hey /2\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            DeleteCommand deleteCommand \u003d new DeleteCommand(deleteLesson);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            deleteCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_noSuchClass_expectWhereGotTimeException() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String deleteLesson \u003d \"/fri /2\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            DeleteCommand deleteCommand \u003d new DeleteCommand(deleteLesson);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            deleteCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_invalidIndex_expectWhereGotTimeException() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String deleteLesson \u003d \"/fri /a\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            DeleteCommand deleteCommand \u003d new DeleteCommand(deleteLesson);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            deleteCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_successfulDeletion() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /LT14\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String deleteLesson \u003d \"/mon /1\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(deleteLesson);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        deleteCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(sw);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Got it! I\u0027ve added the following event on mon\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"CS2113 LT14 0900-1200\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Noted. I have removed this class from your timetable:\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"CS2113 LT14 0900-1200\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Now you have 0 class(es) for mon in the timetable.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String expected \u003d sw.toString().replaceAll(\"\\r\", \"\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertEquals(expected, outContent.toString().replaceAll(\"\\r\", \"\"));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setErr(originalErr);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 127
    }
  },
  {
    "path": "src/test/java/seedu/command/EditCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.IdenticalTimingsException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.IllogicalTimingException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.IncorrectCommandFormatException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.InvalidTimingFormatException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.NotLoggedInException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "class EditCommandTest {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private final PrintStream originalErr \u003d System.err;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.setErr(new PrintStream(errContent));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_userNotLoggedIn_expectNotLoggedInException() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(NotLoggedInException.class, () -\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_newAndOldTimingsAreSame_expectIdenticalTimingsException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/1 /0900-1200\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(IdenticalTimingsException.class, () -\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_dayWithoutSlash_expectIncorrectCommandFormatException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"mon\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/1 /0900-1100\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_invalidEditFormat_expectIncorrectCommandFormatException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon /1 /0900-1100\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/1 /0900-1100\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_timingsAreSeparated_expectIncorrectCommandFormatException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/1 /0900 /1100\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(IncorrectCommandFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_timingsWithoutSlash_expectIncorrectCommandFormatException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/1 0900-1100\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(IncorrectCommandFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_indexSlashInWrongPos_expectIncorrectCommandFormatException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"1/ /0900-1100\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(IncorrectCommandFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_indexWithoutSlash_expectIncorrectCommandFormatException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"1 /0900-1100\";"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(IncorrectCommandFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_indexWithMultipleSlashes_expectIncorrectCommandFormatException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"//1 /0900-1100\";"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(IncorrectCommandFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_indexOutOfBound_expectInvalidIndexException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/2 /0900-1100\";"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(InvalidIndexException.class, () -\u003e {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_timingIsBeyondFourDigits_expectInvalidTimingFormatException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/2 /090000-110000\";"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(InvalidTimingFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_startHourIsGreaterThan23_expectInvalidTimingFormatException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/1 /2600-1300\";"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(InvalidTimingFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_startMinuteIsGreaterThan59_expectInvalidTimingFormatException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/1 /0899-1300\";"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(InvalidTimingFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_endHourIsGreaterThan23_expectInvalidTimingFormatException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/1 /0800-7800\";"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(InvalidTimingFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_endMinuteIsGreaterThan59_expectInvalidTimingFormatException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/1 /0800-1261\";"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(InvalidTimingFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_timingIsNotInOneHourBlock_expectInvalidTimingFormatException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/1 /0830-1223\";"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(InvalidTimingFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_identicalStartAndEndTimings_expectIllogicalTimingException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/1 /0800-0800\";"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(IllogicalTimingException.class, () -\u003e {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_startTimeIsLaterThanEndTime_expectIllogicalTimingException() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/1 /1000-0800\";"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(IllogicalTimingException.class, () -\u003e {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.setIn(in);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        });"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_normalEdit() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/1 /0900-1300\";"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(sw);"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"Got it! I\u0027ve added the following event on mon\");"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"CS2113 NUS 0900-1200\");"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"Hey devtest, here are the lessons in your mon timetable, sorted from the earliest class.\");"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"    1. CS2113 NUS 0900-1200\");"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println();"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"To edit, enter:\");"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"/(index) /(newStartTime-newEndTime)\");"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"Got it! I have edited the lesson as follows:\");"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"ORIGINAL    : CS2113 NUS 0900-1200\");"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"EDITED      : CS2113 NUS 0900-1300\");"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String expected \u003d sw.toString().replaceAll(\"\\r\", \"\");"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertEquals(expected, outContent.toString().replaceAll(\"\\r\", \"\"));"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_advancedEdit() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addLessonOne \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addLessonTwo \u003d \"/CS2040C /Mon /1300-1500 /LT34\";"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addLessonThree \u003d \"/CS3230 /Mon /1600-1800 /COM1\";"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommandOne \u003d new AddCommand(addLessonOne);"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommandTwo \u003d new AddCommand(addLessonTwo);"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommandThree \u003d new AddCommand(addLessonThree);"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommandOne.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommandTwo.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommandThree.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/2 /1300-1600\";"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(sw);"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"Got it! I\u0027ve added the following event on mon\");"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"CS2113 NUS 0900-1200\");"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"Got it! I\u0027ve added the following event on mon\");"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"CS2040C LT34 1300-1500\");"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"Got it! I\u0027ve added the following event on mon\");"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"CS3230 COM1 1600-1800\");"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"Hey devtest, here are the lessons in your mon timetable, sorted from the earliest class.\");"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"    1. CS2113 NUS 0900-1200\");"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"    2. CS2040C LT34 1300-1500\");"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"    3. CS3230 COM1 1600-1800\");"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println();"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"To edit, enter:\");"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"/(index) /(newStartTime-newEndTime)\");"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"Got it! I have edited the lesson as follows:\");"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"ORIGINAL    : CS2040C LT34 1300-1500\");"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"EDITED      : CS2040C LT34 1300-1600\");"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String expected \u003d sw.toString().replaceAll(\"\\r\", \"\");"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertEquals(expected, outContent.toString().replaceAll(\"\\r\", \"\"));"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void execute_noClassToEdit() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String addInput \u003d \"/CS2113 /Mon /0900-1200 /NUS\";"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editDay \u003d \"/fri\";"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String editTime \u003d \"/1 /0900-1300\";"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(editDay);"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(editTime.getBytes());"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        editCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(sw);"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"Got it! I\u0027ve added the following event on mon\");"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"CS2113 NUS 0900-1200\");"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        pw.println(\"Hey devtest, there is no class in your fri timetable!\");"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String expected \u003d sw.toString().replaceAll(\"\\r\", \"\");"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertEquals(expected, outContent.toString().replaceAll(\"\\r\", \"\"));"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.setErr(originalErr);"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 570
    }
  },
  {
    "path": "src/test/java/seedu/command/FindCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.exception.NotLoggedInException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "class FindCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final PrintStream originalErr \u003d System.err;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setErr(new PrintStream(errContent));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_userNotLoggedIn_expectNotLoggedInException() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String findClasses \u003d \"/Lec\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertThrows(NotLoggedInException.class, () -\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            FindCommand findCommand \u003d new FindCommand(findClasses);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            findCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_noClassesFound() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String findClasses \u003d \"/Lec\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        FindCommand findCommand \u003d new FindCommand(findClasses);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        findCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(sw);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"None of your classes contain the keyword \\\"Lec\\\".\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String expected \u003d sw.toString().replaceAll(\"\\r\", \"\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertEquals(expected, outContent.toString().replaceAll(\"\\r\", \"\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_classesFound() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String addInput \u003d \"/CS2113 Lec /Mon /0900-1200 /LT14\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String addInput2 \u003d \"/CS1231 Lec /Thu /1000-1200 /LT17\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand \u003d new AddCommand(addInput2);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String addInput3 \u003d \"/CG2027 Lec /Wed /1400-1600 /LT15\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand \u003d new AddCommand(addInput3);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String addInput4 \u003d \"/CS2113 Tut /Fri /1300-1400 /E4-04-08\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand \u003d new AddCommand(addInput4);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String addInput5 \u003d \"/CS1231 Tut /Tue /1300-1500 /E4-03-07\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand \u003d new AddCommand(addInput5);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String findClasses \u003d \"/CS2113\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        FindCommand findCommand \u003d new FindCommand(findClasses);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        findCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(sw);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Got it! I\u0027ve added the following event on mon\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"CS2113 Lec LT14 0900-1200\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Got it! I\u0027ve added the following event on thu\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"CS1231 Lec LT17 1000-1200\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Got it! I\u0027ve added the following event on wed\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"CG2027 Lec LT15 1400-1600\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Got it! I\u0027ve added the following event on fri\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"CS2113 Tut E4-04-08 1300-1400\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Got it! I\u0027ve added the following event on tue\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"CS1231 Tut E4-03-07 1300-1500\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Here are the class(es) in your timetable that matches the keyword \\\"CS2113\\\":\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"1. (Monday) CS2113 Lec LT14 0900-1200\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"2. (Friday) CS2113 Tut E4-04-08 1300-1400\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String expected \u003d sw.toString().replaceAll(\"\\r\", \"\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertEquals(expected, outContent.toString().replaceAll(\"\\r\", \"\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setErr(originalErr);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 129
    }
  },
  {
    "path": "src/test/java/seedu/command/ListCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.exception.NotLoggedInException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.io.StringWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "class ListCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private final PrintStream originalErr \u003d System.err;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setErr(new PrintStream(errContent));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_userNotLoggedIn_expectNotLoggedInException() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String listDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertThrows(NotLoggedInException.class, () -\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ListCommand listCommand \u003d new ListCommand(listDay);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            listCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_invalidDay_expectWhereGotTimeException() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String listDay \u003d \"/day\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ListCommand listCommand \u003d new ListCommand(listDay);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            listCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_noClassFound() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String listDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand(listDay);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        listCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(sw);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"There is no class in your timetable for mon!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String expected \u003d sw.toString().replaceAll(\"\\r\", \"\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertEquals(expected, outContent.toString().replaceAll(\"\\r\", \"\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_listDay() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String addInput \u003d \"/CS2113 Lec /Mon /0900-1200 /LT14\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String listDay \u003d \"/mon\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand(listDay);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        listCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(sw);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Got it! I\u0027ve added the following event on mon\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"CS2113 Lec LT14 0900-1200\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Here are the classes in your timetable for mon, sorted according to time:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"    1. CS2113 Lec LT14 0900-1200\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String expected \u003d sw.toString().replaceAll(\"\\r\", \"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertEquals(expected, outContent.toString().replaceAll(\"\\r\", \"\"));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    void execute_listAll() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        User nowUser \u003d new User(\"devtest\", \"123123\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        users.addUser(nowUser);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String addInput \u003d \"/CS2113 Lec /Thu /0900-1200 /LT14\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Command addCommand \u003d new AddCommand(addInput);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String addInput3 \u003d \"/CG2027 Lec /Wed /1400-1600 /LT15\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand \u003d new AddCommand(addInput3);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        addCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String listDay \u003d \"/all\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand(listDay);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        listCommand.execute(users, ui, nowUser);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        StringWriter sw \u003d new StringWriter();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(sw);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Got it! I\u0027ve added the following event on thu\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"CS2113 Lec LT14 0900-1200\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Got it! I\u0027ve added the following event on wed\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"CG2027 Lec LT15 1400-1600\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"There is no class in your timetable for mon!\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"There is no class in your timetable for tue!\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Here are the classes in your timetable for wed, sorted according to time:\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"    1. CG2027 Lec LT15 1400-1600\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"Here are the classes in your timetable for thu, sorted according to time:\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"    1. CS2113 Lec LT14 0900-1200\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"There is no class in your timetable for fri!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"There is no class in your timetable for sat!\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.println(\"There is no class in your timetable for sun!\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String expected \u003d sw.toString().replaceAll(\"\\r\", \"\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertEquals(expected, outContent.toString().replaceAll(\"\\r\", \"\"));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.setErr(originalErr);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 173
    }
  },
  {
    "path": "src/test/java/seedu/command/LogInCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.user.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.user.UserList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "class LogInCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void execute_executesProperly() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User nowUser \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        LogInCommand login \u003d new LogInCommand(\"/man /123123\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        login.execute(users,ui,nowUser);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        nowUser \u003d login.getCurrentUser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"man\", nowUser.getName());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void execute_executesProperlyReturningUser() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user1 \u003d new User(\"Alex\",\"123123\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user2 \u003d new User(\"Ben\",\"321321\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user3 \u003d new User(\"Carl\",\"456456\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user3);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User nowUser \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        LogInCommand login \u003d new LogInCommand(\"/Carl /456456\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        login.execute(users,ui,nowUser);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        nowUser \u003d login.getCurrentUser();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"Carl\", nowUser.getName());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 53
    }
  },
  {
    "path": "src/test/java/seedu/parser/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.ClearCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.command.CompareCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.EditCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.command.HelpCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.command.LogInCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.command.RemoveUserCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_unknownCommand_throwDukeException() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"hello, testing\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertThrows(WhereGotTimeException.class, () -\u003e Parser.parse(input));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void parse_addCommand_parsedCorrectly() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        final String input \u003d \"add /CS2113 Lecture /fri /1600-1800 /LT15\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, AddCommand.class);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void parse_byeCommand_parsedCorrectly() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"bye\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, ByeCommand.class);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void parse_clearCommand_parsedCorrectly() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"clear /sun\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, ClearCommand.class);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void parse_compareCommand_parsedCorrectly() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"compare /Alex /mon\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, CompareCommand.class);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void parse_deleteCommand_parsedCorrectly() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"delete /tue /2\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, DeleteCommand.class);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void parse_editCommand_parsedCorrectly() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"edit /mon /2 /1000-1200\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, EditCommand.class);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void parse_findCommand_parsedCorrectly() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"find /CS2113\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, FindCommand.class);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_helpCommand_parsedCorrectly() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"help\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, HelpCommand.class);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void parse_listCommand_parsedCorrectly() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"list /all\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, ListCommand.class);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void parse_loginCommand_parsedCorrectly() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        final String input \u003d \"login /John /132456\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, LogInCommand.class);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void parse_removeCommand_parsedCorrectly() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        final String input \u003d \"remove /John /132456\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        parseAndAssertCommandType(input, RemoveUserCommand.class);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void parse_loginCommand_testExpectedException_noDescription() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Parser.parse(\"login\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void parse_loginCommand_testExpectedException_noDescriptionSlash() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Parser.parse(\"login man /123123\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void parse_loginCommand_testExpectedException_emptyUsername() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Parser.parse(\"login /     /123123\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void parse_loginCommand_testExpectedException_emptyPassword() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Parser.parse(\"login /man /\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void parse_loginCommand_testExpectedException_wrongLengthPassword() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Parser.parse(\"login /man /123\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void parse_loginCommand_testExpectedException_invalidUsername() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Parser.parse(\"login /ke$ha /123123\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void parse_loginCommand_testExpectedException_not6NumbersPassword() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Parser.parse(\"login /man /123abc\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_clearCommand_noDescription() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"clear\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_clearCommand_noSlash() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"clear tue\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_clearCommand_extraDescription() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"clear d/mon\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_clearCommand_missingDay() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"clear /\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_listCommand_noDescription() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"list\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_listCommand_noSlash() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"list mon\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_listCommand_extraDescription() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"list all /mon\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_listCommand_missingDay() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"list /\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_deleteCommand_noDescription() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"delete\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_deleteCommand_noSlash() {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"delete mon\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_deleteCommand_extraDescription() {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"delete xy /mon /1\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_deleteCommand_missingDay() {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"delete / /1\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_deleteCommand_missingIndex() {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"delete /mon /\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_deleteCommand_missingSlash() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"delete /mon\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_findCommand_noDescription() {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"find\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_findCommand_noSlash() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"find Lec\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_findCommand_extraDescription() {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"find lec /CS2113\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_findCommand_missingKeyword() {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            Parser.parse(\"find /\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void parse_removeCommand_testExpectedException_noDescription() {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Parser.parse(\"remove\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void parse_removeCommand_testExpectedException_noDescriptionSlash() {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Parser.parse(\"remove man /123123\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void parse_removeCommand_testExpectedException_emptyUsername() {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Parser.parse(\"remove /     /123123\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void parse_removeCommand_testExpectedException_emptyPassword() {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Parser.parse(\"remove /man /\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void parse_removeCommand_testExpectedException_wrongLengthPassword() {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Parser.parse(\"remove /man /123\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void parse_removeCommand_testExpectedException_invalidUsername() {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Parser.parse(\"remove /ke$ha /123123\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void parse_removeCommand_testExpectedException_not6NumbersPassword() {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            Parser.parse(\"remove /man /123abc\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Parses input and asserts the class/type of the returned command object."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param input to be parsed"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param expectedCommandClass expected class of returned command"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private \u003cT extends Command\u003e void parseAndAssertCommandType(String input, Class\u003cT\u003e expectedCommandClass)"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throws WhereGotTimeException {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final Command result \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 21,
      "tammykoh": 200,
      "manuelmanuntag96": 109,
      "weisiong24": 1
    }
  },
  {
    "path": "src/test/java/seedu/user/CryptographyTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "class CryptographyTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void encipherPassword_converts_String_to_cipherText_Properly() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String password \u003d \"123456\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"561278\", Cryptography.encipherPassword(password));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void encipherPassword_converts_maxString_to_cipherText_Properly() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String password \u003d \"999999\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"777777\", Cryptography.encipherPassword(password));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void encipherPassword_converts_minString_to_cipherText_Properly() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String password \u003d \"000000\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"000000\", Cryptography.encipherPassword(password));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void decipherPassword_converts_String_to_plainText_Properly() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String password \u003d \"561278\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"123456\", Cryptography.decipherPassword(password));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void decipherPassword_converts_maxString_to_plainText_Properly() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String password \u003d \"777777\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"999999\", Cryptography.decipherPassword(password));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void decipherPassword_converts_minString_to_plainText_Properly() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String password \u003d \"000000\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"000000\", Cryptography.encipherPassword(password));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 1,
      "manuelmanuntag96": 50
    }
  },
  {
    "path": "src/test/java/seedu/user/UserListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.exception.WhereGotTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "class UserListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void addUser_addsProperly() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user \u003d new User(\"man\",\"123123\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(1, users.getTotalUserCount());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void getUser_getsProperly() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user1 \u003d new User(\"Alex\",\"123123\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user2 \u003d new User(\"Ben\",\"321321\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user3 \u003d new User(\"Carl\",\"456456\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user3);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"Alex\", users.getUser(1).getName());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void getUser_testExpectedException_invalidIndex() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user1 \u003d new User(\"Alex\",\"123123\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user2 \u003d new User(\"Ben\",\"321321\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user3 \u003d new User(\"Carl\",\"456456\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user3);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            users.getUser(4);;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void getUserByName_getsProperly() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user \u003d new User(\"man\",\"123123\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertEquals(\"123123\", (users.getUserByName(\"man\").password));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void getUserByName_noMatch_returnsNull() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user \u003d new User(\"man\",\"123123\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertNull((users.getUserByName(\"girl\")));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void removeUser_removesCorrectly() throws WhereGotTimeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user1 \u003d new User(\"Alex\",\"123123\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user2 \u003d new User(\"Ben\",\"321321\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user3 \u003d new User(\"Carl\",\"456456\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user2);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user3);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.removeUser(\"Carl\", \"456456\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(2, users.getTotalUserCount());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void removeUser_testExpectedException_noMatchUserName() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user1 \u003d new User(\"Alex\",\"123123\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user2 \u003d new User(\"Ben\",\"321321\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user3 \u003d new User(\"Carl\",\"456456\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user2);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user3);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            users.removeUser(\"Eric\", \"456456\");;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void removeUser_testExpectedException_wrongPassWord() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user1 \u003d new User(\"Alex\",\"123123\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user2 \u003d new User(\"Ben\",\"321321\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user3 \u003d new User(\"Carl\",\"456456\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user2);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user3);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            users.removeUser(\"Carl\", \"987987\");;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void removeUser_testExpectedException_emptyUserList() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        Assertions.assertThrows(WhereGotTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            users.removeUser(\"Carl\", \"987987\");;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 2,
      "manuelmanuntag96": 122
    }
  },
  {
    "path": "src/test/java/seedu/user/UserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "class UserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void getEncipheredPassword() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User test \u003d new User(\"John\",\"123456\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"561278\", test.getEncipheredPassword());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 1,
      "manuelmanuntag96": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "login /Alex /123123"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "help"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CS2113 Lec /Mon /1200-1300 /LT21"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "aDd /CS3243 Lec /moN /1400-1500 /LT22"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "aDD /CS2040C Tut /MON /0800-1000 /COM1-2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CG2028 Tut /Thu /0900-1100 /E4-4-1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CG2023 Lec /Fri /1700-1800 /E7-3-10"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "list /all"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "list /mon"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "list /all"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "list /mon"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "login /Tammy /321321"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CS2113 Lec /mon /1200-1300 /LT21"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CS2040C Tut /mon /0800-1000 /COM1-2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CG2028 Tut /Thu /0900-1100 /E4-4-1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "list /mon"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "login /Alex /123123"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "delete /mon /2"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "clear /fri"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CS3230 Lab /Wed /1100-1400 /COM1-2-21"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CS3230 Lec /Wed /1300-1500 /LT43"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "list /all"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 20,
      "manuelmanuntag96": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew clean shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "cd ..\\..\\text-ui-test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 1,
      "-": 18
    }
  }
]
