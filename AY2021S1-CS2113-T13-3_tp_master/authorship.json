[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 1,
      "-": 46
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yeap Chun Lik | [Github](https://github.com/yeapcl) | [Portfolio](docs/team/yeapcl.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | wei siong| [Github](https://github.com/weisiong24) | [Portfolio](docs/team/weisiong.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tammy Koh | [Github](https://github.com/tammykoh) | [Portfolio](docs/team/tammykoh.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Manuntag Manuel II Papa | [Github](https://github.com/manuelmanuntag96) | [Portfolio](docs/team/manuelmanuntag.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Huang Shaohang | [Github](https://github.com/yellow-fellow) | [Portfolio](docs/team/yellow-fellow.md)"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 1,
      "tammykoh": 1,
      "manuelmanuntag96": 1,
      "yellow-fellow": 1,
      "-": 4,
      "weisiong24": 1
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Design \u0026 implementation"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "login function\u003cbr/\u003e "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Add Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Class Diagram of the add function:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "![](team/uml.PNG)\u003cbr/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "The add function gets the inputs from the User and places it to the event class so that "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "it can parser to string."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "It will then pass the data onto UI class to inform user of the event added "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "to the timetable. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "As shown,the AddCommand also pass the parameters (event name,day,time"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "and location) so that it can be placed accordingly to the corresponding day of the timetable\u003cbr/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "To ensure that the users do not enter duplicate event that has the same timing, "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "a parser check of the command can be implemented into the ver 2.0 of WhereGotTime."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Below is the proposed class diagram after adding this improvement into the application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Edit Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Delete Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Clear Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Display Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Compare Function\u003cbr/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "## Product scope"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "Our Application, WhereGotTime is developed for University students."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "It was developed to solve the inconvenience students face when accessing timetables and lecture venues and"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weisiong24"
        },
        "content": " to keep track of their timetable."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "It is also developed to assist in finding common available time slots for students to study with their peers."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "## User Stories"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v1.0|new user|login to my own timetable|be sure that it is my own timetable that is shown there|"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v1.0|new user|add events into my timetable for the day|refer to the timetable to remind me of the event|"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v1.0|new user|edit events that I have entered into my timetable for the day|easily change the details as I need it|"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v1.0|new user|delete events in my timetable for the day|remove an event in the timetable that I do not wish to keep|"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v1.0|new user|clear my timetable for the day|so that I can remove all the entries I have entered wrongly|"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v1.0|new user|compare my timetable with my friends|schedule a common time for revision together|"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list| example only"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "## Non-Functional Requirements"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "{Give non-functional requirements}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "## Glossary"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "* *glossary item* - Definition"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "## Instructions for manual testing"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "login Alex /123\u003cbr/\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CS2113 Lec /mon /1200-1300 /LT21\u003cbr/\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CS3243 Lec /mon /1400-1500 /LT22\u003cbr/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CS2040C Tut /mon /0800-1000 /COM1-2\u003cbr/\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CG2028 Tut /Thu /0900-1100 /E4-4-1\u003cbr/\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CG2023 Lec /Fri /1700-1800 /E7-3-10\u003cbr/\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "list /all\u003cbr/\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "list /mon\u003cbr/\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "edit /mon /3 /1300-1400\u003cbr/\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "edit /fri /1 /0900-1100\u003cbr/\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "list /all\u003cbr/\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "list /mon\u003cbr/\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "login Tammy /321\u003cbr/\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CS2113 Lec /mon /1200-1300 /LT21\u003cbr/\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CS2040C Tut /mon /0800-1000 /COM1-2\u003cbr/\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "add /CG2028 Tut /Thu /0900-1100 /E4-4-1\u003cbr/\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "compare /Alex /mon\u003cbr/\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "list /mon\u003cbr/\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "edit /mon /2 /1000-1200\u003cbr/\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "compare /Alex /mon\u003cbr/\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "login Alex /123\u003cbr/\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "delete /mon /2\u003cbr/\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "clear /fri\u003cbr/\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "bye\u003cbr/\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 28,
      "weisiong24": 61
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "# WhereGotTime"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "An useful timetable app where you can enter events and compare timetable to find common timeslot between you and your peers."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "-": 6,
      "weisiong24": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import seedu.duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import seedu.duke.command.LogInCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.user.User;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.user.UserList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private UserList users;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            users \u003d new UserList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            storage \u003d new Storage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            storage.load(users);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            users \u003d new UserList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        User nowUser \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                c.execute(users, ui, nowUser/*, storage*/);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                storage.write(users);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                if (c.isLogIn()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    nowUser \u003d c.getCurrentUser();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    //System.out.println(nowUser.getName() + users.getTotalUserCount());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                //System.out.println(nowUser.getName());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /*    public static void main(String[] args) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"What is your name?\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello \" + in.nextLine());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 46,
      "manuelmanuntag96": 10,
      "-": 18,
      "weisiong24": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "//import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import seedu.duke.user.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import seedu.duke.user.UserList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weisiong24"
        },
        "content": " * Adds an event to the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weisiong24"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public AddCommand(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"LogLogInCommand\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser/*, Storage storage*/) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        /*/Lec /day /time /location*/"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        setupInputLogger();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        if (nowUser !\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            String[] parsedInputs \u003d input.split(\"/\", 5);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            String[] timeInputs \u003d parsedInputs[3].split(\"-\", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            String day \u003d parsedInputs[2].toLowerCase().trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            assert timeInputs[0].length() \u003d\u003d 4 : \"Wrong Start time format specified\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            assert day.length() \u003d\u003d 3 : \"Wrong format of day entered\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            logger.log(Level.INFO,\"Timetable name successfully added:  \" + parsedInputs[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            logger.log(Level.INFO,\"Day successfully add:  \" + parsedInputs[2]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            logger.log(Level.INFO,\"Time successfully add:  \" + parsedInputs[3]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            logger.log(Level.INFO,\"Location successfully add:  \" + parsedInputs[4] + \"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            for (int i \u003d 0; i \u003c users.getTotalUserCount(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                if ((users.getUser(i + 1).getName().equals(nowUser.getName()))) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    Event newEvent \u003d new Event(parsedInputs[1].trim(), parsedInputs[4].trim(),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                            timeInputs[0].trim(), timeInputs[1].trim());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    ArrayList\u003cEvent\u003e timetable \u003d users.getUser(i + 1).getTimetable().getTimetable(day);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    timetable.add(newEvent);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    switch (day) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    case \"mon\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        ArrayList\u003cEvent\u003e mon \u003d users.getUser(i + 1).getTimetable().monTimetable;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        for (int j \u003d 0; j \u003c mon.size() - 1; j++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartInt \u003d Integer.parseInt(mon.get(j).getTimeStart());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartNextInt \u003d Integer.parseInt(mon.get(j + 1).getTimeStart());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndInt \u003d Integer.parseInt(mon.get(j).getTimeEnd());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndNextInt \u003d Integer.parseInt(mon.get(j + 1).getTimeEnd());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            if (timeStartInt \u003d\u003d timeStartNextInt || timeEndInt \u003d\u003d timeEndNextInt"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 100 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 200 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 300 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 400 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 500 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                mon.remove(j + 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                throw new DukeException(\"Duplicate Timetable Detected! Please re-enter\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    case \"tue\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        ArrayList\u003cEvent\u003e tue \u003d users.getUser(i + 1).getTimetable().tueTimetable;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        for (int j \u003d 0; j \u003c tue.size() - 1; j++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartInt \u003d Integer.parseInt(tue.get(j).getTimeStart());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartNextInt \u003d Integer.parseInt(tue.get(j + 1).getTimeStart());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndInt \u003d Integer.parseInt(tue.get(j).getTimeEnd());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndNextInt \u003d Integer.parseInt(tue.get(j + 1).getTimeEnd());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            if (timeStartInt \u003d\u003d timeStartNextInt || timeEndInt \u003d\u003d timeEndNextInt"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 100 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 200 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 300 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 400 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 500 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                tue.remove(j + 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                throw new DukeException(\"Duplicate Timetable Detected! Please re-enter\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    case \"wed\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        ArrayList\u003cEvent\u003e wed \u003d users.getUser(i + 1).getTimetable().wedTimetable;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        for (int j \u003d 0; j \u003c wed.size() - 1; j++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartInt \u003d Integer.parseInt(wed.get(j).getTimeStart());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartNextInt \u003d Integer.parseInt(wed.get(j + 1).getTimeStart());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndInt \u003d Integer.parseInt(wed.get(j).getTimeEnd());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndNextInt \u003d Integer.parseInt(wed.get(j + 1).getTimeEnd());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            if (timeStartInt \u003d\u003d timeStartNextInt || timeEndInt \u003d\u003d timeEndNextInt"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 100 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 200 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 300 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 400 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 500 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                wed.remove(j + 1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                throw new DukeException(\"Duplicate Timetable Detected! Please re-enter\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    case \"thu\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        ArrayList\u003cEvent\u003e thu \u003d users.getUser(i + 1).getTimetable().thuTimetable;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        for (int j \u003d 0; j \u003c thu.size() - 1; j++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartInt \u003d Integer.parseInt(thu.get(j).getTimeStart());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartNextInt \u003d Integer.parseInt(thu.get(j + 1).getTimeStart());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndInt \u003d Integer.parseInt(thu.get(j).getTimeEnd());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndNextInt \u003d Integer.parseInt(thu.get(j + 1).getTimeEnd());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            if (timeStartInt \u003d\u003d timeStartNextInt || timeEndInt \u003d\u003d timeEndNextInt"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 100 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 200 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 300 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 400 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 500 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                thu.remove(j + 1);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                throw new DukeException(\"Duplicate Timetable Detected! Please re-enter\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    case \"fri\":"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        ArrayList\u003cEvent\u003e fri \u003d users.getUser(i + 1).getTimetable().friTimetable;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        for (int j \u003d 0; j \u003c fri.size() - 1; j++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartInt \u003d Integer.parseInt(fri.get(j).getTimeStart());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartNextInt \u003d Integer.parseInt(fri.get(j + 1).getTimeStart());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndInt \u003d Integer.parseInt(fri.get(j).getTimeEnd());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndNextInt \u003d Integer.parseInt(fri.get(j + 1).getTimeEnd());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            if (timeStartInt \u003d\u003d timeStartNextInt || timeEndInt \u003d\u003d timeEndNextInt"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 100 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 200 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 300 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 400 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 500 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                fri.remove(j + 1);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                throw new DukeException(\"Duplicate Timetable Detected! Please re-enter\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    case \"sat\":"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        ArrayList\u003cEvent\u003e sat \u003d users.getUser(i + 1).getTimetable().satTimetable;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        for (int j \u003d 0; j \u003c sat.size() - 1; j++) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartInt \u003d Integer.parseInt(sat.get(j).getTimeStart());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartNextInt \u003d Integer.parseInt(sat.get(j + 1).getTimeStart());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndInt \u003d Integer.parseInt(sat.get(j).getTimeEnd());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndNextInt \u003d Integer.parseInt(sat.get(j + 1).getTimeEnd());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            if (timeStartInt \u003d\u003d timeStartNextInt || timeEndInt \u003d\u003d timeEndNextInt"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 100 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 200 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 300 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 400 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 500 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                sat.remove(j + 1);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                throw new DukeException(\"Duplicate Timetable Detected! Please re-enter\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    case \"sun\":"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        ArrayList\u003cEvent\u003e sun \u003d users.getUser(i + 1).getTimetable().sunTimetable;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        for (int j \u003d 0; j \u003c sun.size() - 1; j++) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartInt \u003d Integer.parseInt(sun.get(j).getTimeStart());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeStartNextInt \u003d Integer.parseInt(sun.get(j + 1).getTimeStart());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndInt \u003d Integer.parseInt(sun.get(j).getTimeEnd());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            int timeEndNextInt \u003d Integer.parseInt(sun.get(j + 1).getTimeEnd());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            if (timeStartInt \u003d\u003d timeStartNextInt || timeEndInt \u003d\u003d timeEndNextInt"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 100 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 200 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 300 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 400 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                    || (timeStartInt + 500 \u003d\u003d timeStartNextInt \u0026\u0026 timeEndInt \u003e timeStartNextInt)) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                sun.remove(j + 1);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                                throw new DukeException(\"Duplicate Timetable Detected! Please re-enter\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    ui.printEvent(newEvent, day);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                    logger.log(Level.INFO, day + \" timetable successfully add:  \" + timetable  + \"\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "                }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            //((Timetable) currentUser.getTimetable())"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            //tasks.addTask(newTask);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            //ui.printEvent(newEvent, date);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            //storage.write(tasks);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            logger.log(Level.WARNING,\"Not logged in\" + \"\\n\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            throw new DukeException(\"Sorry! You are not Logged in to any account :-(\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    private void setupInputLogger() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        LogManager.getLogManager().reset();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        logger.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            FileHandler fh \u003d new FileHandler(\"AddCommand.log\",true);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            fh.setLevel(Level.INFO);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            fh.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            logger.addHandler(fh);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            logger.log(Level.SEVERE,\"File logging not working\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 7,
      "manuelmanuntag96": 1,
      "weisiong24": 206
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ByeCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import seedu.duke.user.User;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.user.UserList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Terminates Duke program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //@Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser/*, Storage storage*/) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 18,
      "manuelmanuntag96": 2,
      "weisiong24": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ClearCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.user.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.user.UserList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " * Clear timetable of user on a particular day."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public ClearCommand(String information) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        super(information);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser/*, Storage storage*/) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (nowUser \u003d\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new DukeException(\"Sorry! You are not Logged in to any account :-(\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String[] parsedInputs \u003d input.split(\"/\", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String day \u003d parsedInputs[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (int i \u003d 0; i \u003c users.getTotalUserCount(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if ((users.getUser(i + 1).getName() \u003d\u003d nowUser.getName())) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                ArrayList\u003cEvent\u003e timetable \u003d (users.getUser(i + 1).getTimetable()).getTimetable(day);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                if (!timetable.isEmpty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    ArrayList\u003cObject\u003e deletedTimetable \u003d new ArrayList\u003c\u003e(timetable);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    timetable.clear();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    ui.printClear(deletedTimetable, day);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    throw new DukeException(\"There is no class in your timetable for \" + day + \"!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.user.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.user.UserList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    protected User currentUser \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    protected boolean isLogIn \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Creates a new command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param input the command given by the user in string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Command(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Executes the Command based on the TaskList, Ui and Storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * @param users the UserList given to execute command on."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param ui the corresponding messages based on the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws DukeException if execution encounters error."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public abstract void execute(UserList users, Ui ui, User nowUser) throws DukeException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public User getCurrentUser() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return currentUser;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public boolean isLogIn() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        return isLogIn;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 32,
      "manuelmanuntag96": 7,
      "weisiong24": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/CompareCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "import seedu.duke.user.User;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "import seedu.duke.user.UserList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "public class CompareCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    public CompareCommand(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        ArrayList\u003cInteger\u003e outputArray \u003d new ArrayList\u003c\u003e(Arrays.asList(0,1,2,3,4,5,6,7,8,9,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                10,11,12,13,14,15,16,17,18,19,20,21,22,23));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        if (nowUser !\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            String[] parsedInputs \u003d input.split(\" /\", 3);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            String targetName \u003d parsedInputs[0].substring(1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            String date \u003d parsedInputs[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            ArrayList\u003cEvent\u003e nowUserTimetable;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            ArrayList\u003cEvent\u003e targetUserTimetable;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            User targetUser \u003d users.getUserByName(targetName);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            if (targetUser \u003d\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                throw new DukeException(\"No such user!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            switch (date) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            case \"mon\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                nowUserTimetable \u003d nowUser.getTimetable().getTimetable(\"mon\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                targetUserTimetable \u003d targetUser.getTimetable().getTimetable(\"mon\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            case \"tue\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                nowUserTimetable \u003d nowUser.getTimetable().getTimetable(\"tue\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                targetUserTimetable \u003d targetUser.getTimetable().getTimetable(\"tue\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            case \"wed\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                nowUserTimetable \u003d nowUser.getTimetable().getTimetable(\"wed\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                targetUserTimetable \u003d targetUser.getTimetable().getTimetable(\"wed\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            case \"thu\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                nowUserTimetable \u003d nowUser.getTimetable().getTimetable(\"thu\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                targetUserTimetable \u003d targetUser.getTimetable().getTimetable(\"thu\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            case \"fri\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                nowUserTimetable \u003d nowUser.getTimetable().getTimetable(\"fri\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                targetUserTimetable \u003d targetUser.getTimetable().getTimetable(\"fri\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            case \"sat\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                nowUserTimetable \u003d nowUser.getTimetable().getTimetable(\"sat\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                targetUserTimetable \u003d targetUser.getTimetable().getTimetable(\"sat\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            case \"sun\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                nowUserTimetable \u003d nowUser.getTimetable().getTimetable(\"sun\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                targetUserTimetable \u003d targetUser.getTimetable().getTimetable(\"sun\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                throw new DukeException(\"Sorry! I don\u0027t know what day you mean :-(\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "             * Compare targetUser and nowUser Timetables (ArrayList\u003cObject\u003e)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "             * Assuming for each day of the week, timetable ArrayList\u003cObject\u003e contains only [0:23] timeslots"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "             * Loop below returns an outputArray that holds the common available hours in that day"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "             */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            for (Event event : nowUserTimetable) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                int tempX \u003d (Integer.parseInt(event.getTimeStart().substring(0, 2)));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                int tempY \u003d (Integer.parseInt(event.getTimeEnd().substring(0, 2)));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                for (int i \u003d tempX; i \u003c tempY; i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    outputArray.remove(Integer.valueOf(i));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            for (Event event : targetUserTimetable) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                int tempX \u003d (Integer.parseInt(event.getTimeStart().substring(0, 2)));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                int tempY \u003d (Integer.parseInt(event.getTimeEnd().substring(0, 2)));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                for (int i \u003d tempX; i \u003c tempY; i++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    outputArray.remove(Integer.valueOf(i));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            ui.printCompare(outputArray);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 5,
      "yellow-fellow": 92
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeadlineCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "///**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "// * Adds a deadline to the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "// */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    public DeadlineCommand(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        super(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        String[] parsedInputs \u003d input.split(\" /by \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        Deadline newTask \u003d new Deadline(parsedInputs[0], parsedInputs[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        ui.printDeadline(tasks, newTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        storage.write(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.user.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.user.UserList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Deletes a task from the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public DeleteCommand(String information) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        super(information);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser/*, Storage storage*/) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (nowUser \u003d\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new DukeException(\"Sorry! You are not logged in to any account :-(\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String[] parsedInputs \u003d input.split(\"/\", 3);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String day \u003d parsedInputs[1].trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            index \u003d Integer.parseInt(parsedInputs[2]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            for (int i \u003d 0; i \u003c users.getTotalUserCount(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                if ((users.getUser(i + 1).getName() \u003d\u003d nowUser.getName())) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    ArrayList\u003cEvent\u003e timetable \u003d (users.getUser(i + 1).getTimetable()).getTimetable(day);;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    String removedClass \u003d timetable.get(index - 1).toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    timetable.remove(index - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    ui.printDelete(removedClass, day, timetable.size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new DukeException(\"You\u0027ve entered an invalid index!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new DukeException(\"You\u0027ve entered an invalid index!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 7,
      "tammykoh": 40,
      "manuelmanuntag96": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DoneCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "///**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "// * Marks a task in the task list as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "// */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    public DoneCommand(String information) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        super(information);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        int index \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        Task completedTask \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        if (!completedTask.isDone()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//            completedTask.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//            throw new DukeException(\"That task was already done!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        ui.printDone(completedTask);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        storage.write(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/EditCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.user.User;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.user.UserList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public EditCommand(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser/*, Storage storage*/) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String[] parsedInputs \u003d input.split(\"/\", 4);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assert parsedInputs.length \u003d\u003d 4 : \"input format is not according to UG\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String date \u003d parsedInputs[1].trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String[] newTime \u003d parsedInputs[3].split(\"-\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assert newTime.length \u003d\u003d 2 : \"date format is not according to UG\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int index \u003d Integer.parseInt(parsedInputs[2].trim());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Event originalEvent;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (int i \u003d 0; i \u003c users.getTotalUserCount(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            if ((users.getUser(i + 1).getName().equals(nowUser.getName()))) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                originalEvent \u003d nowUser.getTimetable().getTimetable(date).get(index - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                Event modifiedEvent \u003d new Event(originalEvent.getDescription(), "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        originalEvent.getLocation(), newTime[0], newTime[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                nowUser.getTimetable().getTimetable(date).set(index - 1, modifiedEvent);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                ui.printEdit(newTime, date, index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/EventCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "////import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "///**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "// * Adds an event to the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "// */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//public class EventCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    public EventCommand(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        super(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    public void execute(TaskList tasks, Ui ui/*, Storage storage*/) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        String[] parsedInputs \u003d input.split(\" /at \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        Event newTask \u003d new Event(parsedInputs[0], parsedInputs[1]); //"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        ui.printEvent(tasks, newTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "////        storage.write(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Finds task(s) in task list that matches the keyword."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        //super(keyword);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //@Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //public void execute(TaskList tasks, Ui ui/*, Storage storage*/) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        //TaskList tasksFound \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        //for (Task t : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            //if (t.getDescription().contains(input)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                //tasksFound.addTask(t);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            //}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        //}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        //ui.printFind(tasksFound, input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 7,
      "manuelmanuntag96": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "//import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.user.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.user.UserList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Prints a list of all tasks to the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public ListCommand(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser/*, Storage storage*/) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String day \u003d input.substring(1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (day.equals(\"all\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, nowUser, \"mon\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, nowUser, \"tue\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, nowUser, \"wed\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, nowUser, \"thu\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, nowUser, \"fri\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, nowUser, \"sat\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, nowUser, \"sun\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            ui.printList(users, nowUser, day);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 7,
      "tammykoh": 34,
      "manuelmanuntag96": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/LogInCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.user.User;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.user.UserList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " * Adds an event to the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class LogInCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public LogInCommand(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"LogAddCommand\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser/*, Storage storage*/) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        boolean doesExist \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        setupInputLogger();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String[] parsedInputs \u003d input.split(\" /\", 2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assert parsedInputs.length \u003d\u003d 2 : \"Username or Password is missing\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d users.getTotalUserCount(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if (parsedInputs[0].equals((users.getUser(i)).getName())) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                if (parsedInputs[1].equals((users.getUser(i)).getPassWord())) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    currentUser \u003d users.getUser(i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    //System.out.println(parsedInputs[0] + \" \u003d\u003d \" + (users.getUser(i)).getName());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    doesExist \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    logger.log(Level.WARNING,\"Wrong Password\" + \"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    throw new DukeException(\"Wrong Password\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        if (doesExist \u003d\u003d false) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            //System.out.println(\"User: \" + parsedInputs[0] + \" does not exist!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            User newUser \u003d new User(parsedInputs[0], parsedInputs[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            currentUser \u003d newUser;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            users.addUser(newUser);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            logger.log(Level.INFO,\"User Name successfully added:  \" + parsedInputs[0]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            logger.log(Level.INFO,\"Password successfully added:  \" + parsedInputs[1]  + \"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        ui.greetUser(currentUser);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        isLogIn \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assert isLogIn() \u003d\u003d true : \"Username or Password is missing\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        logger.log(Level.INFO, \"end of processing\"  + \"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        //storage.write(tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private void setupInputLogger() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        LogManager.getLogManager().reset();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        logger.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            FileHandler fh \u003d new FileHandler(\"LogInCommand.log\",true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            fh.setLevel(Level.INFO);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            fh.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            logger.addHandler(fh);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            logger.log(Level.SEVERE,\"File logging not working\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 78,
      "weisiong24": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/TestCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.timetable.Timetable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.user.User;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.user.UserList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import javax.sound.midi.SysexMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.sql.Array;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.sql.Time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class TestCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public TestCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    String[] days \u003d {\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\"};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void execute(UserList users, Ui ui, User nowUser/*, Storage storage*/) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(System.lineSeparator() + \"Starting developer test:\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "       "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String currentUserName \u003d nowUser.getName();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"currentUserName: \" + currentUserName);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String currentUserPW \u003d nowUser.getPassWord();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"currentUserPW: \" + currentUserPW + \"\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"All user names:\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (int i \u003d 0; i \u003c users.getTotalUserCount(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(users.getUser(i + 1).getName());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"\\nAdded the following devtest dummy account (ID,PW): \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                + \"devtest, devpassword\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        User newUser \u003d new User(\"devtest\", \"devpassword\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        users.addUser(newUser);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"\\nPrint each user\u0027s timetable information:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (User k : users.getUserList()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            ArrayList\u003cArrayList\u003cEvent\u003e\u003e allTimeTable \u003d k.combineAllTimetable();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println((k.getName() + \" | \" + k.getPassWord()));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            printAllTimeTable(allTimeTable);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"###\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Storage s \u003d new Storage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        s.write(users);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printAllTimeTable(ArrayList\u003cArrayList\u003cEvent\u003e\u003e allTimeTable) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(days[i]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(allTimeTable.get(i));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 66
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Returns an exception error."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param message the reason for exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import seedu.duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.command.ByeCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.command.ClearCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "import seedu.duke.command.CompareCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.command.EditCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.command.TestCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.command.DoneCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.command.EventCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.command.FindCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.command.ListCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.command.LogInCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Parses the user\u0027s input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final String COMMAND_CLEAR \u003d \"clear\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //private static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //private static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //private static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //private static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private static final String COMMAND_LOGIN \u003d \"login\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    private static final String COMMAND_ADD \u003d \"add\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String COMMAND_EDIT \u003d \"edit\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    private static final String COMMAND_COMPARE \u003d \"compare\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String COMMAND_TEST \u003d \"devtest\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static final int MAX_PASSWORD_LENGTH \u003d 6;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Returns a Command object based on user\u0027s string input."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param input user\u0027s string input."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @return a new Command object based on user\u0027s input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws DukeException if user\u0027s input does not match any of the command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String[] parsedInputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        switch (parsedInputs[0]) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case COMMAND_CLEAR:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            checkClearValidity(parsedInputs);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            return new ClearCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        /*case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            checkDeadlineValidity(parsedInputs);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            return new DeadlineCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        case COMMAND_EVENT:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            checkEventValidity(parsedInputs);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            return new EventCommand(parsedInputs[1]);*/"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            checkListValidity(parsedInputs);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            return new ListCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        /*case COMMAND_DONE:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            checkTaskIndexValidity(parsedInputs);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            return new DoneCommand(parsedInputs[1]);*/"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            checkDeleteValidity(parsedInputs);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new DeleteCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        /*case COMMAND_FIND:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            verifyFind(parsedInputs);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            return new FindCommand(parsedInputs[1]);*/"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        case COMMAND_LOGIN:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            checkLogInValidity(parsedInputs);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            return new LogInCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        case COMMAND_ADD:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            checkAddValidity(parsedInputs);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return new AddCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case COMMAND_EDIT:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            //checkEditValidity(parsedInputs);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new EditCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case COMMAND_BYE:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        case COMMAND_COMPARE:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            return new CompareCommand(parsedInputs[1]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case COMMAND_TEST:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return new TestCommand();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Sorry! I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    private static void checkAddValidity(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            throw new DukeException(\"There is no description in your add command!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        } else if (!input[1].contains(\"/\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            throw new DukeException(\"An add command needs to be in a \u0027name /day /time /location\u0027 format!\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        String[] position \u003d input[1].split(\" /\",4);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        if (position[0].isEmpty()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            throw new DukeException(\"There is no name in your add command!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        } else if (position[1].isEmpty()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            throw new DukeException(\"There is no day in your add command!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        } else if (position[2].isEmpty()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            throw new DukeException(\"There is no time in your add command!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (position[3].isEmpty()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            throw new DukeException(\"There is no location in your add command!\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static void checkListValidity(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new DukeException(\"There is no description in your list command!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static void checkClearValidity(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new DukeException(\"There is no description in your clear command!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (!input[1].contains(\"/\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new DukeException(\"An clear command needs to be in a \u0027clear /day\u0027 format!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private static void checkDeleteValidity(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new DukeException(\"There is no description in your delete command!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (!input[1].contains(\"/\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new DukeException(\"A delete command needs to be in a \u0027/day /index\u0027 format!\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        String[] position \u003d input[1].split(\"/\",3);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (position[1].isEmpty()) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new DukeException(\"There is no day in your delete command!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else if (position[2].isEmpty()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new DukeException(\"There is no index in your delete command!\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Checks the index\u0027s validity."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param input user\u0027s string input."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws DukeException if the index is not a number or within valid range."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void checkTaskIndexValidity(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Please enter the task number you want to mark as done!\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"You\u0027ve entered an invalid task number!\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Checks the validity of the description for todo."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param input user\u0027s string input."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws DukeException if the description for todo is an empty field."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void checkTodoValidity(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"There is no description in your todo command!\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Checks the validity of the description for deadline."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param input user\u0027s string input."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws DukeException if the description for deadline is an empty field."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void checkDeadlineValidity(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"There is no description in your deadline command!\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else if (!input[1].contains(\"/by\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"A deadline task requires a \u0027/by\u0027 to indicate time frame!\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int byPosition \u003d input[1].indexOf(\"/by\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        if (input[1].substring(0, byPosition).isEmpty()) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"There is no description in your deadline command!\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        } else if (input[1].substring(byPosition + 3).isEmpty()) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Please indicate time frame!\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Checks the validity of the description for event."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param input user\u0027s string input."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws DukeException if the description for event is an empty field."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void checkEventValidity(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"There is no description in your event command!\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else if (!input[1].contains(\"/at\")) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"An event task requires an \u0027/at\u0027 to indicate location!\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int atPosition \u003d input[1].indexOf(\"/at\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        if (input[1].substring(0, atPosition).isEmpty()) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"There is no description in your event command!\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        } else if (input[1].substring(atPosition + 3).isEmpty()) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"An event task requires an \u0027/at\u0027 to indicate location!\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private static void checkLogInValidity(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new DukeException(\"There is no description in your login command!\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } else if (!input[1].contains(\"/\")) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new DukeException(\"An login requires an \u0027/\u0027 to indicate password!\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int atPosition \u003d input[1].indexOf(\"/\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        if (input[1].substring(0, atPosition).isEmpty()) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new DukeException(\"There is no username in your login command!\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        } else if (input[1].substring(atPosition + 1).isEmpty()) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new DukeException(\"An login requires a password!\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } else if (input[1].substring(atPosition + 1).length() !\u003d MAX_PASSWORD_LENGTH) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new DukeException(\"Password needs to be 6-digits long!\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } else if (!input[1].substring(atPosition + 1).matches(\"[0-9]+\")) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            throw new DukeException(\"Password needs to be a 6-digits number!\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Checks the validity of the KEYWORD for find."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param input user\u0027s string input."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws DukeException if the KEYWORD is an empty field."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static void verifyFind(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Search description is empty\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 117,
      "tammykoh": 44,
      "manuelmanuntag96": 44,
      "yellow-fellow": 4,
      "weisiong24": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.user.Cryptography;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.user.User;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.user.UserList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Manages the loading and saving of data to or from a text file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    //public String Message_Tick_Symbol \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String FP \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String[] days \u003d {\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\"};"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //public static final int MAX_SIZE \u003d 100;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Creates a new file if it does not exist."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws DukeException if an I/O error has occurred."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Storage() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        //this.FP \u003d FP;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        initialise();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Initialises a file by checking path validity."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws DukeException if an I/O error has occurred."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private void initialise() throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        File storageFile \u003d new File(FP);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        File storageFolder \u003d new File(storageFile.getParent());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (storageFolder.exists() \u0026\u0026 storageFolder.isDirectory()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            //System.out.println(\"Data folder found! Finding duke.txt...\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            //System.out.println(\"Data folder not found! Creating one...\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            if (!storageFolder.mkdir()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                //throw new DukeException(\"Attempt to create a data folder failed.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            if (storageFile.createNewFile()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                //System.out.println(\"No existing duke.txt found! Creating one...\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                //System.out.println(\"Existing duke.txt found. Loading previously saved task list...\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            //throw new DukeException(\"Attempt to create duke.txt failed.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            //System.out.println(\"Previous task list loaded successfully\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/*    *//**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Loads data from the text file to task arraylist."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws DukeException if an I/O error has occurred."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *//*"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Scanner reader;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            reader \u003d new Scanner(new File(FP));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Attempt to read duke.txt failed.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(MAX_SIZE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        while (reader.hasNextLine()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            loadTask(reader, tasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Parses the saved tasks according to specified format in order to be loaded."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param reader reads user\u0027s string input."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param storageTasks the task arraylist."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws DukeException if an I/O error has occurred."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *//*"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private void loadTask(Scanner reader, ArrayList\u003cTask\u003e storageTasks) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String[] parsedLines \u003d reader.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (int i \u003d 0; i \u003c parsedLines.length; i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            parsedLines[i] \u003d parsedLines[i].trim();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        switch (parsedLines[0]) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            task \u003d new Deadline(parsedLines[2], parsedLines[3]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            task \u003d new Event(parsedLines[2], parsedLines[3]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Existing task list format is corrupted. Please check again.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (parsedLines[1].equals(\"\\u2713\")) {  //"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        storageTasks.add(task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Loads data from the text file to task arraylist."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws DukeException if an I/O error has occurred."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void load(UserList users) throws DukeException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Scanner reader;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            reader \u003d new Scanner(new File(FP));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Attempt to read duke.txt failed.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        while (reader.hasNextLine()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            loadTask(reader, users);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Parses the saved tasks according to specified format in order to be loaded."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param reader reads user\u0027s string input."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws DukeException if an I/O error has occurred."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private void loadTask(Scanner reader, UserList users) throws DukeException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        String firstLine \u003d reader.nextLine();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        int totalUser \u003d 0;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (firstLine.contains(\"Total user: \")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            totalUser \u003d Integer.parseInt(firstLine.substring(12));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"duke.txt formatting is incorrect.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (int i \u003d 0; i \u003c totalUser; i++) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            String[] userCredentials \u003d reader.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            User newUser \u003d new User(userCredentials[0].trim(), "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    Cryptography.decipherPassword(userCredentials[1].trim()));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            users.addUser((newUser));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            for (int j \u003d 0; j \u003c 7; j++) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                reader.nextLine();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                String line \u003d reader.nextLine();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                if (line.isEmpty()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                String[] timetables \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                for (String s : timetables) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String[] lessons \u003d s.split(\"/\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String description \u003d lessons[1].trim();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String location \u003d lessons[2].trim();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String timeRange \u003d lessons[3].trim();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String[] times \u003d timeRange.split(\"-\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    Event lessonEvent \u003d new Event(description, location, times[0].trim(), times[1].trim());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    ArrayList\u003cEvent\u003e timetable \u003d users.getUser(i + 1).getTimetable().getTimetable(days[j]);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    timetable.add(lessonEvent);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Writes data to the text file."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @tasks Arraylist of task."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws DukeException if an I/O error has occurred."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *//*"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void write(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            FileWriter fw \u003d new FileWriter(new File(FP));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            writeTask(fw, tasks);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Attempt to write to duke.txt failed.\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Writes data to the text file."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "     * #@tasks Arraylist of task."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws DukeException if an I/O error has occurred."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void write(UserList users) throws DukeException {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        //ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            FileWriter fw \u003d new FileWriter(new File(FP));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            writeTask(fw, users);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Attempt to write to duke.txt failed.\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/*    *//**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Writes specific task details to the text file in given format."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param fw FileWriter object."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @tasks Arraylist of task."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws IOException if an I/O error has occurred."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *//*"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private void writeTask(FileWriter fw, ArrayList\u003cTask\u003e tasks) throws IOException, DukeException {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fw.write(t.getTaskType() + \" | \" + t.getStatusIcon() + \" | \" + t.getDescription());"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            if (t.getTaskType().equals(\"D\")) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                fw.write(\" | \" + ((Deadline) t).getBy());"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            } else if (t.getTaskType().equals(\"E\")) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                fw.write(\" | \" + ((Event) t).getAt());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fw.append(\"\\n\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Writes specific task details to the text file in given format."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param fw FileWriter object."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws IOException if an I/O error has occurred."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *//*"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private void writeTask(FileWriter fw, UserList users) throws IOException, DukeException {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (User k : users.getUserList()) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            ArrayList\u003cArrayList\u003cEvent\u003e\u003e allTimeTable \u003d k.combineAllTimetable();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fw.write(k.getName() + \" | \" + k.getPassWord());"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fw.append(\"\\n\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                fw.write(days[i]);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                fw.append(\"\\n\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                fw.write(allTimeTable.get(i).toString());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                fw.append(\"\\n\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fw.write(\"###\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fw.append(\"\\n\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Writes specific task details to the text file in given format."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param fw FileWriter object."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @throws IOException if an I/O error has occurred."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private void writeTask(FileWriter fw, UserList users) throws IOException, DukeException {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        fw.write(\"Total user: \" + users.getTotalUserCount());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        fw.append(\"\\n\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        for (User u : users.getUserList()) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            fw.write(u.getName() + \" | \" + u.getEncipheredPassword());"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            fw.append(\"\\n\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            for (String day : days) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                fw.write(day);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                fw.append(\"\\n\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                ArrayList\u003cEvent\u003e timetableIndividualDay \u003d u.getTimetable().getTimetable(day);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                int timetableSize \u003d timetableIndividualDay.size();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                for (int k \u003d 0; k \u003c timetableSize; k++) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String classDescription \u003d timetableIndividualDay.get(k).getDescription();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String location \u003d timetableIndividualDay.get(k).getLocation();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String startTime \u003d timetableIndividualDay.get(k).getTimeStart();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    String endTime \u003d timetableIndividualDay.get(k).getTimeEnd();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    fw.write(\"/\" + classDescription + \" /\" + location + \" /\" + startTime"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                            + \"-\" + endTime);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    if (!(k \u003d\u003d (timetableSize - 1))) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                        fw.write(\" | \");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                fw.append(\"\\n\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 275,
      "manuelmanuntag96": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    public String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        setTaskType(\"D\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//     * Returns the deadline detail of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//     * @return the deadline detail of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    public String getBy() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        return by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public Event(String description, String location, String timeStart, String timeEnd) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        super(description, location, timeStart, timeEnd);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        //this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        //setTaskType(\"E\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /*public String getAt() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        //return at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return description + \" \" + location + \" \" + timeStart + \"-\" + timeEnd;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 13,
      "manuelmanuntag96": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Provides blueprint for a Task object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected String location;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected String timeStart;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected String timeEnd;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //protected String taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Initialises a new Task object, and marks it as undone by default."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param description the description of a particular task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public Task(String description, String location, String timeStart, String timeEnd) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.timeStart \u003d timeStart;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.timeEnd \u003d timeEnd;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        //this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Sets the task type based on \u0027todo\u0027, \u0027deadline\u0027 and \u0027event\u0027."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param taskType the type of task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //public void setTaskType(String taskType) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Returns a task\u0027s description."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @return the description of the task in string."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Returns a task\u0027s type."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @return the type of task in string."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /*public String getTaskType() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Returns the done status of a task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @return the done status of the task in boolean."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /*public boolean isDone() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Returns the done status of a task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @return {@code \\u2713} or {@code \\u2718}."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /*public String getStatusIcon() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Sets a task as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //public void markAsDone() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //this.isDone \u003d true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Returns the task description and status based on given format."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @return the description and task status based on a given format."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return this.description + this.location + this.timeStart + this.timeEnd;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    public String getTimeStart() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        return this.timeStart;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    public String getTimeEnd() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        return this.timeEnd;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String getLocation() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return this.location;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 66,
      "manuelmanuntag96": 26,
      "yellow-fellow": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public static final int MAX_SIZE \u003d 100;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(MAX_SIZE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public Task getTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            return tasks.get(index - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            throw new DukeException(\"Invalid task number! Type \u0027list\u0027 to get an overview of your tasks.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public int getTotalTaskCount() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 43
    }
  },
  {
    "path": "src/main/java/seedu/duke/timetable/Timetable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package seedu.duke.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class Timetable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public ArrayList\u003cEvent\u003e monTimetable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public ArrayList\u003cEvent\u003e tueTimetable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public ArrayList\u003cEvent\u003e wedTimetable;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public ArrayList\u003cEvent\u003e thuTimetable;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public ArrayList\u003cEvent\u003e friTimetable;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public ArrayList\u003cEvent\u003e satTimetable;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public ArrayList\u003cEvent\u003e sunTimetable;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public Timetable() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.monTimetable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.tueTimetable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.wedTimetable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.thuTimetable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.friTimetable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.satTimetable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.sunTimetable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public ArrayList\u003cEvent\u003e getTimetable(String day) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        switch (day) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"mon\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return monTimetable;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"tue\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return tueTimetable;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"wed\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return wedTimetable;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"thu\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return thuTimetable;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"fri\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return friTimetable;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"sat\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return satTimetable;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        case \"sun\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            return sunTimetable;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new DukeException(\"Sorry! I don\u0027t know what day you mean :-(\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 13,
      "manuelmanuntag96": 16,
      "weisiong24": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.user.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.user.UserList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " * Prints relevant messages to user based on user interaction."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String MESSAGE_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private static final String MESSAGE_SAD_FACE \u003d \":(\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private static final String MESSAGE_LOGO \u003d \" _    _ _                   _____       _ _____ _                \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            + \"| |  | | |                 |  __ \\\\     | |_   _(_)               \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            + \"| |  | | |__   ___ _ __ ___| |  \\\\/ ___ | |_| |  _ _ __ ___   ___ \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            + \"| |/\\\\| | \u0027_ \\\\ / _ \\\\ \u0027__/ _ \\\\ | __ / _ \\\\| __| | | | \u0027_ ` _ \\\\ / _ \\\\\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            + \"\\\\  /\\\\  / | | |  __/ | |  __/ |_\\\\ \\\\ (_) | |_| | | | | | | | |  __/\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            + \" \\\\/  \\\\/|_| |_|\\\\___|_|  \\\\___|\\\\____/\\\\___/ \\\\__\\\\_/ |_|_| |_| |_|\\\\___|\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            + \"                                                                 \\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private static final String MESSAGE_GREETINGS \u003d \"\\n\" + MESSAGE_LOGO + \"Hello! Welcome to WhereGotTime!\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            + \"Please enter your time table details.\\nYou may refer to the User Guide for instructions.\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    private final Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints a horizontal divider line."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(MESSAGE_LINE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Reads user inputs."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @return String the inputs provided by users, where leading and trailing spaces are trimmed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints welcome message."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(MESSAGE_LINE + MESSAGE_GREETINGS + MESSAGE_LINE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints out all tasks saved in the array list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param users the array list to print."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void printList(UserList users, User nowUser, String day) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int userIndex \u003d -1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (nowUser \u003d\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throw new DukeException(\"Sorry! You are not logged in to any account :-(\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (int i \u003d 0; i \u003c users.getTotalUserCount(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            if ((users.getUser(i + 1).getName() \u003d\u003d nowUser.getName())) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                userIndex \u003d i + 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        ArrayList\u003cEvent\u003e timetable \u003d (users.getUser(userIndex).getTimetable()).getTimetable(day);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (!timetable.isEmpty()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            int count \u003d 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Here are the classes in your timetable for \" + day + \":\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            for (Object c : timetable) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "                System.out.println(count + \". \" + c);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"There is no class in your timetable for \" + day + \"!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints out the deadline task given by the user."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param taskList the array list of tasks."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param task the task to be added to the array list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    /*public void printDeadline(TaskList taskList, Deadline task) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\"Got it! I\u0027ve added the following deadline in the list:\\n\" + task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\"Now now have \" + taskList.getTotalTaskCount() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints out the event task given by the user."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "     * @param event the task to be added to the array list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    public void printEvent(Event event, String date) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        System.out.println(\"Got it! I\u0027ve added the following event in \" + date + \"\\n\" + event);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        //System.out.println(\"Now now have \" + taskList.getTotalTaskCount() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printDone(Task task) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Nice! I have marked this task as done:\\n\" + task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints out the task that has been deleted."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param deletedClass the class that has been deleted."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param day          the day on which the task that has been deleted is on."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param size         the number of classes left on that day."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void printDelete(String deletedClass, String day, int size) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Noted. I have removed this class from your time table:\\n\" + deletedClass);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" class(es) for \" + day + \" in the time table.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Prints out the day of the timetable that has been cleared."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param timetable the timetable of the day to be cleared."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void printClear(ArrayList\u003cObject\u003e timetable, String day) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        int size \u003d timetable.size();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Noted. I have removed this class from your \" + day + \" timetable:\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(\"Noted. I have removed these classes from your \" + day + \" timetable:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        for (Object c : timetable) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            System.out.println(count + \". \" + c);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        System.out.println(\"Your \" + day + \" timetable has been cleared.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints all result(s) that matches the search keyword."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param taskList the array list that contains the keyword."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param keyword  the word that the user searches."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printFind(TaskList taskList, String keyword) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        if (taskList.getTotalTaskCount() \u003e 0) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"Here are the class(es) in your time table \""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                    + \"that matches the keyword \\\"\" + keyword + \"\\\":\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            int count \u003d 1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            for (Task t : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                System.out.println(count + \". \" + t);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "            System.out.println(\"No class of yours contains the keyword \\\"\" + keyword + \"\\\".\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void printEdit(String[] editedField, String date, int index) throws DukeException {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Got it! I have edited \" + date + \"\u0027s #\" + index + \" lesson to \""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "                + \"the following timing: \" + editedField[0] + \"-\" + editedField[1]);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints farewell message."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(\"Thanks for using WhereGotTime. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void greetUser(User currentUser) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        System.out.println(\"Hello \" + currentUser.getName() + \"!\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * Prints error message."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     * @param message the error message to be printed."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        System.out.println(MESSAGE_SAD_FACE + \" OOPS!!! \" + message);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    public void printCompare(ArrayList\u003cInteger\u003e outputArray) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        ArrayList\u003cInteger\u003e fullArray \u003d new ArrayList\u003c\u003e(Arrays.asList(0, 1, 2, 3, 4, 5, 6, 7, 8, 9,"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        int checkPoint \u003d 0;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        System.out.println(\"Your common timeslots are: \\n\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        for (int availableTime : fullArray) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            if ((availableTime \u003e\u003d 1) \u0026\u0026 (!(outputArray.contains(availableTime - 1)))"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    \u0026\u0026 (!(outputArray.contains(availableTime)))) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                checkPoint++;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            if (!(outputArray.contains(availableTime))) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                int tempMinusOne \u003d availableTime - 1;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                if (checkPoint \u003c 10) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    if (tempMinusOne \u003c 10) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                        System.out.println(\"0\" + checkPoint + \"00HR to 0\" + tempMinusOne + \"59HR\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                        System.out.println(\"0\" + checkPoint + \"00HR to \" + tempMinusOne + \"59HR\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    if (tempMinusOne \u003c 10) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                        System.out.println(checkPoint + \"00HR to 0\" + tempMinusOne + \"59HR\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                        System.out.println(checkPoint + \"00HR to \" + tempMinusOne + \"59HR\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                if (availableTime !\u003d 23) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                    checkPoint \u003d availableTime + 1;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        if (checkPoint !\u003d 23) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            if (checkPoint \u003c 10) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                System.out.println(\"0\" + checkPoint + \"00HR to \" + \"2359HR\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                System.out.println(checkPoint + \"00HR to \" + \"2359HR\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 119,
      "tammykoh": 49,
      "manuelmanuntag96": 12,
      "yellow-fellow": 43,
      "weisiong24": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/user/Cryptography.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package seedu.duke.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class Cryptography {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String encipherPassword(String plainText) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int plainTextLength \u003d plainText.length();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int[] numbers \u003d new int[plainTextLength];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        // Creating array of string length "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        char[] ch \u003d new char[plainTextLength];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        // Copy character by character into array "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 0; i \u003c plainTextLength; i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            ch[i] \u003d plainText.charAt(i);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 0; i \u003c plainTextLength; i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            numbers[i] \u003d ((int)(plainText.charAt(i) - \u00270\u0027));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int[] cipherNum \u003d new int[plainTextLength];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 0; i \u003c plainTextLength; i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if (i \u003d\u003d 0 | i \u003d\u003d 2 | i \u003d\u003d 4) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                cipherNum[i] \u003d 1 * numbers[i] + 2 * numbers[i + 1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                if (cipherNum[i] \u003e\u003d 10) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    cipherNum[i] \u003d cipherNum[i] % 10; "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                cipherNum[i + 1] \u003d 0 * numbers[i] + 3 * numbers[i + 1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                if (cipherNum[i + 1] \u003e\u003d 10) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    cipherNum[i + 1] \u003d cipherNum[i + 1] % 10;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        StringBuilder strNum \u003d new StringBuilder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int num : cipherNum) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            strNum.append(num);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String cipherText;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        cipherText \u003d strNum.toString(); "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return cipherText;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static String decipherPassword(String cipherText) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int cipherTextLength \u003d cipherText.length();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int[] numbers \u003d new int[cipherTextLength];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        char[] ch \u003d new char[cipherTextLength];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 0; i \u003c cipherTextLength; i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            ch[i] \u003d cipherText.charAt(i);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 0; i \u003c cipherTextLength; i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            numbers[i] \u003d ((int)(cipherText.charAt(i) - \u00270\u0027));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        int[] plainNum \u003d new int[cipherTextLength];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int i \u003d 0; i \u003c cipherTextLength; i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            if (i \u003d\u003d 0 | i \u003d\u003d 2 | i \u003d\u003d 4) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                plainNum[i] \u003d 21 * numbers[i] - 14 * numbers[i + 1];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                if (plainNum[i] \u003c 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    plainNum[i] \u003d 10 + plainNum[i];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    plainNum[i] \u003d plainNum[i] % 10;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } else if (plainNum[i] \u003e\u003d 10) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    plainNum[i] \u003d plainNum[i] % 10;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                plainNum[i + 1] \u003d 0 * numbers[i] + 7 * numbers[i + 1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                if (plainNum[i] \u003c 0) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    plainNum[i] \u003d 10 - plainNum[i];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    plainNum[i] \u003d plainNum[i] % 10;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                } else if (plainNum[i + 1] \u003e\u003d 10) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                    plainNum[i + 1] \u003d plainNum[i + 1] % 10;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        StringBuilder strNum \u003d new StringBuilder();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        for (int num : plainNum) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            strNum.append(num);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String plainText;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        plainText \u003d strNum.toString();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return plainText;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 104
    }
  },
  {
    "path": "src/main/java/seedu/duke/user/User.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package seedu.duke.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.timetable.Timetable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class User {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected String passWord;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected Timetable timetable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    protected String encipheredPassword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public User(String name, String passWord) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.passWord \u003d passWord;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.timetable \u003d new Timetable();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.encipheredPassword \u003d Cryptography.encipherPassword(passWord);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public String getPassWord() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return passWord;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public String getEncipheredPassword() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return encipheredPassword;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public Timetable getTimetable() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return timetable;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    public ArrayList\u003cArrayList\u003cEvent\u003e\u003e combineAllTimetable() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        ArrayList\u003cArrayList\u003cEvent\u003e\u003e combinedTimeTable \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        combinedTimeTable.add(getTimetable().monTimetable);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        combinedTimeTable.add(getTimetable().tueTimetable);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        combinedTimeTable.add(getTimetable().wedTimetable);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        combinedTimeTable.add(getTimetable().thuTimetable);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        combinedTimeTable.add(getTimetable().friTimetable);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        combinedTimeTable.add(getTimetable().satTimetable);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        combinedTimeTable.add(getTimetable().sunTimetable);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        return combinedTimeTable;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 15,
      "manuelmanuntag96": 33
    }
  },
  {
    "path": "src/main/java/seedu/duke/user/UserList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package seedu.duke.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "public class UserList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public static final int MAX_SIZE \u003d 100;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    private final ArrayList\u003cUser\u003e users;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public UserList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.users \u003d new ArrayList\u003c\u003e(MAX_SIZE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public UserList(ArrayList\u003cUser\u003e users) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        this.users \u003d new ArrayList\u003c\u003e(users);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void addUser(User user) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.add(user);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public ArrayList\u003cUser\u003e getUserList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return users;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public User getUser(int index) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "            return users.get(index - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "            throw new DukeException(\"Invalid user number!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public int getTotalUserCount() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        return users.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    public User getUserByName(String userName) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        for (User user : this.users) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            if (user.getName().equals(userName)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "                return user;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yellow-fellow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 1,
      "manuelmanuntag96": 38,
      "yellow-fellow": 9,
      "weisiong24": 1
    }
  },
  {
    "path": "src/test/java/seedu/duke/DukeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "/*    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 2,
      "-": 10
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/AddCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "class AddCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    String name \u003d \"CS2040C\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    String location \u003d \"LT23\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    String timeStart \u003d \"1600\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    String timeEnd \u003d \"1900\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    void testAddCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        Event e \u003d new Event(name, location,timeStart,timeEnd);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "        assertEquals(\"CS2040C LT23 1600-1900\",e.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weisiong24"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weisiong24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weisiong24": 21
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/EditCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "public class EditCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    String module \u003d \"CS2113 Lec\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    String location \u003d \"LT21\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    String timeStart \u003d \"1200\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    String timeEnd \u003d \"1300\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    void testEditCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        Event e \u003d new Event(module, location,timeStart,timeEnd);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "        assertEquals(\"CS2113 Lec LT21 1200-1300\",e.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "} "
      }
    ],
    "authorContributionMap": {
      "yeapcl": 21
    }
  },
  {
    "path": "src/test/java/seedu/duke/parser/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.command.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.command.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.command.CompareCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.command.ClearCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.command.EditCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.command.LogInCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_unknownCommand_throwDukeException() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"hello, testing\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(input));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_addCommand_parsedCorrectly() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"add CS2113 Lecture /fri /1600-1800 /LT15\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, AddCommand.class);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_byeCommand_parsedCorrectly() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"bye\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, ByeCommand.class);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_clearCommand_parsedCorrectly() throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"clear /sun\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, ClearCommand.class);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_compareCommand_parsedCorrectly() throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"compare /Alex /mon\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, CompareCommand.class);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_deleteCommand_parsedCorrectly() throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"delete /tue /2\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, DeleteCommand.class);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_editCommand_parsedCorrectly() throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"edit /mon /2 /1000-1200\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, EditCommand.class);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_listCommand_parsedCorrectly() throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final String input \u003d \"list /all\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, ListCommand.class);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    public void parse_loginCommand_parsedCorrectly() throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        final String input \u003d \"login John /132456\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        parseAndAssertCommandType(input, LogInCommand.class);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tammykoh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * Parses input and asserts the class/type of the returned command object."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param input to be parsed"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     * @param expectedCommandClass expected class of returned command"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    private \u003cT extends Command\u003e void parseAndAssertCommandType(String input, Class\u003cT\u003e expectedCommandClass)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        final Command result \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tammykoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tammykoh": 85,
      "manuelmanuntag96": 1
    }
  },
  {
    "path": "src/test/java/seedu/duke/user/CryptographyTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package seedu.duke.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "class CryptographyTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void encipherPassword_converts_String_to_cipherText_Properly() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String password \u003d \"123456\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"561278\", Cryptography.encipherPassword(password));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void encipherPassword_converts_maxString_to_cipherText_Properly() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String password \u003d \"999999\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"777777\", Cryptography.encipherPassword(password));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void encipherPassword_converts_minString_to_cipherText_Properly() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String password \u003d \"000000\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"000000\", Cryptography.encipherPassword(password));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void decipherPassword_converts_String_to_plainText_Properly() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String password \u003d \"561278\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"123456\", Cryptography.decipherPassword(password));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void decipherPassword_converts_maxString_to_plainText_Properly() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String password \u003d \"777777\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"999999\", Cryptography.decipherPassword(password));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    public void decipherPassword_converts_minString_to_plainText_Properly() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        String password \u003d \"000000\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"000000\", Cryptography.encipherPassword(password));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 51
    }
  },
  {
    "path": "src/test/java/seedu/duke/user/UserListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package seedu.duke.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "class UserListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void addUser_addsProperly() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user \u003d new User(\"man\",\"123123\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(1, users.getTotalUserCount());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void getUserByName_getsProperly() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        UserList users \u003d new UserList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User user \u003d new User(\"man\",\"123123\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        users.addUser(user);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"123123\", (users.getUserByName(\"man\").passWord));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 28
    }
  },
  {
    "path": "src/test/java/seedu/duke/user/UserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "package seedu.duke.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "class UserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    void getEncipheredPassword() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        User test \u003d new User(\"John\",\"123456\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "        assertEquals(\"561278\", test.getEncipheredPassword());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "login Alex /123123"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CS2113 Lec /mon /1200-1300 /LT21"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CS3243 Lec /mon /1400-1500 /LT22"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CS2040C Tut /mon /0800-1000 /COM1-2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CG2028 Tut /Thu /0900-1100 /E4-4-1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CG2023 Lec /Fri /1700-1800 /E7-3-10"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "list /all"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "list /mon"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "edit /mon /3 /1300-1400"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "edit /fri /1 /0900-1100"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "list /all"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "list /mon"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "login Tammy /321321"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CS2113 Lec /mon /1200-1300 /LT21"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CS2040C Tut /mon /0800-1000 /COM1-2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CG2028 Tut /Thu /0900-1100 /E4-4-1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "compare /Alex /mon"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "list /mon"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "edit /mon /2 /1000-1200"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "compare /Alex /mon"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "login Alex /123123"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "delete /mon /2"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "clear /fri"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CS3230 Lab /Wed /1100-1400 /COM1-2-21"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "add /CS3230 Lec /Wed /1300-1500 /LT43"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeapcl"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yeapcl": 23,
      "manuelmanuntag96": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew clean shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "cd ..\\..\\text-ui-test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manuelmanuntag96"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      }
    ],
    "authorContributionMap": {
      "manuelmanuntag96": 1,
      "-": 18
    }
  }
]
