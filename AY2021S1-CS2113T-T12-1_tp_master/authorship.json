[
  {
    "path": "TimeTable.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "L|CS2113T|http//:zoom.com/hsfufs |false|5|10|2020-10-14T14:00|2020-10-14T16:00|2020-10-16T17:00|2020-10-16T20:00|2020-10-21T14:00|2020-10-28T16:00|2020-10-23T17:00|2020-10-30T20:00|2020-10-28T14:00|2020-11-11T16:00|2020-10-30T17:00|2020-11-13T20:00|2020-11-04T14:00|2020-11-25T16:00|2020-11-06T17:00|2020-11-27T20:00|2020-11-11T14:00|2020-12-09T16:00|2020-11-13T17:00|2020-12-11T20:00"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 1
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "farice9"
        },
        "content": "    mainClassName \u003d \"StudyIt\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "farice9"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "farice9"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "farice9"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "farice9"
        },
        "content": "        attributes ("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "farice9"
        },
        "content": "            \u0027Main-Class\u0027: \u0027StudyIt\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "farice9"
        },
        "content": "        )"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "farice9"
        },
        "content": "    enableAssertions \u003d false"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "farice9": 10,
      "-": 45
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "farice9"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yuan Bing | [Github](https://github.com/farice9) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Si Hui | [Github](https://github.com/lingsihui) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Lu Ziyi | [Github](https://github.com/luziyi9898) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Florence Lim | [Github](https://github.com/hailqueenflo) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Lin Yuheng | [Github](https://github.com/slightlyharp) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e master"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 3,
      "hailqueenflo": 1,
      "luziyi9898": 1,
      "farice9": 2,
      "-": 4
    }
  },
  {
    "path": "src/main/java/AcademicCommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import academic.Grade;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "farice9"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import exceptions.InvalidGradeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import exceptions.InvalidMcException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "farice9"
        },
        "content": "import exceptions.InvalidModeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "farice9"
        },
        "content": "public class AcademicCommandParser extends CommandParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static AcademicCommandType getAcademicCommandType(String command)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "farice9"
        },
        "content": "            throws InvalidCommandException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "farice9"
        },
        "content": "        String commandModified \u003d standardizeCommand(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "farice9"
        },
        "content": "        if (commandModified.startsWith(\"add contact\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return AcademicCommandType.ADD_CONTACT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (commandModified.startsWith(\"check contact\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return AcademicCommandType.CHECK_CONTACT;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (commandModified.startsWith(\"add grade\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return AcademicCommandType.ADD_GRADE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (commandModified.startsWith(\"check grade\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return AcademicCommandType.CHECK_GRADE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        } else if (commandModified.equalsIgnoreCase(\"list grade\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            return AcademicCommandType.LIST_GRADE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "farice9"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "farice9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    public static String[] getContact(String command) throws NumberFormatException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        //String commandModified \u003d standardizeCommand(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        String name \u003d command.substring(command.indexOf(\"c/\") + 2,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                command.indexOf(\"m/\")).trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        String number \u003d command.substring(command.indexOf(\"m/\") + 2,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                command.indexOf(\"e/\")).trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        String email \u003d command.substring(command.indexOf(\"e/\") + 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        int numberFormatTest \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "farice9"
        },
        "content": "        return new String[]{name, number, email};"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    public static String[] getGrade(String command) throws InvalidGradeException, InvalidMcException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        //String commandModified \u003d standardizeCommand(command);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        String name \u003d command.substring(command.indexOf(\"n/\") + 2,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                command.indexOf(\"m/\")).trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        String mc \u003d command.substring(command.indexOf(\"m/\") + 2,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                command.indexOf(\"g/\")).trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        String grade \u003d command.substring(command.indexOf(\"g/\") + 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        List\u003cString\u003e list \u003d Arrays.asList(Grade.listOfGrades);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        if (!list.contains(grade.toLowerCase())) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            throw new InvalidGradeException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        } else if (mc.equals(\"0\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            throw new InvalidMcException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "farice9"
        },
        "content": "        return new String[]{name, mc, grade};"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "farice9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "luziyi9898": 32,
      "farice9": 28
    }
  },
  {
    "path": "src/main/java/AcademicCommandType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "farice9"
        },
        "content": "public enum AcademicCommandType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "farice9"
        },
        "content": "    ADD_CONTACT,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "farice9"
        },
        "content": "    CHECK_CONTACT,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "farice9"
        },
        "content": "    ADD_GRADE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    CHECK_GRADE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    LIST_GRADE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "farice9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "luziyi9898": 2,
      "farice9": 5
    }
  },
  {
    "path": "src/main/java/BookmarkParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkCategory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkUi;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.commands.AddLinkCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.commands.BackCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.commands.BookmarkCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.commands.ChangeModeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.commands.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.commands.RemoveLinkCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.InvalidBookmarkCommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class BookmarkParser extends CommandParser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "farice9"
        },
        "content": "    private static int chosenCategory;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public BookmarkParser() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public BookmarkCommand evaluateInput(String command) throws InvalidBookmarkCommandException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            throw new InvalidBookmarkCommandException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "farice9"
        },
        "content": "        String commandModified \u003d CommandParser.standardizeCommand(command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "farice9"
        },
        "content": "        if (commandModified.startsWith(\"bm\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "farice9"
        },
        "content": "            getChosenCategory(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return new ChangeModeCommand(chosenCategory);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (commandModified.startsWith(\"add\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return new AddLinkCommand(command, chosenCategory);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (commandModified.startsWith(\"rm\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return new RemoveLinkCommand(command, chosenCategory);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (commandModified.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return new ListCommand(chosenCategory);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (commandModified.startsWith(\"back\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            String backCommand \u003d updateChosenCategory();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return new BackCommand(backCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            throw new InvalidBookmarkCommandException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private String updateChosenCategory() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        if (chosenCategory \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return \"Goodbye\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "farice9"
        },
        "content": "            resetBookmarkCategory();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return \"Category\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void resetBookmarkCategory() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "farice9"
        },
        "content": "        chosenCategory \u003d 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private void getChosenCategory(String line) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "farice9"
        },
        "content": "        chosenCategory \u003d Integer.parseInt(line.substring(2).trim());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 40,
      "farice9": 16
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "farice9"
        },
        "content": "import bookmark.BookmarkUi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import flashcard.FlashcardRun;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import academic.GradeBook;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import academic.PersonBook;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "farice9"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import timetable.TimeTableRun;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkCategory;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.commands.BookmarkCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.InvalidBookmarkCommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import exceptions.InvalidGradeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import exceptions.InvalidMcException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "farice9"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static void executeCommand(String command, CommandType commandType,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "farice9"
        },
        "content": "                                      ArrayList\u003cBookmarkCategory\u003e bookmarkCategories, FlashcardRun flashcardRun,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "farice9"
        },
        "content": "                                      TimeTableRun timeTableRun, ArrayList\u003cacademic.Grade\u003e currentGrades,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "farice9"
        },
        "content": "                                      ArrayList\u003cacademic.Person\u003e listOfPerson) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "farice9"
        },
        "content": "        if (commandType \u003d\u003d CommandType.EXIT_PROGRAM) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "farice9"
        },
        "content": "            Ui.printExit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (commandType \u003d\u003d CommandType.EXIT_MODE) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "farice9"
        },
        "content": "            Ui.exitMode();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "farice9"
        },
        "content": "            BookmarkParser.resetBookmarkCategory();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (commandType \u003d\u003d CommandType.LOCATION) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "farice9"
        },
        "content": "            Ui.printLocation();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (commandType \u003d\u003d CommandType.CHANGE_MODE) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "farice9"
        },
        "content": "            Ui.changeModeCommand(command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (commandType \u003d\u003d CommandType.HELP) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "farice9"
        },
        "content": "            HelpMessage.printHelpMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (StudyIt.getCurrentMode() !\u003d Mode.MENU) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "farice9"
        },
        "content": "            // Run the mode specific commands if the input is none of the general command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "farice9"
        },
        "content": "            handleNonGeneralCommand(command, commandType, bookmarkCategories, flashcardRun, timeTableRun,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "farice9"
        },
        "content": "                    currentGrades, listOfPerson);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "farice9"
        },
        "content": "            ErrorMessage.printUnidentifiableCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "farice9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static void handleNonGeneralCommand(String command, CommandType commandType,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                                               ArrayList\u003cBookmarkCategory\u003e bookmarkCategories,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "farice9"
        },
        "content": "                                               FlashcardRun flashcardRun, TimeTableRun timeTableRun,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "farice9"
        },
        "content": "                                               ArrayList\u003cacademic.Grade\u003e currentGrades,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "farice9"
        },
        "content": "                                               ArrayList\u003cacademic.Person\u003e listOfPerson) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "farice9"
        },
        "content": "        Mode currentMode \u003d StudyIt.getCurrentMode();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "farice9"
        },
        "content": "        if (currentMode \u003d\u003d Mode.BOOKMARK) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "farice9"
        },
        "content": "            executeBookmarkModeCommand(command, bookmarkCategories);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (currentMode \u003d\u003d Mode.TIMETABLE) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            executeTimetableModeCommand(command, timeTableRun);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (currentMode \u003d\u003d Mode.ACADEMIC) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "farice9"
        },
        "content": "            executeAcademicModeCommand(command, currentGrades, listOfPerson);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (currentMode \u003d\u003d Mode.FLASHCARD) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            executeFlashcardCommand(command, flashcardRun);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "farice9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void executeBookmarkModeCommand(String command, ArrayList\u003cBookmarkCategory\u003e bookmarkCategories) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "farice9"
        },
        "content": "        BookmarkUi bookmarkUi \u003d new BookmarkUi();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "farice9"
        },
        "content": "        BookmarkParser bookmarkParser \u003d new BookmarkParser();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            BookmarkCommand c \u003d bookmarkParser.evaluateInput(command);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "farice9"
        },
        "content": "            c.executeCommand(bookmarkUi,bookmarkCategories);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } catch (InvalidBookmarkCommandException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "farice9"
        },
        "content": "            bookmarkUi.showInvalidBookmarkCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public static void executeTimetableModeCommand(String command, TimeTableRun timeTableRun) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        timeTableRun.run(command);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void executeAcademicModeCommand(String command, ArrayList\u003cacademic.Grade\u003e currentGrades,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "farice9"
        },
        "content": "                                                  ArrayList\u003cacademic.Person\u003e listOfPerson) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "farice9"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "farice9"
        },
        "content": "            AcademicCommandType commandType \u003d AcademicCommandParser.getAcademicCommandType(command);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "farice9"
        },
        "content": "            if (commandType \u003d\u003d AcademicCommandType.ADD_CONTACT) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                Ui.printLine(\"Adding Contact\"); //TODO: Remove placeholder line."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "farice9"
        },
        "content": "                PersonBook.addPerson(AcademicCommandParser.getContact(command), listOfPerson);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "farice9"
        },
        "content": "            } else if (commandType \u003d\u003d AcademicCommandType.CHECK_CONTACT) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                Ui.printLine(\"Checking Contact\"); //TODO: Remove placeholder line."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "farice9"
        },
        "content": "                Ui.printLine(PersonBook.printPersonBook(listOfPerson));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "farice9"
        },
        "content": "            } else if (commandType \u003d\u003d AcademicCommandType.ADD_GRADE) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                Ui.printLine(\"Adding Grade\"); //TODO: Remove placeholder line."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "farice9"
        },
        "content": "                GradeBook.addGrade(AcademicCommandParser.getGrade(command), currentGrades);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "farice9"
        },
        "content": "            } else if (commandType \u003d\u003d AcademicCommandType.CHECK_GRADE) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                Ui.printLine(\"Checking Grade\"); //TODO: Remove placeholder line."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "farice9"
        },
        "content": "                Ui.printLine(GradeBook.printCap(currentGrades));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            } else if (commandType \u003d\u003d AcademicCommandType.LIST_GRADE) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                Ui.printLine(\"Listing Grade\"); //TODO: Remove placeholder line."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "farice9"
        },
        "content": "                Ui.printLine(GradeBook.printListOfGrades(currentGrades));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "farice9"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            ErrorMessage.printUnidentifiableCommand();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            ErrorMessage.printUnidentifiableInput();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            ErrorMessage.printInvalidNumber();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        } catch (InvalidGradeException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            ErrorMessage.printInvalidGrade();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        } catch (InvalidMcException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            ErrorMessage.printInvalidMc();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static void executeFlashcardCommand(String command, FlashcardRun flashcardRun) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        flashcardRun.run(command);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "farice9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hailqueenflo": 5,
      "lingsihui": 12,
      "slightlyharp": 4,
      "luziyi9898": 27,
      "farice9": 68
    }
  },
  {
    "path": "src/main/java/CommandParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "farice9"
        },
        "content": "import exceptions.InvalidModeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "farice9"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static String standardizeCommand(String text) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "farice9"
        },
        "content": "        return text.trim().toLowerCase();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static CommandType getCommandType(String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "farice9"
        },
        "content": "        String commandModified \u003d standardizeCommand(command);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "farice9"
        },
        "content": "        if ((StudyIt.getCurrentMode() \u003d\u003d Mode.MENU) \u0026\u0026 (commandModified.equals(\"exit\"))) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return CommandType.EXIT_PROGRAM;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (commandModified.equals(\"exit\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return CommandType.EXIT_MODE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (commandModified.equals(\"location\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return CommandType.LOCATION;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (commandModified.startsWith(\"cd\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return CommandType.CHANGE_MODE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (commandModified.equals(\"help\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return CommandType.HELP;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return CommandType.UNIDENTIFIABLE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "farice9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static Mode getDestinationMode(String command) throws InvalidModeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "farice9"
        },
        "content": "        String commandModified \u003d standardizeCommand(command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "farice9"
        },
        "content": "        int initialLength \u003d \"cd\".length();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "farice9"
        },
        "content": "        String destination \u003d commandModified.substring(initialLength).trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "farice9"
        },
        "content": "        if (destination.equals(\"1\") || destination.equals(ModeNames.MENU_NAME)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return Mode.MENU;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (destination.equals(\"2\") || destination.equals(ModeNames.BOOKMARK_NAME)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return Mode.BOOKMARK;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (destination.equals(\"3\") || destination.equals(ModeNames.TIMETABLE_NAME)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return Mode.TIMETABLE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (destination.equals(\"4\") || destination.equals(ModeNames.ACADEMIC_NAME)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return Mode.ACADEMIC;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (destination.equals(\"5\") || destination.equals(ModeNames.FLASHCARD_NAME)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return Mode.FLASHCARD;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "farice9"
        },
        "content": "            throw new InvalidModeException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "farice9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "farice9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "farice9": 46
    }
  },
  {
    "path": "src/main/java/CommandType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "farice9"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "farice9"
        },
        "content": "    EXIT_PROGRAM,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "farice9"
        },
        "content": "    EXIT_MODE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "farice9"
        },
        "content": "    LOCATION,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "farice9"
        },
        "content": "    CHANGE_MODE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "farice9"
        },
        "content": "    UNIDENTIFIABLE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    HELP,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "farice9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "luziyi9898": 1,
      "farice9": 7
    }
  },
  {
    "path": "src/main/java/ErrorMessage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "farice9"
        },
        "content": "public class ErrorMessage extends Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void printUnidentifiableCommand() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "farice9"
        },
        "content": "        printLine(\"Sorry that\u0027s not an available command! Please try again\\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "farice9"
        },
        "content": "                + \"or you can type \\\"help\\\" for more information\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void printInvalidMode() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "farice9"
        },
        "content": "        printLine(\"The current mode is invalid\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    public static void printUnidentifiableInput() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        printLine(\"Sorry that\u0027s not an available input! Please try again\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                + \"or you can type \\\"help\\\" for more information\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    public static void printInvalidNumber() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        printLine(\"Please enter a number when applicable!\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                + \"or you can type \\\"help\\\" for more information\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    public static void printInvalidGrade() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        printLine(\"Please enter a valid grade!\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                + \"or you can type \\\"help\\\" for more information\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    public static void printInvalidMc() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        printLine(\"MC cannot be zero!\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                + \"or you can type \\\"help\\\" for more information\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "luziyi9898": 24,
      "farice9": 11
    }
  },
  {
    "path": "src/main/java/HelpMessage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "farice9"
        },
        "content": "public class HelpMessage extends Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "farice9"
        },
        "content": "    private static final String generalCommands \u003d \"Here are the general commands available:\\n\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"help                 - prints out help message\\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"location             - tells you your current mode\\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"cd \u003cmode index/name\u003e - changes the program to the corresponding mode\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"exit                 - exit the program/mode you are currently at\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "farice9"
        },
        "content": "    private static final String currentModes \u003d \"These are the modes you can go to:\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"1 menu       - main menu\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"2 bookmark   - bookmark internet links\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"3 timetable  - plan your study schedule\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"4 academic   - track your academic details\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"5 flashcard  - flashcards to revise your study materials\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    private static final String academicCommands \u003d \"Here are the academic commands available:\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            + \"add contact c/CONTACT  m/MOBILE  e/EMAIL  - adds a contact\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            + \"check contact                             - prints the list of contact currently stored\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            + \"add grade n/MODULE NAME  m/MC  g/GRADE    - adds a grade\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            + \"check grade                               - prints the current CAP based on grade stored\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            + \"list grade                                - prints the list of grades currently stored\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private static final String bookmarkCommands \u003d \"Here are the bookmark commands available:\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"bm \u003ccategory index\u003e  - changes mode from bookmark main into a category \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"add \u003clink\u003e           - add bookmark link into a specific category\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"rm \u003cindex number\u003e    - remove a bookmark link into a specific category\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            + \"list                 - prints the list of categories and respective list of links\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            + \"back                 - go back to bookmark main\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    private static final String timetableCommand \u003d  \"Here are the timetable commands available:\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            + \"add class /MODULE CODE /ONLINE or OFFLINE\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            + \"/ZOOM LINK or VENUE /DAYS at TIME /NUMBER OF WEEKS                - add a class \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            + \"add activity /ONLINE or OFFLINE /ZOOM LINK or VENUE /DATE at TIME - add an activity\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            + \"show schedule                                                     - display schedule\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    private static final String flashcardCommands \u003d \"Here are the flashcard commands available:\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            + \"add     - adds a question and answer to the flashcard deck\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            + \"list    - shows the flashcards that have been added\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            + \"test    - user can attempt to answer a random question from the flashcard deck\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            + \"back    - exit test mode and go back to flashcard main\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void printHelpMessage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(generalCommands);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.lineSeparator();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "farice9"
        },
        "content": "        Mode currentMode \u003d StudyIt.getCurrentMode();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "farice9"
        },
        "content": "        if (currentMode \u003d\u003d Mode.BOOKMARK) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "farice9"
        },
        "content": "            printBookmarkHelp();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (currentMode \u003d\u003d Mode.TIMETABLE) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "farice9"
        },
        "content": "            printTimetableHelp();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (currentMode \u003d\u003d Mode.ACADEMIC) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "farice9"
        },
        "content": "            printAcademicHelp();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } else if (currentMode \u003d\u003d Mode.FLASHCARD) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "farice9"
        },
        "content": "            printFlashcardHelp();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "farice9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.lineSeparator();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(currentModes);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "farice9"
        },
        "content": "    //TODO: Fill this up after you\u0027re done"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void printBookmarkHelp() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(bookmarkCommands);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "farice9"
        },
        "content": "    //TODO: Fill this up after you\u0027re done"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void printTimetableHelp() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        System.out.println(timetableCommand);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "farice9"
        },
        "content": "    //TODO: Fill this up after you\u0027re done"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void printAcademicHelp() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        System.out.println(academicCommands);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void printFlashcardHelp() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        System.out.println(flashcardCommands);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "farice9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 5,
      "hailqueenflo": 6,
      "slightlyharp": 7,
      "luziyi9898": 10,
      "farice9": 53
    }
  },
  {
    "path": "src/main/java/MainMenu.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "farice9"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "farice9"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "farice9"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "farice9"
        },
        "content": "public class MainMenu extends Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "farice9"
        },
        "content": "    private static DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "farice9"
        },
        "content": "    private static LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "farice9"
        },
        "content": "    private static String nowFormatted \u003d dateTimeFormat.format(now);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "farice9"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d LINE_DIVIDER + System.lineSeparator()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"Welcome to Study It! Your personal study assistant!\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"\\n\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"Current date \u0026 time : \" + nowFormatted"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"\\n\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"Let\u0027s get productive! :)\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "farice9"
        },
        "content": "            + LINE_DIVIDER;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void printWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "farice9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "farice9": 22
    }
  },
  {
    "path": "src/main/java/Mode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "farice9"
        },
        "content": "public enum Mode {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "farice9"
        },
        "content": "    MENU,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "farice9"
        },
        "content": "    BOOKMARK,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "farice9"
        },
        "content": "    TIMETABLE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "farice9"
        },
        "content": "    ACADEMIC,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "farice9"
        },
        "content": "    FLASHCARD"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "farice9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "farice9": 7
    }
  },
  {
    "path": "src/main/java/ModeNames.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "farice9"
        },
        "content": "public class ModeNames {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static final String BOOKMARK_NAME \u003d \"bookmark\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static final String TIMETABLE_NAME \u003d \"timetable\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static final String ACADEMIC_NAME \u003d \"academic\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static final String FLASHCARD_NAME \u003d \"flashcard\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static final String MENU_NAME \u003d \"menu\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static String getCurrentModeName() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "farice9"
        },
        "content": "        Mode currentMode \u003d StudyIt.getCurrentMode();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "farice9"
        },
        "content": "        switch (currentMode) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "farice9"
        },
        "content": "        case BOOKMARK:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return BOOKMARK_NAME;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "farice9"
        },
        "content": "        case TIMETABLE:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return TIMETABLE_NAME;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "farice9"
        },
        "content": "        case ACADEMIC:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return ACADEMIC_NAME;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "farice9"
        },
        "content": "        case FLASHCARD:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return FLASHCARD_NAME;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "farice9"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "farice9"
        },
        "content": "            return MENU_NAME;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "farice9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "farice9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "farice9": 24
    }
  },
  {
    "path": "src/main/java/StudyIt.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "farice9"
        },
        "content": "import academic.Grade;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "farice9"
        },
        "content": "import academic.Person;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import timetable.TimeTableRun;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import flashcard.FlashcardRun;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkCategory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.NusCategory;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.ZoomCategory;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "farice9"
        },
        "content": "public class StudyIt {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static ArrayList\u003cBookmarkCategory\u003e bookmarkCategories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "farice9"
        },
        "content": "    private static Mode currentMode \u003d Mode.MENU;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void changeMode(Mode destinationMode) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "farice9"
        },
        "content": "        currentMode \u003d destinationMode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static Mode getCurrentMode() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "farice9"
        },
        "content": "        return currentMode;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public static TimeTableRun timeTableRun \u003d new TimeTableRun();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static FlashcardRun flashcardRun \u003d new FlashcardRun();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static ArrayList\u003cGrade\u003e currentGrades \u003d new ArrayList\u003c\u003e();//TODO change to local storage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static ArrayList\u003cPerson\u003e listOfPerson \u003d new ArrayList\u003c\u003e(); //TODO change to local storage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public StudyIt() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        bookmarkCategories.add(new NusCategory());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        bookmarkCategories.add(new ZoomCategory());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "farice9"
        },
        "content": "        //assert false : \"dummy assertion\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "farice9"
        },
        "content": "        MainMenu.printWelcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        new StudyIt().run();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "farice9"
        },
        "content": "        CommandType commandType;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "farice9"
        },
        "content": "        // Repeatedly receive \u0026 process user command until \"exit\" is given"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "farice9"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "farice9"
        },
        "content": "            // Collect user\u0027s command \u0026 identify the type"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "farice9"
        },
        "content": "            String command \u003d Ui.inputCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "farice9"
        },
        "content": "            commandType \u003d CommandParser.getCommandType(command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "farice9"
        },
        "content": "            Command.executeCommand(command, commandType, bookmarkCategories, flashcardRun,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "farice9"
        },
        "content": "                    timeTableRun, currentGrades, listOfPerson);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } while (commandType !\u003d CommandType.EXIT_PROGRAM);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "farice9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hailqueenflo": 3,
      "lingsihui": 10,
      "slightlyharp": 5,
      "farice9": 33
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "farice9"
        },
        "content": "import bookmark.BookmarkUi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "farice9"
        },
        "content": "import exceptions.InvalidModeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "farice9"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "farice9"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static final String LINE_DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void printDivider() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "farice9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "farice9"
        },
        "content": "     * Receive command input from the user via terminal."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "farice9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "farice9"
        },
        "content": "     * @return the command input as a String"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "farice9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static String inputCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "farice9"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "farice9"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "farice9"
        },
        "content": "        command \u003d in.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "farice9"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "farice9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "farice9"
        },
        "content": "     * Prints text with line divider above and below the text."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "farice9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "farice9"
        },
        "content": "     * @param text any String type text"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "farice9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void printLine(String text) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(LINE_DIVIDER + \"\\n\" + text + \"\\n\" + LINE_DIVIDER);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void printExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(LINE_DIVIDER + \"\\nSee you again soon!!!\\n\" + LINE_DIVIDER);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void printLocation() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "farice9"
        },
        "content": "        printLine(\"You are currently at \" + ModeNames.getCurrentModeName() + \"!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void changeModeCommand(String command) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "farice9"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "farice9"
        },
        "content": "            Mode newMode \u003d CommandParser.getDestinationMode(command);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "farice9"
        },
        "content": "            StudyIt.changeMode(newMode);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "farice9"
        },
        "content": "            printLine(\"Mode changed! You are now at: \" + ModeNames.getCurrentModeName());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "farice9"
        },
        "content": "            printModeIntro(newMode);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "farice9"
        },
        "content": "        } catch (InvalidModeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "farice9"
        },
        "content": "            printLine(\"Invalid mode name! Please try again.\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "farice9"
        },
        "content": "                    + \"You are still at: \" + ModeNames.getCurrentModeName());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "farice9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void printModeIntro(Mode newMode) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "farice9"
        },
        "content": "        // Prints introduction to the mode (if any)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "farice9"
        },
        "content": "        if (newMode \u003d\u003d Mode.BOOKMARK) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "farice9"
        },
        "content": "            BookmarkUi.printWelcomeBookmarkMessage();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "farice9"
        },
        "content": "            BookmarkUi.showBookmarkCategoryList(StudyIt.bookmarkCategories);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "farice9"
        },
        "content": "            printDivider();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "farice9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void exitMode() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "farice9"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(\"Exited \" + ModeNames.getCurrentModeName() + \"!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "farice9"
        },
        "content": "        StudyIt.changeMode(Mode.MENU); //TODO: Check UI"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(\"You are now back at: \" + ModeNames.getCurrentModeName());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "farice9"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "farice9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "farice9": 72
    }
  },
  {
    "path": "src/main/java/academic/Grade.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "package academic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": " * Represents a grade for a module in study-it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "public class Grade {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    protected String moduleName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    protected Integer moduleCredits;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    protected String moduleGrade;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    public static String[] listOfGrades \u003d new String[]{\"a+\",\"a\",\"a-\",\"b+\",\"b\",\"b-\",\"c+\",\"c\",\"d+\",\"d\",\"f\"};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    public Grade(String name, Integer credits, String grade) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        this.moduleName \u003d name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        this.moduleCredits \u003d credits;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        this.moduleGrade \u003d grade;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    public static Integer getModuleCredits(Grade grade) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        return grade.moduleCredits;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    public static String getModuleGrade(Grade grade) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        return grade.moduleGrade;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    public static double convertLetterToCredit(String input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        switch (input.trim().toLowerCase()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        case \"a+\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        case \"a\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            return 5.0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        case \"a-\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            return 4.5;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        case \"b+\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            return 4.0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        case \"b\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            return 3.5;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        case \"b-\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            return 3.0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        case \"c+\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            return 2.5;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        case \"c\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            return 2.0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        case \"d+\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            return 1.5;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        case \"d\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            return 1.0;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        case \"f\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "luziyi9898": 56
    }
  },
  {
    "path": "src/main/java/academic/GradeBook.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "package academic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": " * Represents a grade book in study-it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "public class GradeBook {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void addGrade(String[] args, ArrayList\u003cGrade\u003e currentGrades) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "farice9"
        },
        "content": "        currentGrades.add(new Grade(args[0],Integer.parseInt(args[1]),args[2]));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static String printCap(ArrayList\u003cGrade\u003e currentGrades) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        double totalGradeScore \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        int totalCredits \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "farice9"
        },
        "content": "        for (Grade item : currentGrades) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            totalCredits +\u003d Grade.getModuleCredits(item);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            totalGradeScore +\u003d Grade.convertLetterToCredit(Grade.getModuleGrade(item)) * Grade.getModuleCredits(item);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        assert totalCredits !\u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        return \"Current CAP is \" + totalGradeScore / totalCredits + \".\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static String printListOfGrades(ArrayList\u003cGrade\u003e currentGrades) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        int listIndex \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        StringBuilder listToPrint \u003d new StringBuilder();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "farice9"
        },
        "content": "        for (Grade grade : currentGrades) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            if (grade !\u003d null) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                listToPrint.append(listIndex + 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                listToPrint.append(\". [\" + grade.moduleName + \"]\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                listToPrint.append(\" [\" + grade.moduleCredits + \"MC]\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                listToPrint.append(\" [\" + grade.moduleGrade + \"]\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                listIndex++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "farice9"
        },
        "content": "                if (currentGrades.size() !\u003d listIndex) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                    listToPrint.append(\"\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        return listToPrint.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "luziyi9898": 35,
      "farice9": 7
    }
  },
  {
    "path": "src/main/java/academic/Person.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "package academic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": " * Represents a person in study-it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "public class Person {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    protected String nameOfPerson;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    protected String contactNumberOfPerson;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    protected String emailOfPerson;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    public Person(String name, String number, String email) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        this.nameOfPerson \u003d name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        this.contactNumberOfPerson \u003d number;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        this.emailOfPerson \u003d email;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    public String getDetailsOfPerson() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        return this.nameOfPerson + \"[\" + this.contactNumberOfPerson + \"][\" + this.emailOfPerson + \"]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "luziyi9898": 20
    }
  },
  {
    "path": "src/main/java/academic/PersonBook.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "package academic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": " * Represents a grade book in study-it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "public class PersonBook {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void addPerson(String[] args, ArrayList\u003cPerson\u003e listOfPerson) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "farice9"
        },
        "content": "        listOfPerson.add(new Person(args[0],args[1],args[2]));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static String printPersonBook(ArrayList\u003cPerson\u003e listOfPerson) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        int listIndex \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        StringBuilder listToPrint \u003d new StringBuilder();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "farice9"
        },
        "content": "        for (Person person : listOfPerson) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            if (person !\u003d null) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                listToPrint.append(listIndex + 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                listToPrint.append(\". [\" + person.nameOfPerson + \"]\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                listToPrint.append(\" [\" + person.contactNumberOfPerson + \"]\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                listToPrint.append(\" [\" + person.emailOfPerson + \"]\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                listIndex++;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "farice9"
        },
        "content": "                if (listOfPerson.size() !\u003d listIndex) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                    listToPrint.append(\"\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        return listToPrint.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "luziyi9898": 27,
      "farice9": 5
    }
  },
  {
    "path": "src/main/java/bookmark/BookmarkCategory.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public abstract class BookmarkCategory {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public abstract String getName();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public abstract ArrayList\u003cBookmarkList\u003e getLinks();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public abstract void addLink(String link);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public abstract void removeLink(int number);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 13
    }
  },
  {
    "path": "src/main/java/bookmark/BookmarkList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class BookmarkList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private String link;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public BookmarkList(String link) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.link \u003d link;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getLink() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return link;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 14
    }
  },
  {
    "path": "src/main/java/bookmark/BookmarkUi.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "farice9"
        },
        "content": "import bookmark.BookmarkCategory;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "farice9"
        },
        "content": "import bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class BookmarkUi {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public BookmarkUi() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void printWelcomeBookmarkMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Welcome to B00KMARK!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(\"Choose your category by typing \\\"bm \u003ccategory index\u003e!\\\"\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "farice9"
        },
        "content": "    public static void showBookmarkCategoryList(ArrayList\u003cBookmarkCategory\u003e bookmarkCategories) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(\"Here are the categories available:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "farice9"
        },
        "content": "        for (BookmarkCategory category: bookmarkCategories) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            System.out.println(i + \".\" + category.getName());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void showBookmarkLinkList(ArrayList\u003cBookmarkList\u003e links) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(\"Bookmarks:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        if (links.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "farice9"
        },
        "content": "            System.out.println(\"\u003cempty\u003e\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            for (BookmarkList link: links) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                System.out.println(i + \".\" + link.getLink());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(\"Use \\\"exit\\\" to exit the mode or enter another category\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "farice9"
        },
        "content": "                + \"using \\\"bm \u003ccategory index\u003e\\\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void showBookmarkList(ArrayList\u003cBookmarkCategory\u003e categories) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Here is the list\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        for (int i \u003d 0; i \u003c categories.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "farice9"
        },
        "content": "            System.out.println(\"Category: \" + categories.get(i).getName());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            showBookmarkLinkList(categories.get(i).getLinks());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void showInvalidBookmarkCommand() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Invalid Bookmark commands\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void printChooseCategoryMessage() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Please choose a category.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 51,
      "farice9": 13
    }
  },
  {
    "path": "src/main/java/bookmark/InvalidBookmarkCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class InvalidBookmarkCommandException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 4
    }
  },
  {
    "path": "src/main/java/bookmark/NusCategory.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class NusCategory extends BookmarkCategory {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private String name \u003d \"NUS\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private ArrayList\u003cBookmarkList\u003e links \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public ArrayList\u003cBookmarkList\u003e getLinks() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return links;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void addLink(String link) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        links.add(new BookmarkList(link));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void removeLink(int number) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        links.remove(number - 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 24
    }
  },
  {
    "path": "src/main/java/bookmark/ZoomCategory.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class ZoomCategory extends BookmarkCategory {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private String name \u003d \"Zoom\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private ArrayList\u003cBookmarkList\u003e links \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public ArrayList\u003cBookmarkList\u003e getLinks() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return links;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void addLink(String link) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        links.add(new BookmarkList(link));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void removeLink(int number) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        links.remove(number - 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 24
    }
  },
  {
    "path": "src/main/java/bookmark/commands/AddLinkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package bookmark.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkCategory;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class AddLinkCommand extends BookmarkCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final int ADD_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private String link;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private int categoryNumber;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public AddLinkCommand(String line, int categoryNumber) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.categoryNumber \u003d categoryNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        link \u003d line.substring(ADD_LENGTH);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void executeCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        if (categoryNumber \u003d\u003d 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            ui.printChooseCategoryMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            categories.get(categoryNumber - 1).addLink(link);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            ui.showBookmarkLinkList(categories.get(categoryNumber - 1).getLinks());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    //TODO add empty link exceptions"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    //TODO add invalid link exceptions"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 29
    }
  },
  {
    "path": "src/main/java/bookmark/commands/BackCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package bookmark.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkCategory;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class BackCommand extends BookmarkCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private String backCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public BackCommand(String backCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.backCommand \u003d backCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void executeCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        if (backCommand.equals(\"Goodbye\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            ui.printGoodbyeMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            ui.showBookmarkCategoryList(categories);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 21
    }
  },
  {
    "path": "src/main/java/bookmark/commands/BookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package bookmark.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkCategory;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public abstract class BookmarkCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public abstract void executeCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 10
    }
  },
  {
    "path": "src/main/java/bookmark/commands/ChangeModeCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package bookmark.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkCategory;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class ChangeModeCommand extends BookmarkCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private int categoryNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public ChangeModeCommand(int chosenCategory) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.categoryNumber \u003d chosenCategory;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void executeCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "farice9"
        },
        "content": "        int categoryNumberInList \u003d categoryNumber - 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(\"You are now in \" + categories.get(categoryNumberInList).getName() + \" category\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(\"The following are your current bookmarks in this category\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        ui.showBookmarkLinkList(categories.get(categoryNumber - 1).getLinks());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "farice9"
        },
        "content": "        System.out.println(\"Add new bookmarks by using \\\"add \u003clink\u003e\\\"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    //Todo throw exceptions for invalid input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    //Todo throw exceptions for category number \u003d 0 or category number \u003e size"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    //Todo throw exceptions saying that it is already in the mode"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 22,
      "farice9": 4
    }
  },
  {
    "path": "src/main/java/bookmark/commands/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package bookmark.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkCategory;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class ListCommand extends BookmarkCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private int categoryNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public ListCommand(int categoryNumber) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.categoryNumber \u003d categoryNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void executeCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        ui.showBookmarkList(categories);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 19
    }
  },
  {
    "path": "src/main/java/bookmark/commands/RemoveLinkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package bookmark.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkCategory;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class RemoveLinkCommand extends BookmarkCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private int linkNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private int categoryNumber;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public RemoveLinkCommand(String line, int categoryNumber) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.categoryNumber \u003d categoryNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        linkNumber \u003d Integer.parseInt(line.substring(3));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void executeCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        categories.get(categoryNumber - 1).removeLink(linkNumber);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        ui.showBookmarkLinkList(categories.get(categoryNumber - 1).getLinks());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    //Todo throw exceptions for invalid input, not a number"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    //Todo throw exceptions for input number \u003d 0 or input number \u003e size"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 24
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "farice9"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "farice9"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "farice9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "farice9": 4
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidGradeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "public class InvalidGradeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "luziyi9898": 4
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidMcException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "public class InvalidMcException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "luziyi9898": 4
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidModeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "farice9"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "farice9"
        },
        "content": "public class InvalidModeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "farice9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "farice9": 4
    }
  },
  {
    "path": "src/main/java/flashcard/Flashcard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "package flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "public class Flashcard {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public String question;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public String answer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    Flashcard(String question, String answer) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        return question + \"|\" + answer + \"\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hailqueenflo": 16
    }
  },
  {
    "path": "src/main/java/flashcard/FlashcardDeck.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "package flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "public class FlashcardDeck {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public ArrayList\u003cFlashcard\u003e flashcardDeck;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public FlashcardDeck() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        flashcardDeck \u003d new ArrayList\u003cFlashcard\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public void addCards() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        System.out.println(\"Please enter question: \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        String question \u003d in.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        System.out.println(\"Please enter answer: \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        String answer \u003d in.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        flashcardDeck.add(new Flashcard(question, answer));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        System.out.println(\"You have successfully created the flashcard below: \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                + \"Question: \" + question + \"\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                + \"Answer: \" + answer);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public void listCards() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        System.out.println(\"Here is the list of flashcards you have: \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        int cardIndex \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        for (Flashcard flashcard: flashcardDeck) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            System.out.println(cardIndex + \". \" + flashcard.question + \"|\" + flashcard.answer);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            cardIndex++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public void testRandomCard() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        String attempt \u003d \"null\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        System.out.println(\"You have entered the test mode.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        while (!attempt.equals(\"back\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            Random random \u003d new Random();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            int randomIndex \u003d random.nextInt(flashcardDeck.size());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            System.out.println(\"What is the answer to this question?\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            System.out.println(flashcardDeck.get(randomIndex).question);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            attempt \u003d in.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            while (!attempt.equals(flashcardDeck.get(randomIndex).answer) \u0026\u0026 !attempt.equals(\"back\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                System.out.println(\"Incorrect! Try again?\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                attempt \u003d in.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            if (attempt.equals(\"back\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                System.out.println(\"Exiting test mode...\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                System.out.println(\"This is the right answer!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hailqueenflo": 59
    }
  },
  {
    "path": "src/main/java/flashcard/FlashcardRun.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "package flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "public class FlashcardRun {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final String TEST \u003d \"test\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public FlashcardDeck flashcardDeck;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public FlashcardStorage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final String ADD \u003d \"add\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final String EXIT \u003d \"exit\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public FlashcardRun() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        flashcardDeck \u003d new FlashcardDeck();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "farice9"
        },
        "content": "            storage \u003d new FlashcardStorage(\"data/flashcard.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        storage.readFromFile(flashcardDeck);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public void run(String command) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        case ADD:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            flashcardDeck.addCards();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            flashcardDeck.listCards();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        case TEST:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            flashcardDeck.testRandomCard();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            System.out.println(\"Invalid command. Valid commands are \u0027add\u0027, \u0027list\u0027. \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    + \"Use \u0027exit\u0027 to exit the flashcard mode.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        storage.writeToFile(flashcardDeck);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hailqueenflo": 40,
      "farice9": 1
    }
  },
  {
    "path": "src/main/java/flashcard/FlashcardStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "package flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "public class FlashcardStorage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public ArrayList\u003cFlashcard\u003e flashcardDeck;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "farice9"
        },
        "content": "    private final String dirPath \u003d \"data\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public int fileFlashcardsCounter \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public FlashcardStorage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "farice9"
        },
        "content": "        // Creates the data directory"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "farice9"
        },
        "content": "        File fileDir \u003d new File(dirPath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "farice9"
        },
        "content": "        if (!fileDir.exists()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "farice9"
        },
        "content": "            fileDir.mkdir();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "farice9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public void writeToFile(FlashcardDeck flashcardDeck) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            for (Flashcard flashcard : flashcardDeck.flashcardDeck) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                fw.write(flashcard.writeToFile());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            System.out.println(\"Something went wrong!\" + e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public void readFromFile(FlashcardDeck flashcardDeck) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            Flashcard flashcard;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                String[] parseCard \u003d s.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                String question \u003d parseCard[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                String answer \u003d parseCard[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                flashcard \u003d new Flashcard(question, answer);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                flashcardDeck.flashcardDeck.add(flashcard);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            System.out.println(\"This file is not found, creating a new file now!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hailqueenflo": 50,
      "farice9": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import flashcard.FlashcardDeck;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"What is your name?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello \" + in.nextLine());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        FlashcardDeck flashcardDeck \u003d new FlashcardDeck();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hailqueenflo": 3,
      "lingsihui": 1,
      "-": 21
    }
  },
  {
    "path": "src/main/java/timetable/Activity.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public class Activity extends Event {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public Activity(String activityName, boolean isOnline, String linkOrVenue, Duration duration) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        super(activityName, isOnline, linkOrVenue, EventType.A);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        super.addPeriod(duration);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public void addPeriod(Duration duration) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public String getStorageString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 18
    }
  },
  {
    "path": "src/main/java/timetable/DateList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public class DateList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public List\u003cEventList\u003e dateList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public DateList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        dateList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public void addLesson(Event lesson) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        for (Duration duration: lesson.periods) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            boolean existList \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            for (EventList eventList: dateList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                if (eventList.dateTag \u003d\u003d duration.startDateTime.toLocalDate()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    eventList.addEvent(lesson);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    existList \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            if (!existList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                EventList newList \u003d new EventList(duration.startDateTime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                newList.addEvent(lesson);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                dateList.add(newList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 30
    }
  },
  {
    "path": "src/main/java/timetable/Duration.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public class Duration {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public LocalDateTime startDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public LocalDateTime endDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public List\u003cInteger\u003e timeSlot;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public Duration(LocalDateTime startDateTime, LocalDateTime endDateTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.startDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.endDateTime \u003d endDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        timeSlot \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        int start \u003d getTime(startDateTime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        int end \u003d getTime(endDateTime);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        for (int time \u003d start; time \u003c end; time +\u003d 100) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            timeSlot.add(time);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public Duration(LocalDateTime startDateTime) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.startDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.endDateTime \u003d startDateTime.plusHours(1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        timeSlot \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        int start \u003d getTime(startDateTime);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        int end \u003d getTime(endDateTime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        for (int time \u003d start; time \u003c end; time +\u003d 100) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            timeSlot.add(time);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    private int getTime(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        return dateTime.getHour() * 100 + dateTime.getMinute();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public boolean containTimeSlot(int timeSlot) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        if (this.timeSlot.contains(timeSlot)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 45
    }
  },
  {
    "path": "src/main/java/timetable/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public abstract class Event {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public boolean isOnline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public String linkOrVenue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public List\u003cDuration\u003e periods;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public EventType eventType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public Event(String name, boolean isOnline, String linkOrVenue,EventType eventType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.isOnline \u003d isOnline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.linkOrVenue \u003d linkOrVenue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        periods \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.eventType \u003d eventType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public void addPeriod(Duration period) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.periods.add(period);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public abstract String getStorageString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 26
    }
  },
  {
    "path": "src/main/java/timetable/EventList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public class EventList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public LocalDate dateTag;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public List\u003cEvent\u003e events;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public EventList(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        dateTag \u003d dateTime.toLocalDate();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        events \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public void addEvent(Event event) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        events.add(event);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 20
    }
  },
  {
    "path": "src/main/java/timetable/EventType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public enum EventType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    A,L"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 5
    }
  },
  {
    "path": "src/main/java/timetable/Lesson.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public class Lesson extends Event {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public int numPerWeek;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public Lesson(String moduleCode, String linkOrVenue, boolean isOnline, int numPerWeek) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        super(moduleCode, isOnline,linkOrVenue,EventType.L);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.numPerWeek \u003d numPerWeek;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public String getStorageString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        String storageString \u003d \"|\" + numPerWeek + \"|\" + super.periods.size();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        for (Duration period : super.periods) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            storageString \u003d String.format(\"%s|%s\", storageString, period.startDateTime.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            storageString \u003d String.format(\"%s|%s\", storageString, period.endDateTime.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        return storageString;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 22
    }
  },
  {
    "path": "src/main/java/timetable/Message.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public class Message {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public static final String printSuccessfulClassAddition \u003d \"This class has been added successfully! \""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            + \"Use \u0027show schedule\u0027 to view your timetable.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public static final String printShowSchedule \u003d \"This is your schedule for the next 7 days.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public static final String printInvalidEvent \u003d \"Invalid event!\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            + \"Please use this format to add events: add class /MODULE CODE\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            + \"/ONLINE|OFFLINE/ZOOM LINK|VENUE/DAYS at TIME/NUMBER OF WEEKS\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 14
    }
  },
  {
    "path": "src/main/java/timetable/Table.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public class Table {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    private static final String space \u003d \" \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public static void printTable(List\u003cEventList\u003e dateList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        System.out.printf(\"%10s\", space);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        for (int i \u003d 0; i \u003c 2400; i +\u003d 100) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            String time \u003d String.format(\"%04d\", i);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            System.out.printf(\"|%-10s\", time);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        System.out.println(\"|\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            System.out.printf(\"%-10s\", LocalDate.now().plusDays(i).getDayOfWeek().name());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            boolean skip \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            for (int dateListIndex \u003d 0; dateListIndex \u003c dateList.size() \u0026\u0026 !skip; dateListIndex++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                if (dateList.get(dateListIndex).dateTag.equals(LocalDate.now().plusDays(i))) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    for (int j \u003d 0; j \u003c 24; j++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                        for (int eventListIndex \u003d 0; eventListIndex \u003c dateList.get(dateListIndex).events.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                             eventListIndex++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                            Event current \u003d dateList.get(dateListIndex).events.get(eventListIndex);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                            boolean isFree \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                            for (Duration period: current.periods) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                                if (period.containTimeSlot(j * 100) \u0026\u0026 period.startDateTime"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                                        .toLocalDate().equals(dateList.get(dateListIndex).dateTag)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                                    System.out.printf(\"|%-10s\", current.name);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                                    isFree \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                            if (isFree) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                                System.out.printf(\"|%-10s\", space);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    skip \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            for (int j \u003d 0; j \u003c 24 \u0026\u0026 !skip; j++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                System.out.printf(\"|%-10s\", space);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            System.out.println(\"|\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 49
    }
  },
  {
    "path": "src/main/java/timetable/TimeTableParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public class TimeTableParser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public static void commandParser(String command, DateList dateList, TimeTableStorage storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        if (command.equals(\"show schedule\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            System.out.println(Message.printShowSchedule);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            Table.printTable(dateList.dateList);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            String[] words \u003d command.split(\" \", 3);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            String action \u003d words[0];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            String type \u003d words[1];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            if (action.equals(\"add\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                case \"activity\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                case \"class\": {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    Lesson lesson \u003d addClass(words[2]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    dateList.addLesson(lesson);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    storage.writeFile(lesson);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    System.out.println(Message.printSuccessfulClassAddition);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    System.out.println((\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            System.out.println(Message.printInvalidEvent);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    private static Lesson addClass(String classInfo) throws ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        String [] phrase \u003d classInfo.substring(1).split(\" /\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        String moduleCode \u003d phrase[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        boolean isOnline;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        isOnline \u003d phrase[1].equals(\"online\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        String linkOrVenue \u003d phrase[2];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        String [] periods \u003d phrase[3].split(\", \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        LocalDateTime start \u003d getDateTime(classInfo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        int startDayNum \u003d start.getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        int repeat \u003d Integer.parseInt(phrase[4].split(\" \")[0]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        Lesson lesson \u003d new Lesson(moduleCode, linkOrVenue, isOnline, repeat);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        for (int i \u003d 0; i \u003c repeat; i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            for (String period : periods) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                String day \u003d period.split(\" \")[0].toUpperCase().replace(\" \", \"\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                String time \u003d period.split(\" \")[1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                int dayNum \u003d DayOfWeek.valueOf(day).getValue();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                int startTime \u003d Integer.parseInt(time.split(\"-\")[0]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                int endTime \u003d Integer.parseInt(time.split(\"-\")[1].replaceAll(\"[^0-9]\", \"\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                if (time.contains(\"pm\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    startTime +\u003d 12;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    endTime +\u003d 12;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                int daysDifference \u003d dayNum - startDayNum;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                if (daysDifference \u003c 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    daysDifference +\u003d 7;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                LocalDateTime startDateTime \u003d start.plusDays(daysDifference).plusHours(startTime).plusDays(7 * i);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                LocalDateTime endDateTime \u003d startDateTime.withHour(endTime).plusDays(7 * i);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                Duration duration \u003d new Duration(startDateTime, endDateTime);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                lesson.addPeriod(duration);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        return lesson;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public static void fileParser(String command, DateList dateList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        String[] words \u003d command.split(\"\\\\|\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        EventType eventType \u003d EventType.valueOf(words[0]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        String name \u003d words[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        String linkOrVenue \u003d words[2];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        boolean isOnline \u003d Boolean.parseBoolean(words[3]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        int numPerWeek \u003d Integer.parseInt(words[4]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        switch (eventType) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        case L: {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            int durationNum \u003d Integer.parseInt(words[5]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            Lesson lesson \u003d new Lesson(name, linkOrVenue, isOnline, numPerWeek);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            for (int i \u003d 0; i \u003c durationNum; i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                LocalDateTime start \u003d LocalDateTime.parse(words[5 + 2 * i + 1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                LocalDateTime end \u003d LocalDateTime.parse(words[5 + 2 * i + 2]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                Duration duration \u003d new Duration(start, end);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                lesson.addPeriod(duration);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            dateList.addLesson(lesson);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        case A: {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            LocalDateTime start \u003d LocalDateTime.parse(words[5]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            LocalDateTime end \u003d LocalDateTime.parse(words[6]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            Duration duration \u003d new Duration(start, end);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            Activity activity \u003d new Activity(name, isOnline, linkOrVenue, duration);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            dateList.addLesson(activity);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    private static LocalDateTime getDateTime(String command)throws ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        String[] dateTime;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        String[] date;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        int fromIndex \u003d command.indexOf(\"from\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        dateTime \u003d command.substring(fromIndex + 5).split(\" \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        date \u003d dateTime[0].split(\"/\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        return LocalDateTime.of(Integer.parseInt(date[2]),Integer.parseInt(date[1]), Integer.parseInt(date[0]),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                0,0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 114
    }
  },
  {
    "path": "src/main/java/timetable/TimeTableRun.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public class TimeTableRun {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public DateList events;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public TimeTableStorage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public TimeTableRun() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        events \u003d new DateList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "farice9"
        },
        "content": "        storage \u003d new TimeTableStorage(\"data/timetable.txt\", events);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public void run(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        TimeTableParser.commandParser(command, events, storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 17,
      "farice9": 1
    }
  },
  {
    "path": "src/main/java/timetable/TimeTableStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public class TimeTableStorage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    private static File taskFile;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "farice9"
        },
        "content": "    private final String dirPath \u003d \"data\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public TimeTableStorage(String filePath, DateList dateList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "farice9"
        },
        "content": "        // Creates data directory"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "farice9"
        },
        "content": "        File fileDir \u003d new File(dirPath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "farice9"
        },
        "content": "        if (!fileDir.exists()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "farice9"
        },
        "content": "            fileDir.mkdir();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "farice9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        taskFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        checkFile(dateList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public void checkFile(DateList dateList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            if (taskFile.createNewFile()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                System.out.println(\"New file created for time table\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                loadFile(dateList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            System.out.println(\"An error occurred: \" + e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    private void loadFile(DateList dateList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            Scanner s \u003d new Scanner(taskFile);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                String command \u003d s.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                TimeTableParser.fileParser(command, dateList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public void writeFile(Event event) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            if (event.eventType.equals(EventType.L)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                fw.write(\"L|\" + event.name + \"|\" + event.linkOrVenue + \"|\" + event.isOnline"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                        + event.getStorageString() + System.lineSeparator());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            } else if (event.eventType.equals(EventType.A)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                fw.write(\"A|\" + event.name + \"|\" + event.linkOrVenue + \"|\" + event.isOnline"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                        + event.getStorageString() + System.lineSeparator());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            System.out.println(\"Something went wrong\" + e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 59,
      "farice9": 8
    }
  },
  {
    "path": "src/test/java/AcademicParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import exceptions.InvalidGradeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import exceptions.InvalidMcException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import javax.print.attribute.standard.Destination;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "class AcademicParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    void getCommandType_correctCommandInputs_success() throws InvalidCommandException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        AcademicCommandParser academicCommandParser \u003d new AcademicCommandParser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        assertEquals(AcademicCommandType.ADD_CONTACT, academicCommandParser.getAcademicCommandType(\"add contact\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        assertEquals(AcademicCommandType.CHECK_CONTACT, academicCommandParser.getAcademicCommandType(\"check contact\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        assertEquals(AcademicCommandType.ADD_GRADE, academicCommandParser.getAcademicCommandType(\"add grade\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        assertEquals(AcademicCommandType.CHECK_GRADE, academicCommandParser.getAcademicCommandType(\"check grade\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        assertEquals(AcademicCommandType.LIST_GRADE, academicCommandParser.getAcademicCommandType(\"list grade\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    void evaluateInput_getContactCommand_parsedCorrectly() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        AcademicCommandParser parser \u003d new AcademicCommandParser();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        String input \u003d \"add contact c/Prof Lim  m/81234567  e/E7654321@u.nus.edu\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        final String[] result \u003d parser.getContact(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        final String[] expectedResult \u003d {\"Prof Lim\",\"81234567\",\"E7654321@u.nus.edu\"};"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        assertArrayEquals(expectedResult,result);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    void evaluateInput_getGradeCommand_parsedCorrectly() throws InvalidGradeException, InvalidMcException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        AcademicCommandParser parser \u003d new AcademicCommandParser();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        String input \u003d \"add grade n/CS2101  m/4  g/A-\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        final String[] result \u003d parser.getGrade(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        final String[] expectedResult \u003d {\"CS2101\",\"4\",\"A-\"};"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "        assertArrayEquals(expectedResult,result);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "luziyi9898"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "luziyi9898": 45
    }
  },
  {
    "path": "src/test/java/BookmarkParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.InvalidBookmarkCommandException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.commands.AddLinkCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.commands.BackCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.commands.ChangeModeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.commands.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.commands.RemoveLinkCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.commands.BookmarkCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "class BookmarkParserTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    void evaluateInput_listCommand_parsedCorrectly() throws InvalidBookmarkCommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        BookmarkParser parser \u003d new BookmarkParser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String input \u003d \"list\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        final BookmarkCommand result \u003d parser.evaluateInput(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(ListCommand.class));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    void evaluateInput_changeModeCommand_parsedCorrectly() throws InvalidBookmarkCommandException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        BookmarkParser parser \u003d new BookmarkParser();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String input \u003d \"bm 2\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        final BookmarkCommand result \u003d parser.evaluateInput(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(ChangeModeCommand.class));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    void evaluateInput_addCommand_parsedCorrectly() throws InvalidBookmarkCommandException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        BookmarkParser parser \u003d new BookmarkParser();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String input \u003d \"add http://facebook.com\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        final BookmarkCommand result \u003d parser.evaluateInput(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(AddLinkCommand.class));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    void evaluateInput_removeCommand_parsedCorrectly() throws InvalidBookmarkCommandException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        BookmarkParser parser \u003d new BookmarkParser();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String input \u003d \"rm 2\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        final BookmarkCommand result \u003d parser.evaluateInput(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(RemoveLinkCommand.class));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    void evaluateInput_backCommand_parsedCorrectly() throws InvalidBookmarkCommandException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        BookmarkParser parser \u003d new BookmarkParser();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String input \u003d \"back\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        final BookmarkCommand result \u003d parser.evaluateInput(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(BackCommand.class));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    void evaluateInput_invalidBookmarkCommand_expectExceptions() throws InvalidBookmarkCommandException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        BookmarkParser parser \u003d new BookmarkParser();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String input \u003d \"huhuhuh\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        assertThrows(InvalidBookmarkCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            parser.evaluateInput(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        });"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    void evaluateInput_nullCommand_expectExceptions() throws InvalidBookmarkCommandException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        BookmarkParser parser \u003d new BookmarkParser();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String input \u003d null;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        assertThrows(InvalidBookmarkCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            parser.evaluateInput(input);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        });"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 76
    }
  },
  {
    "path": "src/test/java/CommandParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "farice9"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "farice9"
        },
        "content": "import exceptions.InvalidModeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "farice9"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "farice9"
        },
        "content": "import javax.print.attribute.standard.Destination;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "farice9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "farice9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "farice9"
        },
        "content": "class CommandParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "farice9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "farice9"
        },
        "content": "    void testStandardizeCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "farice9"
        },
        "content": "        CommandParser commandParser \u003d new CommandParser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(\"this is a test\", commandParser.standardizeCommand(\" ThIs is A teST  \"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "farice9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "farice9"
        },
        "content": "    void getCommandType_correctCommandInputs_success() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "farice9"
        },
        "content": "        CommandParser commandParser \u003d new CommandParser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "farice9"
        },
        "content": "        // Checks if exit detects correctly when it is in main menu"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(CommandType.EXIT_PROGRAM, commandParser.getCommandType(\"exit\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(CommandType.LOCATION, commandParser.getCommandType(\"location\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(CommandType.CHANGE_MODE, commandParser.getCommandType(\"cd 3\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(CommandType.HELP, commandParser.getCommandType(\"help\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "farice9"
        },
        "content": "        // Checks if exit detects exit mode when inside one of the modes"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "farice9"
        },
        "content": "        StudyIt studyIt \u003d new StudyIt();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "farice9"
        },
        "content": "        studyIt.changeMode(Mode.ACADEMIC);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(CommandType.EXIT_MODE, commandParser.getCommandType(\"exit\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "farice9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "farice9"
        },
        "content": "    void getCommandType_incorrectCommandInput_unidentifiableCommandType() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "farice9"
        },
        "content": "        CommandParser commandParser \u003d new CommandParser();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(CommandType.UNIDENTIFIABLE, commandParser.getCommandType(\"asdhajskd\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "farice9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "farice9"
        },
        "content": "    void getDestinationMode_correctModeInputs_success() throws Exception {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "farice9"
        },
        "content": "        CommandParser commandParser \u003d new CommandParser();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "farice9"
        },
        "content": "        // Test for mode index input"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(Mode.MENU, commandParser.getDestinationMode(\"cd 1\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(Mode.BOOKMARK, commandParser.getDestinationMode(\"cd 2\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(Mode.TIMETABLE, commandParser.getDestinationMode(\"cd 3\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(Mode.ACADEMIC, commandParser.getDestinationMode(\"cd 4\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(Mode.FLASHCARD, commandParser.getDestinationMode(\"cd 5\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "farice9"
        },
        "content": "        // Test for mode name input"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(Mode.MENU, commandParser.getDestinationMode(\"cd menu\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(Mode.BOOKMARK, commandParser.getDestinationMode(\"cd bookmark\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(Mode.TIMETABLE, commandParser.getDestinationMode(\"cd timetable\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(Mode.ACADEMIC, commandParser.getDestinationMode(\"cd academic\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertEquals(Mode.FLASHCARD, commandParser.getDestinationMode(\"cd flashcard\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "farice9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "farice9"
        },
        "content": "    void getDestinationMode_incorrectModeNumber_exceptionThrown() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "farice9"
        },
        "content": "        CommandParser commandParser \u003d new CommandParser();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertThrows(InvalidModeException.class, () -\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "farice9"
        },
        "content": "            commandParser.getDestinationMode(\"cd 10\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "farice9"
        },
        "content": "        });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "farice9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "farice9"
        },
        "content": "    void getDestinationMode_incorrectModeName_exceptionThrown() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "farice9"
        },
        "content": "        CommandParser commandParser \u003d new CommandParser();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "farice9"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "farice9"
        },
        "content": "        assertThrows(InvalidModeException.class, () -\u003e {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "farice9"
        },
        "content": "            commandParser.getDestinationMode(\"cd easyA\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "farice9"
        },
        "content": "        });"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "farice9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "farice9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "farice9": 78
    }
  },
  {
    "path": "src/test/java/bookmark/commands/AddLinkCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package bookmark.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkCategory;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.NusCategory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.ZoomCategory;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "class AddLinkCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private BookmarkUi ui \u003d new BookmarkUi();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private ArrayList\u003cBookmarkCategory\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void executeCommand_addValidLinkCommand_addLinkCorrectly() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        categories.add(new NusCategory());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        categories.add(new ZoomCategory());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String inputString \u003d \"add huhuhuhu\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        int categoryNumber \u003d 2;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        AddLinkCommand command \u003d new AddLinkCommand(inputString,categoryNumber);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        command.executeCommand(ui,categories);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        assertEquals(categories.get(categoryNumber - 1).getLinks().size(), 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 28
    }
  },
  {
    "path": "src/test/java/bookmark/commands/RemoveLinkCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package bookmark.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkCategory;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.BookmarkUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.NusCategory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import bookmark.ZoomCategory;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "class RemoveLinkCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private BookmarkUi ui \u003d new BookmarkUi();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private ArrayList\u003cBookmarkCategory\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    void executeCommand_removeValidLinkCommand_removeLinkCorrectly() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        categories.add(new NusCategory());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        categories.add(new ZoomCategory());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String addLink \u003d \"add http://huhuhu\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String inputString \u003d \"rm 1\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        int categoryNumber \u003d 2;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        AddLinkCommand command \u003d new AddLinkCommand(addLink,categoryNumber);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        command.executeCommand(ui,categories);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        RemoveLinkCommand removeCommand \u003d new RemoveLinkCommand(inputString,categoryNumber);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        removeCommand.executeCommand(ui,categories);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        assertEquals(categories.get(categoryNumber - 1).getLinks().size(),0);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 28
    }
  }
]
