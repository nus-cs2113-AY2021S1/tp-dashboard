[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":"    implementation \u0027org.jetbrains:annotations:19.0.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":33,"author":{"gitId":"farice9"},"content":"    mainClassName \u003d \"StudyIt\""},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"}"},{"lineNumber":35,"author":{"gitId":"farice9"},"content":""},{"lineNumber":36,"author":{"gitId":"farice9"},"content":"jar {"},{"lineNumber":37,"author":{"gitId":"farice9"},"content":"    manifest {"},{"lineNumber":38,"author":{"gitId":"farice9"},"content":"        attributes ("},{"lineNumber":39,"author":{"gitId":"farice9"},"content":"            \u0027Main-Class\u0027: \u0027studyit.StudyIt\u0027"},{"lineNumber":40,"author":{"gitId":"farice9"},"content":"        )"},{"lineNumber":41,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":55,"author":{"gitId":"slightlyharp"},"content":"    enableAssertions \u003d true"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"slightlyharp":2,"farice9":9,"-":45}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio "},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:"},{"lineNumber":5,"author":{"gitId":"farice9"},"content":"![](./Images/TeamPhotos/yuanbing.png) | Yuan Bing | [Github](https://github.com/farice9) | [Portfolio](./team/farice9.md)"},{"lineNumber":6,"author":{"gitId":"luziyi9898"},"content":"![](./Images/TeamPhotos/sihui.png) | Si Hui | [Github](https://github.com/lingsihui) | [Portfolio](./team/lingsihui.md)"},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":"![](./Images/TeamPhotos/luziyi.png) | Lu Ziyi | [Github](https://github.com/luziyi9898) | [Portfolio](./team/luziyi9898.md)"},{"lineNumber":8,"author":{"gitId":"hailqueenflo"},"content":"![](./Images/TeamPhotos/florencelim.png) | Florence Lim | [Github](https://github.com/hailqueenflo) | [Portfolio](./team/hailqueenflo.md)"},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"![](./Images/TeamPhotos/yuheng.png) | Lin Yuheng | [Github](https://github.com/slightlyharp) | [Portfolio](./team/slightlyharp.md)"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":""}],"authorContributionMap":{"hailqueenflo":1,"slightlyharp":6,"luziyi9898":1,"farice9":1,"-":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"* Table of Contents"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":"{:toc}"},{"lineNumber":5,"author":{"gitId":"farice9"},"content":""},{"lineNumber":6,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":7,"author":{"gitId":"farice9"},"content":""},{"lineNumber":8,"author":{"gitId":"farice9"},"content":"## Introduction"},{"lineNumber":9,"author":{"gitId":"farice9"},"content":"Welcome to Study It Developer Guide!"},{"lineNumber":10,"author":{"gitId":"farice9"},"content":""},{"lineNumber":11,"author":{"gitId":"farice9"},"content":"This document details the architecture of Study It. It aims to provide an overview of the high-level system "},{"lineNumber":12,"author":{"gitId":"farice9"},"content":"architecture and design of the app. It will also break down the design of the app into smaller components and be "},{"lineNumber":13,"author":{"gitId":"farice9"},"content":"explained in detail. This will allow the readers to understand the architecture and design flow of Study It and "},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"how it operates."},{"lineNumber":15,"author":{"gitId":"farice9"},"content":""},{"lineNumber":16,"author":{"gitId":"farice9"},"content":"Study It is an interactive desktop app that helps NUS students manage their study related matters especially during "},{"lineNumber":17,"author":{"gitId":"farice9"},"content":"this online study environment. It is optimized for use via a Command Line Interface (CLI). It can keep track of the "},{"lineNumber":18,"author":{"gitId":"farice9"},"content":"student’s various study matters, present them in an organized and thoughtful manner to help them organize their "},{"lineNumber":19,"author":{"gitId":"farice9"},"content":"study life. It will also provide various functionalities to help with their studies. "},{"lineNumber":20,"author":{"gitId":"farice9"},"content":""},{"lineNumber":21,"author":{"gitId":"farice9"},"content":"The 4 main functionalities available now are bookmark, timetable, academic tracker and flashcard. "},{"lineNumber":22,"author":{"gitId":"farice9"},"content":"Each of this will be discussed in detail under the “Design \u0026 Implementation” section later in the document."},{"lineNumber":23,"author":{"gitId":"farice9"},"content":""},{"lineNumber":24,"author":{"gitId":"farice9"},"content":"## About"},{"lineNumber":25,"author":{"gitId":"farice9"},"content":""},{"lineNumber":26,"author":{"gitId":"farice9"},"content":"The target audience for this document are other developers who want to understand the system architecture and design of Study It. The following groups might be the particular intended audience of this developer guide:"},{"lineNumber":27,"author":{"gitId":"farice9"},"content":""},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"* Study It developers - to understand the entire system architecture and follow the design to build increments to the system"},{"lineNumber":29,"author":{"gitId":"farice9"},"content":"* CS2113 lecturer/teaching assistants - to evaluate the system architecture and design of Study It"},{"lineNumber":30,"author":{"gitId":"farice9"},"content":"* CS2113 peers - to understand the architecture and provide feedback"},{"lineNumber":31,"author":{"gitId":"farice9"},"content":""},{"lineNumber":32,"author":{"gitId":"farice9"},"content":"The following are the common notations and symbols used in this document:"},{"lineNumber":33,"author":{"gitId":"farice9"},"content":""},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"* `bolded text`  - Class name, folder name in the source code"},{"lineNumber":35,"author":{"gitId":"farice9"},"content":"* [hyperlinks]() - Redirects you to different part of the document or open the relevant website"},{"lineNumber":36,"author":{"gitId":"farice9"},"content":""},{"lineNumber":37,"author":{"gitId":"farice9"},"content":""},{"lineNumber":38,"author":{"gitId":"farice9"},"content":""},{"lineNumber":39,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":40,"author":{"gitId":"farice9"},"content":""},{"lineNumber":41,"author":{"gitId":"farice9"},"content":"## Setting up \u0026 getting started"},{"lineNumber":42,"author":{"gitId":"farice9"},"content":"**Requirements**"},{"lineNumber":43,"author":{"gitId":"farice9"},"content":"* Java 11.0.8"},{"lineNumber":44,"author":{"gitId":"farice9"},"content":"  * You may refer to this [website](https://www.oracle.com/java/technologies/javase/jdk11-archive-downloads.html) "},{"lineNumber":45,"author":{"gitId":"farice9"},"content":"to download and install Java 11.0.8"},{"lineNumber":46,"author":{"gitId":"farice9"},"content":"  * The installation guide can be found in the following websites:"},{"lineNumber":47,"author":{"gitId":"farice9"},"content":"    * [Windows](https://docs.oracle.com/en/java/javase/11/install/installation-jdk-microsoft-windows-platforms.html#GUID-A7E27B90-A28D-4237-9383-A58B416071CA)"},{"lineNumber":48,"author":{"gitId":"farice9"},"content":"    * [Linux](https://docs.oracle.com/en/java/javase/11/install/installation-jdk-linux-platforms.html)"},{"lineNumber":49,"author":{"gitId":"farice9"},"content":"    * [Mac](https://docs.oracle.com/javase/10/install/installation-jdk-and-jre-macos.htm#JSJIG-GUID-2FE451B0-9572-4E38-A1A5-568B77B146DE)"},{"lineNumber":50,"author":{"gitId":"farice9"},"content":""},{"lineNumber":51,"author":{"gitId":"farice9"},"content":"**Running the software**"},{"lineNumber":52,"author":{"gitId":"farice9"},"content":"1. Download the tP.jar file from our [Github release](https://github.com/AY2021S1-CS2113T-T12-1/tp/releases) and "},{"lineNumber":53,"author":{"gitId":"farice9"},"content":"place it in an empty folder"},{"lineNumber":54,"author":{"gitId":"farice9"},"content":"2. Open your computer’s command prompt"},{"lineNumber":55,"author":{"gitId":"farice9"},"content":"3. Change the directory of the command prompt to the folder containing tP.jar file"},{"lineNumber":56,"author":{"gitId":"farice9"},"content":"4. Type `java -jar tp.jar` into the command prompt and press Enter to execute it"},{"lineNumber":57,"author":{"gitId":"farice9"},"content":"5. If the application runs successfully, you’ll be greeted by a welcome message"},{"lineNumber":58,"author":{"gitId":"farice9"},"content":""},{"lineNumber":59,"author":{"gitId":"farice9"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":60,"author":{"gitId":"farice9"},"content":"    \u003cimg width\u003d\"60%\" height\u003d\"60%\" src\u003d\"Images/GeneralUG/welcomemessage.png\"\u003e"},{"lineNumber":61,"author":{"gitId":"farice9"},"content":"\u003c/p\u003e"},{"lineNumber":62,"author":{"gitId":"farice9"},"content":""},{"lineNumber":63,"author":{"gitId":"farice9"},"content":"**Setting up the project on your PC**"},{"lineNumber":64,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"First, **fork** this repo, and **clone** the fork into your computer."},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"lingsihui"},"content":"If you plan to use Intellij IDEA (highly recommended):"},{"lineNumber":68,"author":{"gitId":"lingsihui"},"content":"1. Configure the JDK: Configuring the JDK to ensure Intellij is configured to use JDK 11."},{"lineNumber":69,"author":{"gitId":"lingsihui"},"content":"2. Import the project as a Gradle project."},{"lineNumber":70,"author":{"gitId":"lingsihui"},"content":"3. Run the studyit.StudyIt and try a few commands."},{"lineNumber":71,"author":{"gitId":"lingsihui"},"content":"4. Run the tests to ensure they all pass."},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":74,"author":{"gitId":"farice9"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"## Design \u0026 implementation"},{"lineNumber":76,"author":{"gitId":"farice9"},"content":"This section explains the architecture of our software and the design of each component."},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"farice9"},"content":"### Major components"},{"lineNumber":79,"author":{"gitId":"farice9"},"content":"This section introduces the multiple components in Study It."},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"farice9"},"content":"![](Images/ArchitectureDiagrams/components.png)"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"farice9"},"content":"Study It contains 4 major functional components which are the "},{"lineNumber":84,"author":{"gitId":"farice9"},"content":"bookmark, timetable, academic and flashcard. Each of these component"},{"lineNumber":85,"author":{"gitId":"farice9"},"content":"provide different functionalities, and they combine to form our software -- Study It."},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"farice9"},"content":"Component | What it does"},{"lineNumber":88,"author":{"gitId":"farice9"},"content":"----------|----------------"},{"lineNumber":89,"author":{"gitId":"farice9"},"content":"Bookmark  | Stores internet links under different categories for easier access"},{"lineNumber":90,"author":{"gitId":"farice9"},"content":"Timetable | Tracks and display your weekly schedule"},{"lineNumber":91,"author":{"gitId":"farice9"},"content":"Academic  | Stores important contacts and keep track of your grades"},{"lineNumber":92,"author":{"gitId":"farice9"},"content":"Flashcard | Stores study questions and allow you to quiz yourself for easier memorization"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"farice9"},"content":"The **main component** of Study It helps user access each of these components."},{"lineNumber":95,"author":{"gitId":"farice9"},"content":"It processes the user input, provides general functionalities to traverse the software and other"},{"lineNumber":96,"author":{"gitId":"farice9"},"content":"helpful functionalities. This will be further explained under Study It\u0027s design later."},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"farice9"},"content":"### Architecture"},{"lineNumber":101,"author":{"gitId":"farice9"},"content":"This section describes the overall architecture of Study It."},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"farice9"},"content":"![Architecture Diagram](Images/ArchitectureDiagrams/architecture.png)"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"farice9"},"content":"The *Architecture Diagram* given above explains the high-level design of the software."},{"lineNumber":106,"author":{"gitId":"farice9"},"content":"Each component in the diagram will be briefly explained below."},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"farice9"},"content":"The **`main`** in **`Study It`** is responsible for initializing all the other components"},{"lineNumber":109,"author":{"gitId":"farice9"},"content":"in the software."},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"farice9"},"content":"The following is a brief overview of the components in Study It:"},{"lineNumber":112,"author":{"gitId":"farice9"},"content":"* **UI**: Handles the communication between the software and the user"},{"lineNumber":113,"author":{"gitId":"farice9"},"content":"* **Parser**: Processes the input from the user"},{"lineNumber":114,"author":{"gitId":"farice9"},"content":"* **Execution**: Perform the actions determined by the parser"},{"lineNumber":115,"author":{"gitId":"farice9"},"content":""},{"lineNumber":116,"author":{"gitId":"farice9"},"content":"The following components processes their respective actions (parsing and execution) and handles their own"},{"lineNumber":117,"author":{"gitId":"farice9"},"content":"storage component: "},{"lineNumber":118,"author":{"gitId":"farice9"},"content":"* **Bookmark**"},{"lineNumber":119,"author":{"gitId":"farice9"},"content":"* **Timetable**"},{"lineNumber":120,"author":{"gitId":"farice9"},"content":"* **Academic**"},{"lineNumber":121,"author":{"gitId":"farice9"},"content":"* **Flashcard**"},{"lineNumber":122,"author":{"gitId":"farice9"},"content":""},{"lineNumber":123,"author":{"gitId":"farice9"},"content":"**General commands** are commands that takes priority in execution no matter which mode the software is currently"},{"lineNumber":124,"author":{"gitId":"farice9"},"content":"in."},{"lineNumber":125,"author":{"gitId":"farice9"},"content":""},{"lineNumber":126,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":127,"author":{"gitId":"farice9"},"content":""},{"lineNumber":128,"author":{"gitId":"farice9"},"content":"**Modes of the program**"},{"lineNumber":129,"author":{"gitId":"farice9"},"content":""},{"lineNumber":130,"author":{"gitId":"farice9"},"content":"Study It has 5 **modes** that the user can navigate between:"},{"lineNumber":131,"author":{"gitId":"farice9"},"content":"* **Main menu**: Default mode when booting the software, there are no functionalities tied to this mode"},{"lineNumber":132,"author":{"gitId":"farice9"},"content":"* **Bookmark**"},{"lineNumber":133,"author":{"gitId":"farice9"},"content":"* **Timetable**"},{"lineNumber":134,"author":{"gitId":"farice9"},"content":"* **Academic**"},{"lineNumber":135,"author":{"gitId":"farice9"},"content":"* **Flashcard**"},{"lineNumber":136,"author":{"gitId":"farice9"},"content":""},{"lineNumber":137,"author":{"gitId":"farice9"},"content":"Each of these modes has their own unique commands. The user must switch to that mode to perform the"},{"lineNumber":138,"author":{"gitId":"farice9"},"content":"mode\u0027s functionalities."},{"lineNumber":139,"author":{"gitId":"farice9"},"content":""},{"lineNumber":140,"author":{"gitId":"farice9"},"content":"User can switch between these modes at any point when using the software."},{"lineNumber":141,"author":{"gitId":"farice9"},"content":""},{"lineNumber":142,"author":{"gitId":"farice9"},"content":"**How the architecture components interact with each other**"},{"lineNumber":143,"author":{"gitId":"farice9"},"content":""},{"lineNumber":144,"author":{"gitId":"farice9"},"content":"The following sequence diagram shows the interactions within the software when command is received from the user"},{"lineNumber":145,"author":{"gitId":"farice9"},"content":""},{"lineNumber":146,"author":{"gitId":"farice9"},"content":"![Sequence Overview](Images/ArchitectureDiagrams/overviewsequence.png)"},{"lineNumber":147,"author":{"gitId":"farice9"},"content":""},{"lineNumber":148,"author":{"gitId":"farice9"},"content":"As shown in the sequence diagram above, the user will interact with Study It via the User Interface (UI)."},{"lineNumber":149,"author":{"gitId":"farice9"},"content":"The commands received will then be parsed to identify the type of command. If the command is one of the "},{"lineNumber":150,"author":{"gitId":"farice9"},"content":"general commands, it\u0027ll be processed and provide output. Otherwise, the command will be relayed"},{"lineNumber":151,"author":{"gitId":"farice9"},"content":"to different components to be processed based on the software\u0027s current mode. "},{"lineNumber":152,"author":{"gitId":"farice9"},"content":""},{"lineNumber":153,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":154,"author":{"gitId":"farice9"},"content":""},{"lineNumber":155,"author":{"gitId":"farice9"},"content":"### Main Component"},{"lineNumber":156,"author":{"gitId":"farice9"},"content":""},{"lineNumber":157,"author":{"gitId":"farice9"},"content":"This section will give an overview of the main component of Study It."},{"lineNumber":158,"author":{"gitId":"farice9"},"content":""},{"lineNumber":159,"author":{"gitId":"farice9"},"content":"The following class diagram shows the components related to the main Study It component and their respective"},{"lineNumber":160,"author":{"gitId":"farice9"},"content":"details."},{"lineNumber":161,"author":{"gitId":"farice9"},"content":""},{"lineNumber":162,"author":{"gitId":"farice9"},"content":"![Main Component Diagram](Images/MainComponentDiagrams/maincomponent.png)"},{"lineNumber":163,"author":{"gitId":"farice9"},"content":""},{"lineNumber":164,"author":{"gitId":"farice9"},"content":"The main class being run for the program is contained under `StudyIt` class. "},{"lineNumber":165,"author":{"gitId":"farice9"},"content":"As there are multiple modes of our app (main menu/bookmark/timetable/academic/flashcard), "},{"lineNumber":166,"author":{"gitId":"farice9"},"content":"the Mode enumeration and a private static currentMode of Mode type is introduced to monitor the current "},{"lineNumber":167,"author":{"gitId":"farice9"},"content":"operating mode of StudyIt. This is to allow the program to respond to different commands under different modes."},{"lineNumber":168,"author":{"gitId":"farice9"},"content":""},{"lineNumber":169,"author":{"gitId":"farice9"},"content":"Each command input by the user will be processed by CommandParser class to determine the command type. "},{"lineNumber":170,"author":{"gitId":"farice9"},"content":"This information, along with the original command string will be passed into Command class and executed under "},{"lineNumber":171,"author":{"gitId":"farice9"},"content":"executeCommand(). If it is one of the general commands, it will be processed by that class. "},{"lineNumber":172,"author":{"gitId":"farice9"},"content":"If it isn’t, the Command class will detect the current mode of the program and run that command string under that "},{"lineNumber":173,"author":{"gitId":"farice9"},"content":"specific mode, distributed under handleNonGeneralCommand() method. If it still doesn’t parse successfully, "},{"lineNumber":174,"author":{"gitId":"farice9"},"content":"it will be considered an invalid command and an error message will be printed out."},{"lineNumber":175,"author":{"gitId":"farice9"},"content":""},{"lineNumber":176,"author":{"gitId":"farice9"},"content":"The classes Ui, ErrorMessage, HelpMessage and MainMenu help handle the printing of various user interfaces of the "},{"lineNumber":177,"author":{"gitId":"farice9"},"content":"program. ErrorMessage, HelpMessage and MainMenu are subclasses of Ui to make use of the methods in Ui."},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"farice9"},"content":"StudyIt class will also initialize various instances of classes such as TimeTableRun, FlashCardRun, "},{"lineNumber":180,"author":{"gitId":"farice9"},"content":"ArrayList\u003cBookmarkCategory\u003e, ArrayList\u003cGrade\u003e, ArrayList\u003cPerson\u003e and pass it to Command class to perform "},{"lineNumber":181,"author":{"gitId":"farice9"},"content":"each mode’s functionality."},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":184,"author":{"gitId":"farice9"},"content":""},{"lineNumber":185,"author":{"gitId":"farice9"},"content":"### Bookmark Component"},{"lineNumber":186,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":187,"author":{"gitId":"lingsihui"},"content":"This bookmark section consists of how the bookmark feature is implemented. "},{"lineNumber":188,"author":{"gitId":"lingsihui"},"content":"The bookmark feature is implemented similarly to the main architecture, however, "},{"lineNumber":189,"author":{"gitId":"hailqueenflo"},"content":"in a smaller scale and a more bookmark-specific way. The figure below illustrates the general overview, "},{"lineNumber":190,"author":{"gitId":"lingsihui"},"content":"the associations and the multiplicity of the bookmark classes."},{"lineNumber":191,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":192,"author":{"gitId":"lingsihui"},"content":"![Bookmark Class Diagram](Images/BookmarkDG/BookmarkRun_Class.png)"},{"lineNumber":193,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":194,"author":{"gitId":"lingsihui"},"content":"**API:** \u003cspan style\u003d\"color:blue\"\u003e`BookmarkRun`."},{"lineNumber":195,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":196,"author":{"gitId":"lingsihui"},"content":"The bookmark component consists of six major classes: `BookmarkRun`, `BookmarkStorage`, `BookmarkUi`, "},{"lineNumber":197,"author":{"gitId":"lingsihui"},"content":"`BookmarkCategory`, `BookmarkList` and `BookmarkParser`. "},{"lineNumber":198,"author":{"gitId":"hailqueenflo"},"content":"As shown in the figure above, `BookmarkRun` is "},{"lineNumber":199,"author":{"gitId":"lingsihui"},"content":"* The main class to be called when the bookmark mode is accessed."},{"lineNumber":200,"author":{"gitId":"lingsihui"},"content":"* The main class to access other bookmark classes."},{"lineNumber":201,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":202,"author":{"gitId":"hailqueenflo"},"content":"The figure given below is the sequence diagram of how the classes interact with each "},{"lineNumber":203,"author":{"gitId":"lingsihui"},"content":"other when bookmark mode is accessed from the main function."},{"lineNumber":204,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":205,"author":{"gitId":"lingsihui"},"content":"![Bookmark Sequence Diagram](Images/BookmarkDG/Sequence_Diagram.png)"},{"lineNumber":206,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":207,"author":{"gitId":"lingsihui"},"content":"The bookmark component has two modes: the main bookmark mode and the category mode. "},{"lineNumber":208,"author":{"gitId":"hailqueenflo"},"content":"As shown in the figure above, when `BookmarkRun` is called, "},{"lineNumber":209,"author":{"gitId":"lingsihui"},"content":"`BookmarkParser` will be called and return a `BookmarkCommand`. "},{"lineNumber":210,"author":{"gitId":"lingsihui"},"content":"Afterwards, `BookmarkRun` will then call `executeCommand` in `BookmarkCommand` which executes "},{"lineNumber":211,"author":{"gitId":"lingsihui"},"content":"the intended actions. Then, it will call `getCategorymode` to get the current mode the user is in. "},{"lineNumber":212,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":213,"author":{"gitId":"lingsihui"},"content":"**Bookmark Implementation**"},{"lineNumber":214,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":215,"author":{"gitId":"lingsihui"},"content":"A more detailed explanation of `BookmarkCommand`, `BookmarkCategory` and `BookmarkList` will be "},{"lineNumber":216,"author":{"gitId":"lingsihui"},"content":"shown below. `BookmarkUi` and `BookmarkStorage` follow the same design implementations as the main "},{"lineNumber":217,"author":{"gitId":"lingsihui"},"content":"architecture. The below figure shows the command classes available and they are called based on the "},{"lineNumber":218,"author":{"gitId":"hailqueenflo"},"content":"`BookmarkParser` class as illustrated in the figure above. "},{"lineNumber":219,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":220,"author":{"gitId":"lingsihui"},"content":"![BookmarkCommand ClassDiagram](Images/BookmarkDG/bookmarkCommand_Class.png)"},{"lineNumber":221,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":222,"author":{"gitId":"hailqueenflo"},"content":"The figure below shows a more detailed sequence diagram of how the `BookmarkCategory`, `BookmarkCommand` "},{"lineNumber":223,"author":{"gitId":"lingsihui"},"content":"and `BookmarkList` interacts with each other for the scenario when the user input an `AddLinkCommand` "},{"lineNumber":224,"author":{"gitId":"lingsihui"},"content":"in Bookmark mode."},{"lineNumber":225,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":226,"author":{"gitId":"lingsihui"},"content":"![BookmarkCommand ClassDiagram](Images/BookmarkDG/AddCommand.png)"},{"lineNumber":227,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":228,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"farice9"},"content":"### Timetable Component"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"slightlyharp"},"content":"This section will describe in detail how some features inside the timetable section have been "},{"lineNumber":233,"author":{"gitId":"slightlyharp"},"content":"implemented."},{"lineNumber":234,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":235,"author":{"gitId":"slightlyharp"},"content":"![Timetable Class Diagram](Images/TimeTable%20class%20diagram.png)"},{"lineNumber":236,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":237,"author":{"gitId":"slightlyharp"},"content":"**API:** \u003cspan style\u003d\"color:blue\"\u003e`TimeTableRun`."},{"lineNumber":238,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":239,"author":{"gitId":"slightlyharp"},"content":"The timetable component consists of 7 major classes as shown. The above figure illustrates the"},{"lineNumber":240,"author":{"gitId":"slightlyharp"},"content":" association and the multiplicity of the classes. "},{"lineNumber":241,"author":{"gitId":"slightlyharp"},"content":" "},{"lineNumber":242,"author":{"gitId":"hailqueenflo"},"content":" 1. As shown in the figure, `TimetableRun` is the main class to be accessed "},{"lineNumber":243,"author":{"gitId":"slightlyharp"},"content":" when the timetable function is called. "},{"lineNumber":244,"author":{"gitId":"slightlyharp"},"content":" 1. It associates with the `TimeTableStorage` class which is used to save data into a text file "},{"lineNumber":245,"author":{"gitId":"slightlyharp"},"content":" 1. `DateList` class that contains a number of `EventList`. "},{"lineNumber":246,"author":{"gitId":"slightlyharp"},"content":" 1. `EventList` contains a number of `Event`. "},{"lineNumber":247,"author":{"gitId":"slightlyharp"},"content":" 1. `Event` class is the abstract parent class for `Lesson` and `Activity`. "},{"lineNumber":248,"author":{"gitId":"slightlyharp"},"content":" 1. `Event` class also contains a number of `Duration` and it has a dependency on the `EvenType` enum."},{"lineNumber":249,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":250,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":251,"author":{"gitId":"farice9"},"content":""},{"lineNumber":252,"author":{"gitId":"slightlyharp"},"content":"**Timetable Implementation**"},{"lineNumber":253,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":254,"author":{"gitId":"slightlyharp"},"content":"This section explains the details on how certain features are implemented in Timetable."},{"lineNumber":255,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":256,"author":{"gitId":"slightlyharp"},"content":"The figure below is the sequence diagram of the major interactions between classes when"},{"lineNumber":257,"author":{"gitId":"slightlyharp"},"content":"the main function makes the run(command) API call and the command is \"add class\", "},{"lineNumber":258,"author":{"gitId":"slightlyharp"},"content":"\"show schedule\", \"show link\", or \"delete class\" ."},{"lineNumber":259,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":260,"author":{"gitId":"slightlyharp"},"content":"![timetable_sequence diagram](Images/timetable_sequence%20diagram.png)"},{"lineNumber":261,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":262,"author":{"gitId":"slightlyharp"},"content":"When command\u003d\"add class\" the `run(command)` method calls the `commandParse()` method from the `TimeTableParser` which the function"},{"lineNumber":263,"author":{"gitId":"slightlyharp"},"content":"will call `addClass()` function from the `TimeTableCommand` Class. New `Lesson` Class will be initialised based on user input."},{"lineNumber":264,"author":{"gitId":"slightlyharp"},"content":"Following that a `addClassPeriod()` function will be called taking in the new lesson class initialised to add all the time slots"},{"lineNumber":265,"author":{"gitId":"slightlyharp"},"content":"into lesson class. This class will then be returned to `TimetableParser` class where it will call the `addEvent()` method in DateList"},{"lineNumber":266,"author":{"gitId":"slightlyharp"},"content":"to add the new `Lesson` Class into the arrayList within `DateList` Class. `WriteFile()` method in `Storage` will also be called to "},{"lineNumber":267,"author":{"gitId":"slightlyharp"},"content":"save the infomation of the new `Lesson` class to the data file."},{"lineNumber":268,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":269,"author":{"gitId":"slightlyharp"},"content":"Other possible commands that are not shown in the diagram will interact between classes in a similar way,"},{"lineNumber":270,"author":{"gitId":"slightlyharp"},"content":"where command will be passed to the TimeTableParser Class where it interprets the command and calls the respective"},{"lineNumber":271,"author":{"gitId":"slightlyharp"},"content":"function from the TimeTableCommand Class."},{"lineNumber":272,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":273,"author":{"gitId":"luziyi9898"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":274,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":275,"author":{"gitId":"farice9"},"content":"### Academic Component"},{"lineNumber":276,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":277,"author":{"gitId":"luziyi9898"},"content":"This section will describe in detail how some features inside the academic tracker section have been implemented."},{"lineNumber":278,"author":{"gitId":"luziyi9898"},"content":"The following diagram illustrates the general overview, the associations and the multiplicity of the academic classes."},{"lineNumber":279,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":280,"author":{"gitId":"luziyi9898"},"content":"![Academic_Class_Diagram](Images/Academic_Class_Diagram.png)"},{"lineNumber":281,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":282,"author":{"gitId":"luziyi9898"},"content":"API: `java.academic`"},{"lineNumber":283,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":284,"author":{"gitId":"luziyi9898"},"content":"The above diagram looks at the overall structure of how the academic tracker is being implemented. "},{"lineNumber":285,"author":{"gitId":"luziyi9898"},"content":"This component is split into 7 different classes, "},{"lineNumber":286,"author":{"gitId":"hailqueenflo"},"content":"their associations and multiplicity as explained in the above diagram. "},{"lineNumber":287,"author":{"gitId":"luziyi9898"},"content":"The functions of the academic tracker will be called through the `AcademicRun` class "},{"lineNumber":288,"author":{"gitId":"luziyi9898"},"content":"when the program is in academic mode, which will subsequently call "},{"lineNumber":289,"author":{"gitId":"luziyi9898"},"content":"the functions in `PersonBook` or `GradeBook`. "},{"lineNumber":290,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":291,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":292,"author":{"gitId":"luziyi9898"},"content":"The academic component:"},{"lineNumber":293,"author":{"gitId":"luziyi9898"},"content":"* initialises two arraylists, `ArrayList\u003cGrade\u003e` and `ArrayList\u003cPeople\u003e` "},{"lineNumber":294,"author":{"gitId":"luziyi9898"},"content":"to store the relevant `Grade` and `People` objects."},{"lineNumber":295,"author":{"gitId":"luziyi9898"},"content":"* uses `AcademicCommandParser` to parse the user command."},{"lineNumber":296,"author":{"gitId":"luziyi9898"},"content":"* identifies `AcademicCommandType` to decide "},{"lineNumber":297,"author":{"gitId":"luziyi9898"},"content":"which of the commands under `PersonBook` or `GradeBook` is to be executed."},{"lineNumber":298,"author":{"gitId":"luziyi9898"},"content":"* calls `AcademicStorage` to store the current set of data into the local storage file."},{"lineNumber":299,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":300,"author":{"gitId":"luziyi9898"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":301,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":302,"author":{"gitId":"luziyi9898"},"content":"**Academic Implementation**"},{"lineNumber":303,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":304,"author":{"gitId":"luziyi9898"},"content":"This section explains the details on how certain features "},{"lineNumber":305,"author":{"gitId":"luziyi9898"},"content":"are implemented in the academic tracker."},{"lineNumber":306,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":307,"author":{"gitId":"luziyi9898"},"content":"**GradeBook Features**"},{"lineNumber":308,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":309,"author":{"gitId":"luziyi9898"},"content":"The grade features are facilitated by `Gradebook`, which further make use of `Grade`. "},{"lineNumber":310,"author":{"gitId":"luziyi9898"},"content":"Each `Grade` will contain information such as the module\u0027s title, credits, grade, status of SU and status of star."},{"lineNumber":311,"author":{"gitId":"luziyi9898"},"content":"All grades are stored internally under `AcademicRun` as an array list `ArrayList\u003cGrade\u003e`."},{"lineNumber":312,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":313,"author":{"gitId":"luziyi9898"},"content":"It implements the following important operations:"},{"lineNumber":314,"author":{"gitId":"luziyi9898"},"content":"* `addGrade(String[], ArrayList\u003cGrade\u003e)`:Adds a `Grade` to the `ArrayList\u003cGrade\u003e`. "},{"lineNumber":315,"author":{"gitId":"luziyi9898"},"content":"* `printCap(ArrayList\u003cGrade\u003e)`:Calculate the current CAP based on the `ArrayList\u003cGrade\u003e`. "},{"lineNumber":316,"author":{"gitId":"luziyi9898"},"content":"* `printListOfGrades(ArrayList\u003cGrade\u003e)`:Print out all the `Grade` that are currently stored inside `ArrayList\u003cGrade\u003e`."},{"lineNumber":317,"author":{"gitId":"luziyi9898"},"content":"* `deleteGrade(Integer, ArrayList\u003cGrade\u003e)`:Delete a `Grade` from a specified index inside `ArrayList\u003cGrade\u003e`."},{"lineNumber":318,"author":{"gitId":"luziyi9898"},"content":"* `suGradeInGradeBook(Integer, ArrayList\u003cGrade\u003e)`:Su a `Grade` from a specified index inside `ArrayList\u003cGrade\u003e`."},{"lineNumber":319,"author":{"gitId":"luziyi9898"},"content":"* `starGrade(Integer, ArrayList\u003cGrade\u003e)`:Star a `Grade` from a specified index inside `ArrayList\u003cGrade\u003e`."},{"lineNumber":320,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":321,"author":{"gitId":"luziyi9898"},"content":"The following diagram demonstrates an example of how the Su Grade function works:"},{"lineNumber":322,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":323,"author":{"gitId":"luziyi9898"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":324,"author":{"gitId":"luziyi9898"},"content":"    \u003cimg width\u003d\"70%\" height\u003d\"70%\" src\u003d\"Images/Academic_Sequence_Diagram.png\"\u003e"},{"lineNumber":325,"author":{"gitId":"luziyi9898"},"content":"\u003c/p\u003e"},{"lineNumber":326,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":327,"author":{"gitId":"luziyi9898"},"content":"With reference to above diagram, it can be observed that whenever a command modifies the array lists, "},{"lineNumber":328,"author":{"gitId":"luziyi9898"},"content":"`AcademicStorage` is called to update the local storage files."},{"lineNumber":329,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":330,"author":{"gitId":"luziyi9898"},"content":"**PersonBook Features**"},{"lineNumber":331,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":332,"author":{"gitId":"luziyi9898"},"content":"The contact features are facilitated by `Personbook`, which further make use of `Person`. "},{"lineNumber":333,"author":{"gitId":"luziyi9898"},"content":"In terms of general structure, it is largely similar to that of `GradeBook`\u0027s."},{"lineNumber":334,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":335,"author":{"gitId":"luziyi9898"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":336,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":337,"author":{"gitId":"hailqueenflo"},"content":"\u003c!-- @@author hailqueenflo --\u003e"},{"lineNumber":338,"author":{"gitId":"hailqueenflo"},"content":"### Flashcard Component"},{"lineNumber":339,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":340,"author":{"gitId":"hailqueenflo"},"content":"This section will describe in detail how the flashcard feature is implemented."},{"lineNumber":341,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":342,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":343,"author":{"gitId":"hailqueenflo"},"content":"![Flashcard Component Class Diagram](Images/flashcard%20class%20diagram.png)"},{"lineNumber":344,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":345,"author":{"gitId":"hailqueenflo"},"content":"The above diagram looks at the overall structure of how the flashcard component is being implemented. "},{"lineNumber":346,"author":{"gitId":"hailqueenflo"},"content":"This component is split into 4 different classes, their associations and multiplicity as explained in "},{"lineNumber":347,"author":{"gitId":"hailqueenflo"},"content":"the above Figure. "},{"lineNumber":348,"author":{"gitId":"hailqueenflo"},"content":"1. The main class `FlashcardRun` will be accessed when the flashcard mode is called in `StudyIt` Class. "},{"lineNumber":349,"author":{"gitId":"hailqueenflo"},"content":"1. `FlashcardRun` class is associated with `FlashcardStorage` class that is used to store data in .txt file. "},{"lineNumber":350,"author":{"gitId":"hailqueenflo"},"content":"1. `FlashcardDeck` class which contains any number of `Flashcards`."},{"lineNumber":351,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":352,"author":{"gitId":"hailqueenflo"},"content":"**Flashcard Implementation**"},{"lineNumber":353,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":354,"author":{"gitId":"hailqueenflo"},"content":"This section explains the details on how certain features are implemented in flashcard."},{"lineNumber":355,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":356,"author":{"gitId":"hailqueenflo"},"content":"When `FlashcardRun` is first initialised by `StudyIt`, it will construct "},{"lineNumber":357,"author":{"gitId":"hailqueenflo"},"content":"the `FlashcardDeck` class."},{"lineNumber":358,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":359,"author":{"gitId":"hailqueenflo"},"content":"![Sequence Diagram when user input “add card” command](Images/addCard_sequenceDiagram.png)"},{"lineNumber":360,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":361,"author":{"gitId":"hailqueenflo"},"content":"With reference to the figure above, as an \"add card\" command is given by the user, `FlashcardRun` will take in the "},{"lineNumber":362,"author":{"gitId":"hailqueenflo"},"content":"command and call `addCard()` method in `FlashcardDeck` which constructs a new Flashcard object and stores "},{"lineNumber":363,"author":{"gitId":"hailqueenflo"},"content":"it inside the `FlashcardDeck` object. The `addCard()` function will then show the user the question and "},{"lineNumber":364,"author":{"gitId":"hailqueenflo"},"content":"answer of the flashcard that has been created."},{"lineNumber":365,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":366,"author":{"gitId":"hailqueenflo"},"content":"Other possible commands that are not shown in the figure work in a similar way where command is parsed in `FlashcardRun` Class,"},{"lineNumber":367,"author":{"gitId":"hailqueenflo"},"content":"and calls the corresponding function within the `FlashcardDeck` Class. `WriteToFile` function is called at the end of the"},{"lineNumber":368,"author":{"gitId":"hailqueenflo"},"content":"process to update any changes to the deck to the data file."},{"lineNumber":369,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":370,"author":{"gitId":"hailqueenflo"},"content":"\u003c!-- @@author --\u003e"},{"lineNumber":371,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":372,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":373,"author":{"gitId":"farice9"},"content":""},{"lineNumber":374,"author":{"gitId":"lingsihui"},"content":"## Documentation, logging, testing, configuration, dev-ops"},{"lineNumber":375,"author":{"gitId":"lingsihui"},"content":"### Testing guide"},{"lineNumber":376,"author":{"gitId":"lingsihui"},"content":"Running tests:  "},{"lineNumber":377,"author":{"gitId":"lingsihui"},"content":"The main way that was used to run the test for Study It is:   "},{"lineNumber":378,"author":{"gitId":"lingsihui"},"content":"Using IntelliJ JUnit test runner.   "},{"lineNumber":379,"author":{"gitId":"lingsihui"},"content":"A. To run all tests, right-click on the src/test/java folder and choose "},{"lineNumber":380,"author":{"gitId":"lingsihui"},"content":"Run Test in ‘tp.test’  "},{"lineNumber":381,"author":{"gitId":"lingsihui"},"content":"B. To run a subset of tests, you can right-click on a test package, "},{"lineNumber":382,"author":{"gitId":"lingsihui"},"content":"test class or a test and choose Run ‘ABC’.  "},{"lineNumber":383,"author":{"gitId":"lingsihui"},"content":"Type of Tests  "},{"lineNumber":384,"author":{"gitId":"lingsihui"},"content":"This project has 5 types of tests. 4 tests to test each feature and 1 test to test the main integration of the whole application."},{"lineNumber":385,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":386,"author":{"gitId":"lingsihui"},"content":"### Logging guide"},{"lineNumber":387,"author":{"gitId":"hailqueenflo"},"content":"We are using java.util.logging package for logging."},{"lineNumber":388,"author":{"gitId":"lingsihui"},"content":"The StudyItLog class is used to manage the logging levels and logging destinations."},{"lineNumber":389,"author":{"gitId":"lingsihui"},"content":"Log messages are output through the console and to a  .log file."},{"lineNumber":390,"author":{"gitId":"lingsihui"},"content":"The output logging level can be controlled using .setlevel( )"},{"lineNumber":391,"author":{"gitId":"lingsihui"},"content":"When choosing a level for a log message, follow the following conventions:"},{"lineNumber":392,"author":{"gitId":"lingsihui"},"content":"1. SEVERE: A critical problem detected which may cause the termination of the application."},{"lineNumber":393,"author":{"gitId":"lingsihui"},"content":"2. WARNING: Can continue, but with caution."},{"lineNumber":394,"author":{"gitId":"lingsihui"},"content":"3. INFO: Information showing the noteworthy actions by the App."},{"lineNumber":395,"author":{"gitId":"lingsihui"},"content":"4. FINE:  Details that are not usually noteworthy but may be useful in debugging."},{"lineNumber":396,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":397,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":398,"author":{"gitId":"lingsihui"},"content":"### DevOps Guide "},{"lineNumber":399,"author":{"gitId":"hailqueenflo"},"content":"Build automation:"},{"lineNumber":400,"author":{"gitId":"lingsihui"},"content":"This project uses Gradle for build automation management."},{"lineNumber":401,"author":{"gitId":"lingsihui"},"content":"./gradlew build - check for checkstyle error and runs all tests"},{"lineNumber":402,"author":{"gitId":"lingsihui"},"content":"Code coverage"},{"lineNumber":403,"author":{"gitId":"lingsihui"},"content":"This project uses code coverage that is in IntelliJ IDE to check for the coverage of the code. "},{"lineNumber":404,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":405,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":406,"author":{"gitId":"farice9"},"content":""},{"lineNumber":407,"author":{"gitId":"lingsihui"},"content":"## Appendix: Requirement "},{"lineNumber":408,"author":{"gitId":"lingsihui"},"content":"### Product scope"},{"lineNumber":409,"author":{"gitId":"lingsihui"},"content":"**Target user profile:**"},{"lineNumber":410,"author":{"gitId":"lingsihui"},"content":"* studies in NUS"},{"lineNumber":411,"author":{"gitId":"lingsihui"},"content":"* has a need to manage a significant number of links"},{"lineNumber":412,"author":{"gitId":"lingsihui"},"content":"* has a need to manage their classes in a timetable"},{"lineNumber":413,"author":{"gitId":"lingsihui"},"content":"* has a need to manage their grades"},{"lineNumber":414,"author":{"gitId":"lingsihui"},"content":"* has a need to manage contact numbers of professors and teaching assistants."},{"lineNumber":415,"author":{"gitId":"lingsihui"},"content":"* has a need to memorise content to study "},{"lineNumber":416,"author":{"gitId":"lingsihui"},"content":"* prefer desktop apps over other types"},{"lineNumber":417,"author":{"gitId":"lingsihui"},"content":"* can type fast"},{"lineNumber":418,"author":{"gitId":"lingsihui"},"content":"* prefers typing to mouse interactions"},{"lineNumber":419,"author":{"gitId":"lingsihui"},"content":"* is reasonably comfortable using CLI apps  "},{"lineNumber":420,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":421,"author":{"gitId":"lingsihui"},"content":"**Value proposition:**"},{"lineNumber":422,"author":{"gitId":"lingsihui"},"content":"* manage links faster than a typical mouse/GUI driven app"},{"lineNumber":423,"author":{"gitId":"hailqueenflo"},"content":"* manage grades more easily than a typical mouse/GUI driven app"},{"lineNumber":424,"author":{"gitId":"hailqueenflo"},"content":"* manage contact numbers of professors and teaching assistants more effectively than a typical mouse/GUI driven app"},{"lineNumber":425,"author":{"gitId":"hailqueenflo"},"content":"* manage timetable in a more organised manner than a typical mouse/GUI driven app"},{"lineNumber":426,"author":{"gitId":"hailqueenflo"},"content":"* manage study content more efficiently than a typical mouse/GUI driven app "},{"lineNumber":427,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":428,"author":{"gitId":"lingsihui"},"content":"#### User Stories"},{"lineNumber":429,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":430,"author":{"gitId":"lingsihui"},"content":"|Version| As a ... | I want to ... | So that I ...|"},{"lineNumber":431,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|"},{"lineNumber":432,"author":{"gitId":"lingsihui"},"content":"|v1.0|Student in Nus|organise my zoom links|don’t need to find the zoom link everytime lectures/tutorials start.|"},{"lineNumber":433,"author":{"gitId":"lingsihui"},"content":"|v1.0|student attending online classes|keep track of the timetable of my lessons whether  it is online or offline|do not miss any lessons.|"},{"lineNumber":434,"author":{"gitId":"lingsihui"},"content":"|v2.0|Student in Nus|organise all the useful signup links (internship/ hackathon/ talks) sent to our emails|can keep track of my time and dates of any relevant events.|"},{"lineNumber":435,"author":{"gitId":"lingsihui"},"content":"|v1.0|Student in Nus|keep track of my results and the number of SUs I have left,|can plan my semester properly|"},{"lineNumber":436,"author":{"gitId":"lingsihui"},"content":"|v1.0|student with packed timetables|see clashes in my timetable |can plan things without overlapping events.|"},{"lineNumber":437,"author":{"gitId":"lingsihui"},"content":"|v1.0|student taking a mod that requires me to memorize a lot of contents|organize the contents into flashcards|can revise them on the go.|"},{"lineNumber":438,"author":{"gitId":"lingsihui"},"content":"|v1.0|student who is worried about my results|calculate my CAP based on estimated grades|know i won’t get expelled :’)|"},{"lineNumber":439,"author":{"gitId":"lingsihui"},"content":"|v1.0|Student in Nus|keep track of my profs and ta’s contacts|know who to find when i have troubles.|"},{"lineNumber":440,"author":{"gitId":"lingsihui"},"content":"|v1.0|Student in Nus|bookmark all the important NUS websites|can access them more easily|"},{"lineNumber":441,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":442,"author":{"gitId":"lingsihui"},"content":"#### Non-Functional Requirements"},{"lineNumber":443,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":444,"author":{"gitId":"hailqueenflo"},"content":"* Should work on any [mainstream OS](#glossary) as long as it has Java 11 or above installed."},{"lineNumber":445,"author":{"gitId":"lingsihui"},"content":"* A user with above average typing speed for regular English text "},{"lineNumber":446,"author":{"gitId":"lingsihui"},"content":"(i.e. not code, not system admin commands) should be able to accomplish most of the "},{"lineNumber":447,"author":{"gitId":"lingsihui"},"content":"tasks faster using commands than using the mouse."},{"lineNumber":448,"author":{"gitId":"-"},"content":""},{"lineNumber":449,"author":{"gitId":"-"},"content":"## Glossary"},{"lineNumber":450,"author":{"gitId":"-"},"content":""},{"lineNumber":451,"author":{"gitId":"hailqueenflo"},"content":"* *Mainstream OS* - Windows, Unix, Linux, OS-X"}],"authorContributionMap":{"hailqueenflo":51,"lingsihui":107,"slightlyharp":41,"luziyi9898":59,"farice9":169,"-":24}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"# Study It"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"**Welcome to Study It!**"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":""},{"lineNumber":5,"author":{"gitId":"farice9"},"content":"Study It is an interactive desktop app that helps manage your study related matters, "},{"lineNumber":6,"author":{"gitId":"farice9"},"content":"optimized for use via a Command Line Interface (CLI). It can keep track of your various study matters, "},{"lineNumber":7,"author":{"gitId":"farice9"},"content":"present them in an organized and thoughtful manner to help you organize your study life. "},{"lineNumber":8,"author":{"gitId":"farice9"},"content":"It will also provide various functionalities to help with your studies. You will be able to make full "},{"lineNumber":9,"author":{"gitId":"farice9"},"content":"use of the application if you can type fast."},{"lineNumber":10,"author":{"gitId":"farice9"},"content":""},{"lineNumber":11,"author":{"gitId":"farice9"},"content":"This application currently has the following modes that you can access and use:"},{"lineNumber":12,"author":{"gitId":"farice9"},"content":"1. Menu \t    -   Central location of the app"},{"lineNumber":13,"author":{"gitId":"farice9"},"content":"1. Bookmark \t- \tManage your online links at one convenient location"},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"1. Timetable \t- \tKeep track of your weekly activities"},{"lineNumber":15,"author":{"gitId":"farice9"},"content":"1. Academic\t    - \tTrack your academic performance and store useful contact information"},{"lineNumber":16,"author":{"gitId":"farice9"},"content":"1. Flashcard\t- \tMemorize your study content better with our built-in flashcard"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"Useful links:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)"}],"authorContributionMap":{"slightlyharp":1,"farice9":14,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"* Table of Contents"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":"{:toc}"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"hailqueenflo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Introduction "},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"farice9"},"content":"**Welcome to Study It User Guide!**"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"farice9"},"content":"Study It is an interactive desktop app that helps manage your study related matters, "},{"lineNumber":13,"author":{"gitId":"farice9"},"content":"optimized for use via a Command Line Interface (CLI). It can keep track of your various study matters, "},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"present them in an organized and thoughtful manner to help you organize your study life. "},{"lineNumber":15,"author":{"gitId":"farice9"},"content":"It will also provide various functionalities to help with your studies. You will be able to make full "},{"lineNumber":16,"author":{"gitId":"farice9"},"content":"use of the application if you can type fast."},{"lineNumber":17,"author":{"gitId":"farice9"},"content":""},{"lineNumber":18,"author":{"gitId":"farice9"},"content":"This application currently has the following modes that you can access and use:"},{"lineNumber":19,"author":{"gitId":"farice9"},"content":"1. Menu \t    -   Central location of the app"},{"lineNumber":20,"author":{"gitId":"farice9"},"content":"1. Bookmark \t- \tManage your online links at one convenient location"},{"lineNumber":21,"author":{"gitId":"farice9"},"content":"1. Timetable \t- \tKeep track of your weekly activities"},{"lineNumber":22,"author":{"gitId":"farice9"},"content":"1. Academic\t    - \tTrack your academic performance and store useful contact information"},{"lineNumber":23,"author":{"gitId":"farice9"},"content":"1. Flashcard\t- \tMemorize your study content better with our built-in flashcard"},{"lineNumber":24,"author":{"gitId":"farice9"},"content":""},{"lineNumber":25,"author":{"gitId":"farice9"},"content":"## About"},{"lineNumber":26,"author":{"gitId":"farice9"},"content":"This app is targeted towards National University of Singapore (NUS) students studying in this current online "},{"lineNumber":27,"author":{"gitId":"farice9"},"content":"environment. This user guide will be providing information about how to use the Study It app by "},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"showing you a step-by-step guide to access each functionality the app provides. "},{"lineNumber":29,"author":{"gitId":"farice9"},"content":"By utilizing these features, you will be able to manage your study matters efficiently!"},{"lineNumber":30,"author":{"gitId":"farice9"},"content":""},{"lineNumber":31,"author":{"gitId":"farice9"},"content":"The following is a list of common notations and symbols you’ll encounter throughout the user guide:"},{"lineNumber":32,"author":{"gitId":"farice9"},"content":""},{"lineNumber":33,"author":{"gitId":"farice9"},"content":"1. INDEX_NUMBER"},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"   "},{"lineNumber":35,"author":{"gitId":"farice9"},"content":"    Words of phrases in full capital indicates that they are inputs that you can decide on"},{"lineNumber":36,"author":{"gitId":"farice9"},"content":"   "},{"lineNumber":37,"author":{"gitId":"farice9"},"content":"1. `command`"},{"lineNumber":38,"author":{"gitId":"farice9"},"content":""},{"lineNumber":39,"author":{"gitId":"farice9"},"content":"    words or phrases highlighted indicate that they are actual commands you can use in the app"},{"lineNumber":40,"author":{"gitId":"farice9"},"content":"    "},{"lineNumber":41,"author":{"gitId":"farice9"},"content":"1. [website link](https://ay2021s1-cs2113t-t12-1.github.io/tp/UserGuide.html)"},{"lineNumber":42,"author":{"gitId":"farice9"},"content":"   "},{"lineNumber":43,"author":{"gitId":"farice9"},"content":"   Underlined words or phrases in blue colour are website links that you can press on to access the website"},{"lineNumber":44,"author":{"gitId":"farice9"},"content":""},{"lineNumber":45,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":46,"author":{"gitId":"farice9"},"content":""},{"lineNumber":47,"author":{"gitId":"farice9"},"content":"## Getting Started - *Lim Yuan Bing*"},{"lineNumber":48,"author":{"gitId":"farice9"},"content":""},{"lineNumber":49,"author":{"gitId":"farice9"},"content":"Let’s get started with using Study It! This section will show you how you can run our app on your computer."},{"lineNumber":50,"author":{"gitId":"farice9"},"content":""},{"lineNumber":51,"author":{"gitId":"farice9"},"content":"Firstly, please ensure that your computer fulfills the following requirement:"},{"lineNumber":52,"author":{"gitId":"farice9"},"content":"* Has Java 11.0.8"},{"lineNumber":53,"author":{"gitId":"farice9"},"content":"  * You may refer to this [website](https://www.oracle.com/java/technologies/javase/jdk11-archive-downloads.html) to download the Java 11.0.8 installer"},{"lineNumber":54,"author":{"gitId":"farice9"},"content":"  * The installation guide can be found in the following websites:"},{"lineNumber":55,"author":{"gitId":"farice9"},"content":"    * [Windows](https://docs.oracle.com/en/java/javase/11/install/installation-jdk-microsoft-windows-platforms.html#GUID-A7E27B90-A28D-4237-9383-A58B416071CA)"},{"lineNumber":56,"author":{"gitId":"farice9"},"content":"    , [Linux](https://docs.oracle.com/en/java/javase/11/install/installation-jdk-linux-platforms.html#GUID-737A84E4-2EFF-4D38-8E60-3E29D1B884B8) "},{"lineNumber":57,"author":{"gitId":"farice9"},"content":"    , [MacOS](https://docs.oracle.com/javase/10/install/installation-jdk-and-jre-macos.htm)"},{"lineNumber":58,"author":{"gitId":"farice9"},"content":""},{"lineNumber":59,"author":{"gitId":"farice9"},"content":"Once you are done installing Java 11.0.8 onto your PC, you may follow these procedures to start using Study It:"},{"lineNumber":60,"author":{"gitId":"farice9"},"content":""},{"lineNumber":61,"author":{"gitId":"farice9"},"content":"1. Download the tP.jar file from our [Github release](https://github.com/AY2021S1-CS2113T-T12-1/tp/releases) and place it in an empty folder"},{"lineNumber":62,"author":{"gitId":"farice9"},"content":"1. Open your computer’s command prompt"},{"lineNumber":63,"author":{"gitId":"farice9"},"content":"   1. Windows: press Windows key + R, type “cmd” and press Enter"},{"lineNumber":64,"author":{"gitId":"farice9"},"content":"   1. MacOS: press Command - spacebar to launch Spotlight and type \"Terminal,\" then double-click the search result"},{"lineNumber":65,"author":{"gitId":"farice9"},"content":"   1. Linux Ubuntu: press Ctrl + Alt + T"},{"lineNumber":66,"author":{"gitId":"farice9"},"content":"1. Change the directory of the command prompt to the folder containing tP.jar file"},{"lineNumber":67,"author":{"gitId":"farice9"},"content":"1. Type `java -jar tp.jar` into the command prompt and press Enter to execute it"},{"lineNumber":68,"author":{"gitId":"farice9"},"content":"1. If the application runs successfully, you’ll be greeted by the following welcome message:"},{"lineNumber":69,"author":{"gitId":"farice9"},"content":""},{"lineNumber":70,"author":{"gitId":"farice9"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":71,"author":{"gitId":"farice9"},"content":"    \u003cimg width\u003d\"70%\" height\u003d\"70%\" src\u003d\"Images/GeneralUG/welcomemessage.png\"\u003e"},{"lineNumber":72,"author":{"gitId":"farice9"},"content":"\u003c/p\u003e"},{"lineNumber":73,"author":{"gitId":"farice9"},"content":""},{"lineNumber":74,"author":{"gitId":"farice9"},"content":"Congratulations! You are now able to run Study It. To access its various functionalities,"},{"lineNumber":75,"author":{"gitId":"farice9"},"content":"you would need to type in the command at the Command Prompt and press Enter. Whenever you feel lost, "},{"lineNumber":76,"author":{"gitId":"farice9"},"content":"refer to the following sections of this User Guide or call the `help` function in the app "},{"lineNumber":77,"author":{"gitId":"farice9"},"content":"for guidance. We hope that you have fun using our app!"},{"lineNumber":78,"author":{"gitId":"farice9"},"content":""},{"lineNumber":79,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":80,"author":{"gitId":"farice9"},"content":""},{"lineNumber":81,"author":{"gitId":"farice9"},"content":"## General Commands - *Lim Yuan Bing*"},{"lineNumber":82,"author":{"gitId":"farice9"},"content":""},{"lineNumber":83,"author":{"gitId":"farice9"},"content":"The following section details the general commands you can use in the app. "},{"lineNumber":84,"author":{"gitId":"farice9"},"content":"These commands can be used anywhere in the app to help you navigate around the app."},{"lineNumber":85,"author":{"gitId":"farice9"},"content":""},{"lineNumber":86,"author":{"gitId":"farice9"},"content":"This section contains the following commands:"},{"lineNumber":87,"author":{"gitId":"farice9"},"content":"* 1 : [Prints help message](#1-prints-help-message-help)"},{"lineNumber":88,"author":{"gitId":"farice9"},"content":"* 2 : [Changes the current mode](#2-changes-the-current-mode-cd-mode_name-or-mode_index)"},{"lineNumber":89,"author":{"gitId":"farice9"},"content":"* 3 : [Shows the current location](#3-shows-the-current-location-location)"},{"lineNumber":90,"author":{"gitId":"farice9"},"content":"* 4 : [Prints starred items](#4-prints-starred-items-highlight)"},{"lineNumber":91,"author":{"gitId":"farice9"},"content":"* 5 : [Exits the current mode or application](#5-exits-the-current-mode-or-application-exit)"},{"lineNumber":92,"author":{"gitId":"farice9"},"content":""},{"lineNumber":93,"author":{"gitId":"farice9"},"content":"\u003e**Warning**"},{"lineNumber":94,"author":{"gitId":"farice9"},"content":"\u003eThe general commands doesn\u0027t work during `add class` or `add activity` sequence in timetable mode"},{"lineNumber":95,"author":{"gitId":"farice9"},"content":"\u003eand `add` or `test` sequence in flashcard mode"},{"lineNumber":96,"author":{"gitId":"farice9"},"content":""},{"lineNumber":97,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":98,"author":{"gitId":"farice9"},"content":""},{"lineNumber":99,"author":{"gitId":"farice9"},"content":"### 1. Prints help message: `help`"},{"lineNumber":100,"author":{"gitId":"farice9"},"content":""},{"lineNumber":101,"author":{"gitId":"farice9"},"content":"The app will print out a summarised list of functions you can call at the current mode. "},{"lineNumber":102,"author":{"gitId":"farice9"},"content":"This help message will vary depending on which mode you are at. "},{"lineNumber":103,"author":{"gitId":"farice9"},"content":"Use this command to get guidance on what you can do with the app!"},{"lineNumber":104,"author":{"gitId":"farice9"},"content":""},{"lineNumber":105,"author":{"gitId":"farice9"},"content":"Instruction:"},{"lineNumber":106,"author":{"gitId":"farice9"},"content":"1. Type `help` and press Enter"},{"lineNumber":107,"author":{"gitId":"farice9"},"content":""},{"lineNumber":108,"author":{"gitId":"farice9"},"content":"Expected output:"},{"lineNumber":109,"author":{"gitId":"farice9"},"content":""},{"lineNumber":110,"author":{"gitId":"farice9"},"content":"Example of printing help message at menu:"},{"lineNumber":111,"author":{"gitId":"farice9"},"content":""},{"lineNumber":112,"author":{"gitId":"farice9"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":113,"author":{"gitId":"farice9"},"content":"    \u003cimg width\u003d\"100%\" height\u003d\"100%\" src\u003d\"Images/GeneralUG/help.png\"\u003e"},{"lineNumber":114,"author":{"gitId":"farice9"},"content":"\u003c/p\u003e"},{"lineNumber":115,"author":{"gitId":"farice9"},"content":""},{"lineNumber":116,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":117,"author":{"gitId":"farice9"},"content":""},{"lineNumber":118,"author":{"gitId":"farice9"},"content":"Another example of printing help message at bookmark mode:"},{"lineNumber":119,"author":{"gitId":"farice9"},"content":""},{"lineNumber":120,"author":{"gitId":"farice9"},"content":"\u003cp align\u003d\"left\"\u003e"},{"lineNumber":121,"author":{"gitId":"farice9"},"content":"    \u003cimg width\u003d\"100%\" height\u003d\"100%\" src\u003d\"Images/GeneralUG/bookmarkhelp.png\"\u003e"},{"lineNumber":122,"author":{"gitId":"farice9"},"content":"\u003c/p\u003e"},{"lineNumber":123,"author":{"gitId":"farice9"},"content":""},{"lineNumber":124,"author":{"gitId":"farice9"},"content":"\u003e**Useful information:**"},{"lineNumber":125,"author":{"gitId":"farice9"},"content":"\u003e* The message varies in different modes to show you the commands at that mode. "},{"lineNumber":126,"author":{"gitId":"farice9"},"content":"\u003eTry it out!"},{"lineNumber":127,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":128,"author":{"gitId":"farice9"},"content":""},{"lineNumber":129,"author":{"gitId":"farice9"},"content":"### 2. Changes the current mode: `cd MODE_NAME or MODE_INDEX`"},{"lineNumber":130,"author":{"gitId":"farice9"},"content":""},{"lineNumber":131,"author":{"gitId":"farice9"},"content":"You can change to different modes of the app by using this command! "},{"lineNumber":132,"author":{"gitId":"farice9"},"content":"The following are the modes currently available in the app and their corresponding index:"},{"lineNumber":133,"author":{"gitId":"farice9"},"content":"1. menu"},{"lineNumber":134,"author":{"gitId":"farice9"},"content":"1. bookmark"},{"lineNumber":135,"author":{"gitId":"farice9"},"content":"1. timetable"},{"lineNumber":136,"author":{"gitId":"farice9"},"content":"1. academic"},{"lineNumber":137,"author":{"gitId":"farice9"},"content":"1. flashcard"},{"lineNumber":138,"author":{"gitId":"farice9"},"content":""},{"lineNumber":139,"author":{"gitId":"farice9"},"content":"Instruction:"},{"lineNumber":140,"author":{"gitId":"farice9"},"content":"1. Type `cd` followed by the `MODE_NAME` or `MODE_INDEX`"},{"lineNumber":141,"author":{"gitId":"farice9"},"content":"1. Press Enter"},{"lineNumber":142,"author":{"gitId":"farice9"},"content":""},{"lineNumber":143,"author":{"gitId":"farice9"},"content":"Expected output:"},{"lineNumber":144,"author":{"gitId":"farice9"},"content":""},{"lineNumber":145,"author":{"gitId":"farice9"},"content":"Command: `cd 2`"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"farice9"},"content":"![CDBookmark](Images/GeneralUG/cdBookmark.png)"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":150,"author":{"gitId":"farice9"},"content":""},{"lineNumber":151,"author":{"gitId":"farice9"},"content":"Command: `cd academic`"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"farice9"},"content":"![CDAcademic](Images/GeneralUG/cdacademic.png)"},{"lineNumber":154,"author":{"gitId":"farice9"},"content":""},{"lineNumber":155,"author":{"gitId":"farice9"},"content":"\u003e**Warning**"},{"lineNumber":156,"author":{"gitId":"farice9"},"content":"\u003e* An error message will appear when you type an invalid mode index or mode name"},{"lineNumber":157,"author":{"gitId":"farice9"},"content":"\u003e"},{"lineNumber":158,"author":{"gitId":"farice9"},"content":"\u003e![WrongModeIndex](Images/GeneralUG/wrongmodeindex.png)"},{"lineNumber":159,"author":{"gitId":"farice9"},"content":"\u003e"},{"lineNumber":160,"author":{"gitId":"farice9"},"content":"\u003e* Ensure that your index is within range or you spelt the mode names correctly when using this command!"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"farice9"},"content":"\u003e**Useful information:**"},{"lineNumber":163,"author":{"gitId":"farice9"},"content":"\u003e* You can use this command anywhere in the app to switch between modes quickly!"},{"lineNumber":164,"author":{"gitId":"farice9"},"content":"\u003e* This command STILL works if you don\u0027t have space/have excess space "},{"lineNumber":165,"author":{"gitId":"farice9"},"content":"\u003ebetween `cd` and the `MODE_NAME/MODE_INDEX`"},{"lineNumber":166,"author":{"gitId":"farice9"},"content":""},{"lineNumber":167,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":168,"author":{"gitId":"farice9"},"content":""},{"lineNumber":169,"author":{"gitId":"farice9"},"content":"### 3. Shows the current location: `location`"},{"lineNumber":170,"author":{"gitId":"farice9"},"content":""},{"lineNumber":171,"author":{"gitId":"farice9"},"content":"Calling this command will show you which mode you are currently at."},{"lineNumber":172,"author":{"gitId":"farice9"},"content":""},{"lineNumber":173,"author":{"gitId":"farice9"},"content":"Instruction:"},{"lineNumber":174,"author":{"gitId":"farice9"},"content":"1. Type `location` and press Enter"},{"lineNumber":175,"author":{"gitId":"farice9"},"content":""},{"lineNumber":176,"author":{"gitId":"farice9"},"content":"Expected output:"},{"lineNumber":177,"author":{"gitId":"farice9"},"content":""},{"lineNumber":178,"author":{"gitId":"farice9"},"content":"At bookmark mode:"},{"lineNumber":179,"author":{"gitId":"farice9"},"content":""},{"lineNumber":180,"author":{"gitId":"farice9"},"content":"![](Images/GeneralUG/location_bookmark.png)"},{"lineNumber":181,"author":{"gitId":"farice9"},"content":""},{"lineNumber":182,"author":{"gitId":"farice9"},"content":"At flashcard mode:"},{"lineNumber":183,"author":{"gitId":"farice9"},"content":""},{"lineNumber":184,"author":{"gitId":"farice9"},"content":"![](Images/GeneralUG/location_flashcard.png)"},{"lineNumber":185,"author":{"gitId":"farice9"},"content":""},{"lineNumber":186,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":187,"author":{"gitId":"farice9"},"content":""},{"lineNumber":188,"author":{"gitId":"farice9"},"content":"### 4. Prints starred items: `highlight`"},{"lineNumber":189,"author":{"gitId":"farice9"},"content":""},{"lineNumber":190,"author":{"gitId":"farice9"},"content":"This command will print out the starred items in Bookmark and Academic"},{"lineNumber":191,"author":{"gitId":"farice9"},"content":""},{"lineNumber":192,"author":{"gitId":"farice9"},"content":"Instruction:"},{"lineNumber":193,"author":{"gitId":"farice9"},"content":"1. Type `highlight` and press Enter"},{"lineNumber":194,"author":{"gitId":"farice9"},"content":""},{"lineNumber":195,"author":{"gitId":"farice9"},"content":"Expected output:"},{"lineNumber":196,"author":{"gitId":"farice9"},"content":""},{"lineNumber":197,"author":{"gitId":"farice9"},"content":"![](Images/GeneralUG/highlight.png)"},{"lineNumber":198,"author":{"gitId":"farice9"},"content":""},{"lineNumber":199,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":200,"author":{"gitId":"farice9"},"content":""},{"lineNumber":201,"author":{"gitId":"farice9"},"content":"### 5. Exits the current mode or application: `exit`"},{"lineNumber":202,"author":{"gitId":"farice9"},"content":""},{"lineNumber":203,"author":{"gitId":"farice9"},"content":"This command behaves differently depending on which mode you are currently at."},{"lineNumber":204,"author":{"gitId":"farice9"},"content":""},{"lineNumber":205,"author":{"gitId":"farice9"},"content":"If you are currently at the Main Menu, calling this command will exit the app as shown below:"},{"lineNumber":206,"author":{"gitId":"farice9"},"content":""},{"lineNumber":207,"author":{"gitId":"farice9"},"content":"Instruction:"},{"lineNumber":208,"author":{"gitId":"farice9"},"content":"1. Type `exit` and press Enter"},{"lineNumber":209,"author":{"gitId":"farice9"},"content":""},{"lineNumber":210,"author":{"gitId":"farice9"},"content":"Expected output:"},{"lineNumber":211,"author":{"gitId":"farice9"},"content":""},{"lineNumber":212,"author":{"gitId":"farice9"},"content":"![](Images/GeneralUG/exit.png)"},{"lineNumber":213,"author":{"gitId":"farice9"},"content":""},{"lineNumber":214,"author":{"gitId":"farice9"},"content":"If you are in any of the other modes (i.e. bookmark/timetable/academic/flashcard), "},{"lineNumber":215,"author":{"gitId":"farice9"},"content":"calling this command will exit that mode and place you at the Main menu instead, as shown below:"},{"lineNumber":216,"author":{"gitId":"farice9"},"content":""},{"lineNumber":217,"author":{"gitId":"farice9"},"content":"Instruction:"},{"lineNumber":218,"author":{"gitId":"farice9"},"content":"1. Type exit and press enter when you are in any other modes besides Main menu"},{"lineNumber":219,"author":{"gitId":"farice9"},"content":""},{"lineNumber":220,"author":{"gitId":"farice9"},"content":"Expected output:"},{"lineNumber":221,"author":{"gitId":"farice9"},"content":""},{"lineNumber":222,"author":{"gitId":"farice9"},"content":"![](Images/GeneralUG/exitmode.png)"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"hailqueenflo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":227,"author":{"gitId":"lingsihui"},"content":"\u003c!-- @@author lingsihui --\u003e"},{"lineNumber":228,"author":{"gitId":"lingsihui"},"content":"## 1. Bookmark - *Ling Si Hui, Shiho*"},{"lineNumber":229,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":230,"author":{"gitId":"lingsihui"},"content":"Now that more lessons are moving online, are you managing your links well? You might "},{"lineNumber":231,"author":{"gitId":"lingsihui"},"content":"want to save your time finding your zoom links in your email inbox and save all your "},{"lineNumber":232,"author":{"gitId":"lingsihui"},"content":"links in the bookmark feature to access them easily! The bookmark mode enables you to "},{"lineNumber":233,"author":{"gitId":"lingsihui"},"content":"compile all your links in one destination and even categorise them into different groups. "},{"lineNumber":234,"author":{"gitId":"lingsihui"},"content":"After entering the bookmark mode (refer to [General Command 2](#2-changes-the-current-mode-cd-mode_name-or-mode_index)), use the following commands to "},{"lineNumber":235,"author":{"gitId":"lingsihui"},"content":"navigate around bookmark mode. "},{"lineNumber":236,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":237,"author":{"gitId":"lingsihui"},"content":"This section contains 8 commands: "},{"lineNumber":238,"author":{"gitId":"lingsihui"},"content":"* 1.1 : [Viewing all bookmark links / starred links / category](#11-viewing-all-the-bookmarks-links-listlist--s-list--c-list--a)"},{"lineNumber":239,"author":{"gitId":"lingsihui"},"content":"* 1.2 : [Going into each category](#12-going-into-each-category-bm-number)"},{"lineNumber":240,"author":{"gitId":"lingsihui"},"content":"* 1.3 : [Adding a category](#13-adding-category--cat-category_name-)"},{"lineNumber":241,"author":{"gitId":"lingsihui"},"content":"* 1.4 : [Deleting a category](#14-deleting-a-category--delete-category_number)"},{"lineNumber":242,"author":{"gitId":"lingsihui"},"content":"* 1.5 : [Going back to Bookmark main ](#15-going-back-to-bookmark-main-back)"},{"lineNumber":243,"author":{"gitId":"lingsihui"},"content":"* 1.6 : [Adding a link to your chosen category](#16-adding-a-link-to-your-chosen-category-add-link--add-link-t-title)"},{"lineNumber":244,"author":{"gitId":"lingsihui"},"content":"* 1.7 : [Deleting a link](#17-deleting-a-link-rm-link_number-)"},{"lineNumber":245,"author":{"gitId":"lingsihui"},"content":"* 1.8 : [Starring / Unstarring a link](#18-marking-unmarking-a-link-as-a-starred-link-star-link_number)"},{"lineNumber":246,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":247,"author":{"gitId":"lingsihui"},"content":"\u003e**Warning**"},{"lineNumber":248,"author":{"gitId":"lingsihui"},"content":"\u003eIf you edit the data file wrongly, the bookmark feature will not be able to take in the correct category name, and links. "},{"lineNumber":249,"author":{"gitId":"lingsihui"},"content":"\u003eIf you encounter any errors after handling the bookmark data file, refer to [FAQ](#faq)"},{"lineNumber":250,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":251,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":252,"author":{"gitId":"lingsihui"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":253,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":254,"author":{"gitId":"lingsihui"},"content":"### 1.1 Viewing all the bookmarks links: `list`,`list -s`, `list -c`, `list -a`"},{"lineNumber":255,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":256,"author":{"gitId":"lingsihui"},"content":"Are you trying to find your links by entering into each category to view your links?"},{"lineNumber":257,"author":{"gitId":"lingsihui"},"content":"You might want to have an easy way to view the overview of your links. "},{"lineNumber":258,"author":{"gitId":"lingsihui"},"content":"You can now view the entire list of links in the category you are in, "},{"lineNumber":259,"author":{"gitId":"lingsihui"},"content":"the starred links, the list of categories available, "},{"lineNumber":260,"author":{"gitId":"lingsihui"},"content":"or the entire list of links in every category using the following commands. "},{"lineNumber":261,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":262,"author":{"gitId":"lingsihui"},"content":"Instructions:"},{"lineNumber":263,"author":{"gitId":"lingsihui"},"content":"1. If you want to view the list of links in the category you are in  \u003d `list`  "},{"lineNumber":264,"author":{"gitId":"lingsihui"},"content":"2. If you want to view the entire list of starred links \u003d `list -s`"},{"lineNumber":265,"author":{"gitId":"lingsihui"},"content":"3. If you want to view the entire list of category available \u003d `list -c`"},{"lineNumber":266,"author":{"gitId":"lingsihui"},"content":"4. if you want to view the entire list of links in every category \u003d `list -a`"},{"lineNumber":267,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":268,"author":{"gitId":"lingsihui"},"content":"Expected output:  "},{"lineNumber":269,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":270,"author":{"gitId":"lingsihui"},"content":"![Bookmark_List](Images/BookmarkUG/Figure1.png)"},{"lineNumber":271,"author":{"gitId":"lingsihui"},"content":"![Bookmark_List_1Star_Cat](Images/BookmarkUG/Figure2.png)"},{"lineNumber":272,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":273,"author":{"gitId":"lingsihui"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":274,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":275,"author":{"gitId":"lingsihui"},"content":"\u003e**Useful Information:**"},{"lineNumber":276,"author":{"gitId":"lingsihui"},"content":"\u003e* You can only use this command anywhere after entering the bookmark mode. (Refer to [General Command 2](#2-changes-the-current-mode-cd-mode_name-or-mode_index))"},{"lineNumber":277,"author":{"gitId":"lingsihui"},"content":"\u003e* If your category does not have any links, it will indicate that the list is empty."},{"lineNumber":278,"author":{"gitId":"lingsihui"},"content":"\u003e* If you are in bookmark main, and you input `list`, it will show you the entire list of links in every category. (Same command as `list -a`)"},{"lineNumber":279,"author":{"gitId":"lingsihui"},"content":"\u003e* To star / unstar a link refer to [1.8](#18-marking-unmarking-a-link-as-a-starred-link-star-link_number)"},{"lineNumber":280,"author":{"gitId":"lingsihui"},"content":"\u003e* To add a category refer to [1.3](#13-adding-category--cat-category_name-), to delete a category refer to [1.4](#14-deleting-a-category--delete-category_number) "},{"lineNumber":281,"author":{"gitId":"lingsihui"},"content":"\u003e* You can also omit the space between `list` and `-a` / `-s` / `-c`"},{"lineNumber":282,"author":{"gitId":"lingsihui"},"content":"\u003e* The user input is not case-sensitive."},{"lineNumber":283,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":284,"author":{"gitId":"lingsihui"},"content":"\u003e**Warning**"},{"lineNumber":285,"author":{"gitId":"lingsihui"},"content":"\u003e* Follow the format `list`, `list -s`, `list -c`, `list -a` without adding additional inputs. If additional input is detected, the program will prompt you to input the correct format. "},{"lineNumber":286,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":287,"author":{"gitId":"lingsihui"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":288,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":289,"author":{"gitId":"lingsihui"},"content":"### 1.2 Going into each category: `bm NUMBER`   "},{"lineNumber":290,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":291,"author":{"gitId":"lingsihui"},"content":"Managing so many links can be a hassle! However, categorising the links into different "},{"lineNumber":292,"author":{"gitId":"lingsihui"},"content":"groups can make it even more efficient to find your links! After entering bookmark mode "},{"lineNumber":293,"author":{"gitId":"lingsihui"},"content":"(refer to [General Command 2](#2-changes-the-current-mode-cd-mode_name-or-mode_index)), you can enter each category using the following commands. "},{"lineNumber":294,"author":{"gitId":"lingsihui"},"content":"This command allows you to change the bookmark category within the bookmark mode. "},{"lineNumber":295,"author":{"gitId":"lingsihui"},"content":" "},{"lineNumber":296,"author":{"gitId":"lingsihui"},"content":"Instruction:"},{"lineNumber":297,"author":{"gitId":"lingsihui"},"content":"1. `bm NUMBER `"},{"lineNumber":298,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":299,"author":{"gitId":"lingsihui"},"content":"E.g. `bm 2`  "},{"lineNumber":300,"author":{"gitId":"lingsihui"},"content":"Expected output:   "},{"lineNumber":301,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":302,"author":{"gitId":"lingsihui"},"content":"![Bookmark_bm_cat](Images/BookmarkUG/Figure3.png)"},{"lineNumber":303,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":304,"author":{"gitId":"lingsihui"},"content":"\u003e**Useful Information:**"},{"lineNumber":305,"author":{"gitId":"lingsihui"},"content":"\u003e* You can only use this command anywhere after entering the bookmark mode. ( Refer to [General Command 2](#2-changes-the-current-mode-cd-mode_name-or-mode_index))"},{"lineNumber":306,"author":{"gitId":"lingsihui"},"content":"\u003e* Zoom, Nus, Internship, Hackathon, Career Talks categories are included in the default."},{"lineNumber":307,"author":{"gitId":"lingsihui"},"content":"\u003e* If you are already in the chosen category, the program will inform you as shown in the figure below. "},{"lineNumber":308,"author":{"gitId":"lingsihui"},"content":"\u003e![Bookmark_bm_already in cat](Images/BookmarkUG/Figure4.png)"},{"lineNumber":309,"author":{"gitId":"lingsihui"},"content":"\u003e* You can also omit the space between `bm` and `NUMBER`"},{"lineNumber":310,"author":{"gitId":"lingsihui"},"content":"\u003e* The user input is not case-sensitive."},{"lineNumber":311,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":312,"author":{"gitId":"lingsihui"},"content":"If you encounter any errors, take note of the following warnings."},{"lineNumber":313,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":314,"author":{"gitId":"lingsihui"},"content":"\u003e**Warning:**"},{"lineNumber":315,"author":{"gitId":"lingsihui"},"content":"\u003e* Ensure that the category NUMBER that you have chosen is valid. Error will be shown if the category NUMBER does not exist, or the NUMBER you have entered is not a number. To find out the valid category NUMBER, view the list of categories (Refer to [1.1](#11-viewing-all-the-bookmarks-links-listlist--s-list--c-list--a))"},{"lineNumber":316,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":317,"author":{"gitId":"lingsihui"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":318,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":319,"author":{"gitId":"lingsihui"},"content":"### 1.3 Adding category:  `cat CATEGORY_NAME `"},{"lineNumber":320,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":321,"author":{"gitId":"lingsihui"},"content":"If you cannot find the perfect category to place your bookmark, "},{"lineNumber":322,"author":{"gitId":"lingsihui"},"content":"why not create your own category! In addition to the default categories "},{"lineNumber":323,"author":{"gitId":"lingsihui"},"content":"that are added (Zoom, NUS, Internship, Hackathon, Career Talks), create your "},{"lineNumber":324,"author":{"gitId":"lingsihui"},"content":"own category to add your bookmark links. Use the following commands to add a category "},{"lineNumber":325,"author":{"gitId":"lingsihui"},"content":"and navigate it (Refer to [1.2](#12-going-into-each-category-bm-number)) the same way as the rest of your categories."},{"lineNumber":326,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":327,"author":{"gitId":"lingsihui"},"content":"Instruction: "},{"lineNumber":328,"author":{"gitId":"lingsihui"},"content":"1. `cat CATEGORY_NAME`   "},{"lineNumber":329,"author":{"gitId":"lingsihui"},"content":"  "},{"lineNumber":330,"author":{"gitId":"lingsihui"},"content":"e.g. `cat entertainment`, `cat stocks`"},{"lineNumber":331,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":332,"author":{"gitId":"lingsihui"},"content":"Expected output:   "},{"lineNumber":333,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":334,"author":{"gitId":"lingsihui"},"content":"![Bookmark_Add Category](Images/BookmarkUG/Figure5.png)"},{"lineNumber":335,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":336,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":337,"author":{"gitId":"lingsihui"},"content":"\u003e**Useful Information:** "},{"lineNumber":338,"author":{"gitId":"lingsihui"},"content":"\u003e* You can only use this command anywhere after entering the bookmark mode.  (Refer to [General Command 2](#2-changes-the-current-mode-cd-mode_name-or-mode_index))"},{"lineNumber":339,"author":{"gitId":"lingsihui"},"content":"\u003e* NUS, Zoom, Internship, Hackathon and Career Talk categories are included in the default."},{"lineNumber":340,"author":{"gitId":"lingsihui"},"content":"\u003e* You can also omit the space between `cat` and `CATEGORY_NAME`"},{"lineNumber":341,"author":{"gitId":"lingsihui"},"content":"\u003e* The user input is not case-sensitive."},{"lineNumber":342,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":343,"author":{"gitId":"lingsihui"},"content":"If you encounter any errors, take note of the following warnings. "},{"lineNumber":344,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":345,"author":{"gitId":"lingsihui"},"content":"\u003e**Warning:** "},{"lineNumber":346,"author":{"gitId":"lingsihui"},"content":"\u003e* Ensure that the category name is not empty. Error will be shown if the category name is empty. "},{"lineNumber":347,"author":{"gitId":"lingsihui"},"content":"\u003e* You can only add unique category name."},{"lineNumber":348,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":349,"author":{"gitId":"lingsihui"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":350,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":351,"author":{"gitId":"lingsihui"},"content":"### 1.4 Deleting a category:  `delete CATEGORY_NUMBER`  "},{"lineNumber":352,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":353,"author":{"gitId":"lingsihui"},"content":"When you have a category, but you have no important links related to the category, take it out of your bookmark list! Organise and design your bookmark categories to your own personal needs by adding your own category (refer to [1.3](#13-adding-category--cat-category_name-)) and deleting unnecessary categories using these following commands."},{"lineNumber":354,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":355,"author":{"gitId":"lingsihui"},"content":"Instruction:  "},{"lineNumber":356,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":357,"author":{"gitId":"lingsihui"},"content":"1. `delete CATEGORY_NUMBER`  "},{"lineNumber":358,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":359,"author":{"gitId":"lingsihui"},"content":"e.g. `delete 6`  "},{"lineNumber":360,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":361,"author":{"gitId":"lingsihui"},"content":"Expected output:  "},{"lineNumber":362,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":363,"author":{"gitId":"lingsihui"},"content":"![Bookmark_1.4](Images/BookmarkUG/Figure6.png)"},{"lineNumber":364,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":365,"author":{"gitId":"lingsihui"},"content":"\u003e**Useful Information:**"},{"lineNumber":366,"author":{"gitId":"lingsihui"},"content":"\u003e* You can only use this command in bookmark main.  (Refer to [1.5](#15-going-back-to-bookmark-main-back) to go back to the bookmark main)"},{"lineNumber":367,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":368,"author":{"gitId":"lingsihui"},"content":"Before deleting a category, take note of the following warnings. "},{"lineNumber":369,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":370,"author":{"gitId":"lingsihui"},"content":"\u003e**Warning:**"},{"lineNumber":371,"author":{"gitId":"lingsihui"},"content":"\u003e* Ensure that the category NUMBER that you have chosen is valid. Error will be shown if the category NUMBER does not exist, or the NUMBER you have entered is not a number. To find out the valid category NUMBER, view the list of category available. (Refer to [1.1](#11-viewing-all-the-bookmarks-links-listlist--s-list--c-list--a))"},{"lineNumber":372,"author":{"gitId":"lingsihui"},"content":"\u003e* CAUTION: Make sure to check all your links before deleting. Deleting a category will delete all the bookmarks in the category! "},{"lineNumber":373,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":374,"author":{"gitId":"lingsihui"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":375,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":376,"author":{"gitId":"lingsihui"},"content":"### 1.5 Going back to bookmark main: `back` "},{"lineNumber":377,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":378,"author":{"gitId":"lingsihui"},"content":"There are two modes in bookmark feature: the main bookmark mode (refer to [General Command 2](#2-changes-the-current-mode-cd-mode_name-or-mode_index)), "},{"lineNumber":379,"author":{"gitId":"lingsihui"},"content":"and the category mode (Refer to [1.2](#12-going-into-each-category-bm-number)). To navigate freely from mode to mode, use the following command. "},{"lineNumber":380,"author":{"gitId":"lingsihui"},"content":"This command goes back to the previous mode depending on which mode you are in. "},{"lineNumber":381,"author":{"gitId":"lingsihui"},"content":" "},{"lineNumber":382,"author":{"gitId":"lingsihui"},"content":"Instruction: "},{"lineNumber":383,"author":{"gitId":"lingsihui"},"content":"1. `back` "},{"lineNumber":384,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":385,"author":{"gitId":"lingsihui"},"content":"Expected output:   "},{"lineNumber":386,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":387,"author":{"gitId":"lingsihui"},"content":"![Bookmark_back command](Images/BookmarkUG/Figure7.png)"},{"lineNumber":388,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":389,"author":{"gitId":"lingsihui"},"content":"\u003e**Useful Information:**"},{"lineNumber":390,"author":{"gitId":"lingsihui"},"content":"\u003e* When you input `back` in any bookmark category, you are brought back to the bookmark main. "},{"lineNumber":391,"author":{"gitId":"lingsihui"},"content":"\u003e* When you input `back` in the bookmark main, you will be prompted to type “`exit`” to exit bookmark mode. "},{"lineNumber":392,"author":{"gitId":"lingsihui"},"content":"\u003e* The user input is not case-sensitive."},{"lineNumber":393,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":394,"author":{"gitId":"lingsihui"},"content":"\u003e**Warning:**"},{"lineNumber":395,"author":{"gitId":"lingsihui"},"content":"\u003e* Follow the format `back` without adding additional inputs. "},{"lineNumber":396,"author":{"gitId":"lingsihui"},"content":"\u003eIf additional input is detected, the program will prompt you to input the correct format. "},{"lineNumber":397,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":398,"author":{"gitId":"lingsihui"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":399,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":400,"author":{"gitId":"lingsihui"},"content":"### 1.6 Adding a link to your chosen category: `add LINK` / `add LINK t-\u003eTITLE`"},{"lineNumber":401,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":402,"author":{"gitId":"lingsihui"},"content":"If you have a link to add to your bookmark category, follow these commands. "},{"lineNumber":403,"author":{"gitId":"lingsihui"},"content":"Make sure you have chosen your category (Refer to [1.2](#12-going-into-each-category-bm-number)) "},{"lineNumber":404,"author":{"gitId":"lingsihui"},"content":"and ensure that you do not add an invalid link or an empty link to your bookmark."},{"lineNumber":405,"author":{"gitId":"lingsihui"},"content":"If you are afraid you will forget what the bookmark link is for, you can "},{"lineNumber":406,"author":{"gitId":"lingsihui"},"content":"add a title to your bookmark link just by including a ` t-\u003e TITLE` after you enter your link. "},{"lineNumber":407,"author":{"gitId":"lingsihui"},"content":"In addition, if you forget what links you have already bookmarked, you can always "},{"lineNumber":408,"author":{"gitId":"lingsihui"},"content":"add the same link, and the program will tell you whether you have the link in your list."},{"lineNumber":409,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":410,"author":{"gitId":"lingsihui"},"content":"Instruction: "},{"lineNumber":411,"author":{"gitId":"lingsihui"},"content":"1. `add LINK` e.g. `add google.com`"},{"lineNumber":412,"author":{"gitId":"lingsihui"},"content":"2. `add LINK t-\u003eTITLE` e.g. `add https://nus-cs2113-ay2021s1.github.io/website/index.html t-\u003eCs2113T`"},{"lineNumber":413,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":414,"author":{"gitId":"lingsihui"},"content":"Expected output:   "},{"lineNumber":415,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":416,"author":{"gitId":"lingsihui"},"content":"![Bookmark_add link](Images/BookmarkUG/Figure8.png)"},{"lineNumber":417,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":418,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":419,"author":{"gitId":"lingsihui"},"content":"\u003e**Useful Information:**"},{"lineNumber":420,"author":{"gitId":"lingsihui"},"content":"\u003e* You can only use this command after choosing your category. (Refer to [1.2](#12-going-into-each-category-bm-number))"},{"lineNumber":421,"author":{"gitId":"lingsihui"},"content":"\u003e* You can only bookmark unique links within your category. Refer to the following figure.  "},{"lineNumber":422,"author":{"gitId":"lingsihui"},"content":"\u003e![Bookmark_not unique link](Images/BookmarkUG/Figure9.png)"},{"lineNumber":423,"author":{"gitId":"lingsihui"},"content":"\u003e* The user input is not case-sensitive."},{"lineNumber":424,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":425,"author":{"gitId":"lingsihui"},"content":"If you encounter any errors, take note of the following warnings. "},{"lineNumber":426,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":427,"author":{"gitId":"lingsihui"},"content":"\u003e**Warning:** "},{"lineNumber":428,"author":{"gitId":"lingsihui"},"content":"\u003e* Ensure that you have chosen a category. You will be prompted to choose a category before you are allowed to add your links. (Refer to [1.2](#12-going-into-each-category-bm-number)) "},{"lineNumber":429,"author":{"gitId":"lingsihui"},"content":"\u003e* Ensure that the link added is valid. Error will be shown if the link you have given is empty or is not valid (contains \" \", \"\\|\" or does not contain “.”). "},{"lineNumber":430,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":431,"author":{"gitId":"lingsihui"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":432,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":433,"author":{"gitId":"lingsihui"},"content":"### 1.7 Deleting a link: `rm LINK_NUMBER `"},{"lineNumber":434,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":435,"author":{"gitId":"lingsihui"},"content":"If you have a link that you no longer want to bookmark, or if you have a link that you accidentally bookmarked, you can remove the bookmark easily just by following these few commands. Make sure that you have chosen your category (Refer to [1.2](#12-going-into-each-category-bm-number))  and ensure that you do not remove an empty, or an invalid link number."},{"lineNumber":436,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":437,"author":{"gitId":"lingsihui"},"content":"Instruction: "},{"lineNumber":438,"author":{"gitId":"lingsihui"},"content":"1. `rm LINK_NUMBER`"},{"lineNumber":439,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":440,"author":{"gitId":"lingsihui"},"content":"e.g. `rm 1`"},{"lineNumber":441,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":442,"author":{"gitId":"lingsihui"},"content":"Expected output:   "},{"lineNumber":443,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":444,"author":{"gitId":"lingsihui"},"content":"![Bookmark_1.8](Images/BookmarkUG/Figure10.png)"},{"lineNumber":445,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":446,"author":{"gitId":"lingsihui"},"content":"\u003e**Useful Information:**"},{"lineNumber":447,"author":{"gitId":"lingsihui"},"content":"\u003e* You can only use this command after choosing your category. (Refer to [1.2](#12-going-into-each-category-bm-number))"},{"lineNumber":448,"author":{"gitId":"lingsihui"},"content":"\u003e* You can also omit the space between `rm` and `NUMBER`"},{"lineNumber":449,"author":{"gitId":"lingsihui"},"content":"\u003e* The user input is not case-sensitive."},{"lineNumber":450,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":451,"author":{"gitId":"lingsihui"},"content":"If you encounter any errors, take note of the following warnings. "},{"lineNumber":452,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":453,"author":{"gitId":"lingsihui"},"content":"\u003e**Warning:**"},{"lineNumber":454,"author":{"gitId":"lingsihui"},"content":"\u003e* Ensure that you have chosen a category. You will be prompted to choose a category before you are allowed to remove your links. (Refer to [1.2](#12-going-into-each-category-bm-number)) "},{"lineNumber":455,"author":{"gitId":"lingsihui"},"content":"\u003e* Ensure that the link number that you want to remove is valid. Error will be shown if the link number you have given is empty or is not valid. Refer to [1.1](#11-viewing-all-the-bookmarks-links-listlist--s-list--c-list--a) to find out the correct link number. "},{"lineNumber":456,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":457,"author":{"gitId":"lingsihui"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":458,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":459,"author":{"gitId":"lingsihui"},"content":"### 1.8 Marking/ Unmarking a link as a starred link: `star LINK_NUMBER`"},{"lineNumber":460,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":461,"author":{"gitId":"lingsihui"},"content":"You might have many links that you need to manage, however, some of the links might be more important than others. If you have such links, you can easily mark them up by following these few commands. Make sure that you have chosen your category (Refer to [1.2](#12-going-into-each-category-bm-number))  and ensure that you do not input an empty or invalid link number."},{"lineNumber":462,"author":{"gitId":"lingsihui"},"content":" "},{"lineNumber":463,"author":{"gitId":"lingsihui"},"content":"Instruction: "},{"lineNumber":464,"author":{"gitId":"lingsihui"},"content":"1. `star LINK_NUMBER`  "},{"lineNumber":465,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":466,"author":{"gitId":"lingsihui"},"content":"e.g. `star 1`"},{"lineNumber":467,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":468,"author":{"gitId":"lingsihui"},"content":"Expected output:   "},{"lineNumber":469,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":470,"author":{"gitId":"lingsihui"},"content":"![Bookmark_star](Images/BookmarkUG/Figure11.png){:width\u003d\"30%\" height\u003d\"30%\"}"},{"lineNumber":471,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":472,"author":{"gitId":"lingsihui"},"content":"\u003e**Useful Information:** "},{"lineNumber":473,"author":{"gitId":"lingsihui"},"content":"\u003e* It is the same command for marking and unmarking any links. For example, if link 1 is not starred, star 1  will mark the link as starred. And if link 1 is starred, star 1 will unmark link 1. "},{"lineNumber":474,"author":{"gitId":"lingsihui"},"content":"\u003e* You can view your starred links in the highlight function in the main mode. (Refer to [General Command 4](#4-prints-starred-items-highlight))"},{"lineNumber":475,"author":{"gitId":"lingsihui"},"content":"\u003e* You can also omit the space between `star` and `NUMBER`"},{"lineNumber":476,"author":{"gitId":"lingsihui"},"content":"\u003e* The user input is not case-sensitive."},{"lineNumber":477,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":478,"author":{"gitId":"lingsihui"},"content":"If you encounter any errors, take note of the following warnings.  "},{"lineNumber":479,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":480,"author":{"gitId":"lingsihui"},"content":"\u003e**Warning:**"},{"lineNumber":481,"author":{"gitId":"lingsihui"},"content":"\u003e* Ensure that you have chosen a category. You will be prompted to choose a category before you are allowed to mark your links as starred. (Refer to [1.2](#12-going-into-each-category-bm-number)) "},{"lineNumber":482,"author":{"gitId":"lingsihui"},"content":"\u003e* Ensure that the link number that you want to mark as star is valid. Error will be shown if the link number you have given is empty or is not valid. Refer to [1.1](#11-viewing-all-the-bookmarks-links-listlist--s-list--c-list--a) to find out the correct link number. "},{"lineNumber":483,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":484,"author":{"gitId":"lingsihui"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":485,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":486,"author":{"gitId":"slightlyharp"},"content":"\u003c!-- @@author slightlyharp --\u003e"},{"lineNumber":487,"author":{"gitId":"slightlyharp"},"content":"## 2. Timetable - *Lin Yuheng*"},{"lineNumber":488,"author":{"gitId":"slightlyharp"},"content":"Do you find it a hassle to keep track of all your activities and Zoom links for online classes?"},{"lineNumber":489,"author":{"gitId":"slightlyharp"},"content":"Do you wish there was a simple, visual way to organise your day and foresee any clashes in your schedule?"},{"lineNumber":490,"author":{"gitId":"slightlyharp"},"content":"The timetable mode intends to address these issues, helping you keep track of your work and helping you achieve"},{"lineNumber":491,"author":{"gitId":"slightlyharp"},"content":"purposeful productivity."},{"lineNumber":492,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":493,"author":{"gitId":"slightlyharp"},"content":"\u003e**Warning:**"},{"lineNumber":494,"author":{"gitId":"slightlyharp"},"content":"\u003e* Do not try to edit the data file for the timetable if you are unsure. Doing so may result in the application not being able to"},{"lineNumber":495,"author":{"gitId":"slightlyharp"},"content":"\u003eretrieved the saved data, hence deem the data file corrupted and request to format the data file before you can use the timetable "},{"lineNumber":496,"author":{"gitId":"slightlyharp"},"content":"\u003efeature again."},{"lineNumber":497,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":498,"author":{"gitId":"slightlyharp"},"content":"This section contains 10 commands to navigate the Timetable mode:"},{"lineNumber":499,"author":{"gitId":"slightlyharp"},"content":"* [2.1. Entering timetable mode](#21-entering-timetable-mode-cd-3--cd-timetable)"},{"lineNumber":500,"author":{"gitId":"slightlyharp"},"content":"* [2.2. Adding classes](#22-adding-classes-add-class)"},{"lineNumber":501,"author":{"gitId":"slightlyharp"},"content":"* [2.3. Adding activities](#23-adding-activities-add-activity)"},{"lineNumber":502,"author":{"gitId":"slightlyharp"},"content":"* [2.4. Showing links](#24-showing-links-show-link)"},{"lineNumber":503,"author":{"gitId":"slightlyharp"},"content":"* [2.5. Showing schedule](#25-showing-schedule-show-schedule)"},{"lineNumber":504,"author":{"gitId":"slightlyharp"},"content":"* [2.6. Showing activities list](#26-showing-activities-list-list-activity)"},{"lineNumber":505,"author":{"gitId":"slightlyharp"},"content":"* [2.7. Showing classes list](#27-showing-class-list-list-class)"},{"lineNumber":506,"author":{"gitId":"slightlyharp"},"content":"* [2.8. Deleting an activity](#28-deleting-an-activity-delete-activity-index)"},{"lineNumber":507,"author":{"gitId":"slightlyharp"},"content":"* [2.9. Deleting a class](#29-deleting-a-class-delete-class-index)"},{"lineNumber":508,"author":{"gitId":"slightlyharp"},"content":"* [2.10 Removing all past events](#210-removing-all-past-events-clean-up)"},{"lineNumber":509,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":510,"author":{"gitId":"slightlyharp"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":511,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":512,"author":{"gitId":"slightlyharp"},"content":"### 2.1 Entering timetable mode: `cd 3` / `cd timetable`"},{"lineNumber":513,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":514,"author":{"gitId":"slightlyharp"},"content":"If you find it difficult to make plans due to uncertainties in your schedule, this timetable mode presents your upcoming"},{"lineNumber":515,"author":{"gitId":"slightlyharp"},"content":"events at a glance to know what to expect and stay on track. This command brings you to enter the timetable mode."},{"lineNumber":516,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":517,"author":{"gitId":"slightlyharp"},"content":"Instruction:"},{"lineNumber":518,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":519,"author":{"gitId":"slightlyharp"},"content":"1. `cd 3` / `cd timetable`"},{"lineNumber":520,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":521,"author":{"gitId":"slightlyharp"},"content":"Expected output:"},{"lineNumber":522,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":523,"author":{"gitId":"slightlyharp"},"content":"![Timetable_2_1](Images/TimetableUG/Timetable_2_1.png){:height\u003d\"80%\" width\u003d\"80%\"}"},{"lineNumber":524,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":525,"author":{"gitId":"slightlyharp"},"content":"\u003e**Useful information:**"},{"lineNumber":526,"author":{"gitId":"slightlyharp"},"content":"\u003e* You can use this command from any mode to access the timetable mode easily and quickly!"},{"lineNumber":527,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":528,"author":{"gitId":"slightlyharp"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":529,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":530,"author":{"gitId":"slightlyharp"},"content":"### 2.2 Adding classes: `add class`"},{"lineNumber":531,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":532,"author":{"gitId":"slightlyharp"},"content":"If you find it hard to keep track of all your Zoom links with an increasing number of online classes, you can now"},{"lineNumber":533,"author":{"gitId":"slightlyharp"},"content":"arrange your classes in a systematic manner with this feature. Make sure you are currently in the timetable mode"},{"lineNumber":534,"author":{"gitId":"slightlyharp"},"content":"([refer to 2.1](#21-entering-timetable-mode-cd-3--cd-timetable))."},{"lineNumber":535,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":536,"author":{"gitId":"slightlyharp"},"content":"Instruction:"},{"lineNumber":537,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":538,"author":{"gitId":"slightlyharp"},"content":"1. `add class`"},{"lineNumber":539,"author":{"gitId":"slightlyharp"},"content":"2. Answer the questions as prompted"},{"lineNumber":540,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":541,"author":{"gitId":"slightlyharp"},"content":"Expected output:"},{"lineNumber":542,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":543,"author":{"gitId":"slightlyharp"},"content":"![Timetable_2_2](Images/TimetableUG/Timetable_2_2.png){:height\u003d\"80%\" width\u003d\"80%\"}"},{"lineNumber":544,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":545,"author":{"gitId":"slightlyharp"},"content":"\u003e**Useful Information:**"},{"lineNumber":546,"author":{"gitId":"slightlyharp"},"content":"\u003e* The module code will accept any input between 1-7 characters."},{"lineNumber":547,"author":{"gitId":"slightlyharp"},"content":"\u003e* You can enter the time in both 12hr and 24hr format. Only entering am/pm at the back of the duration will be assumed "},{"lineNumber":548,"author":{"gitId":"slightlyharp"},"content":"\u003eas both starting and ending time are in the same period."},{"lineNumber":549,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":550,"author":{"gitId":"slightlyharp"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":551,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":552,"author":{"gitId":"slightlyharp"},"content":"If you encounter any errors, take note of the following warning."},{"lineNumber":553,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":554,"author":{"gitId":"slightlyharp"},"content":"\u003e**Warning:**"},{"lineNumber":555,"author":{"gitId":"slightlyharp"},"content":"\u003e* Ensure that you follow the format for answering the questions."},{"lineNumber":556,"author":{"gitId":"slightlyharp"},"content":"\u003eError will be shown if the questions are not answered in a suitable format."},{"lineNumber":557,"author":{"gitId":"slightlyharp"},"content":"\u003e* Adding events that clash with the existing schedule will result in error message. You will need to check through "},{"lineNumber":558,"author":{"gitId":"slightlyharp"},"content":"\u003ethe schedule and events list and delete the unwanted event accordingly before you can add the new event."},{"lineNumber":559,"author":{"gitId":"slightlyharp"},"content":"\u003e* Number of recurring classes are capped at 52 weeks (1 year) to ensure effective processing time. Add your class again one year"},{"lineNumber":560,"author":{"gitId":"slightlyharp"},"content":"\u003elater if your class recurs for more than a year."},{"lineNumber":561,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":562,"author":{"gitId":"slightlyharp"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":563,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":564,"author":{"gitId":"slightlyharp"},"content":"### 2.3 Adding activities: `add activity`"},{"lineNumber":565,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":566,"author":{"gitId":"slightlyharp"},"content":"It can be hard to view your upcoming events at a glance."},{"lineNumber":567,"author":{"gitId":"slightlyharp"},"content":"Similar to the previous feature, this command allows you to add activities outside of classes to your schedule."},{"lineNumber":568,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":569,"author":{"gitId":"slightlyharp"},"content":"Instruction:"},{"lineNumber":570,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":571,"author":{"gitId":"slightlyharp"},"content":"1. `add activity`"},{"lineNumber":572,"author":{"gitId":"slightlyharp"},"content":"2. Answer the questions as prompted"},{"lineNumber":573,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":574,"author":{"gitId":"slightlyharp"},"content":"Expected output:"},{"lineNumber":575,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":576,"author":{"gitId":"slightlyharp"},"content":"![Timetable_2_3](Images/TimetableUG/Timetable_2_3.png){:height\u003d\"80%\" width\u003d\"80%\"}"},{"lineNumber":577,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":578,"author":{"gitId":"slightlyharp"},"content":"\u003e**Useful Information:** "},{"lineNumber":579,"author":{"gitId":"slightlyharp"},"content":"\u003e* Currently this feature does not support adding activity past 12am. If you wish to schedule an activity overnight, "},{"lineNumber":580,"author":{"gitId":"slightlyharp"},"content":"\u003eadd the activity in 2 separate sessions."},{"lineNumber":581,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":582,"author":{"gitId":"slightlyharp"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":583,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":584,"author":{"gitId":"slightlyharp"},"content":"### 2.4 Showing links: `show link`"},{"lineNumber":585,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":586,"author":{"gitId":"slightlyharp"},"content":"If you find it hard to keep track of all your conference links for your classes or activities, this command will present"},{"lineNumber":587,"author":{"gitId":"slightlyharp"},"content":"all links relevant to you for the next 2 hours."},{"lineNumber":588,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":589,"author":{"gitId":"slightlyharp"},"content":"Instruction:"},{"lineNumber":590,"author":{"gitId":"slightlyharp"},"content":"1. `show link`"},{"lineNumber":591,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":592,"author":{"gitId":"slightlyharp"},"content":"Expected output:"},{"lineNumber":593,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":594,"author":{"gitId":"slightlyharp"},"content":"![Timetable_2_4](Images/TimetableUG/Timetable_2_4.png){:height\u003d\"80%\" width\u003d\"80%\"}"},{"lineNumber":595,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":596,"author":{"gitId":"slightlyharp"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":597,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":598,"author":{"gitId":"slightlyharp"},"content":"### 2.5 Showing schedule: `show schedule`"},{"lineNumber":599,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":600,"author":{"gitId":"slightlyharp"},"content":"If you wish to view your schedule for the next seven days with all the activities, use this command."},{"lineNumber":601,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":602,"author":{"gitId":"slightlyharp"},"content":"Instruction:"},{"lineNumber":603,"author":{"gitId":"slightlyharp"},"content":"1. `show schedule`"},{"lineNumber":604,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":605,"author":{"gitId":"slightlyharp"},"content":"Expected output:"},{"lineNumber":606,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":607,"author":{"gitId":"slightlyharp"},"content":"![Timetable_2_5](Images/TimetableUG/Timetable_2_5.png){:height\u003d\"80%\" width\u003d\"80%\"}"},{"lineNumber":608,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":609,"author":{"gitId":"slightlyharp"},"content":"\u003e**Warning:**"},{"lineNumber":610,"author":{"gitId":"slightlyharp"},"content":"\u003e* If the name of event is more than 10 character only the first 10 character will be shown."},{"lineNumber":611,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":612,"author":{"gitId":"slightlyharp"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":613,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":614,"author":{"gitId":"slightlyharp"},"content":"### 2.6 Showing Activities list: `list activity`"},{"lineNumber":615,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":616,"author":{"gitId":"slightlyharp"},"content":"If you wish to see all activities you have input into the system, "},{"lineNumber":617,"author":{"gitId":"slightlyharp"},"content":"this command will present all the activities you have added with their starting date and time, if the activity is "},{"lineNumber":618,"author":{"gitId":"slightlyharp"},"content":"online, and the venue/link of the activity."},{"lineNumber":619,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":620,"author":{"gitId":"slightlyharp"},"content":"Instruction:"},{"lineNumber":621,"author":{"gitId":"slightlyharp"},"content":"1. `list activity`"},{"lineNumber":622,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":623,"author":{"gitId":"slightlyharp"},"content":"Expected output:"},{"lineNumber":624,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":625,"author":{"gitId":"slightlyharp"},"content":"![Timetable_2_6](Images/TimetableUG/Timetable_2_6.png){:height\u003d\"80%\" width\u003d\"80%\"}"},{"lineNumber":626,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":627,"author":{"gitId":"slightlyharp"},"content":"### 2.7 Showing Class list: `list class`"},{"lineNumber":628,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":629,"author":{"gitId":"slightlyharp"},"content":"If you think searching through the timetable is too troublesome,"},{"lineNumber":630,"author":{"gitId":"slightlyharp"},"content":"use this command to see all the classes you have added and other details of the classes, similar to the previous feature."},{"lineNumber":631,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":632,"author":{"gitId":"slightlyharp"},"content":"Instruction:"},{"lineNumber":633,"author":{"gitId":"slightlyharp"},"content":"1. `list class`"},{"lineNumber":634,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":635,"author":{"gitId":"slightlyharp"},"content":"Expected output:"},{"lineNumber":636,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":637,"author":{"gitId":"slightlyharp"},"content":"![Timetable_2_7](Images/TimetableUG/Timetable_2_7.png){:height\u003d\"80%\" width\u003d\"80%\"}"},{"lineNumber":638,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":639,"author":{"gitId":"slightlyharp"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":640,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":641,"author":{"gitId":"slightlyharp"},"content":"### 2.8 Deleting an activity: `delete activity INDEX`"},{"lineNumber":642,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":643,"author":{"gitId":"slightlyharp"},"content":"If you have accidentally added a wrong activity, or an activity you have added has been cancelled,"},{"lineNumber":644,"author":{"gitId":"slightlyharp"},"content":"use this command to delete an activity with corresponding index according to the activities list ([refer to 2.6](#26-showing-activities-list-list-activity))."},{"lineNumber":645,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":646,"author":{"gitId":"slightlyharp"},"content":"Instruction:"},{"lineNumber":647,"author":{"gitId":"slightlyharp"},"content":"1. `delete activity INDEX`"},{"lineNumber":648,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":649,"author":{"gitId":"slightlyharp"},"content":"Example of usage: "},{"lineNumber":650,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":651,"author":{"gitId":"slightlyharp"},"content":"`delete activity 1` will delete the first activity in the list."},{"lineNumber":652,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":653,"author":{"gitId":"slightlyharp"},"content":"Expected output:"},{"lineNumber":654,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":655,"author":{"gitId":"slightlyharp"},"content":"![Timetable_2_8](Images/TimetableUG/Timetable_2_8.png){:height\u003d\"80%\" width\u003d\"80%\"}"},{"lineNumber":656,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":657,"author":{"gitId":"slightlyharp"},"content":"### 2.9 Deleting a class: `delete class INDEX`"},{"lineNumber":658,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":659,"author":{"gitId":"slightlyharp"},"content":"Similar to feature 2.8,"},{"lineNumber":660,"author":{"gitId":"slightlyharp"},"content":"use this command to delete a class with corresponding index according to the classes list ([refer to 2.7](#27-showing-class-list-list-class))."},{"lineNumber":661,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":662,"author":{"gitId":"slightlyharp"},"content":"Instruction:"},{"lineNumber":663,"author":{"gitId":"slightlyharp"},"content":"1. `delete class INDEX`"},{"lineNumber":664,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":665,"author":{"gitId":"slightlyharp"},"content":"Example of usage: "},{"lineNumber":666,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":667,"author":{"gitId":"slightlyharp"},"content":"`delete class 2` will delete the second class in the list."},{"lineNumber":668,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":669,"author":{"gitId":"slightlyharp"},"content":"Expected output:"},{"lineNumber":670,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":671,"author":{"gitId":"slightlyharp"},"content":"![Timetable_2_9](Images/TimetableUG/Timetable_2_9.png){:height\u003d\"80%\" width\u003d\"80%\"}"},{"lineNumber":672,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":673,"author":{"gitId":"slightlyharp"},"content":"\u003e**Warning:**"},{"lineNumber":674,"author":{"gitId":"slightlyharp"},"content":"\u003e* Deleting a class will delete all the lessons of that module on schedule. Use this command with caution. "},{"lineNumber":675,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":676,"author":{"gitId":"slightlyharp"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":677,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":678,"author":{"gitId":"slightlyharp"},"content":"### 2.10 Removing all past events: `clean up`"},{"lineNumber":679,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":680,"author":{"gitId":"slightlyharp"},"content":"Having too many events added to the application, and the data file is taking up too much space?"},{"lineNumber":681,"author":{"gitId":"slightlyharp"},"content":"Use this command to remove all the activities that was over more than 7 days ago and all the classes with their last lesson "},{"lineNumber":682,"author":{"gitId":"slightlyharp"},"content":"concluded more than 7 days ago."},{"lineNumber":683,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":684,"author":{"gitId":"slightlyharp"},"content":"Instruction:"},{"lineNumber":685,"author":{"gitId":"slightlyharp"},"content":"1. `clean up`"},{"lineNumber":686,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":687,"author":{"gitId":"slightlyharp"},"content":"Expected output:"},{"lineNumber":688,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":689,"author":{"gitId":"slightlyharp"},"content":"![Timetable_2_10](Images/TimetableUG/Timetable_2_10.png){:height\u003d\"80%\" width\u003d\"80%\"}"},{"lineNumber":690,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":691,"author":{"gitId":"slightlyharp"},"content":"\u003e**Warning:**"},{"lineNumber":692,"author":{"gitId":"slightlyharp"},"content":"\u003e* Deletion will be done automatically. All the events that are deleted will not be able to be retrieved. "},{"lineNumber":693,"author":{"gitId":"slightlyharp"},"content":"\u003eOnly use this if you are sure you do not need your past events."},{"lineNumber":694,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":695,"author":{"gitId":"slightlyharp"},"content":"\u003c!-- @@author --\u003e"},{"lineNumber":696,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":697,"author":{"gitId":"hailqueenflo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":698,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":699,"author":{"gitId":"farice9"},"content":"## 3. Academic - *Lu Ziyi*"},{"lineNumber":700,"author":{"gitId":"farice9"},"content":""},{"lineNumber":701,"author":{"gitId":"luziyi9898"},"content":"Have you ever had to dig through tons of emails to look for the contact of a particular TA "},{"lineNumber":702,"author":{"gitId":"luziyi9898"},"content":"or sweat over your calculator when trying to estimate your CAPS this semester? "},{"lineNumber":703,"author":{"gitId":"luziyi9898"},"content":"Academic tracker provides a convenient experience where you can store "},{"lineNumber":704,"author":{"gitId":"luziyi9898"},"content":"all the information you need in one place! To access the academic tracker, "},{"lineNumber":705,"author":{"gitId":"luziyi9898"},"content":"follow the instructions below."},{"lineNumber":706,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":707,"author":{"gitId":"luziyi9898"},"content":"This section contains 12 commands to navigate the academic mode:"},{"lineNumber":708,"author":{"gitId":"luziyi9898"},"content":"* [3.1 Entering Academic Mode](#31-entering-academic-mode-cd-4--cd-academic)"},{"lineNumber":709,"author":{"gitId":"luziyi9898"},"content":"* [3.2 Adding a contact](#32-adding-a-contact-add-contact-ccontact_details-mmobile_number--eemail)"},{"lineNumber":710,"author":{"gitId":"luziyi9898"},"content":"* [3.3 Listing all contacts](#33-listing-all-contacts-list-contact)"},{"lineNumber":711,"author":{"gitId":"luziyi9898"},"content":"* [3.4 Starring a contact](#34-starring-a-contact-star-contact-index)"},{"lineNumber":712,"author":{"gitId":"luziyi9898"},"content":"* [3.5 Deleting a contact](#35-deleting-a-contact-delete-contact-index)"},{"lineNumber":713,"author":{"gitId":"luziyi9898"},"content":"* [3.6 Adding a grade](#36-adding-a-grade-add-grade-nmodule_name--mmc--ggrade)"},{"lineNumber":714,"author":{"gitId":"luziyi9898"},"content":"* [3.7 Listing all grades](#37-listing-all-grades-list-grade)"},{"lineNumber":715,"author":{"gitId":"luziyi9898"},"content":"* [3.8 Checking current cap](#38-checking-current-cap-check-cap)"},{"lineNumber":716,"author":{"gitId":"luziyi9898"},"content":"* [3.9 Starring a grade](#39-starring-a-grade-star-grade-index)"},{"lineNumber":717,"author":{"gitId":"luziyi9898"},"content":"* [3.10 SU-ing a grade](#310-su-ing-a-grade-su-grade-index)"},{"lineNumber":718,"author":{"gitId":"luziyi9898"},"content":"* [3.11 Deleting a grade](#311-deleting-a-grade-delete-grade-index)"},{"lineNumber":719,"author":{"gitId":"luziyi9898"},"content":"* [3.12 Listing all the starred items in academic](#312-listing-all-the-starred-items-in-academic-list-star)"},{"lineNumber":720,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":721,"author":{"gitId":"luziyi9898"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":722,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":723,"author":{"gitId":"hailqueenflo"},"content":"### 3.1 Entering Academic Mode: `cd 4` / `cd academic`"},{"lineNumber":724,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":725,"author":{"gitId":"luziyi9898"},"content":"This command allows you to enter academic tracker mode from the main menu or from the other modes."},{"lineNumber":726,"author":{"gitId":"luziyi9898"},"content":"After entering this mode, you can then access all the features that the academic tracker offers!"},{"lineNumber":727,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":728,"author":{"gitId":"luziyi9898"},"content":"Instruction: "},{"lineNumber":729,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":730,"author":{"gitId":"luziyi9898"},"content":"1. `cd 4` / `academic`"},{"lineNumber":731,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":732,"author":{"gitId":"luziyi9898"},"content":"Expected output:"},{"lineNumber":733,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":734,"author":{"gitId":"luziyi9898"},"content":"![Academic_3_1](Images/AcademicUG/Academic_3_1.png)"},{"lineNumber":735,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":736,"author":{"gitId":"luziyi9898"},"content":"\u003e**Useful information:**"},{"lineNumber":737,"author":{"gitId":"luziyi9898"},"content":"\u003e* You can use this command from any mode to access the academic mode easily and quickly!"},{"lineNumber":738,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":739,"author":{"gitId":"luziyi9898"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":740,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":741,"author":{"gitId":"hailqueenflo"},"content":"### 3.2 Adding a contact: `add contact c/CONTACT_DETAILS m/MOBILE_NUMBER  e/EMAIL`"},{"lineNumber":742,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":743,"author":{"gitId":"luziyi9898"},"content":"In academic mode, you can add a contact to the current list of contacts, following the instructions below. "},{"lineNumber":744,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":745,"author":{"gitId":"luziyi9898"},"content":"Instruction: "},{"lineNumber":746,"author":{"gitId":"luziyi9898"},"content":"1. `add contact c/CONTACT_DETAILS  m/MOBILE_NUMBER  e/EMAIL`"},{"lineNumber":747,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":748,"author":{"gitId":"luziyi9898"},"content":"Example of usage: "},{"lineNumber":749,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":750,"author":{"gitId":"luziyi9898"},"content":"`add contact c/Prof Lim  m/81234567  e/E7654321@u.nus.edu` "},{"lineNumber":751,"author":{"gitId":"luziyi9898"},"content":"will add a contact with the name Prof Lim, mobile number 81234567, and email E7654321@u.nus.edu."},{"lineNumber":752,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":753,"author":{"gitId":"luziyi9898"},"content":"Expected output:  "},{"lineNumber":754,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":755,"author":{"gitId":"luziyi9898"},"content":"![Academic_3_2](Images/AcademicUG/Academic_3_2.png)"},{"lineNumber":756,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":757,"author":{"gitId":"luziyi9898"},"content":"\u003e**Warning:**"},{"lineNumber":758,"author":{"gitId":"luziyi9898"},"content":"\u003e* Numbers should be a positive integer with 8 or fewer digits , and email should be in the form abc@xyz."},{"lineNumber":759,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":760,"author":{"gitId":"luziyi9898"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":761,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":762,"author":{"gitId":"hailqueenflo"},"content":"### 3.3 Listing all contacts: `list contact`"},{"lineNumber":763,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":764,"author":{"gitId":"luziyi9898"},"content":"You can view all the contacts that have been added previously "},{"lineNumber":765,"author":{"gitId":"luziyi9898"},"content":"and stored on your computer by following these sets of instructions"},{"lineNumber":766,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":767,"author":{"gitId":"luziyi9898"},"content":"Instruction: "},{"lineNumber":768,"author":{"gitId":"luziyi9898"},"content":"1. `list contact`"},{"lineNumber":769,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":770,"author":{"gitId":"luziyi9898"},"content":"Expected output:"},{"lineNumber":771,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":772,"author":{"gitId":"luziyi9898"},"content":"![Academic_3_3](Images/AcademicUG/Academic_3_3.png)"},{"lineNumber":773,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":774,"author":{"gitId":"hailqueenflo"},"content":"### 3.4 Starring a contact: `star contact INDEX`"},{"lineNumber":775,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":776,"author":{"gitId":"luziyi9898"},"content":"Sometimes you may wish to highlight an important contact, and that\u0027s where"},{"lineNumber":777,"author":{"gitId":"luziyi9898"},"content":"starring a contact come into use. Follow the instructions below to mark an "},{"lineNumber":778,"author":{"gitId":"luziyi9898"},"content":"important contact with a star."},{"lineNumber":779,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":780,"author":{"gitId":"luziyi9898"},"content":"Instruction: "},{"lineNumber":781,"author":{"gitId":"luziyi9898"},"content":"1. `star contact INDEX`"},{"lineNumber":782,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":783,"author":{"gitId":"luziyi9898"},"content":"Example of usage: "},{"lineNumber":784,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":785,"author":{"gitId":"luziyi9898"},"content":"`star contact 1` will mark the first contact in the list with a star."},{"lineNumber":786,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":787,"author":{"gitId":"luziyi9898"},"content":"Expected output:"},{"lineNumber":788,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":789,"author":{"gitId":"luziyi9898"},"content":"![Academic_3_4](Images/AcademicUG/Academic_3_4.png)"},{"lineNumber":790,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":791,"author":{"gitId":"luziyi9898"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":792,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":793,"author":{"gitId":"hailqueenflo"},"content":"### 3.5 Deleting a contact: `delete contact INDEX`"},{"lineNumber":794,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":795,"author":{"gitId":"luziyi9898"},"content":"Do you no longer require the contact of the TA of last sem\u0027s module? "},{"lineNumber":796,"author":{"gitId":"luziyi9898"},"content":"Make use of the delete contact function to clean up your contacts by following the"},{"lineNumber":797,"author":{"gitId":"luziyi9898"},"content":"instructions below."},{"lineNumber":798,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":799,"author":{"gitId":"luziyi9898"},"content":"Instruction: "},{"lineNumber":800,"author":{"gitId":"luziyi9898"},"content":"1. `delete contact INDEX`"},{"lineNumber":801,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":802,"author":{"gitId":"luziyi9898"},"content":"Example of usage: "},{"lineNumber":803,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":804,"author":{"gitId":"luziyi9898"},"content":"`delete contact 1` will delete the first contact in the list."},{"lineNumber":805,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":806,"author":{"gitId":"luziyi9898"},"content":"Expected output:"},{"lineNumber":807,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":808,"author":{"gitId":"luziyi9898"},"content":"![Academic_3_5](Images/AcademicUG/Academic_3_5.png)"},{"lineNumber":809,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":810,"author":{"gitId":"luziyi9898"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":811,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":812,"author":{"gitId":"hailqueenflo"},"content":"### 3.6 Adding a grade: `add grade n/MODULE_NAME  m/MC  g/GRADE`"},{"lineNumber":813,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":814,"author":{"gitId":"luziyi9898"},"content":"In academic mode, you can add a grade to the current list of grades, following the instructions below. "},{"lineNumber":815,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":816,"author":{"gitId":"luziyi9898"},"content":"Instruction: "},{"lineNumber":817,"author":{"gitId":"luziyi9898"},"content":"1. `add grade n/MODULE_NAME  m/MC  g/GRADE`"},{"lineNumber":818,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":819,"author":{"gitId":"luziyi9898"},"content":"Example of usage: "},{"lineNumber":820,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":821,"author":{"gitId":"luziyi9898"},"content":"`add grade n/CS2101  m/4  g/A-` "},{"lineNumber":822,"author":{"gitId":"luziyi9898"},"content":"will add a grade with the title CS2101 that has 4 credits and scored an A-."},{"lineNumber":823,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":824,"author":{"gitId":"luziyi9898"},"content":"Expected output:  "},{"lineNumber":825,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":826,"author":{"gitId":"luziyi9898"},"content":"![Academic_3_6](Images/AcademicUG/Academic_3_6.png)"},{"lineNumber":827,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":828,"author":{"gitId":"luziyi9898"},"content":"\u003e**Warning:**"},{"lineNumber":829,"author":{"gitId":"luziyi9898"},"content":"\u003e* Note that module credits need to be a positive integer, and grade entered must be a valid grade."},{"lineNumber":830,"author":{"gitId":"luziyi9898"},"content":"\u003e* This program doesn\u0027t cap how many MCs a module can have."},{"lineNumber":831,"author":{"gitId":"luziyi9898"},"content":"\u003e* This application is not synced to a module database, so any valid input will be accepted as a module name."},{"lineNumber":832,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":833,"author":{"gitId":"hailqueenflo"},"content":"### 3.7 Listing all grades: `list grade`"},{"lineNumber":834,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":835,"author":{"gitId":"luziyi9898"},"content":"You can view all the grades that have been added previously "},{"lineNumber":836,"author":{"gitId":"luziyi9898"},"content":"and stored on your computer by following these sets of instructions"},{"lineNumber":837,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":838,"author":{"gitId":"luziyi9898"},"content":"Instruction: "},{"lineNumber":839,"author":{"gitId":"luziyi9898"},"content":"1. `list grade`"},{"lineNumber":840,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":841,"author":{"gitId":"luziyi9898"},"content":"Expected output:"},{"lineNumber":842,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":843,"author":{"gitId":"luziyi9898"},"content":"![Academic_3_7](Images/AcademicUG/Academic_3_7.png)"},{"lineNumber":844,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":845,"author":{"gitId":"luziyi9898"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":846,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":847,"author":{"gitId":"hailqueenflo"},"content":"### 3.8 Checking current cap: `check cap`"},{"lineNumber":848,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":849,"author":{"gitId":"luziyi9898"},"content":"To calculate your current CAP based on the grades you have entered previously, "},{"lineNumber":850,"author":{"gitId":"luziyi9898"},"content":"follow the instructions below"},{"lineNumber":851,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":852,"author":{"gitId":"luziyi9898"},"content":"Instruction: "},{"lineNumber":853,"author":{"gitId":"luziyi9898"},"content":"1. `check cap`"},{"lineNumber":854,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":855,"author":{"gitId":"luziyi9898"},"content":"Expected output:"},{"lineNumber":856,"author":{"gitId":"-"},"content":""},{"lineNumber":857,"author":{"gitId":"luziyi9898"},"content":"![Academic_3_8](Images/AcademicUG/Academic_3_8.png)"},{"lineNumber":858,"author":{"gitId":"-"},"content":""},{"lineNumber":859,"author":{"gitId":"hailqueenflo"},"content":"### 3.9 Starring a grade: `star grade INDEX`"},{"lineNumber":860,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":861,"author":{"gitId":"luziyi9898"},"content":"The star grade function can be used to highlight a particular grade. "},{"lineNumber":862,"author":{"gitId":"luziyi9898"},"content":"Follow the instructions below to mark an "},{"lineNumber":863,"author":{"gitId":"luziyi9898"},"content":"important grade with a star."},{"lineNumber":864,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":865,"author":{"gitId":"luziyi9898"},"content":"Instruction: "},{"lineNumber":866,"author":{"gitId":"luziyi9898"},"content":"1. `star grade INDEX`"},{"lineNumber":867,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":868,"author":{"gitId":"luziyi9898"},"content":"Example of usage: "},{"lineNumber":869,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":870,"author":{"gitId":"luziyi9898"},"content":"`star grade 1` will mark the first grade in the list with a star."},{"lineNumber":871,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":872,"author":{"gitId":"luziyi9898"},"content":"Expected output:"},{"lineNumber":873,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":874,"author":{"gitId":"luziyi9898"},"content":"![Academic_3_9](Images/AcademicUG/Academic_3_9.png)"},{"lineNumber":875,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":876,"author":{"gitId":"luziyi9898"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":877,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":878,"author":{"gitId":"luziyi9898"},"content":"### 3.10 SU-ing a grade: `su grade INDEX`"},{"lineNumber":879,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":880,"author":{"gitId":"luziyi9898"},"content":"SU-ed a module and want to exclude it from your CAP calculation? The SU grade"},{"lineNumber":881,"author":{"gitId":"luziyi9898"},"content":"function allows you to do just that through these simple steps."},{"lineNumber":882,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":883,"author":{"gitId":"luziyi9898"},"content":"Instruction: "},{"lineNumber":884,"author":{"gitId":"luziyi9898"},"content":"1. `su grade INDEX`"},{"lineNumber":885,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":886,"author":{"gitId":"luziyi9898"},"content":"Example of usage: "},{"lineNumber":887,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":888,"author":{"gitId":"luziyi9898"},"content":"`su grade 1` will su the first grade in the list."},{"lineNumber":889,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":890,"author":{"gitId":"luziyi9898"},"content":"Expected output:"},{"lineNumber":891,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":892,"author":{"gitId":"luziyi9898"},"content":"![Academic_3_10](Images/AcademicUG/Academic_3_10.png)"},{"lineNumber":893,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":894,"author":{"gitId":"luziyi9898"},"content":"\u003e**Warning:**"},{"lineNumber":895,"author":{"gitId":"luziyi9898"},"content":"\u003e* The process of SU-ing a mod is not retractable. Should you accidentally SU a mod unintentionally, "},{"lineNumber":896,"author":{"gitId":"luziyi9898"},"content":"\u003econsider deleting the mod and adding a new one."},{"lineNumber":897,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":898,"author":{"gitId":"luziyi9898"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":899,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":900,"author":{"gitId":"hailqueenflo"},"content":"### 3.11 Deleting a grade: `delete grade INDEX`"},{"lineNumber":901,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":902,"author":{"gitId":"luziyi9898"},"content":"The delete grade function can be used to delete a grade from the currently stored"},{"lineNumber":903,"author":{"gitId":"luziyi9898"},"content":" list of grades by following the instructions below."},{"lineNumber":904,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":905,"author":{"gitId":"luziyi9898"},"content":"Instruction: "},{"lineNumber":906,"author":{"gitId":"luziyi9898"},"content":"1. `delete grade INDEX`"},{"lineNumber":907,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":908,"author":{"gitId":"luziyi9898"},"content":"Example of usage: "},{"lineNumber":909,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":910,"author":{"gitId":"luziyi9898"},"content":"`delete grade 1` will delete the first grade in the list."},{"lineNumber":911,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":912,"author":{"gitId":"luziyi9898"},"content":"Expected output:"},{"lineNumber":913,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":914,"author":{"gitId":"luziyi9898"},"content":"![Academic_3_11](Images/AcademicUG/Academic_3_11.png)"},{"lineNumber":915,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":916,"author":{"gitId":"hailqueenflo"},"content":"### 3.12 Listing all the starred items in academic: `list star`"},{"lineNumber":917,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":918,"author":{"gitId":"luziyi9898"},"content":"The list star function works like the highlight function, but only displaying"},{"lineNumber":919,"author":{"gitId":"luziyi9898"},"content":"the starred items inside the academic section. "},{"lineNumber":920,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":921,"author":{"gitId":"luziyi9898"},"content":"Instruction: "},{"lineNumber":922,"author":{"gitId":"luziyi9898"},"content":"1. `list star`"},{"lineNumber":923,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":924,"author":{"gitId":"luziyi9898"},"content":"Expected output:"},{"lineNumber":925,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":926,"author":{"gitId":"luziyi9898"},"content":"![Academic_3_12](Images/AcademicUG/Academic_3_12.png)"},{"lineNumber":927,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":928,"author":{"gitId":"hailqueenflo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":929,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":930,"author":{"gitId":"farice9"},"content":"## 4. Flashcard - *Lim Si Qiao Florence*"},{"lineNumber":931,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":932,"author":{"gitId":"hailqueenflo"},"content":"Do you wish you had a quick way to refer to the content that will be tested in your upcoming tests?"},{"lineNumber":933,"author":{"gitId":"hailqueenflo"},"content":"Or a more efficient way to verify your knowledge?"},{"lineNumber":934,"author":{"gitId":"hailqueenflo"},"content":"Perhaps it is also difficult to scour your handwritten notes to find a particular piece of information."},{"lineNumber":935,"author":{"gitId":"hailqueenflo"},"content":"The flashcard mode aims to tackle these aspects that may hinder your learning process."},{"lineNumber":936,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":937,"author":{"gitId":"hailqueenflo"},"content":"This section contains 6 commands to navigate the Flashcard mode:"},{"lineNumber":938,"author":{"gitId":"hailqueenflo"},"content":"* [4.1. Entering flashcard mode](#41-entering-flashcard-mode-cd-5--cd-flashcard)"},{"lineNumber":939,"author":{"gitId":"hailqueenflo"},"content":"* [4.2. Adding flashcards](#42-adding-flashcards-add)"},{"lineNumber":940,"author":{"gitId":"hailqueenflo"},"content":"* [4.3. Listing flashcards](#43-listing-flashcards-list)"},{"lineNumber":941,"author":{"gitId":"hailqueenflo"},"content":"* [4.4. Deleting flashcards](#44-deleting-flashcards-delete)"},{"lineNumber":942,"author":{"gitId":"hailqueenflo"},"content":"* [4.5. Testing content](#45-testing-contenttest)"},{"lineNumber":943,"author":{"gitId":"hailqueenflo"},"content":"* [4.6. Finding relevant flashcards](#46-finding-relevant-flashcards-find)"},{"lineNumber":944,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":945,"author":{"gitId":"hailqueenflo"},"content":"### 4.1 Entering flashcard mode: `cd 5` / `cd flashcard`"},{"lineNumber":946,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":947,"author":{"gitId":"hailqueenflo"},"content":"If you find it hard to be fully proficient in your study topics, this flashcard mode is a medium for you to actively"},{"lineNumber":948,"author":{"gitId":"hailqueenflo"},"content":"learn and memorise. This enables you to learn effectively through repetition, helping you to remember information better"},{"lineNumber":949,"author":{"gitId":"hailqueenflo"},"content":"in the long-term. This command allows you to enter the flashcard mode."},{"lineNumber":950,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":951,"author":{"gitId":"hailqueenflo"},"content":"Instruction:"},{"lineNumber":952,"author":{"gitId":"hailqueenflo"},"content":"1. `cd 5` / `cd flashcard`"},{"lineNumber":953,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":954,"author":{"gitId":"hailqueenflo"},"content":"Expected output:"},{"lineNumber":955,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":956,"author":{"gitId":"hailqueenflo"},"content":"![Flashcard_4_1](Images/FlashcardUG/Flashcard_4_1.png){:height\u003d\"80%\" width\u003d\"80%\"}"},{"lineNumber":957,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":958,"author":{"gitId":"hailqueenflo"},"content":"\u003e**Useful information:**"},{"lineNumber":959,"author":{"gitId":"hailqueenflo"},"content":"\u003e* You can use this command from any mode to access the flashcard mode easily and quickly!"},{"lineNumber":960,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":961,"author":{"gitId":"hailqueenflo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":962,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":963,"author":{"gitId":"hailqueenflo"},"content":"### 4.2 Adding flashcards: `add`"},{"lineNumber":964,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":965,"author":{"gitId":"hailqueenflo"},"content":"To assist you in your studies, there needs to be a knowledge base of content to be revised."},{"lineNumber":966,"author":{"gitId":"hailqueenflo"},"content":"You can do this by adding new flashcards to the flashcard deck with this command, after entering flashcard mode"},{"lineNumber":967,"author":{"gitId":"hailqueenflo"},"content":"([refer to 4.1](#41-entering-flashcard-mode-cd-5--cd-flashcard))."},{"lineNumber":968,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":969,"author":{"gitId":"hailqueenflo"},"content":"Instruction:"},{"lineNumber":970,"author":{"gitId":"hailqueenflo"},"content":"1. `add`"},{"lineNumber":971,"author":{"gitId":"hailqueenflo"},"content":"2. Enter the question and answer as prompted"},{"lineNumber":972,"author":{"gitId":"hailqueenflo"},"content":" "},{"lineNumber":973,"author":{"gitId":"hailqueenflo"},"content":"Example of usage:"},{"lineNumber":974,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":975,"author":{"gitId":"hailqueenflo"},"content":"`4+4` followed by `8` will create a flashcard with question 4+4 and answer 8."},{"lineNumber":976,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":977,"author":{"gitId":"hailqueenflo"},"content":"Expected output:"},{"lineNumber":978,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":979,"author":{"gitId":"hailqueenflo"},"content":"![Flashcard_4_2](Images/FlashcardUG/Flashcard_4_2.png){:height\u003d\"65%\" width\u003d\"65%\"}"},{"lineNumber":980,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":981,"author":{"gitId":"hailqueenflo"},"content":"If you encounter any errors, take note of the following warning."},{"lineNumber":982,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":983,"author":{"gitId":"hailqueenflo"},"content":"\u003e**Warning:**"},{"lineNumber":984,"author":{"gitId":"hailqueenflo"},"content":"\u003e* “back” and \"show answer\" cannot be added as an answer for the flashcard."},{"lineNumber":985,"author":{"gitId":"hailqueenflo"},"content":"\u003eThis is because “back” and \"show answer\" are used as commands to exit and reveal the answer in the test mode"},{"lineNumber":986,"author":{"gitId":"hailqueenflo"},"content":"\u003erespectively."},{"lineNumber":987,"author":{"gitId":"hailqueenflo"},"content":"\u003eIf the flashcard answer you wish to use is similar to “back” or \"show answer\", rephrase and use another term."},{"lineNumber":988,"author":{"gitId":"hailqueenflo"},"content":"\u003e"},{"lineNumber":989,"author":{"gitId":"hailqueenflo"},"content":"\u003e![Flashcard_4_2_1](Images/FlashcardUG/Flashcard_4_2_1.png){:height\u003d\"60%\" width\u003d\"60%\"}"},{"lineNumber":990,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":991,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":992,"author":{"gitId":"farice9"},"content":""},{"lineNumber":993,"author":{"gitId":"hailqueenflo"},"content":"### 4.3 Listing flashcards: `list`"},{"lineNumber":994,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":995,"author":{"gitId":"hailqueenflo"},"content":"If you wish to review the content that is currently in the flashcard deck, this command can display all flashcards that"},{"lineNumber":996,"author":{"gitId":"hailqueenflo"},"content":"have been added."},{"lineNumber":997,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":998,"author":{"gitId":"hailqueenflo"},"content":"Instruction:"},{"lineNumber":999,"author":{"gitId":"hailqueenflo"},"content":"1. `list`"},{"lineNumber":1000,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1001,"author":{"gitId":"hailqueenflo"},"content":"Expected output:"},{"lineNumber":1002,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1003,"author":{"gitId":"hailqueenflo"},"content":"![Flashcard_4_3](Images/FlashcardUG/Flashcard_4_3.png){:height\u003d\"80%\" width\u003d\"80%\"}"},{"lineNumber":1004,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1005,"author":{"gitId":"hailqueenflo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":1006,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1007,"author":{"gitId":"hailqueenflo"},"content":"### 4.4 Deleting flashcards: `delete`"},{"lineNumber":1008,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1009,"author":{"gitId":"hailqueenflo"},"content":"When you have a flashcard that is no longer relevant to you or contains wrong information, you can delete the flashcard"},{"lineNumber":1010,"author":{"gitId":"hailqueenflo"},"content":"from the flashcard deck."},{"lineNumber":1011,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1012,"author":{"gitId":"hailqueenflo"},"content":"Instruction:"},{"lineNumber":1013,"author":{"gitId":"hailqueenflo"},"content":"1. `delete`"},{"lineNumber":1014,"author":{"gitId":"hailqueenflo"},"content":"2. Enter the card index of the flashcard to be deleted as prompted"},{"lineNumber":1015,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1016,"author":{"gitId":"hailqueenflo"},"content":"Example of usage:"},{"lineNumber":1017,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1018,"author":{"gitId":"hailqueenflo"},"content":"`3` will delete the 3rd flashcard in the list."},{"lineNumber":1019,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1020,"author":{"gitId":"hailqueenflo"},"content":"Expected output:"},{"lineNumber":1021,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1022,"author":{"gitId":"hailqueenflo"},"content":"![Flashcard_4_4](Images/FlashcardUG/Flashcard_4_4.png){:height\u003d\"80%\" width\u003d\"80%\"}"},{"lineNumber":1023,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1024,"author":{"gitId":"hailqueenflo"},"content":"\u003e**Useful information:**"},{"lineNumber":1025,"author":{"gitId":"hailqueenflo"},"content":"\u003e* You can use the `list` command to check the card index."},{"lineNumber":1026,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1027,"author":{"gitId":"hailqueenflo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":1028,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1029,"author":{"gitId":"hailqueenflo"},"content":"### 4.5 Testing content:`test`"},{"lineNumber":1030,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1031,"author":{"gitId":"hailqueenflo"},"content":"Grading your own work is one of the best ways to revise as it helps you effectively retain information."},{"lineNumber":1032,"author":{"gitId":"hailqueenflo"},"content":"After adding the flashcards, you may wish to revise the content by testing yourself. "},{"lineNumber":1033,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1034,"author":{"gitId":"hailqueenflo"},"content":"If you are unable to answer a question and wish to refer to the answer, use `show answer`."},{"lineNumber":1035,"author":{"gitId":"hailqueenflo"},"content":"When you are done revising, use `back` to exit the test mode, and return to the flashcard main."},{"lineNumber":1036,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1037,"author":{"gitId":"hailqueenflo"},"content":"Instruction:"},{"lineNumber":1038,"author":{"gitId":"hailqueenflo"},"content":"1. `test`"},{"lineNumber":1039,"author":{"gitId":"hailqueenflo"},"content":"2. Answer the questions as prompted"},{"lineNumber":1040,"author":{"gitId":"hailqueenflo"},"content":"3. `show answer` / `back`"},{"lineNumber":1041,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1042,"author":{"gitId":"hailqueenflo"},"content":"Expected output:"},{"lineNumber":1043,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1044,"author":{"gitId":"hailqueenflo"},"content":"![Flashcard_4_5](Images/FlashcardUG/Flashcard_4_5.png){:height\u003d\"60%\" width\u003d\"60%\"}"},{"lineNumber":1045,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1046,"author":{"gitId":"hailqueenflo"},"content":"\u003e**Useful information:**"},{"lineNumber":1047,"author":{"gitId":"hailqueenflo"},"content":"\u003e* User input in the test mode is not case sensitive. If the answer is correct but the case is different from"},{"lineNumber":1048,"author":{"gitId":"hailqueenflo"},"content":"\u003ethe stored answer, the answer will be accepted as the right answer."},{"lineNumber":1049,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1050,"author":{"gitId":"hailqueenflo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":1051,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1052,"author":{"gitId":"hailqueenflo"},"content":"### 4.6 Finding relevant flashcards: `find`"},{"lineNumber":1053,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1054,"author":{"gitId":"hailqueenflo"},"content":"If you wish to look through the flashcards containing only a particular search term, use this command."},{"lineNumber":1055,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1056,"author":{"gitId":"hailqueenflo"},"content":"Instruction:"},{"lineNumber":1057,"author":{"gitId":"hailqueenflo"},"content":"1. `find`"},{"lineNumber":1058,"author":{"gitId":"hailqueenflo"},"content":"2. Enter the desired search term as prompted"},{"lineNumber":1059,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1060,"author":{"gitId":"hailqueenflo"},"content":"Expected output:"},{"lineNumber":1061,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1062,"author":{"gitId":"hailqueenflo"},"content":"![Flashcard_4_6](Images/FlashcardUG/Flashcard_4_6.png){:height\u003d\"80%\" width\u003d\"80%\"}"},{"lineNumber":1063,"author":{"gitId":"-"},"content":""},{"lineNumber":1064,"author":{"gitId":"hailqueenflo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":1065,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":1066,"author":{"gitId":"farice9"},"content":"## FAQ - *Ziyi \u0026 Si Hui*"},{"lineNumber":1067,"author":{"gitId":"farice9"},"content":""},{"lineNumber":1068,"author":{"gitId":"farice9"},"content":"*Lu Ziyi*"},{"lineNumber":1069,"author":{"gitId":"-"},"content":""},{"lineNumber":1070,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? "},{"lineNumber":1071,"author":{"gitId":"-"},"content":""},{"lineNumber":1072,"author":{"gitId":"farice9"},"content":"**A**: All of Study It\u0027s data is stored under the `ROOT_FOLDER/data` folder."},{"lineNumber":1073,"author":{"gitId":"luziyi9898"},"content":"To transfer these data to another computer, please back up the `data` folder "},{"lineNumber":1074,"author":{"gitId":"luziyi9898"},"content":"and copy it over to the directory in the new computer accordingly after installing the app."},{"lineNumber":1075,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":1076,"author":{"gitId":"luziyi9898"},"content":"**Q**: Why is my application not starting up properly?"},{"lineNumber":1077,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":1078,"author":{"gitId":"hailqueenflo"},"content":"**A**: Please refer to the [\"Getting Started\"](#getting-started) section and ensure that "},{"lineNumber":1079,"author":{"gitId":"luziyi9898"},"content":"the correct version of java is installed on your computer. If you face any further difficulties, "},{"lineNumber":1080,"author":{"gitId":"luziyi9898"},"content":"feel free to refer to the About Us page and contact any of the developers."},{"lineNumber":1081,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":1082,"author":{"gitId":"luziyi9898"},"content":"**Q**: Why is XXX feature not supported?"},{"lineNumber":1083,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":1084,"author":{"gitId":"luziyi9898"},"content":"**A**: As this app is still under development, there are many features we would like to add in the future."},{"lineNumber":1085,"author":{"gitId":"luziyi9898"},"content":"Do feedback to us what features you would like to see in Study It!"},{"lineNumber":1086,"author":{"gitId":"-"},"content":""},{"lineNumber":1087,"author":{"gitId":"farice9"},"content":"*Ling Si Hui, Shiho*"},{"lineNumber":1088,"author":{"gitId":"farice9"},"content":""},{"lineNumber":1089,"author":{"gitId":"lingsihui"},"content":"**Q**: What to do if bookmark data does not load properly after changing the bookmark.txt file?"},{"lineNumber":1090,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":1091,"author":{"gitId":"farice9"},"content":"**A**: This is for users who edited the bookmark.txt file in the data folder. If you encounter trouble after editing the data file, "},{"lineNumber":1092,"author":{"gitId":"lingsihui"},"content":"you can do one of the following steps: "},{"lineNumber":1093,"author":{"gitId":"lingsihui"},"content":"* revert the changes in the data file."},{"lineNumber":1094,"author":{"gitId":"lingsihui"},"content":"* delete the bookmark data file."},{"lineNumber":1095,"author":{"gitId":"lingsihui"},"content":"* ensure the bookmark data file are stored in the correct format. This is the following format: "},{"lineNumber":1096,"author":{"gitId":"lingsihui"},"content":"    * CategoryName \u003d links \\| links \\| \\|STAR\\|links \\| links t-\u003etitle "},{"lineNumber":1097,"author":{"gitId":"lingsihui"},"content":"    * Category name and the links are separated with a \" \u003d \" and each link is separated with a \" \\| \". (Take note of the space before and after the symbols)"},{"lineNumber":1098,"author":{"gitId":"lingsihui"},"content":"    * A starred link has \\|STAR\\| in front of the link. A link with a title has \" t-\u003e\" infront of the title. (Take note of the space in front of t-\u003e)"},{"lineNumber":1099,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":1100,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":1101,"author":{"gitId":"farice9"},"content":""},{"lineNumber":1102,"author":{"gitId":"farice9"},"content":"## Command Summary - *Lim Yuan Bing*"},{"lineNumber":1103,"author":{"gitId":"-"},"content":""},{"lineNumber":1104,"author":{"gitId":"farice9"},"content":"The following table is a compiled list of all available commands in our application that you can easily refer to! "},{"lineNumber":1105,"author":{"gitId":"farice9"},"content":""},{"lineNumber":1106,"author":{"gitId":"farice9"},"content":"The commands listed under the sections besides “General” can only be called when you are in that specific mode, "},{"lineNumber":1107,"author":{"gitId":"farice9"},"content":"which you can access using the cd command!"},{"lineNumber":1108,"author":{"gitId":"-"},"content":""},{"lineNumber":1109,"author":{"gitId":"farice9"},"content":"\u003cdiv align\u003d\"center\"\u003eTable: Command Cheatsheet for Study It\u003c/div\u003e"},{"lineNumber":1110,"author":{"gitId":"-"},"content":""},{"lineNumber":1111,"author":{"gitId":"farice9"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":1112,"author":{"gitId":"farice9"},"content":"    \u003cimg width\u003d\"90%\" height\u003d\"90%\" src\u003d\"Images/cheatsheet1.png\"\u003e"},{"lineNumber":1113,"author":{"gitId":"farice9"},"content":"\u003c/p\u003e"},{"lineNumber":1114,"author":{"gitId":"-"},"content":""},{"lineNumber":1115,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":1116,"author":{"gitId":"-"},"content":""},{"lineNumber":1117,"author":{"gitId":"farice9"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":1118,"author":{"gitId":"farice9"},"content":"    \u003cimg width\u003d\"90%\" height\u003d\"90%\" src\u003d\"Images/cheatsheet2.png\"\u003e"},{"lineNumber":1119,"author":{"gitId":"farice9"},"content":"\u003c/p\u003e"}],"authorContributionMap":{"hailqueenflo":157,"lingsihui":269,"slightlyharp":210,"luziyi9898":220,"farice9":237,"-":26}},{"path":"docs/team/farice9.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"# Lim Yuan Bing - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"## Project: Study it"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":""},{"lineNumber":5,"author":{"gitId":"farice9"},"content":"Study It is an interactive all-in-one study companion to help you organize your study matters!"},{"lineNumber":6,"author":{"gitId":"farice9"},"content":""},{"lineNumber":7,"author":{"gitId":"farice9"},"content":"It is packed with 4 major features: bookmark, timetable, academic and flashcard to help store and arrange your"},{"lineNumber":8,"author":{"gitId":"farice9"},"content":"study matters in a thoughtful manner so that you can focus on Studying It!"},{"lineNumber":9,"author":{"gitId":"farice9"},"content":""},{"lineNumber":10,"author":{"gitId":"farice9"},"content":"The following are my contributions to the project!"},{"lineNumber":11,"author":{"gitId":"farice9"},"content":""},{"lineNumber":12,"author":{"gitId":"farice9"},"content":"### Features added: "},{"lineNumber":13,"author":{"gitId":"farice9"},"content":""},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"* **Designed the main architecture of the program and maintain it**"},{"lineNumber":15,"author":{"gitId":"farice9"},"content":"    * What it does: Provides proper partitioning and command parsing as well as program flow to ensure every team member\u0027s"},{"lineNumber":16,"author":{"gitId":"farice9"},"content":"    code can be fit into our program. I have also helped integrated each member\u0027s mode into the program."},{"lineNumber":17,"author":{"gitId":"farice9"},"content":"    * Justification: For a program with 4 major features, I needed to design the architecture such that user can switch"},{"lineNumber":18,"author":{"gitId":"farice9"},"content":"    between the modes seamlessly and use the functionalities provided in each mode without clashing with the rest."},{"lineNumber":19,"author":{"gitId":"farice9"},"content":"    * Highlights: With the main architecture, the infrastructure within each mode will not interfere with one another, "},{"lineNumber":20,"author":{"gitId":"farice9"},"content":"    and the design is flexible enough to implement new features for future expansions."},{"lineNumber":21,"author":{"gitId":"farice9"},"content":"    * Credits: The architectural code was coded from scratch."},{"lineNumber":22,"author":{"gitId":"farice9"},"content":"    "},{"lineNumber":23,"author":{"gitId":"farice9"},"content":"* **Implemented general functions for the program**"},{"lineNumber":24,"author":{"gitId":"farice9"},"content":"    * Functions: `help`, `location`, `cd`, `exit`"},{"lineNumber":25,"author":{"gitId":"farice9"},"content":"    * What it does: These functions can be used anywhere throughout the program to help user navigate our app containing"},{"lineNumber":26,"author":{"gitId":"farice9"},"content":"    multiple modes. `help` instructs the user what commands are available in each mode. `location` informs the user"},{"lineNumber":27,"author":{"gitId":"farice9"},"content":"    their current mode. `cd` is used to switch between modes. `exit` is used to either exit the program or their current mode"},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"    * Justification: We needed general functions to help user navigate our expansive app that has 4 major modes."},{"lineNumber":29,"author":{"gitId":"farice9"},"content":"    * Highlights: `help` will print out help messages specific to the mode the user is currently at. `cd` can be used"},{"lineNumber":30,"author":{"gitId":"farice9"},"content":"    anywhere in the app and is modified to take in index number (for quicker navigation) or mode name (for meaningful interaction)."},{"lineNumber":31,"author":{"gitId":"farice9"},"content":"    * Credits: The general functions are implemented during the design of the system architecture."},{"lineNumber":32,"author":{"gitId":"farice9"},"content":"   "},{"lineNumber":33,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"   "},{"lineNumber":35,"author":{"gitId":"farice9"},"content":"* **Streamlined the user interface of the program**"},{"lineNumber":36,"author":{"gitId":"farice9"},"content":"    * What it does: Decided how the general user interface of the program should look like and helped streamlined it across"},{"lineNumber":37,"author":{"gitId":"farice9"},"content":"    multiple modes. "},{"lineNumber":38,"author":{"gitId":"farice9"},"content":"    * Justification: A clean user interface will improve the user\u0027s experience while using our application."},{"lineNumber":39,"author":{"gitId":"farice9"},"content":"    * Highlights: Provided some thoughtful functionality when designing user interface, such as printing the current time"},{"lineNumber":40,"author":{"gitId":"farice9"},"content":"    at the menu."},{"lineNumber":41,"author":{"gitId":"farice9"},"content":"    * Credits: Mode specific interfaces were coded by each respective teammates and streamlined by me."},{"lineNumber":42,"author":{"gitId":"farice9"},"content":"    "},{"lineNumber":43,"author":{"gitId":"farice9"},"content":"* **Added `highlight` function as one of the general functions**"},{"lineNumber":44,"author":{"gitId":"farice9"},"content":"    * What it does: It prints out the starred items from bookmark mode and academic mode"},{"lineNumber":45,"author":{"gitId":"farice9"},"content":"    * Justification: Allows user to quickly access the important informations he/she deemed important"},{"lineNumber":46,"author":{"gitId":"farice9"},"content":"    * Highlights: It can be called from anywhere in the app, allowing quicker access"},{"lineNumber":47,"author":{"gitId":"farice9"},"content":"    * Credits: Si Hui implemented the `star` function in bookmark mode but I implemented it within the academic mode which was"},{"lineNumber":48,"author":{"gitId":"farice9"},"content":"    designed by Ziyi. I made use of these 2 functionalities to run the `highlight` function."},{"lineNumber":49,"author":{"gitId":"farice9"},"content":""},{"lineNumber":50,"author":{"gitId":"farice9"},"content":"### Code contributed: "},{"lineNumber":51,"author":{"gitId":"farice9"},"content":""},{"lineNumber":52,"author":{"gitId":"farice9"},"content":"[RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dfarice\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dfarice9\u0026tabRepo\u003dAY2021S1-CS2113T-T12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":53,"author":{"gitId":"farice9"},"content":""},{"lineNumber":54,"author":{"gitId":"farice9"},"content":"### Project management"},{"lineNumber":55,"author":{"gitId":"farice9"},"content":""},{"lineNumber":56,"author":{"gitId":"farice9"},"content":"* Helped review many PRs and solved several merge conflicts."},{"lineNumber":57,"author":{"gitId":"farice9"},"content":"* Made notices for my teammates when issues were found: [checkstyle errors](https://github.com/AY2021S1-CS2113T-T12-1/tp/issues/39)"},{"lineNumber":58,"author":{"gitId":"farice9"},"content":"* Helped my teammates out when they had problems with uploading images to documentations and problems with git."},{"lineNumber":59,"author":{"gitId":"farice9"},"content":"* Handled the finalizing and release of our project for each milestone: [Releases](https://github.com/AY2021S1-CS2113T-T12-1/tp/releases)"},{"lineNumber":60,"author":{"gitId":"farice9"},"content":""},{"lineNumber":61,"author":{"gitId":"farice9"},"content":"### Documentation:"},{"lineNumber":62,"author":{"gitId":"farice9"},"content":"* User Guide: "},{"lineNumber":63,"author":{"gitId":"farice9"},"content":"    * Added the [About](https://ay2021s1-cs2113t-t12-1.github.io/tp/UserGuide.html#about), [Getting Started](https://ay2021s1-cs2113t-t12-1.github.io/tp/UserGuide.html#getting-started), "},{"lineNumber":64,"author":{"gitId":"farice9"},"content":"    [General Commands](https://ay2021s1-cs2113t-t12-1.github.io/tp/UserGuide.html#general-commands) sections"},{"lineNumber":65,"author":{"gitId":"farice9"},"content":"    * Added the [Command Summary](https://ay2021s1-cs2113t-t12-1.github.io/tp/UserGuide.html#command-summary) of the program"},{"lineNumber":66,"author":{"gitId":"farice9"},"content":"    "},{"lineNumber":67,"author":{"gitId":"farice9"},"content":"* Developer Guide:"},{"lineNumber":68,"author":{"gitId":"farice9"},"content":"    * Added the [Setting up \u0026 getting started](https://ay2021s1-cs2113t-t12-1.github.io/tp/DeveloperGuide.html#setting-up--getting-started),"},{"lineNumber":69,"author":{"gitId":"farice9"},"content":"    [Major components](https://ay2021s1-cs2113t-t12-1.github.io/tp/DeveloperGuide.html#major-components),"},{"lineNumber":70,"author":{"gitId":"farice9"},"content":"    [Architecture](https://ay2021s1-cs2113t-t12-1.github.io/tp/DeveloperGuide.html#architecture),"},{"lineNumber":71,"author":{"gitId":"farice9"},"content":"    [Main component](https://ay2021s1-cs2113t-t12-1.github.io/tp/DeveloperGuide.html#main-component) sections."},{"lineNumber":72,"author":{"gitId":"farice9"},"content":"    * Drawn the regular diagrams of major components and system architecture, UML sequence diagram of how the architecture "},{"lineNumber":73,"author":{"gitId":"farice9"},"content":"    components interact with each other and the UML diagram of the main components in StudyIT class."},{"lineNumber":74,"author":{"gitId":"farice9"},"content":""},{"lineNumber":75,"author":{"gitId":"farice9"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":76,"author":{"gitId":"farice9"},"content":""},{"lineNumber":77,"author":{"gitId":"farice9"},"content":"### Community:"},{"lineNumber":78,"author":{"gitId":"farice9"},"content":"* Non-trivial PR reviews: "},{"lineNumber":79,"author":{"gitId":"farice9"},"content":"    * [#102](https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/102)"},{"lineNumber":80,"author":{"gitId":"farice9"},"content":"    * [#92](https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/92)"},{"lineNumber":81,"author":{"gitId":"farice9"},"content":"    * [#194](https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/194)"},{"lineNumber":82,"author":{"gitId":"farice9"},"content":"    "},{"lineNumber":83,"author":{"gitId":"farice9"},"content":"* Reported bugs and suggestions to teammates: "},{"lineNumber":84,"author":{"gitId":"farice9"},"content":"    * [#190](https://github.com/AY2021S1-CS2113T-T12-1/tp/issues/190)"},{"lineNumber":85,"author":{"gitId":"farice9"},"content":"    * [#133](https://github.com/AY2021S1-CS2113T-T12-1/tp/issues/133)"},{"lineNumber":86,"author":{"gitId":"farice9"},"content":"    * [#60](https://github.com/AY2021S1-CS2113T-T12-1/tp/issues/60)"}],"authorContributionMap":{"farice9":86}},{"path":"docs/team/hailqueenflo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hailqueenflo"},"content":"# Lim Si Qiao Florence - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":3,"author":{"gitId":"hailqueenflo"},"content":"## Overview of Project: Study It"},{"lineNumber":4,"author":{"gitId":"hailqueenflo"},"content":"Study It is an interactive desktop app that helps manage your study related matters, optimized for use via a Command"},{"lineNumber":5,"author":{"gitId":"hailqueenflo"},"content":"Line Interface (CLI). It can keep track of your various study matters, presenting them in an organized and thoughtful"},{"lineNumber":6,"author":{"gitId":"hailqueenflo"},"content":"manner to help you efficiently study it with Study It."},{"lineNumber":7,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":8,"author":{"gitId":"hailqueenflo"},"content":"It is written in Java, and comprises four main modes: Bookmark, Timetable, Academic and Flashcard."},{"lineNumber":9,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":10,"author":{"gitId":"hailqueenflo"},"content":"The following are my contributions to the project."},{"lineNumber":11,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":12,"author":{"gitId":"hailqueenflo"},"content":"### Features added:"},{"lineNumber":13,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":14,"author":{"gitId":"hailqueenflo"},"content":"* **Added the feature to add/delete flashcards**"},{"lineNumber":15,"author":{"gitId":"hailqueenflo"},"content":"    * What it does: Allows the user to add and delete flashcards, based on the question and answer provided by the user."},{"lineNumber":16,"author":{"gitId":"hailqueenflo"},"content":"    * Justification: This feature improves the product significantly as the user can create a knowledge base of content"},{"lineNumber":17,"author":{"gitId":"hailqueenflo"},"content":"    to be revised, effectively compiling all the information needed for their next test."},{"lineNumber":18,"author":{"gitId":"hailqueenflo"},"content":"    * Highlights: This feature allows users to add questions and answers according to the self-explanatory prompts by"},{"lineNumber":19,"author":{"gitId":"hailqueenflo"},"content":"    the app, making it an intuitive experience."},{"lineNumber":20,"author":{"gitId":"hailqueenflo"},"content":"     "},{"lineNumber":21,"author":{"gitId":"hailqueenflo"},"content":"* **Implemented the function to list flashcards**"},{"lineNumber":22,"author":{"gitId":"hailqueenflo"},"content":"    * What it does: Lists all the flashcards that the user has added"},{"lineNumber":23,"author":{"gitId":"hailqueenflo"},"content":"    * Justification: This function is necessary for the user to refer to all the flashcards currently in the deck."},{"lineNumber":24,"author":{"gitId":"hailqueenflo"},"content":"    * Highlights: This function clearly displays the card indexes along with the questions and answers, which is"},{"lineNumber":25,"author":{"gitId":"hailqueenflo"},"content":"    required for deletion of flashcards."},{"lineNumber":26,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":27,"author":{"gitId":"hailqueenflo"},"content":"* **Implemented the function to test flashcards**"},{"lineNumber":28,"author":{"gitId":"hailqueenflo"},"content":"    * What it does: Returns a random question from the flashcard deck, and prompts user to enter an answer. The user can"},{"lineNumber":29,"author":{"gitId":"hailqueenflo"},"content":"    quit the test mode with the `back` command, and reveal the answer with the `show answer` command."},{"lineNumber":30,"author":{"gitId":"hailqueenflo"},"content":"    * Justification: The best way the user can revise their study materials is by grading their own work, effectively"},{"lineNumber":31,"author":{"gitId":"hailqueenflo"},"content":"    helping them retain information and improve their grades."},{"lineNumber":32,"author":{"gitId":"hailqueenflo"},"content":"    * Highlights: This feature has thoughtful functionalities, such as a way for users to find out the answer"},{"lineNumber":33,"author":{"gitId":"hailqueenflo"},"content":"    immediately when they are unable to answer a question, helping them save time while revising. The score feature also"},{"lineNumber":34,"author":{"gitId":"hailqueenflo"},"content":"    acts as an encouragement for revision. For the convenience of the user, the test mode ignores the case of the user\u0027s"},{"lineNumber":35,"author":{"gitId":"hailqueenflo"},"content":"    answers."},{"lineNumber":36,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":37,"author":{"gitId":"hailqueenflo"},"content":"* **Implemented the function to find flashcards**"},{"lineNumber":38,"author":{"gitId":"hailqueenflo"},"content":"    * What it does: Returns a list of flashcards that matches the search term input by the user."},{"lineNumber":39,"author":{"gitId":"hailqueenflo"},"content":"    * Justification: This feature enhances the product because it conveniently returns only the flashcards that the user"},{"lineNumber":40,"author":{"gitId":"hailqueenflo"},"content":"    is interested in."},{"lineNumber":41,"author":{"gitId":"hailqueenflo"},"content":"    * Highlights: This feature is user-friendly as it is not case sensitive, effectively returning all the flashcards"},{"lineNumber":42,"author":{"gitId":"hailqueenflo"},"content":"    that the user wishes to find."},{"lineNumber":43,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":44,"author":{"gitId":"hailqueenflo"},"content":"### Code Contributed:"},{"lineNumber":45,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":46,"author":{"gitId":"hailqueenflo"},"content":"[RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dhailqueenflo\u0026tabRepo\u003dAY2021S1-CS2113T-T12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code)"},{"lineNumber":47,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":48,"author":{"gitId":"hailqueenflo"},"content":"### Documentation:"},{"lineNumber":49,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":50,"author":{"gitId":"hailqueenflo"},"content":"* User Guide:"},{"lineNumber":51,"author":{"gitId":"hailqueenflo"},"content":"  * Added the documentation for all the commands in flashcard mode, listed under section 4 of the User Guide."},{"lineNumber":52,"author":{"gitId":"hailqueenflo"},"content":"  * Did cosmetic tweaks to existing documentation of features"},{"lineNumber":53,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":54,"author":{"gitId":"hailqueenflo"},"content":"* Developer Guide:"},{"lineNumber":55,"author":{"gitId":"hailqueenflo"},"content":"  * Added the implementation details for the flashcard component, including the UMLs used in that section."},{"lineNumber":56,"author":{"gitId":"hailqueenflo"},"content":"  "},{"lineNumber":57,"author":{"gitId":"hailqueenflo"},"content":"### Community:"},{"lineNumber":58,"author":{"gitId":"hailqueenflo"},"content":" "},{"lineNumber":59,"author":{"gitId":"hailqueenflo"},"content":" * Reported bugs and suggestions to teammates: "},{"lineNumber":60,"author":{"gitId":"hailqueenflo"},"content":"    * [#127](https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/127)"},{"lineNumber":61,"author":{"gitId":"hailqueenflo"},"content":"    * [#137](https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/137)"},{"lineNumber":62,"author":{"gitId":"hailqueenflo"},"content":"    "},{"lineNumber":63,"author":{"gitId":"hailqueenflo"},"content":"  * Reported bugs and suggestions for other teams in the class:"},{"lineNumber":64,"author":{"gitId":"hailqueenflo"},"content":"    * [#2](https://github.com/hailqueenflo/ped/issues/2)"},{"lineNumber":65,"author":{"gitId":"hailqueenflo"},"content":"    * [#4](https://github.com/hailqueenflo/ped/issues/4)"},{"lineNumber":66,"author":{"gitId":"hailqueenflo"},"content":"    "}],"authorContributionMap":{"hailqueenflo":66}},{"path":"docs/team/lingsihui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"# Ling Si Hui, Shiho - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":""},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"Our product Study It provides an interactive desktop app to help manage your study related matters."},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"It can keep track of your various study matters, present them in an organized and thoughtful manner to "},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"help you organize your study life. It is written in Java and includes 4 features: bookmark, timetable, academic, and flashcard. "},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":"Given below are my contributions to the project."},{"lineNumber":10,"author":{"gitId":"farice9"},"content":""},{"lineNumber":11,"author":{"gitId":"farice9"},"content":"### Features added:"},{"lineNumber":12,"author":{"gitId":"farice9"},"content":""},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"* **New Feature** : Added the ability to  add link t-\u003e title/ remove link / add category / delete category / star bookmark"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    * What it does: allows the user to add bookmark link to bookmark list. Links added can be removed by using the remove command. Added links that are important can be starred."},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    * Justification: This feature serves as the basic command for the bookmark feature so that the user can customise the list of links, categories and their starred links."},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":"    * Highlights: This feature was relatively simple yet tedious. The concept behind the implementation for add links was simple, however, the additional conditions such as including "},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"    the title for the links, deciding on the factor that makes the link valid, and checking whether the link already exist make the add link command challenging. Add category command follows "},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"    the same structure as the add link commands but with fewer conditions hence it was less challenging. Delete category command and remove "},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"    category command have the similar structure with fewer conditions, hence it was less challenging as well. Star command was an additional enhancement that was made afterwards, and the "},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"    challenging component for star command is that this enhancement affected the rest of the bookmark features, hence it required me to change existing feature. "},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"    * Credits: The program was coded from scratch but mainly adapting the design architecture from my [ip](https://github.com/lingsihui/ip)."},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"    "},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"* **New Feature** : Added the ability to change mode/ go back to bookmark main /list bookmark "},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"    * What it does: allows the user to change mode and go back to main within bookmark feature. The list command was enhanced to show which mode the users are in and how many links they have."},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"    * Justification: This features make the navigability within the bookmark feature easier. "},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"    * Highlights: This feature was challenging in the sense that due to the different modes, the user needs to know the mode of the bookmark mode to better navigate around bookmark feature. This was done through "},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"    the list command where it shows the current mode the user is currently in and enhancing list command to show the overview of the links, list of categories, list of links in the current mode the user is in and "},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"    the list of starred links the user has."},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"    * Credits: The program was coded from scratch."},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"* **New Feature** : Added the ability to store bookmark links in file"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"    * What it does: allows the user to keep the list of bookmark even after exiting the program. "},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"    * Justification: This feature is required so that user do not need to input the list of links they want to bookmark every time they start the program."},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"    * Highlights: The most challenging part of the feature was to decide on how to separate out the category, title and the links as links can contain many symbols. "},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"    * Credits: The program was coded from scratch."},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"   "},{"lineNumber":37,"author":{"gitId":"farice9"},"content":"### Code Contributed: "},{"lineNumber":38,"author":{"gitId":"farice9"},"content":""},{"lineNumber":39,"author":{"gitId":"farice9"},"content":"[RepoSense Link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dlingsihui\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":40,"author":{"gitId":"farice9"},"content":""},{"lineNumber":41,"author":{"gitId":"farice9"},"content":"### Project Management:"},{"lineNumber":42,"author":{"gitId":"farice9"},"content":""},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"* Logging [#76](https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/76)"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"* Maintaining the issue tracker"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"* Update developer guide documenting the target user profile, user stories, and the documentation section [#118](https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/118/files)"},{"lineNumber":46,"author":{"gitId":"farice9"},"content":""},{"lineNumber":47,"author":{"gitId":"farice9"},"content":"### Documentation: "},{"lineNumber":48,"author":{"gitId":"farice9"},"content":""},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":"* User Guide:"},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"    * Added documentation for bookmark features [#137](https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/137)"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"* Developer Guide: "},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":"    * Added documentation for bookmark feature: included UML diagram of the bookmark feature class diagram, bookmark feature sequence diagram and add command sequence diagram [#102](https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/102)"},{"lineNumber":53,"author":{"gitId":"farice9"},"content":""},{"lineNumber":54,"author":{"gitId":"farice9"},"content":"### Community:"},{"lineNumber":55,"author":{"gitId":"farice9"},"content":""},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":"* PR Reviewed (with non-trivial comments): [#103](https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/103), [#92](https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/92)"},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":"* Reported bugs and suggestions for other teams in the class [#2](https://github.com/lingsihui/ped/issues/2), [#3](https://github.com/lingsihui/ped/issues/3), [#4](https://github.com/lingsihui/ped/issues/4), [#5](https://github.com/lingsihui/ped/issues/5), [#6](https://github.com/lingsihui/ped/issues/6), [#7](https://github.com/lingsihui/ped/issues/7)"},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":"  "}],"authorContributionMap":{"lingsihui":42,"farice9":16}},{"path":"docs/team/luziyi9898.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"luziyi9898"},"content":"# Lu Ziyi - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":5,"author":{"gitId":"luziyi9898"},"content":"Study It is an interactive desktop app that helps students manage their study related matters, "},{"lineNumber":6,"author":{"gitId":"luziyi9898"},"content":"optimized for use via a Command Line Interface (CLI). "},{"lineNumber":7,"author":{"gitId":"luziyi9898"},"content":"Given below are my contributions to the project."},{"lineNumber":8,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":9,"author":{"gitId":"luziyi9898"},"content":"### Features added: "},{"lineNumber":10,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":11,"author":{"gitId":"luziyi9898"},"content":"* Designed the structure of the academic mode."},{"lineNumber":12,"author":{"gitId":"luziyi9898"},"content":"  * What it does: allows the user to access all the different features in academic mode."},{"lineNumber":13,"author":{"gitId":"luziyi9898"},"content":"  * Justification: it is the main framework for the entire academic mode, and facilitates all the various functions."},{"lineNumber":14,"author":{"gitId":"luziyi9898"},"content":"  * Highlights: it is a very flexible framework that allows for new features to be added easily."},{"lineNumber":15,"author":{"gitId":"luziyi9898"},"content":"  * Credits: the program was coded from scratch."},{"lineNumber":16,"author":{"gitId":"luziyi9898"},"content":"    "},{"lineNumber":17,"author":{"gitId":"luziyi9898"},"content":"* Added the function to manage contacts"},{"lineNumber":18,"author":{"gitId":"luziyi9898"},"content":"  * What it does: allows user to add, delete, check and mark out contacts."},{"lineNumber":19,"author":{"gitId":"luziyi9898"},"content":"  * Justification: as an all-in-one academic helper, the ability to keep track of important contacts of professors"},{"lineNumber":20,"author":{"gitId":"luziyi9898"},"content":"  and TAs is very helpful to students using this app."},{"lineNumber":21,"author":{"gitId":"luziyi9898"},"content":"  * Highlights: there is a clear structure in the different segments of the codes(i.e. PersonBook \u0026 Person),"},{"lineNumber":22,"author":{"gitId":"luziyi9898"},"content":"  thus modifications and additions can be made easily without affecting how other functions work."},{"lineNumber":23,"author":{"gitId":"luziyi9898"},"content":"  * Credits: the program was coded from scratch, but the star contact segment was added by Yuan Bing."},{"lineNumber":24,"author":{"gitId":"luziyi9898"},"content":"    "},{"lineNumber":25,"author":{"gitId":"luziyi9898"},"content":"* Added the function to manage grades"},{"lineNumber":26,"author":{"gitId":"luziyi9898"},"content":"  * What it does: allows user to add, delete, check and mark out grades, as well as su a grade and check his/her CAP."},{"lineNumber":27,"author":{"gitId":"luziyi9898"},"content":"  * Justification: it is important for students to keep track of their grades throughout their course in university,"},{"lineNumber":28,"author":{"gitId":"luziyi9898"},"content":"  and study it lets the student do that with ease."},{"lineNumber":29,"author":{"gitId":"luziyi9898"},"content":"  * Highlights: the app can calculate CAP accurately, taking into consideration factors like module credits, grades,"},{"lineNumber":30,"author":{"gitId":"luziyi9898"},"content":"  and SUs."},{"lineNumber":31,"author":{"gitId":"luziyi9898"},"content":"  * Credits: the program was coded from scratch, but the star grade segment was added by Yuan Bing."},{"lineNumber":32,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":33,"author":{"gitId":"luziyi9898"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":34,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":35,"author":{"gitId":"luziyi9898"},"content":"### Code contributed: "},{"lineNumber":36,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":37,"author":{"gitId":"luziyi9898"},"content":"[RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dluziyi9898\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dluziyi9898\u0026tabRepo\u003dAY2021S1-CS2113T-T12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code)"},{"lineNumber":38,"author":{"gitId":"luziyi9898"},"content":"   "},{"lineNumber":39,"author":{"gitId":"luziyi9898"},"content":"### Documentation:"},{"lineNumber":40,"author":{"gitId":"luziyi9898"},"content":"* User Guide: "},{"lineNumber":41,"author":{"gitId":"luziyi9898"},"content":"  * Added documentation for all the commands in academic mode, listed under section 3 of the user guide."},{"lineNumber":42,"author":{"gitId":"luziyi9898"},"content":"  * Added documentation for FAQ segment."},{"lineNumber":43,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":44,"author":{"gitId":"luziyi9898"},"content":"* Developer Guide:"},{"lineNumber":45,"author":{"gitId":"luziyi9898"},"content":"  * Added the implementation details academic component, including the UMLs used in that section."},{"lineNumber":46,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":47,"author":{"gitId":"luziyi9898"},"content":"### Community: "},{"lineNumber":48,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":49,"author":{"gitId":"luziyi9898"},"content":"* PR Reviewed(with non-trivial review comments): "},{"lineNumber":50,"author":{"gitId":"luziyi9898"},"content":"[ [#99](https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/99) ]"},{"lineNumber":51,"author":{"gitId":"luziyi9898"},"content":"[ [#205](https://github.com/AY2021S1-CS2113T-T12-1/tp/pull/205) ]"},{"lineNumber":52,"author":{"gitId":"luziyi9898"},"content":" "},{"lineNumber":53,"author":{"gitId":"luziyi9898"},"content":"* Added issues for bugs found in other\u0027s sections:"},{"lineNumber":54,"author":{"gitId":"luziyi9898"},"content":"[ [#108](https://github.com/AY2021S1-CS2113T-T12-1/tp/issues/108) ]"},{"lineNumber":55,"author":{"gitId":"luziyi9898"},"content":"[ [#109](https://github.com/AY2021S1-CS2113T-T12-1/tp/issues/109) ]"},{"lineNumber":56,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":57,"author":{"gitId":"luziyi9898"},"content":"* Found significant issues in other group\u0027s project:"},{"lineNumber":58,"author":{"gitId":"luziyi9898"},"content":"[ [#9](https://github.com/luziyi9898/ped/issues/9) ]"},{"lineNumber":59,"author":{"gitId":"luziyi9898"},"content":"[ [#7](https://github.com/luziyi9898/ped/issues/7) ]"}],"authorContributionMap":{"luziyi9898":58,"farice9":1}},{"path":"docs/team/slightlyharp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hailqueenflo"},"content":"# Lin Yuheng - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"## Project: Study it"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":"Study It is an interactive desktop app that helps students manage their study related matters, "},{"lineNumber":6,"author":{"gitId":"slightlyharp"},"content":"optimized for use via a Command Line Interface (CLI). "},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":"It encompasses 4 main features: bookmark, timetable, academic tracker and flashcard"},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"to help student organise their study life."},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":"Given below are my contributions to the project."},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":13,"author":{"gitId":"farice9"},"content":"### Features added:"},{"lineNumber":14,"author":{"gitId":"farice9"},"content":""},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":"* **New Feature:** Design and implemented the timetable mode"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"  * **Sub feature:** Added add class and add activity command "},{"lineNumber":18,"author":{"gitId":"slightlyharp"},"content":"    * What it does: Allow user to add class or activities to the application. Class"},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":"    are design for recurring events with zoom link or venue attached to it while activity"},{"lineNumber":20,"author":{"gitId":"slightlyharp"},"content":"    are design for a one off event."},{"lineNumber":21,"author":{"gitId":"slightlyharp"},"content":"    * Justification: This feature serves as the basic command for the timtable feature so "},{"lineNumber":22,"author":{"gitId":"slightlyharp"},"content":"    that the user can plan their schedule."},{"lineNumber":23,"author":{"gitId":"slightlyharp"},"content":"    * Highlights: This feature is design with a data structure to store all the information "},{"lineNumber":24,"author":{"gitId":"slightlyharp"},"content":"    needed by a recurring classes, or a one off activity and arrange these data in a way that is "},{"lineNumber":25,"author":{"gitId":"slightlyharp"},"content":"    easy to access given a specific date. This feature also required extensive use of LocalDateTime Class"},{"lineNumber":26,"author":{"gitId":"slightlyharp"},"content":"    to have the saved data to interact real time. There is also extensive error handling involve in the feature"},{"lineNumber":27,"author":{"gitId":"slightlyharp"},"content":"    to ensure most invalid user input can be handled. Further more there is mathematical calculation involved in finding "},{"lineNumber":28,"author":{"gitId":"slightlyharp"},"content":"    the dates of lesson for recuring classes base on the user input."},{"lineNumber":29,"author":{"gitId":"slightlyharp"},"content":"    * Credits: The code was coded from scratch."},{"lineNumber":30,"author":{"gitId":"slightlyharp"},"content":"  "},{"lineNumber":31,"author":{"gitId":"slightlyharp"},"content":"  * **Sub feature:** Added show schedule command"},{"lineNumber":32,"author":{"gitId":"slightlyharp"},"content":"    * What it does: Display the full schedule the user has planned for the next seven days"},{"lineNumber":33,"author":{"gitId":"slightlyharp"},"content":"    * Justification: This feature serve as the basic command for the user to view the activities and classes"},{"lineNumber":34,"author":{"gitId":"slightlyharp"},"content":"    for the next seven days"},{"lineNumber":35,"author":{"gitId":"slightlyharp"},"content":"    * Highlights: This feature was challenging as a fix table needed to be printed without the help of GUI classes."},{"lineNumber":36,"author":{"gitId":"slightlyharp"},"content":"    Initially the table was design to be printed horizontally however the result tend to differ with different "},{"lineNumber":37,"author":{"gitId":"slightlyharp"},"content":"    command prompt window size. Hence, a vertical table is used and rotation of array is needed for the data to be"},{"lineNumber":38,"author":{"gitId":"slightlyharp"},"content":"    displayed correctly. Correct data can be easily retrieved due to the data structure of the class and activity "},{"lineNumber":39,"author":{"gitId":"slightlyharp"},"content":"    designed previously."},{"lineNumber":40,"author":{"gitId":"slightlyharp"},"content":"    * Credits: The code was coded from scratch."},{"lineNumber":41,"author":{"gitId":"slightlyharp"},"content":"  "},{"lineNumber":42,"author":{"gitId":"slightlyharp"},"content":"  * **Sub feature:** Added show link command"},{"lineNumber":43,"author":{"gitId":"slightlyharp"},"content":"    * What it does: Allow users to see the links they need, or the venue they need to go to for the next two hours."},{"lineNumber":44,"author":{"gitId":"slightlyharp"},"content":"    * Justification: This feature allows the user to experience the ease of accessing links they need for events"},{"lineNumber":45,"author":{"gitId":"slightlyharp"},"content":"    during the COVID period when many links needed to be managed for school and work."},{"lineNumber":46,"author":{"gitId":"slightlyharp"},"content":"    * Highlight: This feature is simple to implement with help of LocalDateTime class, "},{"lineNumber":47,"author":{"gitId":"slightlyharp"},"content":"    yet it is a really useful feature for students having online lesson during the Covid period"},{"lineNumber":48,"author":{"gitId":"slightlyharp"},"content":"    * Credits: The code was coded from scratch"},{"lineNumber":49,"author":{"gitId":"slightlyharp"},"content":"    "},{"lineNumber":50,"author":{"gitId":"slightlyharp"},"content":"  * **Sub feature:** Added list class, list activity, delete class, and delete activity command"},{"lineNumber":51,"author":{"gitId":"slightlyharp"},"content":"    * What it does: Allow user to see the full list of activities/classes the user has added and delete any unwanted once."},{"lineNumber":52,"author":{"gitId":"slightlyharp"},"content":"    * Justification: This feature allows user to see the full list of event so that they can amend any unwanted ones."},{"lineNumber":53,"author":{"gitId":"slightlyharp"},"content":"    *Credits: The program was coded from scratch but mainly adapting the design architecture from ip."},{"lineNumber":54,"author":{"gitId":"slightlyharp"},"content":"  "},{"lineNumber":55,"author":{"gitId":"slightlyharp"},"content":"  * **Sub feature:** Added clean up command"},{"lineNumber":56,"author":{"gitId":"slightlyharp"},"content":"    * What it does: allow user to clean up events that are over more than seven days ago"},{"lineNumber":57,"author":{"gitId":"slightlyharp"},"content":"    *Justification: This feature allows user to free up storage space by deleting all overed event with a single command,"},{"lineNumber":58,"author":{"gitId":"slightlyharp"},"content":"    so that user do not have to mannually delete overed event which are taking up storage spaces but is not"},{"lineNumber":59,"author":{"gitId":"slightlyharp"},"content":"    used anymore."},{"lineNumber":60,"author":{"gitId":"slightlyharp"},"content":"    * Credits: The code was coded from scratch"},{"lineNumber":61,"author":{"gitId":"slightlyharp"},"content":"  "},{"lineNumber":62,"author":{"gitId":"slightlyharp"},"content":"### Code contributed: "},{"lineNumber":63,"author":{"gitId":"slightlyharp"},"content":"  "},{"lineNumber":64,"author":{"gitId":"slightlyharp"},"content":"[RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dslightlyharp\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":65,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":66,"author":{"gitId":"slightlyharp"},"content":"### Project Management"},{"lineNumber":67,"author":{"gitId":"slightlyharp"},"content":"* Reviewed and approved a number of PRs."},{"lineNumber":68,"author":{"gitId":"slightlyharp"},"content":"* Set up the PR structure my team on github so that the PRs have to be view by others before merging into master."},{"lineNumber":69,"author":{"gitId":"slightlyharp"},"content":"* Set up some Issue for team to work on."},{"lineNumber":70,"author":{"gitId":"slightlyharp"},"content":"* Managed and closed some of the Issues and Milestones."},{"lineNumber":71,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":72,"author":{"gitId":"slightlyharp"},"content":"### Documentation:"},{"lineNumber":73,"author":{"gitId":"slightlyharp"},"content":"* [User Guide:](../UserGuide.md)"},{"lineNumber":74,"author":{"gitId":"slightlyharp"},"content":"    * Added documentation for all the commands in timetable mode, listed under section 2 of the User Guide."},{"lineNumber":75,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":76,"author":{"gitId":"slightlyharp"},"content":"* [Developer Guide:](../DeveloperGuide.md)"},{"lineNumber":77,"author":{"gitId":"slightlyharp"},"content":"    * Added the implementation details timetable component, including the UMLs used in that section."},{"lineNumber":78,"author":{"gitId":"slightlyharp"},"content":"    "},{"lineNumber":79,"author":{"gitId":"slightlyharp"},"content":"### Community:"},{"lineNumber":80,"author":{"gitId":"slightlyharp"},"content":"* Reported bugs and suggestions for other teams in the class "},{"lineNumber":81,"author":{"gitId":"slightlyharp"},"content":"[#1](https://github.com/slightlyharp/ped/issues/1)"},{"lineNumber":82,"author":{"gitId":"slightlyharp"},"content":"[#2](https://github.com/slightlyharp/ped/issues/2) "},{"lineNumber":83,"author":{"gitId":"slightlyharp"},"content":"[#3](https://github.com/slightlyharp/ped/issues/3)"},{"lineNumber":84,"author":{"gitId":"slightlyharp"},"content":"[#4](https://github.com/slightlyharp/ped/issues/4)"}],"authorContributionMap":{"hailqueenflo":1,"slightlyharp":81,"farice9":2}},{"path":"src/main/java/academic/AcademicCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package academic;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":"import exceptions.InvalidGradeException;"},{"lineNumber":5,"author":{"gitId":"luziyi9898"},"content":"import exceptions.InvalidMcException;"},{"lineNumber":6,"author":{"gitId":"farice9"},"content":"import studyit.CommandParser;"},{"lineNumber":7,"author":{"gitId":"luziyi9898"},"content":"import java.util.Arrays;"},{"lineNumber":8,"author":{"gitId":"luziyi9898"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":10,"author":{"gitId":"farice9"},"content":""},{"lineNumber":11,"author":{"gitId":"luziyi9898"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"luziyi9898"},"content":" *Parses user inputs for academic mode."},{"lineNumber":13,"author":{"gitId":"luziyi9898"},"content":" */"},{"lineNumber":14,"author":{"gitId":"luziyi9898"},"content":"public class AcademicCommandParser extends CommandParser {"},{"lineNumber":15,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"luziyi9898"},"content":"     * Takes in an input command to and return which type of academic command it falls under."},{"lineNumber":17,"author":{"gitId":"luziyi9898"},"content":"     * @param command input command from the user."},{"lineNumber":18,"author":{"gitId":"luziyi9898"},"content":"     * @return command type"},{"lineNumber":19,"author":{"gitId":"luziyi9898"},"content":"     * @throws InvalidCommandException if command type is invalid"},{"lineNumber":20,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"farice9"},"content":"    public static AcademicCommandType getAcademicCommandType(String command)"},{"lineNumber":22,"author":{"gitId":"farice9"},"content":"            throws InvalidCommandException {"},{"lineNumber":23,"author":{"gitId":"farice9"},"content":"        String commandModified \u003d CommandParser.standardizeCommand(command);"},{"lineNumber":24,"author":{"gitId":"farice9"},"content":""},{"lineNumber":25,"author":{"gitId":"farice9"},"content":"        if (commandModified.startsWith(\"add contact\")) {"},{"lineNumber":26,"author":{"gitId":"farice9"},"content":"            return AcademicCommandType.ADD_CONTACT;"},{"lineNumber":27,"author":{"gitId":"luziyi9898"},"content":"        } else if (commandModified.equals(\"list contact\")) {"},{"lineNumber":28,"author":{"gitId":"luziyi9898"},"content":"            return AcademicCommandType.LIST_CONTACT;"},{"lineNumber":29,"author":{"gitId":"farice9"},"content":"        } else if (commandModified.startsWith(\"add grade\")) {"},{"lineNumber":30,"author":{"gitId":"farice9"},"content":"            return AcademicCommandType.ADD_GRADE;"},{"lineNumber":31,"author":{"gitId":"luziyi9898"},"content":"        } else if (commandModified.equals(\"check cap\")) {"},{"lineNumber":32,"author":{"gitId":"luziyi9898"},"content":"            return AcademicCommandType.CHECK_CAP;"},{"lineNumber":33,"author":{"gitId":"luziyi9898"},"content":"        } else if (commandModified.equals(\"list grade\")) {"},{"lineNumber":34,"author":{"gitId":"luziyi9898"},"content":"            return AcademicCommandType.LIST_GRADE;"},{"lineNumber":35,"author":{"gitId":"luziyi9898"},"content":"        } else if (commandModified.startsWith(\"delete contact\")) {"},{"lineNumber":36,"author":{"gitId":"luziyi9898"},"content":"            return AcademicCommandType.DELETE_PERSON;"},{"lineNumber":37,"author":{"gitId":"luziyi9898"},"content":"        } else if (commandModified.startsWith(\"delete grade\")) {"},{"lineNumber":38,"author":{"gitId":"luziyi9898"},"content":"            return AcademicCommandType.DELETE_GRADE;"},{"lineNumber":39,"author":{"gitId":"luziyi9898"},"content":"        } else if (commandModified.startsWith(\"su grade\")) {"},{"lineNumber":40,"author":{"gitId":"luziyi9898"},"content":"            return AcademicCommandType.SU_GRADE;"},{"lineNumber":41,"author":{"gitId":"farice9"},"content":"        } else if (commandModified.startsWith(\"star grade\")) {"},{"lineNumber":42,"author":{"gitId":"farice9"},"content":"            return AcademicCommandType.STAR_GRADE;"},{"lineNumber":43,"author":{"gitId":"farice9"},"content":"        } else if (commandModified.startsWith(\"star contact\")) {"},{"lineNumber":44,"author":{"gitId":"farice9"},"content":"            return AcademicCommandType.STAR_CONTACT;"},{"lineNumber":45,"author":{"gitId":"luziyi9898"},"content":"        } else if (commandModified.equals(\"list star\")) {"},{"lineNumber":46,"author":{"gitId":"farice9"},"content":"            return AcademicCommandType.LIST_STAR;"},{"lineNumber":47,"author":{"gitId":"farice9"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"farice9"},"content":"            throw new InvalidCommandException();"},{"lineNumber":49,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"farice9"},"content":""},{"lineNumber":52,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"luziyi9898"},"content":"     * Extract details of a contact from a string into a string array."},{"lineNumber":54,"author":{"gitId":"luziyi9898"},"content":"     * @param command input string"},{"lineNumber":55,"author":{"gitId":"luziyi9898"},"content":"     * @return string array containing the various variables for the contact."},{"lineNumber":56,"author":{"gitId":"luziyi9898"},"content":"     * @throws NumberFormatException when phone number inputted is not a valid phone number."},{"lineNumber":57,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"luziyi9898"},"content":"    public static String[] getContact(String command) throws NumberFormatException, InvalidCommandException {"},{"lineNumber":59,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":60,"author":{"gitId":"luziyi9898"},"content":"        if (!command.contains(\"c/\") | !command.contains(\"m/\") | !command.contains(\"e/\")) {"},{"lineNumber":61,"author":{"gitId":"luziyi9898"},"content":"            throw new InvalidCommandException();"},{"lineNumber":62,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"luziyi9898"},"content":"        String name \u003d command.substring(command.indexOf(\"c/\") + 2,"},{"lineNumber":64,"author":{"gitId":"luziyi9898"},"content":"                command.indexOf(\"m/\")).trim();"},{"lineNumber":65,"author":{"gitId":"luziyi9898"},"content":"        String number \u003d command.substring(command.indexOf(\"m/\") + 2,"},{"lineNumber":66,"author":{"gitId":"luziyi9898"},"content":"                command.indexOf(\"e/\")).trim();"},{"lineNumber":67,"author":{"gitId":"luziyi9898"},"content":"        String email \u003d command.substring(command.indexOf(\"e/\") + 2);"},{"lineNumber":68,"author":{"gitId":"luziyi9898"},"content":"        int numberAsInteger \u003d Integer.parseInt(number);"},{"lineNumber":69,"author":{"gitId":"luziyi9898"},"content":"        if (numberAsInteger \u003e\u003d 100000000 || numberAsInteger \u003c\u003d 0) {"},{"lineNumber":70,"author":{"gitId":"luziyi9898"},"content":"            throw new NumberFormatException();"},{"lineNumber":71,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":73,"author":{"gitId":"farice9"},"content":"        return new String[]{name, number, email};"},{"lineNumber":74,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"farice9"},"content":""},{"lineNumber":76,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"luziyi9898"},"content":"     * Extract details of a module grade from a string into a string array."},{"lineNumber":78,"author":{"gitId":"luziyi9898"},"content":"     * @param command input string"},{"lineNumber":79,"author":{"gitId":"luziyi9898"},"content":"     * @return string array containing the various variables for the module grade."},{"lineNumber":80,"author":{"gitId":"luziyi9898"},"content":"     * @throws InvalidGradeException grade inputted is nto a valid grade."},{"lineNumber":81,"author":{"gitId":"luziyi9898"},"content":"     * @throws InvalidMcException mc inputted is nto a valid mc."},{"lineNumber":82,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"luziyi9898"},"content":"    public static String[] getGrade(String command)"},{"lineNumber":84,"author":{"gitId":"luziyi9898"},"content":"            throws InvalidGradeException, InvalidMcException, InvalidCommandException {"},{"lineNumber":85,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":86,"author":{"gitId":"luziyi9898"},"content":"        if (!command.contains(\"n/\") | !command.contains(\"m/\") | !command.contains(\"g/\")) {"},{"lineNumber":87,"author":{"gitId":"luziyi9898"},"content":"            throw new InvalidCommandException();"},{"lineNumber":88,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"luziyi9898"},"content":"        String name \u003d command.substring(command.indexOf(\"n/\") + 2,"},{"lineNumber":90,"author":{"gitId":"luziyi9898"},"content":"                command.indexOf(\"m/\")).trim();"},{"lineNumber":91,"author":{"gitId":"luziyi9898"},"content":"        String mc \u003d command.substring(command.indexOf(\"m/\") + 2,"},{"lineNumber":92,"author":{"gitId":"luziyi9898"},"content":"                command.indexOf(\"g/\")).trim();"},{"lineNumber":93,"author":{"gitId":"luziyi9898"},"content":"        String grade \u003d command.substring(command.indexOf(\"g/\") + 2);"},{"lineNumber":94,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":95,"author":{"gitId":"luziyi9898"},"content":"        List\u003cString\u003e list \u003d Arrays.asList(Grade.listOfGrades);"},{"lineNumber":96,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":97,"author":{"gitId":"luziyi9898"},"content":"        if (!list.contains(grade.toLowerCase())) {"},{"lineNumber":98,"author":{"gitId":"luziyi9898"},"content":"            throw new InvalidGradeException();"},{"lineNumber":99,"author":{"gitId":"luziyi9898"},"content":"        } else if (Integer.parseInt(mc) \u003c\u003d 0) {"},{"lineNumber":100,"author":{"gitId":"luziyi9898"},"content":"            throw new InvalidMcException();"},{"lineNumber":101,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"farice9"},"content":"        return new String[]{name, mc, grade};"},{"lineNumber":103,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":105,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"luziyi9898"},"content":"     * Extracts details of a contact from the storage file into a string array."},{"lineNumber":107,"author":{"gitId":"luziyi9898"},"content":"     * @param importedStatement input string from the storage file."},{"lineNumber":108,"author":{"gitId":"luziyi9898"},"content":"     * @return string array containing the various variables for the contact."},{"lineNumber":109,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"luziyi9898"},"content":"    public static String[] parseImportedPerson(String importedStatement) {"},{"lineNumber":111,"author":{"gitId":"luziyi9898"},"content":"        assert importedStatement.startsWith(\"[P]\") : \"Parsed statement should be a person\";"},{"lineNumber":112,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":113,"author":{"gitId":"luziyi9898"},"content":"        int positionOfFirstDivider \u003d importedStatement.indexOf(\"|\");"},{"lineNumber":114,"author":{"gitId":"luziyi9898"},"content":"        int positionOfSecondDivider \u003d importedStatement.indexOf(\"|\",positionOfFirstDivider + 1);"},{"lineNumber":115,"author":{"gitId":"farice9"},"content":"        int positionOfThirdDivider \u003d importedStatement.indexOf(\"|\",positionOfSecondDivider + 1);"},{"lineNumber":116,"author":{"gitId":"farice9"},"content":"        int positionOfFourthDivider \u003d importedStatement.lastIndexOf(\"|\");"},{"lineNumber":117,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":118,"author":{"gitId":"luziyi9898"},"content":"        String var1 \u003d importedStatement.substring(positionOfFirstDivider + 1,positionOfSecondDivider).trim();"},{"lineNumber":119,"author":{"gitId":"luziyi9898"},"content":"        String var2 \u003d importedStatement.substring(positionOfSecondDivider + 1,positionOfThirdDivider).trim();"},{"lineNumber":120,"author":{"gitId":"farice9"},"content":"        String var3 \u003d importedStatement.substring(positionOfThirdDivider + 1, positionOfFourthDivider).trim();"},{"lineNumber":121,"author":{"gitId":"farice9"},"content":"        String var4 \u003d importedStatement.substring(positionOfFourthDivider + 1).trim();"},{"lineNumber":122,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":123,"author":{"gitId":"farice9"},"content":"        return new String[]{var1, var2, var3, var4};"},{"lineNumber":124,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":125,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":127,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"luziyi9898"},"content":"     * Extracts details of a module grade from the storage file into a string array."},{"lineNumber":129,"author":{"gitId":"luziyi9898"},"content":"     * @param importedStatement input string from the storage file."},{"lineNumber":130,"author":{"gitId":"luziyi9898"},"content":"     * @return string array containing the various variables for the module grade."},{"lineNumber":131,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"luziyi9898"},"content":"    public static String[] parseImportedGrade(String importedStatement) {"},{"lineNumber":133,"author":{"gitId":"luziyi9898"},"content":"        assert importedStatement.startsWith(\"[G]\") : \"Parsed statement should be a grade\";"},{"lineNumber":134,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":135,"author":{"gitId":"luziyi9898"},"content":"        int positionOfFirstDivider \u003d importedStatement.indexOf(\"|\");"},{"lineNumber":136,"author":{"gitId":"luziyi9898"},"content":"        int positionOfSecondDivider \u003d importedStatement.indexOf(\"|\",positionOfFirstDivider + 1);"},{"lineNumber":137,"author":{"gitId":"luziyi9898"},"content":"        int positionOfThirdDivider \u003d importedStatement.indexOf(\"|\", positionOfSecondDivider + 1);"},{"lineNumber":138,"author":{"gitId":"farice9"},"content":"        int positionOfFourthDivider \u003d importedStatement.indexOf(\"|\", positionOfThirdDivider + 1);"},{"lineNumber":139,"author":{"gitId":"farice9"},"content":"        int positionOfFifthDivider \u003d importedStatement.lastIndexOf(\"|\");"},{"lineNumber":140,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":141,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":142,"author":{"gitId":"luziyi9898"},"content":"        String var1 \u003d importedStatement.substring(positionOfFirstDivider + 1,positionOfSecondDivider).trim();"},{"lineNumber":143,"author":{"gitId":"luziyi9898"},"content":"        String var2 \u003d importedStatement.substring(positionOfSecondDivider + 1,positionOfThirdDivider).trim();"},{"lineNumber":144,"author":{"gitId":"luziyi9898"},"content":"        String var3 \u003d importedStatement.substring(positionOfThirdDivider + 1,positionOfFourthDivider).trim();"},{"lineNumber":145,"author":{"gitId":"farice9"},"content":"        String var4 \u003d importedStatement.substring(positionOfFourthDivider + 1,positionOfFifthDivider).trim();"},{"lineNumber":146,"author":{"gitId":"farice9"},"content":"        String var5 \u003d importedStatement.substring(positionOfFifthDivider + 1).trim();"},{"lineNumber":147,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":148,"author":{"gitId":"farice9"},"content":"        return new String[]{var1, var2, var3, var4, var5};"},{"lineNumber":149,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":150,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":152,"author":{"gitId":"luziyi9898"},"content":"    public static Integer parseDeletePerson(String command) {"},{"lineNumber":153,"author":{"gitId":"luziyi9898"},"content":"        return Integer.parseInt(command.substring(\"delete contact\".length()).trim());"},{"lineNumber":154,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":156,"author":{"gitId":"luziyi9898"},"content":"    public static Integer parseDeleteGrade(String command) {"},{"lineNumber":157,"author":{"gitId":"luziyi9898"},"content":"        return Integer.parseInt(command.substring(\"delete grade\".length()).trim());"},{"lineNumber":158,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":160,"author":{"gitId":"luziyi9898"},"content":"    public static Integer parseSuGrade(String command) {"},{"lineNumber":161,"author":{"gitId":"luziyi9898"},"content":"        return Integer.parseInt(command.substring(\"su grade\".length()).trim());"},{"lineNumber":162,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":164,"author":{"gitId":"farice9"},"content":"    public static Integer parseStarGrade(String command) {"},{"lineNumber":165,"author":{"gitId":"farice9"},"content":"        return Integer.parseInt(command.substring(\"star grade\".length()).trim());"},{"lineNumber":166,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"farice9"},"content":""},{"lineNumber":168,"author":{"gitId":"farice9"},"content":"    public static Integer parseStarContact(String command) {"},{"lineNumber":169,"author":{"gitId":"farice9"},"content":"        return Integer.parseInt(command.substring(\"star contact\".length()).trim());"},{"lineNumber":170,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"farice9"},"content":"}"}],"authorContributionMap":{"luziyi9898":125,"farice9":46}},{"path":"src/main/java/academic/AcademicCommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package academic;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"public enum AcademicCommandType {"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":"    ADD_CONTACT,"},{"lineNumber":5,"author":{"gitId":"luziyi9898"},"content":"    LIST_CONTACT,"},{"lineNumber":6,"author":{"gitId":"farice9"},"content":"    ADD_GRADE,"},{"lineNumber":7,"author":{"gitId":"luziyi9898"},"content":"    CHECK_CAP,"},{"lineNumber":8,"author":{"gitId":"luziyi9898"},"content":"    LIST_GRADE,"},{"lineNumber":9,"author":{"gitId":"luziyi9898"},"content":"    DELETE_PERSON,"},{"lineNumber":10,"author":{"gitId":"luziyi9898"},"content":"    DELETE_GRADE,"},{"lineNumber":11,"author":{"gitId":"farice9"},"content":"    SU_GRADE,"},{"lineNumber":12,"author":{"gitId":"farice9"},"content":"    STAR_GRADE,"},{"lineNumber":13,"author":{"gitId":"farice9"},"content":"    STAR_CONTACT,"},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"    LIST_STAR"},{"lineNumber":15,"author":{"gitId":"farice9"},"content":"}"}],"authorContributionMap":{"luziyi9898":5,"farice9":10}},{"path":"src/main/java/academic/AcademicRun.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package academic;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import exceptions.InvalidMcException;"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":"import exceptions.RepeatedGradeException;"},{"lineNumber":5,"author":{"gitId":"luziyi9898"},"content":"import exceptions.InvalidGradeException;"},{"lineNumber":6,"author":{"gitId":"luziyi9898"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":7,"author":{"gitId":"luziyi9898"},"content":"import exceptions.InvalidEmailException;"},{"lineNumber":8,"author":{"gitId":"luziyi9898"},"content":"import exceptions.EmptyInputException;"},{"lineNumber":9,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":10,"author":{"gitId":"farice9"},"content":"import studyit.StudyItLog;"},{"lineNumber":11,"author":{"gitId":"farice9"},"content":"import userinterface.ErrorMessage;"},{"lineNumber":12,"author":{"gitId":"farice9"},"content":"import userinterface.Ui;"},{"lineNumber":13,"author":{"gitId":"farice9"},"content":""},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"import java.io.IOException;"},{"lineNumber":15,"author":{"gitId":"farice9"},"content":"import java.util.ArrayList;"},{"lineNumber":16,"author":{"gitId":"farice9"},"content":""},{"lineNumber":17,"author":{"gitId":"luziyi9898"},"content":"//@@author luziyi9898"},{"lineNumber":18,"author":{"gitId":"luziyi9898"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"luziyi9898"},"content":" *Framework for the academic mode."},{"lineNumber":20,"author":{"gitId":"luziyi9898"},"content":" */"},{"lineNumber":21,"author":{"gitId":"luziyi9898"},"content":"public class AcademicRun {"},{"lineNumber":22,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"luziyi9898"},"content":"     * list that stores the current list of grades."},{"lineNumber":24,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"luziyi9898"},"content":"    private ArrayList\u003cGrade\u003e currentGrades;"},{"lineNumber":26,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":27,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"luziyi9898"},"content":"     * list that stores the current list of person."},{"lineNumber":29,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"luziyi9898"},"content":"    private ArrayList\u003cPerson\u003e listOfPerson;"},{"lineNumber":31,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":32,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"luziyi9898"},"content":"     *Initializes the academic mode by initializing the array lists and loading the storage file."},{"lineNumber":34,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"luziyi9898"},"content":"    public AcademicRun() {"},{"lineNumber":36,"author":{"gitId":"luziyi9898"},"content":"        currentGrades \u003d new ArrayList\u003c\u003e();"},{"lineNumber":37,"author":{"gitId":"luziyi9898"},"content":"        listOfPerson \u003d new ArrayList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":39,"author":{"gitId":"luziyi9898"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"luziyi9898"},"content":"            AcademicStorage.loadFile(listOfPerson, currentGrades);"},{"lineNumber":41,"author":{"gitId":"luziyi9898"},"content":"        } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"luziyi9898"},"content":"            System.out.println(\"Problem loading academic storage file\");"},{"lineNumber":43,"author":{"gitId":"luziyi9898"},"content":"            StudyItLog.logger.warning(\"Problem loading academic storage file\\n\" + e);"},{"lineNumber":44,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"luziyi9898"},"content":"        StudyItLog.logger.info(\"Academic mode initialized\");"},{"lineNumber":46,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":48,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"luziyi9898"},"content":"     *Reads the user command and executes the various academic functions based on that command."},{"lineNumber":50,"author":{"gitId":"luziyi9898"},"content":"     * @param command user input."},{"lineNumber":51,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"luziyi9898"},"content":"    public void run(String command) {"},{"lineNumber":53,"author":{"gitId":"luziyi9898"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"luziyi9898"},"content":"            AcademicCommandType commandType \u003d AcademicCommandParser.getAcademicCommandType(command);"},{"lineNumber":55,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":56,"author":{"gitId":"luziyi9898"},"content":"            if (commandType \u003d\u003d AcademicCommandType.ADD_CONTACT) {"},{"lineNumber":57,"author":{"gitId":"luziyi9898"},"content":"                PersonBook.addPerson(AcademicCommandParser.getContact(command), listOfPerson);"},{"lineNumber":58,"author":{"gitId":"luziyi9898"},"content":"                Ui.printLine(\"Adding Contact\");"},{"lineNumber":59,"author":{"gitId":"luziyi9898"},"content":"            } else if (commandType \u003d\u003d AcademicCommandType.LIST_CONTACT) {"},{"lineNumber":60,"author":{"gitId":"luziyi9898"},"content":"                Ui.printLine(PersonBook.printPersonBook(listOfPerson));"},{"lineNumber":61,"author":{"gitId":"luziyi9898"},"content":"            } else if (commandType \u003d\u003d AcademicCommandType.ADD_GRADE) {"},{"lineNumber":62,"author":{"gitId":"luziyi9898"},"content":"                GradeBook.addGrade(AcademicCommandParser.getGrade(command), currentGrades);"},{"lineNumber":63,"author":{"gitId":"luziyi9898"},"content":"                Ui.printLine(\"Adding Grade\");"},{"lineNumber":64,"author":{"gitId":"luziyi9898"},"content":"            } else if (commandType \u003d\u003d AcademicCommandType.CHECK_CAP) {"},{"lineNumber":65,"author":{"gitId":"luziyi9898"},"content":"                Ui.printLine(GradeBook.printCap(currentGrades));"},{"lineNumber":66,"author":{"gitId":"luziyi9898"},"content":"            } else if (commandType \u003d\u003d AcademicCommandType.LIST_GRADE) {"},{"lineNumber":67,"author":{"gitId":"luziyi9898"},"content":"                Ui.printLine(GradeBook.printListOfGrades(currentGrades));"},{"lineNumber":68,"author":{"gitId":"luziyi9898"},"content":"            } else if (commandType \u003d\u003d AcademicCommandType.DELETE_PERSON) {"},{"lineNumber":69,"author":{"gitId":"luziyi9898"},"content":"                PersonBook.deletePerson(AcademicCommandParser.parseDeletePerson(command),listOfPerson);"},{"lineNumber":70,"author":{"gitId":"luziyi9898"},"content":"                Ui.printLine(\"Deleting contact\");"},{"lineNumber":71,"author":{"gitId":"luziyi9898"},"content":"            } else if (commandType \u003d\u003d AcademicCommandType.DELETE_GRADE) {"},{"lineNumber":72,"author":{"gitId":"luziyi9898"},"content":"                GradeBook.deleteGrade(AcademicCommandParser.parseDeleteGrade(command),currentGrades);"},{"lineNumber":73,"author":{"gitId":"luziyi9898"},"content":"                Ui.printLine(\"Deleting grade\");"},{"lineNumber":74,"author":{"gitId":"luziyi9898"},"content":"            } else if (commandType \u003d\u003d AcademicCommandType.SU_GRADE) {"},{"lineNumber":75,"author":{"gitId":"luziyi9898"},"content":"                GradeBook.suGradeInGradeBook(AcademicCommandParser.parseSuGrade(command), currentGrades);"},{"lineNumber":76,"author":{"gitId":"luziyi9898"},"content":"                Ui.printLine(\"SU-ing grade\");"},{"lineNumber":77,"author":{"gitId":"luziyi9898"},"content":"            } else if (commandType \u003d\u003d AcademicCommandType.STAR_GRADE) {"},{"lineNumber":78,"author":{"gitId":"luziyi9898"},"content":"                GradeBook.starGrade(AcademicCommandParser.parseStarGrade(command), currentGrades);"},{"lineNumber":79,"author":{"gitId":"luziyi9898"},"content":"                Ui.printLine(\"Marking this grade as star\");"},{"lineNumber":80,"author":{"gitId":"luziyi9898"},"content":"            } else if (commandType \u003d\u003d AcademicCommandType.STAR_CONTACT) {"},{"lineNumber":81,"author":{"gitId":"luziyi9898"},"content":"                PersonBook.starContact(AcademicCommandParser.parseStarContact(command), listOfPerson);"},{"lineNumber":82,"author":{"gitId":"luziyi9898"},"content":"                Ui.printLine(\"Marking this person as star\");"},{"lineNumber":83,"author":{"gitId":"luziyi9898"},"content":"            } else if (commandType \u003d\u003d AcademicCommandType.LIST_STAR) {"},{"lineNumber":84,"author":{"gitId":"luziyi9898"},"content":"                AcademicUi.printStarList(currentGrades, listOfPerson);"},{"lineNumber":85,"author":{"gitId":"luziyi9898"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"luziyi9898"},"content":"        } catch (InvalidCommandException e) {"},{"lineNumber":87,"author":{"gitId":"luziyi9898"},"content":"            ErrorMessage.printUnidentifiableCommand();"},{"lineNumber":88,"author":{"gitId":"luziyi9898"},"content":"            StudyItLog.logger.warning(\"Invalid academic command: Command unidentifiable\");"},{"lineNumber":89,"author":{"gitId":"luziyi9898"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":90,"author":{"gitId":"luziyi9898"},"content":"            ErrorMessage.printUnidentifiableInput();"},{"lineNumber":91,"author":{"gitId":"luziyi9898"},"content":"            StudyItLog.logger.warning(\"Invalid academic command: String Index out of bounds.\");"},{"lineNumber":92,"author":{"gitId":"luziyi9898"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":93,"author":{"gitId":"luziyi9898"},"content":"            ErrorMessage.printInvalidNumber();"},{"lineNumber":94,"author":{"gitId":"luziyi9898"},"content":"            StudyItLog.logger.warning(\"Invalid academic command: Invalid Number\");"},{"lineNumber":95,"author":{"gitId":"luziyi9898"},"content":"        } catch (InvalidGradeException e) {"},{"lineNumber":96,"author":{"gitId":"luziyi9898"},"content":"            ErrorMessage.printInvalidGrade();"},{"lineNumber":97,"author":{"gitId":"luziyi9898"},"content":"            StudyItLog.logger.warning(\"Invalid academic command: Invalid Grade\");"},{"lineNumber":98,"author":{"gitId":"luziyi9898"},"content":"        } catch (InvalidMcException e) {"},{"lineNumber":99,"author":{"gitId":"luziyi9898"},"content":"            ErrorMessage.printInvalidMc();"},{"lineNumber":100,"author":{"gitId":"luziyi9898"},"content":"            StudyItLog.logger.warning(\"Invalid academic command: Invalid MC\");"},{"lineNumber":101,"author":{"gitId":"luziyi9898"},"content":"        } catch (InvalidEmailException e) {"},{"lineNumber":102,"author":{"gitId":"luziyi9898"},"content":"            ErrorMessage.printInvalidEmail();"},{"lineNumber":103,"author":{"gitId":"luziyi9898"},"content":"            StudyItLog.logger.warning(\"Invalid academic command: Invalid Email\");"},{"lineNumber":104,"author":{"gitId":"luziyi9898"},"content":"        } catch (RepeatedGradeException e) {"},{"lineNumber":105,"author":{"gitId":"luziyi9898"},"content":"            ErrorMessage.printRepeatedGrade();"},{"lineNumber":106,"author":{"gitId":"luziyi9898"},"content":"            StudyItLog.logger.warning(\"Invalid academic command: Repeated Grade\");"},{"lineNumber":107,"author":{"gitId":"luziyi9898"},"content":"        } catch (EmptyInputException e) {"},{"lineNumber":108,"author":{"gitId":"luziyi9898"},"content":"            ErrorMessage.printEmptyInput();"},{"lineNumber":109,"author":{"gitId":"luziyi9898"},"content":"            StudyItLog.logger.warning(\"Invalid academic command: Empty Input!\");"},{"lineNumber":110,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":112,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":113,"author":{"gitId":"luziyi9898"},"content":"        try {"},{"lineNumber":114,"author":{"gitId":"luziyi9898"},"content":"            AcademicStorage.writeFile(listOfPerson, currentGrades);"},{"lineNumber":115,"author":{"gitId":"luziyi9898"},"content":"        } catch (IOException e) {"},{"lineNumber":116,"author":{"gitId":"luziyi9898"},"content":"            System.out.println(\"Problem writing to academic storage file\");"},{"lineNumber":117,"author":{"gitId":"luziyi9898"},"content":"            StudyItLog.logger.warning(\"Problem writing to academic storage file\\n\" + e);"},{"lineNumber":118,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"luziyi9898"},"content":"}"}],"authorContributionMap":{"luziyi9898":110,"farice9":10}},{"path":"src/main/java/academic/AcademicStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luziyi9898"},"content":"package academic;"},{"lineNumber":2,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":3,"author":{"gitId":"luziyi9898"},"content":"import exceptions.EmptyInputException;"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":"import exceptions.InvalidEmailException;"},{"lineNumber":5,"author":{"gitId":"luziyi9898"},"content":"import exceptions.RepeatedGradeException;"},{"lineNumber":6,"author":{"gitId":"luziyi9898"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"luziyi9898"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"luziyi9898"},"content":"import java.io.FileWriter;"},{"lineNumber":9,"author":{"gitId":"luziyi9898"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"luziyi9898"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"luziyi9898"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":13,"author":{"gitId":"luziyi9898"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"luziyi9898"},"content":" *Facilitates the storage of data on to a local storage file."},{"lineNumber":15,"author":{"gitId":"luziyi9898"},"content":" */"},{"lineNumber":16,"author":{"gitId":"luziyi9898"},"content":"public class AcademicStorage {"},{"lineNumber":17,"author":{"gitId":"luziyi9898"},"content":"    private static final String filePath \u003d \"data/academic.txt\";"},{"lineNumber":18,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":19,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"luziyi9898"},"content":"     * Determines the existence and validity of the stored file before running the loadText command."},{"lineNumber":21,"author":{"gitId":"luziyi9898"},"content":"     * @param listOfPerson current list of person."},{"lineNumber":22,"author":{"gitId":"luziyi9898"},"content":"     * @param listOfGrades current list of grade."},{"lineNumber":23,"author":{"gitId":"luziyi9898"},"content":"     * @throws IOException when there is failed I/O operations."},{"lineNumber":24,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"luziyi9898"},"content":"    public static void loadFile(ArrayList\u003cPerson\u003e listOfPerson, ArrayList\u003cGrade\u003e listOfGrades) throws IOException {"},{"lineNumber":26,"author":{"gitId":"luziyi9898"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"luziyi9898"},"content":"            loadText(listOfPerson, listOfGrades);"},{"lineNumber":28,"author":{"gitId":"luziyi9898"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":29,"author":{"gitId":"luziyi9898"},"content":"            File f \u003d new File(filePath);"},{"lineNumber":30,"author":{"gitId":"luziyi9898"},"content":"            f.createNewFile();"},{"lineNumber":31,"author":{"gitId":"farice9"},"content":"            System.out.println(\"data/academic.txt is not found, creating a new file now!\");"},{"lineNumber":32,"author":{"gitId":"luziyi9898"},"content":"        } catch (StringIndexOutOfBoundsException | NumberFormatException"},{"lineNumber":33,"author":{"gitId":"luziyi9898"},"content":"                | InvalidEmailException | RepeatedGradeException | EmptyInputException e) {"},{"lineNumber":34,"author":{"gitId":"luziyi9898"},"content":"            listOfGrades.clear();"},{"lineNumber":35,"author":{"gitId":"luziyi9898"},"content":"            listOfPerson.clear();"},{"lineNumber":36,"author":{"gitId":"luziyi9898"},"content":"            File f \u003d new File(filePath);"},{"lineNumber":37,"author":{"gitId":"luziyi9898"},"content":"            f.createNewFile();"},{"lineNumber":38,"author":{"gitId":"luziyi9898"},"content":"            System.out.println(\"data/academic.txt is corrupted, your data will be reformatted.\");"},{"lineNumber":39,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":42,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"luziyi9898"},"content":"     * Reads the local storage file and update the array lists containing person and grades accordingly."},{"lineNumber":44,"author":{"gitId":"luziyi9898"},"content":"     * @param listOfPerson current list of person."},{"lineNumber":45,"author":{"gitId":"luziyi9898"},"content":"     * @param listOfGrades current list of grade."},{"lineNumber":46,"author":{"gitId":"luziyi9898"},"content":"     * @throws FileNotFoundException when a local storage file is not found."},{"lineNumber":47,"author":{"gitId":"luziyi9898"},"content":"     * @throws InvalidEmailException when email accepted is not a valid email"},{"lineNumber":48,"author":{"gitId":"luziyi9898"},"content":"     * @throws RepeatedGradeException when an existing grade is added repeatedly."},{"lineNumber":49,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"luziyi9898"},"content":"    private static void loadText(ArrayList\u003cPerson\u003e listOfPerson, ArrayList\u003cGrade\u003e listOfGrades)"},{"lineNumber":51,"author":{"gitId":"luziyi9898"},"content":"            throws FileNotFoundException, InvalidEmailException, RepeatedGradeException, EmptyInputException {"},{"lineNumber":52,"author":{"gitId":"luziyi9898"},"content":"        File f \u003d new File(filePath); // create a File for the given file path"},{"lineNumber":53,"author":{"gitId":"luziyi9898"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":54,"author":{"gitId":"luziyi9898"},"content":"        while (s.hasNext()) {"},{"lineNumber":55,"author":{"gitId":"luziyi9898"},"content":"            String importedCommand \u003d s.nextLine();"},{"lineNumber":56,"author":{"gitId":"luziyi9898"},"content":"            if (importedCommand.startsWith(\"[P]\")) {"},{"lineNumber":57,"author":{"gitId":"luziyi9898"},"content":"                PersonBook.addPerson(AcademicCommandParser.parseImportedPerson(importedCommand),listOfPerson);"},{"lineNumber":58,"author":{"gitId":"luziyi9898"},"content":"            } else if (importedCommand.startsWith(\"[G]\")) {"},{"lineNumber":59,"author":{"gitId":"luziyi9898"},"content":"                GradeBook.addGrade(AcademicCommandParser.parseImportedGrade(importedCommand),listOfGrades);"},{"lineNumber":60,"author":{"gitId":"luziyi9898"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":64,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"luziyi9898"},"content":"     * Updates the local storage file based on the array lists containing person and grades accordingly."},{"lineNumber":66,"author":{"gitId":"luziyi9898"},"content":"     * @param listOfPerson current list of person."},{"lineNumber":67,"author":{"gitId":"luziyi9898"},"content":"     * @param listOfGrades current list of grade."},{"lineNumber":68,"author":{"gitId":"luziyi9898"},"content":"     * @throws IOException when there is failed I/O operations."},{"lineNumber":69,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"luziyi9898"},"content":"    public static void writeFile(ArrayList\u003cPerson\u003e listOfPerson, ArrayList\u003cGrade\u003e listOfGrades)"},{"lineNumber":71,"author":{"gitId":"luziyi9898"},"content":"            throws IOException {"},{"lineNumber":72,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":73,"author":{"gitId":"luziyi9898"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":74,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":75,"author":{"gitId":"luziyi9898"},"content":"        for (Person person : listOfPerson) {"},{"lineNumber":76,"author":{"gitId":"luziyi9898"},"content":"            if (person !\u003d null) {"},{"lineNumber":77,"author":{"gitId":"luziyi9898"},"content":"                fw.write(Person.printIndividualPerson(person) + System.lineSeparator());"},{"lineNumber":78,"author":{"gitId":"luziyi9898"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"luziyi9898"},"content":"        for (Grade grade : listOfGrades) {"},{"lineNumber":81,"author":{"gitId":"luziyi9898"},"content":"            if (grade !\u003d null) {"},{"lineNumber":82,"author":{"gitId":"luziyi9898"},"content":"                fw.write(Grade.printIndividualGrade(grade) + System.lineSeparator());"},{"lineNumber":83,"author":{"gitId":"luziyi9898"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"luziyi9898"},"content":"        fw.close();"},{"lineNumber":86,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"luziyi9898"},"content":"}"}],"authorContributionMap":{"luziyi9898":86,"farice9":1}},{"path":"src/main/java/academic/AcademicUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package academic;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import userinterface.Ui;"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"farice9"},"content":""},{"lineNumber":6,"author":{"gitId":"luziyi9898"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"luziyi9898"},"content":" * Text UI for academic mode."},{"lineNumber":8,"author":{"gitId":"luziyi9898"},"content":" */"},{"lineNumber":9,"author":{"gitId":"farice9"},"content":"public class AcademicUi extends Ui {"},{"lineNumber":10,"author":{"gitId":"farice9"},"content":"    public static void printStarList(ArrayList\u003cGrade\u003e currentGrades, ArrayList\u003cPerson\u003e listOfPerson) {"},{"lineNumber":11,"author":{"gitId":"farice9"},"content":"        int listIndex \u003d 1;"},{"lineNumber":12,"author":{"gitId":"farice9"},"content":"        Boolean listIsEmpty \u003d true;"},{"lineNumber":13,"author":{"gitId":"farice9"},"content":""},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"        System.out.println(\"Starred grades:\");"},{"lineNumber":15,"author":{"gitId":"farice9"},"content":"        for (Grade grade : currentGrades) {"},{"lineNumber":16,"author":{"gitId":"farice9"},"content":"            if (grade.isStar) {"},{"lineNumber":17,"author":{"gitId":"farice9"},"content":"                System.out.println(listIndex + \".\" + GradeBook.combineGradeDetails(grade));"},{"lineNumber":18,"author":{"gitId":"farice9"},"content":"                listIsEmpty \u003d false;"},{"lineNumber":19,"author":{"gitId":"farice9"},"content":"                listIndex++;"},{"lineNumber":20,"author":{"gitId":"farice9"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"farice9"},"content":"        printEmpty(listIsEmpty);"},{"lineNumber":23,"author":{"gitId":"farice9"},"content":""},{"lineNumber":24,"author":{"gitId":"farice9"},"content":"        // Reset the boolean flag"},{"lineNumber":25,"author":{"gitId":"farice9"},"content":"        listIsEmpty \u003d true;"},{"lineNumber":26,"author":{"gitId":"farice9"},"content":""},{"lineNumber":27,"author":{"gitId":"farice9"},"content":"        System.out.println(\"\\nStarred contacts:\");"},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"        listIndex \u003d 1;"},{"lineNumber":29,"author":{"gitId":"farice9"},"content":"        for (Person person : listOfPerson) {"},{"lineNumber":30,"author":{"gitId":"farice9"},"content":"            if (person.isStar) {"},{"lineNumber":31,"author":{"gitId":"farice9"},"content":"                System.out.println(listIndex + \".\" + PersonBook.combinePersonDetails(person));"},{"lineNumber":32,"author":{"gitId":"farice9"},"content":"                listIsEmpty \u003d false;"},{"lineNumber":33,"author":{"gitId":"farice9"},"content":"                listIndex++;"},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"farice9"},"content":"        printEmpty(listIsEmpty);"},{"lineNumber":37,"author":{"gitId":"farice9"},"content":"        printDivider();"},{"lineNumber":38,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"farice9"},"content":""},{"lineNumber":40,"author":{"gitId":"farice9"},"content":"    public static void printEmpty(Boolean isEmpty) {"},{"lineNumber":41,"author":{"gitId":"farice9"},"content":"        if (isEmpty) {"},{"lineNumber":42,"author":{"gitId":"farice9"},"content":"            System.out.println(\"\u003cempty\u003e\");"},{"lineNumber":43,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"farice9"},"content":"}"}],"authorContributionMap":{"luziyi9898":3,"farice9":42}},{"path":"src/main/java/academic/Grade.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luziyi9898"},"content":"package academic;"},{"lineNumber":2,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":3,"author":{"gitId":"luziyi9898"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":" * Represents a grade for a module in study it."},{"lineNumber":5,"author":{"gitId":"luziyi9898"},"content":" */"},{"lineNumber":6,"author":{"gitId":"luziyi9898"},"content":"public class Grade {"},{"lineNumber":7,"author":{"gitId":"luziyi9898"},"content":"    protected String moduleName;"},{"lineNumber":8,"author":{"gitId":"luziyi9898"},"content":"    protected Integer moduleCredits;"},{"lineNumber":9,"author":{"gitId":"luziyi9898"},"content":"    protected String moduleGrade;"},{"lineNumber":10,"author":{"gitId":"luziyi9898"},"content":"    protected Boolean isModuleSued;"},{"lineNumber":11,"author":{"gitId":"farice9"},"content":"    protected Boolean isStar;"},{"lineNumber":12,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":13,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"luziyi9898"},"content":"     * List of valid grades the program accepts."},{"lineNumber":15,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"luziyi9898"},"content":"    public static String[] listOfGrades \u003d new String[]{\"a+\",\"a\",\"a-\",\"b+\",\"b\",\"b-\",\"c+\",\"c\",\"d+\",\"d\",\"f\"};"},{"lineNumber":17,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":18,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":19,"author":{"gitId":"luziyi9898"},"content":"    public Grade(String name, Integer credits, String grade) {"},{"lineNumber":20,"author":{"gitId":"luziyi9898"},"content":"        this.moduleName \u003d name;"},{"lineNumber":21,"author":{"gitId":"luziyi9898"},"content":"        this.moduleCredits \u003d credits;"},{"lineNumber":22,"author":{"gitId":"luziyi9898"},"content":"        this.moduleGrade \u003d grade;"},{"lineNumber":23,"author":{"gitId":"luziyi9898"},"content":"        this.isModuleSued \u003d false;"},{"lineNumber":24,"author":{"gitId":"farice9"},"content":"        this.isStar \u003d false;"},{"lineNumber":25,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":27,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"luziyi9898"},"content":"     * Receive a grade and convert it into a string to be stored into local storage."},{"lineNumber":29,"author":{"gitId":"luziyi9898"},"content":"     * @param grade grade to be stored."},{"lineNumber":30,"author":{"gitId":"luziyi9898"},"content":"     * @return string to be added to local storage."},{"lineNumber":31,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"luziyi9898"},"content":"    public static String printIndividualGrade(Grade grade) {"},{"lineNumber":33,"author":{"gitId":"luziyi9898"},"content":"        return \"[G] | \" + grade.moduleName + \" | \" + grade.moduleCredits"},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"                + \" | \" + grade.moduleGrade + \" | \" + grade.isModuleSued"},{"lineNumber":35,"author":{"gitId":"farice9"},"content":"                + \" | \" + grade.isStar;"},{"lineNumber":36,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":38,"author":{"gitId":"luziyi9898"},"content":"    public static Integer getModuleCredits(Grade grade) {"},{"lineNumber":39,"author":{"gitId":"luziyi9898"},"content":"        return grade.moduleCredits;"},{"lineNumber":40,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":42,"author":{"gitId":"luziyi9898"},"content":"    public static String getModuleGrade(Grade grade) {"},{"lineNumber":43,"author":{"gitId":"luziyi9898"},"content":"        return grade.moduleGrade;"},{"lineNumber":44,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":46,"author":{"gitId":"luziyi9898"},"content":"    public static void suGrade(Grade grade) {"},{"lineNumber":47,"author":{"gitId":"luziyi9898"},"content":"        grade.isModuleSued \u003d true;"},{"lineNumber":48,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":50,"author":{"gitId":"luziyi9898"},"content":"    public static Boolean isGradeSued(Grade grade) {"},{"lineNumber":51,"author":{"gitId":"luziyi9898"},"content":"        return  grade.isModuleSued;"},{"lineNumber":52,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":54,"author":{"gitId":"farice9"},"content":"    public static void changeStarGrade(Grade grade) {"},{"lineNumber":55,"author":{"gitId":"farice9"},"content":"        grade.isStar \u003d true;"},{"lineNumber":56,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"farice9"},"content":""},{"lineNumber":58,"author":{"gitId":"farice9"},"content":"    public static Boolean isGradeStar(Grade grade) {"},{"lineNumber":59,"author":{"gitId":"farice9"},"content":"        return grade.isStar;"},{"lineNumber":60,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"farice9"},"content":""},{"lineNumber":62,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"luziyi9898"},"content":"     * converts grade of module into its corresponding score."},{"lineNumber":64,"author":{"gitId":"luziyi9898"},"content":"     * @param input letter representing grade."},{"lineNumber":65,"author":{"gitId":"luziyi9898"},"content":"     * @return marks to be used for CAP caculation."},{"lineNumber":66,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"luziyi9898"},"content":"    public static double convertLetterToCredit(String input) {"},{"lineNumber":68,"author":{"gitId":"luziyi9898"},"content":"        switch (input.trim().toLowerCase()) {"},{"lineNumber":69,"author":{"gitId":"luziyi9898"},"content":"        case \"a+\":"},{"lineNumber":70,"author":{"gitId":"luziyi9898"},"content":"        case \"a\":"},{"lineNumber":71,"author":{"gitId":"luziyi9898"},"content":"            return 5.0;"},{"lineNumber":72,"author":{"gitId":"luziyi9898"},"content":"        case \"a-\":"},{"lineNumber":73,"author":{"gitId":"luziyi9898"},"content":"            return 4.5;"},{"lineNumber":74,"author":{"gitId":"luziyi9898"},"content":"        case \"b+\":"},{"lineNumber":75,"author":{"gitId":"luziyi9898"},"content":"            return 4.0;"},{"lineNumber":76,"author":{"gitId":"luziyi9898"},"content":"        case \"b\":"},{"lineNumber":77,"author":{"gitId":"luziyi9898"},"content":"            return 3.5;"},{"lineNumber":78,"author":{"gitId":"luziyi9898"},"content":"        case \"b-\":"},{"lineNumber":79,"author":{"gitId":"luziyi9898"},"content":"            return 3.0;"},{"lineNumber":80,"author":{"gitId":"luziyi9898"},"content":"        case \"c+\":"},{"lineNumber":81,"author":{"gitId":"luziyi9898"},"content":"            return 2.5;"},{"lineNumber":82,"author":{"gitId":"luziyi9898"},"content":"        case \"c\":"},{"lineNumber":83,"author":{"gitId":"luziyi9898"},"content":"            return 2.0;"},{"lineNumber":84,"author":{"gitId":"luziyi9898"},"content":"        case \"d+\":"},{"lineNumber":85,"author":{"gitId":"luziyi9898"},"content":"            return 1.5;"},{"lineNumber":86,"author":{"gitId":"luziyi9898"},"content":"        case \"d\":"},{"lineNumber":87,"author":{"gitId":"luziyi9898"},"content":"            return 1.0;"},{"lineNumber":88,"author":{"gitId":"luziyi9898"},"content":"        case \"f\":"},{"lineNumber":89,"author":{"gitId":"luziyi9898"},"content":"            return 0;"},{"lineNumber":90,"author":{"gitId":"luziyi9898"},"content":"        default:"},{"lineNumber":91,"author":{"gitId":"luziyi9898"},"content":"            return 0;"},{"lineNumber":92,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":94,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":96,"author":{"gitId":"luziyi9898"},"content":"}"}],"authorContributionMap":{"luziyi9898":84,"farice9":12}},{"path":"src/main/java/academic/GradeBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luziyi9898"},"content":"package academic;"},{"lineNumber":2,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":3,"author":{"gitId":"luziyi9898"},"content":"import exceptions.EmptyInputException;"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":"import exceptions.RepeatedGradeException;"},{"lineNumber":5,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":6,"author":{"gitId":"luziyi9898"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":8,"author":{"gitId":"luziyi9898"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"luziyi9898"},"content":" * Represents a grade book in study-it."},{"lineNumber":10,"author":{"gitId":"luziyi9898"},"content":" */"},{"lineNumber":11,"author":{"gitId":"luziyi9898"},"content":"public class GradeBook {"},{"lineNumber":12,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":13,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"luziyi9898"},"content":"     * Adds a grade to an array list of grades."},{"lineNumber":15,"author":{"gitId":"luziyi9898"},"content":"     * @param args parameters of the grade."},{"lineNumber":16,"author":{"gitId":"luziyi9898"},"content":"     * @param currentGrades array list of grade."},{"lineNumber":17,"author":{"gitId":"luziyi9898"},"content":"     * @throws RepeatedGradeException when grade added is already present in list of grade."},{"lineNumber":18,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"luziyi9898"},"content":"    public static void addGrade(String[] args, ArrayList\u003cGrade\u003e currentGrades)"},{"lineNumber":20,"author":{"gitId":"luziyi9898"},"content":"            throws RepeatedGradeException, EmptyInputException {"},{"lineNumber":21,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":22,"author":{"gitId":"luziyi9898"},"content":"        for (Grade grade : currentGrades) {"},{"lineNumber":23,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":24,"author":{"gitId":"luziyi9898"},"content":"            if (args[0].equals(\"\")) {"},{"lineNumber":25,"author":{"gitId":"luziyi9898"},"content":"                throw new EmptyInputException();"},{"lineNumber":26,"author":{"gitId":"luziyi9898"},"content":"            } else if (args[0].equals(grade.moduleName)) {"},{"lineNumber":27,"author":{"gitId":"luziyi9898"},"content":"                throw new RepeatedGradeException();"},{"lineNumber":28,"author":{"gitId":"luziyi9898"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"luziyi9898"},"content":"        currentGrades.add(new Grade(args[0], Integer.parseInt(args[1]), args[2].toUpperCase()));"},{"lineNumber":31,"author":{"gitId":"farice9"},"content":"        if (args.length \u003d\u003d 5) {"},{"lineNumber":32,"author":{"gitId":"luziyi9898"},"content":"            if (args[3].equals(\"true\")) {"},{"lineNumber":33,"author":{"gitId":"luziyi9898"},"content":"                Grade.suGrade(currentGrades.get(currentGrades.size() - 1));"},{"lineNumber":34,"author":{"gitId":"luziyi9898"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"farice9"},"content":"            if (args[4].equals(\"true\")) {"},{"lineNumber":36,"author":{"gitId":"farice9"},"content":"                Grade.changeStarGrade(currentGrades.get(currentGrades.size() - 1));"},{"lineNumber":37,"author":{"gitId":"farice9"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":41,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"luziyi9898"},"content":"     * Delete a grade from an array list of grades."},{"lineNumber":43,"author":{"gitId":"luziyi9898"},"content":"     * @param indexToBeDeleted index of the grade to be deleted."},{"lineNumber":44,"author":{"gitId":"luziyi9898"},"content":"     * @param currentGrades array list of grade."},{"lineNumber":45,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"luziyi9898"},"content":"    public static void deleteGrade(Integer indexToBeDeleted, ArrayList\u003cGrade\u003e currentGrades) {"},{"lineNumber":47,"author":{"gitId":"luziyi9898"},"content":"        currentGrades.remove(indexToBeDeleted - 1);"},{"lineNumber":48,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":50,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"luziyi9898"},"content":"     * Calculate current CAP and return it as a string."},{"lineNumber":52,"author":{"gitId":"luziyi9898"},"content":"     * @param currentGrades array list of grade."},{"lineNumber":53,"author":{"gitId":"luziyi9898"},"content":"     * @return string with current CAP."},{"lineNumber":54,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"farice9"},"content":"    public static String printCap(ArrayList\u003cGrade\u003e currentGrades) {"},{"lineNumber":56,"author":{"gitId":"luziyi9898"},"content":"        double totalGradeScore \u003d 0;"},{"lineNumber":57,"author":{"gitId":"luziyi9898"},"content":"        int totalCredits \u003d 0;"},{"lineNumber":58,"author":{"gitId":"luziyi9898"},"content":"        for (Grade grade : currentGrades) {"},{"lineNumber":59,"author":{"gitId":"luziyi9898"},"content":"            if (!Grade.isGradeSued(grade)) {"},{"lineNumber":60,"author":{"gitId":"luziyi9898"},"content":"                totalCredits +\u003d Grade.getModuleCredits(grade);"},{"lineNumber":61,"author":{"gitId":"luziyi9898"},"content":"                totalGradeScore +\u003d Grade.convertLetterToCredit(Grade.getModuleGrade(grade))"},{"lineNumber":62,"author":{"gitId":"luziyi9898"},"content":"                        * Grade.getModuleCredits(grade);"},{"lineNumber":63,"author":{"gitId":"luziyi9898"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"luziyi9898"},"content":"        if (totalCredits !\u003d 0) {"},{"lineNumber":66,"author":{"gitId":"luziyi9898"},"content":"            return \"Current CAP is \" + totalGradeScore / totalCredits + \".\";"},{"lineNumber":67,"author":{"gitId":"luziyi9898"},"content":"        } else {"},{"lineNumber":68,"author":{"gitId":"luziyi9898"},"content":"            return \"Current CAP is not available!\";"},{"lineNumber":69,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":72,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"luziyi9898"},"content":"     * SU a grade."},{"lineNumber":74,"author":{"gitId":"luziyi9898"},"content":"     * @param indexToBeSued index of the grade to be SUed."},{"lineNumber":75,"author":{"gitId":"luziyi9898"},"content":"     * @param currentGrades array list of grade."},{"lineNumber":76,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"luziyi9898"},"content":"    public static void suGradeInGradeBook(Integer indexToBeSued, ArrayList\u003cGrade\u003e currentGrades) {"},{"lineNumber":78,"author":{"gitId":"luziyi9898"},"content":"        Grade.suGrade(currentGrades.get(indexToBeSued - 1));"},{"lineNumber":79,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":81,"author":{"gitId":"farice9"},"content":"    public static void starGrade(Integer indexToBeStar, ArrayList\u003cGrade\u003e currentGrades) {"},{"lineNumber":82,"author":{"gitId":"farice9"},"content":"        if (indexToBeStar \u003e 0 \u0026\u0026 indexToBeStar \u003c\u003d currentGrades.size()) {"},{"lineNumber":83,"author":{"gitId":"farice9"},"content":"            Grade.changeStarGrade(currentGrades.get(indexToBeStar - 1));"},{"lineNumber":84,"author":{"gitId":"farice9"},"content":"        } else {"},{"lineNumber":85,"author":{"gitId":"luziyi9898"},"content":"            throw new NumberFormatException();"},{"lineNumber":86,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":89,"author":{"gitId":"farice9"},"content":"    public static String printListOfGrades(ArrayList\u003cGrade\u003e currentGrades) {"},{"lineNumber":90,"author":{"gitId":"luziyi9898"},"content":"        int listIndex \u003d 0;"},{"lineNumber":91,"author":{"gitId":"luziyi9898"},"content":"        StringBuilder listToPrint \u003d new StringBuilder();"},{"lineNumber":92,"author":{"gitId":"luziyi9898"},"content":"        if (currentGrades.size() \u003d\u003d 0) {"},{"lineNumber":93,"author":{"gitId":"luziyi9898"},"content":"            listToPrint.append(\"You have not added any grades!\");"},{"lineNumber":94,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"farice9"},"content":"        for (Grade grade : currentGrades) {"},{"lineNumber":96,"author":{"gitId":"luziyi9898"},"content":"            if (grade !\u003d null) {"},{"lineNumber":97,"author":{"gitId":"farice9"},"content":"                listToPrint.append(listIndex + 1 + \".\");"},{"lineNumber":98,"author":{"gitId":"farice9"},"content":"                listToPrint.append(combineGradeDetails(grade));"},{"lineNumber":99,"author":{"gitId":"luziyi9898"},"content":"                listIndex++;"},{"lineNumber":100,"author":{"gitId":"farice9"},"content":"                if (currentGrades.size() !\u003d listIndex) {"},{"lineNumber":101,"author":{"gitId":"luziyi9898"},"content":"                    listToPrint.append(\"\\n\");"},{"lineNumber":102,"author":{"gitId":"luziyi9898"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"luziyi9898"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"luziyi9898"},"content":"        return listToPrint.toString();"},{"lineNumber":106,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"farice9"},"content":""},{"lineNumber":108,"author":{"gitId":"farice9"},"content":"    public static String combineGradeDetails(Grade grade) {"},{"lineNumber":109,"author":{"gitId":"farice9"},"content":"        StringBuilder gradeDetail \u003d new StringBuilder();"},{"lineNumber":110,"author":{"gitId":"farice9"},"content":""},{"lineNumber":111,"author":{"gitId":"farice9"},"content":"        gradeDetail.append(\"[\" + grade.moduleName + \"]\");"},{"lineNumber":112,"author":{"gitId":"farice9"},"content":"        gradeDetail.append(\" [\" + grade.moduleCredits + \"MC]\");"},{"lineNumber":113,"author":{"gitId":"farice9"},"content":"        gradeDetail.append(\" [\" + grade.moduleGrade + \"]\");"},{"lineNumber":114,"author":{"gitId":"farice9"},"content":"        if (Grade.isGradeSued(grade)) {"},{"lineNumber":115,"author":{"gitId":"farice9"},"content":"            gradeDetail.append(\" (This mod is SU-ed)\");"},{"lineNumber":116,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"farice9"},"content":"        if (Grade.isGradeStar(grade)) {"},{"lineNumber":118,"author":{"gitId":"farice9"},"content":"            gradeDetail.append(\" (*)\");"},{"lineNumber":119,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"farice9"},"content":"        return gradeDetail.toString();"},{"lineNumber":121,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"luziyi9898"},"content":"}"}],"authorContributionMap":{"luziyi9898":91,"farice9":31}},{"path":"src/main/java/academic/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luziyi9898"},"content":"package academic;"},{"lineNumber":2,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":3,"author":{"gitId":"luziyi9898"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":" * Represents a person in study-it."},{"lineNumber":5,"author":{"gitId":"luziyi9898"},"content":" */"},{"lineNumber":6,"author":{"gitId":"luziyi9898"},"content":"public class Person {"},{"lineNumber":7,"author":{"gitId":"luziyi9898"},"content":"    protected String nameOfPerson;"},{"lineNumber":8,"author":{"gitId":"luziyi9898"},"content":"    protected String contactNumberOfPerson;"},{"lineNumber":9,"author":{"gitId":"luziyi9898"},"content":"    protected String emailOfPerson;"},{"lineNumber":10,"author":{"gitId":"farice9"},"content":"    protected Boolean isStar;"},{"lineNumber":11,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":12,"author":{"gitId":"luziyi9898"},"content":"    public Person(String name, String number, String email) {"},{"lineNumber":13,"author":{"gitId":"luziyi9898"},"content":"        this.nameOfPerson \u003d name;"},{"lineNumber":14,"author":{"gitId":"luziyi9898"},"content":"        this.contactNumberOfPerson \u003d number;"},{"lineNumber":15,"author":{"gitId":"luziyi9898"},"content":"        this.emailOfPerson \u003d email;"},{"lineNumber":16,"author":{"gitId":"farice9"},"content":"        this.isStar \u003d false;"},{"lineNumber":17,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":19,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"luziyi9898"},"content":"     * Receive a person and convert it into a string to be stored into local storage."},{"lineNumber":21,"author":{"gitId":"luziyi9898"},"content":"     * @param person person to be stored."},{"lineNumber":22,"author":{"gitId":"luziyi9898"},"content":"     * @return string to be added to local storage."},{"lineNumber":23,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"luziyi9898"},"content":"    public static String printIndividualPerson(Person person) {"},{"lineNumber":25,"author":{"gitId":"farice9"},"content":"        return \"[P] | \" + person.nameOfPerson + \" | \" + person.contactNumberOfPerson"},{"lineNumber":26,"author":{"gitId":"farice9"},"content":"                + \" | \" + person.emailOfPerson + \" | \" + person.isStar;"},{"lineNumber":27,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"farice9"},"content":""},{"lineNumber":29,"author":{"gitId":"farice9"},"content":"    public static void changePersonStar(Person person) {"},{"lineNumber":30,"author":{"gitId":"farice9"},"content":"        person.isStar \u003d true;"},{"lineNumber":31,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"farice9"},"content":""},{"lineNumber":33,"author":{"gitId":"farice9"},"content":"    public static Boolean isStar(Person person) {"},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"        return person.isStar;"},{"lineNumber":35,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"luziyi9898"},"content":"}"}],"authorContributionMap":{"luziyi9898":24,"farice9":12}},{"path":"src/main/java/academic/PersonBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luziyi9898"},"content":"package academic;"},{"lineNumber":2,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":3,"author":{"gitId":"luziyi9898"},"content":"import exceptions.EmptyInputException;"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":"import exceptions.InvalidEmailException;"},{"lineNumber":5,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":6,"author":{"gitId":"luziyi9898"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":8,"author":{"gitId":"luziyi9898"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"luziyi9898"},"content":" * Represents a grade book in study-it."},{"lineNumber":10,"author":{"gitId":"luziyi9898"},"content":" */"},{"lineNumber":11,"author":{"gitId":"luziyi9898"},"content":"public class PersonBook {"},{"lineNumber":12,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"luziyi9898"},"content":"     * Adds a person to an array list of person."},{"lineNumber":14,"author":{"gitId":"luziyi9898"},"content":"     * @param args parameters of the person."},{"lineNumber":15,"author":{"gitId":"luziyi9898"},"content":"     * @param listOfPerson array list of person."},{"lineNumber":16,"author":{"gitId":"luziyi9898"},"content":"     * @throws InvalidEmailException when email added does not have an @ in it."},{"lineNumber":17,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"luziyi9898"},"content":"    public static void addPerson(String[] args, ArrayList\u003cPerson\u003e listOfPerson)"},{"lineNumber":19,"author":{"gitId":"luziyi9898"},"content":"            throws InvalidEmailException, EmptyInputException {"},{"lineNumber":20,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":21,"author":{"gitId":"luziyi9898"},"content":"        if (args[0].equals(\"\")) {"},{"lineNumber":22,"author":{"gitId":"luziyi9898"},"content":"            throw new EmptyInputException();"},{"lineNumber":23,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":25,"author":{"gitId":"luziyi9898"},"content":"        if (args[2].contains(\"@\")) {"},{"lineNumber":26,"author":{"gitId":"farice9"},"content":"            listOfPerson.add(new Person(args[0], args[1], args[2]));"},{"lineNumber":27,"author":{"gitId":"farice9"},"content":"            if (args.length \u003d\u003d 4) {"},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"                if (args[3].equals(\"true\")) {"},{"lineNumber":29,"author":{"gitId":"farice9"},"content":"                    Person.changePersonStar(listOfPerson.get(listOfPerson.size() - 1));"},{"lineNumber":30,"author":{"gitId":"farice9"},"content":"                }"},{"lineNumber":31,"author":{"gitId":"farice9"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"luziyi9898"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"luziyi9898"},"content":"            throw new InvalidEmailException();"},{"lineNumber":34,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":37,"author":{"gitId":"luziyi9898"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"luziyi9898"},"content":"     * Delete a person from an array list of person."},{"lineNumber":39,"author":{"gitId":"luziyi9898"},"content":"     * @param indexToBeDeleted index of the person to be deleted."},{"lineNumber":40,"author":{"gitId":"luziyi9898"},"content":"     * @param listOfPerson array list of person."},{"lineNumber":41,"author":{"gitId":"luziyi9898"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"luziyi9898"},"content":"    public static void deletePerson(Integer indexToBeDeleted, ArrayList\u003cPerson\u003e listOfPerson) {"},{"lineNumber":43,"author":{"gitId":"luziyi9898"},"content":"        listOfPerson.remove(indexToBeDeleted - 1);"},{"lineNumber":44,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":46,"author":{"gitId":"farice9"},"content":"    public static void starContact(Integer indexToBeStar, ArrayList\u003cPerson\u003e listOfPerson) {"},{"lineNumber":47,"author":{"gitId":"farice9"},"content":"        if (indexToBeStar \u003e 0 \u0026\u0026 indexToBeStar \u003c\u003d listOfPerson.size()) {"},{"lineNumber":48,"author":{"gitId":"farice9"},"content":"            Person.changePersonStar(listOfPerson.get(indexToBeStar - 1));"},{"lineNumber":49,"author":{"gitId":"farice9"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"luziyi9898"},"content":"            throw new NumberFormatException();"},{"lineNumber":51,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"farice9"},"content":""},{"lineNumber":54,"author":{"gitId":"farice9"},"content":"    public static String printPersonBook(ArrayList\u003cPerson\u003e listOfPerson) {"},{"lineNumber":55,"author":{"gitId":"luziyi9898"},"content":"        int listIndex \u003d 0;"},{"lineNumber":56,"author":{"gitId":"luziyi9898"},"content":"        StringBuilder listToPrint \u003d new StringBuilder();"},{"lineNumber":57,"author":{"gitId":"luziyi9898"},"content":"        if (listOfPerson.size() \u003d\u003d 0) {"},{"lineNumber":58,"author":{"gitId":"luziyi9898"},"content":"            listToPrint.append(\"You have not added any contacts!\");"},{"lineNumber":59,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"farice9"},"content":"        for (Person person : listOfPerson) {"},{"lineNumber":61,"author":{"gitId":"luziyi9898"},"content":"            if (person !\u003d null) {"},{"lineNumber":62,"author":{"gitId":"farice9"},"content":"                listToPrint.append((listIndex + 1) + \".\");"},{"lineNumber":63,"author":{"gitId":"farice9"},"content":"                listToPrint.append(combinePersonDetails(person));"},{"lineNumber":64,"author":{"gitId":"luziyi9898"},"content":"                listIndex++;"},{"lineNumber":65,"author":{"gitId":"farice9"},"content":"                if (listOfPerson.size() !\u003d listIndex) {"},{"lineNumber":66,"author":{"gitId":"luziyi9898"},"content":"                    listToPrint.append(\"\\n\");"},{"lineNumber":67,"author":{"gitId":"luziyi9898"},"content":"                }"},{"lineNumber":68,"author":{"gitId":"luziyi9898"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"luziyi9898"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":71,"author":{"gitId":"luziyi9898"},"content":"        return listToPrint.toString();"},{"lineNumber":72,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"farice9"},"content":""},{"lineNumber":74,"author":{"gitId":"farice9"},"content":"    public static String combinePersonDetails(Person person) {"},{"lineNumber":75,"author":{"gitId":"farice9"},"content":"        StringBuilder personDetails \u003d new StringBuilder();"},{"lineNumber":76,"author":{"gitId":"farice9"},"content":""},{"lineNumber":77,"author":{"gitId":"farice9"},"content":"        personDetails.append(\"[\" + person.nameOfPerson + \"]\");"},{"lineNumber":78,"author":{"gitId":"farice9"},"content":"        personDetails.append(\" [\" + person.contactNumberOfPerson + \"]\");"},{"lineNumber":79,"author":{"gitId":"farice9"},"content":"        personDetails.append(\" [\" + person.emailOfPerson + \"]\");"},{"lineNumber":80,"author":{"gitId":"farice9"},"content":"        if (Person.isStar(person)) {"},{"lineNumber":81,"author":{"gitId":"farice9"},"content":"            personDetails.append(\" (*)\");"},{"lineNumber":82,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"farice9"},"content":"        return personDetails.toString();"},{"lineNumber":84,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"luziyi9898"},"content":"}"}],"authorContributionMap":{"luziyi9898":55,"farice9":30}},{"path":"src/main/java/bookmark/BookmarkCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"public class BookmarkCategory {"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"    private String name;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"    private ArrayList\u003cBookmarkList\u003e links \u003d new ArrayList\u003c\u003e();"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":"    public BookmarkCategory(String name) {"},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"        this.name \u003d name;"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"    public String getName() {"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"        return name;"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"    public ArrayList\u003cBookmarkList\u003e getLinks() {"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"        return links;"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"    public void addLink(String link, String title) {"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"        links.add(new BookmarkList(link, title));"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"    public void removeLink(int number) {"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"        links.remove(number - 1);"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"    public void markLinkAsStar(int number) {"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"        links.get(number).markLinkAsStar();"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":32}},{"path":"src/main/java/bookmark/BookmarkList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"public class BookmarkList {"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"    private String link;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"    private Boolean star;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"    private String title;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"    public BookmarkList(String link, String title) {"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":"        this.link \u003d link;"},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"        this.star \u003d false;"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":"        this.title \u003d title;"},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    public String getPrintLink() {"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"        String returnLink \u003d \"\";"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":"        if (star) {"},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"            returnLink +\u003d \"|STAR|\";"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"        if (title !\u003d null) {"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"            return returnLink + link + \" t-\u003e\" + title;"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"            return returnLink + link;"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"    public String getLink() {"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"        return link;"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"    public void markLinkAsStar() {"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"        if (!this.star) {"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"            this.star \u003d true;"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"            assert this.star : \"star is unmarked incorrectly\";"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"            this.star \u003d false;"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"    private String getStarIcon() {"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"        return (star ? \" (*)\" : \"\"); //return tick symbols"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"        if (title \u003d\u003d \"\" || title \u003d\u003d null) {"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"            return link + getStarIcon();"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"        return title + \": \" + link + getStarIcon();"},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"    public Boolean getStar() {"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"        return star;"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":53}},{"path":"src/main/java/bookmark/BookmarkParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.AddCategoryCommand;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.AddLinkCommand;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.BackCommand;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.ChangeModeCommand;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.BookmarkCommand;"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.ListCommand;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.RemoveCategoryCommand;"},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.RemoveLinkCommand;"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.StarCommand;"},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":13,"author":{"gitId":"farice9"},"content":"import studyit.CommandParser;"},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"import studyit.StudyItLog;"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":"public class BookmarkParser extends CommandParser {"},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"    public BookmarkParser() {"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"    public BookmarkCommand evaluateInput(String command, int chosenCategory) throws InvalidCommandException {"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"        if (command \u003d\u003d null) {"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"            StudyItLog.logger.finest(\"Empty command\");"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"            throw new InvalidCommandException();"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"        String commandModified \u003d command.trim().toLowerCase();"},{"lineNumber":26,"author":{"gitId":"farice9"},"content":"        if (commandModified.startsWith(\"bm\")) {"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"            return new ChangeModeCommand(command, chosenCategory);"},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"        } else if (commandModified.startsWith(\"add\")) {"},{"lineNumber":29,"author":{"gitId":"farice9"},"content":"            return new AddLinkCommand(command, chosenCategory);"},{"lineNumber":30,"author":{"gitId":"farice9"},"content":"        } else if (commandModified.startsWith(\"rm\")) {"},{"lineNumber":31,"author":{"gitId":"farice9"},"content":"            return new RemoveLinkCommand(command, chosenCategory);"},{"lineNumber":32,"author":{"gitId":"farice9"},"content":"        } else if (commandModified.startsWith(\"list\")) {"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"            return new ListCommand(command,chosenCategory);"},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"        } else if (commandModified.startsWith(\"back\")) {"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"            return new BackCommand(command,chosenCategory);"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"        } else if (commandModified.startsWith(\"cat\")) {"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"            return new AddCategoryCommand(command,chosenCategory);"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"        } else if (commandModified.startsWith(\"delete\")) {"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"            return new RemoveCategoryCommand(command,chosenCategory);"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"        } else if (commandModified.startsWith(\"star\")) {"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"            return new StarCommand(command,chosenCategory);"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"            StudyItLog.logger.info(\"Cannot understand bookmark command\");"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"            throw new InvalidCommandException();"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":38,"farice9":9}},{"path":"src/main/java/bookmark/BookmarkRun.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.BookmarkCommand;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import studyit.StudyItLog;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":8,"author":{"gitId":"farice9"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":"public class BookmarkRun {"},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"    private ArrayList\u003cBookmarkCategory\u003e bookmarkCategories;"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"    private BookmarkUi bookmarkUi;"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    private BookmarkParser bookmarkParser;"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    private BookmarkStorage bookmarkStorage;"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":"    private int mode \u003d 0;"},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"    public BookmarkRun() {"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"        bookmarkUi \u003d new BookmarkUi();"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"        bookmarkParser \u003d new BookmarkParser();"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"        bookmarkStorage \u003d new BookmarkStorage(\"data/bookmark.txt\");"},{"lineNumber":22,"author":{"gitId":"farice9"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"            bookmarkCategories \u003d bookmarkStorage.loadFile();"},{"lineNumber":24,"author":{"gitId":"farice9"},"content":"        } catch (IOException e) {"},{"lineNumber":25,"author":{"gitId":"farice9"},"content":"            System.out.println(\"An error occured: \" + e.getMessage());"},{"lineNumber":26,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"farice9"},"content":""},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"        StudyItLog.logger.info(\"Bookmark mode initialized\");"},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"    public void run(String command) {"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"            BookmarkCommand c \u003d bookmarkParser.evaluateInput(command,mode);"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"            c.executeCommand(bookmarkUi,bookmarkCategories,bookmarkStorage);"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"            mode \u003d c.getCategoryNumber();"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"        } catch (InvalidCommandException e) {"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"            bookmarkUi.showInvalidError(\"Bookmark Command\");"},{"lineNumber":38,"author":{"gitId":"farice9"},"content":"            StudyItLog.logger.warning(\"Invalid bookmark command: Command unidentifiable\");"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":33,"farice9":8}},{"path":"src/main/java/bookmark/BookmarkStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import studyit.StudyItLog;"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":""},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"public class BookmarkStorage {"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    private final File bookmarkFile;"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    private final String filePath;"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"    public BookmarkStorage(String filePath) {"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"        String dirPath \u003d \"data\";"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"        File fileDir \u003d new File(dirPath);"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"        if (!fileDir.exists()) {"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"            fileDir.mkdir();"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"        bookmarkFile \u003d new File(filePath);"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":29,"author":{"gitId":"farice9"},"content":"    public ArrayList\u003cBookmarkCategory\u003e loadFile() throws IOException {"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"            Scanner s \u003d new Scanner(bookmarkFile);"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"            ArrayList\u003cBookmarkCategory\u003e bookmarkCategories \u003d new ArrayList\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"            int i \u003d 0;"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"            while (s.hasNext()) {"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"                String[] parseCategory \u003d s.nextLine().split(\" \u003d \");"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"                String categoryName \u003d parseCategory[0];"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"                bookmarkCategories.add(new BookmarkCategory(categoryName));"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"                if (parseCategory.length \u003c 2) {"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"                    i++;"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"                    continue;"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"                }"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"                String[] links \u003d parseCategory[1].split(\" \\\\| \");"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"                String title;"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"                int x \u003d 0;"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"                for (String link : links) {"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"                    link \u003d link.trim();"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"                    if (link.contains(\" t-\u003e\")) {"},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"                        String[] array \u003d link.split(\" t-\u003e\");"},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":"                        link \u003d array[0].trim();"},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"                        title \u003d array[1].trim();"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"                    } else {"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":"                        title \u003d null;"},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"                    }"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"                    assert i \u003e\u003d 0 : \"Problem reading file\";"},{"lineNumber":55,"author":{"gitId":"lingsihui"},"content":"                    if (link.contains(\"|STAR|\")) {"},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":"                        bookmarkCategories.get(i).addLink(link.substring(6),title);"},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":"                        bookmarkCategories.get(i).markLinkAsStar(x);"},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":"                    } else {"},{"lineNumber":59,"author":{"gitId":"lingsihui"},"content":"                        bookmarkCategories.get(i).addLink(link,title);"},{"lineNumber":60,"author":{"gitId":"lingsihui"},"content":"                    }"},{"lineNumber":61,"author":{"gitId":"lingsihui"},"content":"                    x++;"},{"lineNumber":62,"author":{"gitId":"lingsihui"},"content":"                }"},{"lineNumber":63,"author":{"gitId":"lingsihui"},"content":"                i++;"},{"lineNumber":64,"author":{"gitId":"lingsihui"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"            return bookmarkCategories;"},{"lineNumber":66,"author":{"gitId":"lingsihui"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":67,"author":{"gitId":"farice9"},"content":"            System.out.println(\"data/bookmark.txt is not found, creating a new file now!\");"},{"lineNumber":68,"author":{"gitId":"farice9"},"content":"            bookmarkFile.createNewFile();"},{"lineNumber":69,"author":{"gitId":"lingsihui"},"content":"            ArrayList\u003cBookmarkCategory\u003e newBookmarkCategories \u003d new ArrayList\u003c\u003e();"},{"lineNumber":70,"author":{"gitId":"lingsihui"},"content":"            newBookmarkCategories.add(new BookmarkCategory(\"NUS\"));"},{"lineNumber":71,"author":{"gitId":"lingsihui"},"content":"            newBookmarkCategories.add(new BookmarkCategory(\"Zoom\"));"},{"lineNumber":72,"author":{"gitId":"lingsihui"},"content":"            newBookmarkCategories.add(new BookmarkCategory(\"Internship\"));"},{"lineNumber":73,"author":{"gitId":"lingsihui"},"content":"            newBookmarkCategories.add(new BookmarkCategory(\"Hackathon\"));"},{"lineNumber":74,"author":{"gitId":"lingsihui"},"content":"            newBookmarkCategories.add(new BookmarkCategory(\"Career Talk\"));"},{"lineNumber":75,"author":{"gitId":"farice9"},"content":"            saveLinksToFile(newBookmarkCategories);"},{"lineNumber":76,"author":{"gitId":"farice9"},"content":"            StudyItLog.logger.info(e + \"\\nflashcard storage file created\");"},{"lineNumber":77,"author":{"gitId":"lingsihui"},"content":"            return newBookmarkCategories;"},{"lineNumber":78,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":81,"author":{"gitId":"lingsihui"},"content":"    public void saveLinksToFile(ArrayList\u003cBookmarkCategory\u003e categories) {"},{"lineNumber":82,"author":{"gitId":"lingsihui"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"lingsihui"},"content":"            FileWriter fw \u003d new FileWriter(filePath, false); //true append, false overwrite"},{"lineNumber":84,"author":{"gitId":"lingsihui"},"content":"            for (BookmarkCategory category : categories) {"},{"lineNumber":85,"author":{"gitId":"lingsihui"},"content":"                fw.write(category.getName() + \" \u003d \" + getCategoryLinks(category) + System.lineSeparator());"},{"lineNumber":86,"author":{"gitId":"lingsihui"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"lingsihui"},"content":"            fw.close();"},{"lineNumber":88,"author":{"gitId":"lingsihui"},"content":"        } catch (IOException e) {"},{"lineNumber":89,"author":{"gitId":"lingsihui"},"content":"            System.out.println(\"Something went wrong\" + e.getMessage());"},{"lineNumber":90,"author":{"gitId":"farice9"},"content":"            StudyItLog.logger.warning(\"Problem writing to bookmark storage file\\n\" + e);"},{"lineNumber":91,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":94,"author":{"gitId":"lingsihui"},"content":"    private String getCategoryLinks(BookmarkCategory category) {"},{"lineNumber":95,"author":{"gitId":"lingsihui"},"content":"        String listOfLinks \u003d \"\";"},{"lineNumber":96,"author":{"gitId":"lingsihui"},"content":"        for (BookmarkList link : category.getLinks()) {"},{"lineNumber":97,"author":{"gitId":"lingsihui"},"content":"            listOfLinks +\u003d link.getPrintLink() + \" | \";"},{"lineNumber":98,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"lingsihui"},"content":"        return listOfLinks;"},{"lineNumber":100,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":93,"farice9":8}},{"path":"src/main/java/bookmark/BookmarkUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"public class BookmarkUi {"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"    public BookmarkUi() {"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":11,"author":{"gitId":"farice9"},"content":"    public static void printWelcomeBookmarkMessage() {"},{"lineNumber":12,"author":{"gitId":"farice9"},"content":"        System.out.println(\"Welcome to bookmark mode!\");"},{"lineNumber":13,"author":{"gitId":"farice9"},"content":"        System.out.println(\"You can use this mode to bookmark your links for easier access!\");"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"View your list of links by typing \\\"list\\\"\");"},{"lineNumber":15,"author":{"gitId":"farice9"},"content":"        System.out.println(\"\\nChoose your category by typing \\\"bm \u003ccategory index\u003e!\\\"\");"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"\\nView your category available by typing \\\"list -c\\\"\");"},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"Otherwise, insert \\\"help\\\" to find the list of commands available.\");"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"    public void showBookmarkCategoryList(ArrayList\u003cBookmarkCategory\u003e bookmarkCategories) {"},{"lineNumber":21,"author":{"gitId":"farice9"},"content":"        System.out.println(\"Here are the categories available:\");"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"        int i \u003d 1;"},{"lineNumber":23,"author":{"gitId":"farice9"},"content":"        for (BookmarkCategory category: bookmarkCategories) {"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"            System.out.println(i + \".\" + category.getName());"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"            i++;"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"    public void showBookmarkLinkList(BookmarkCategory category) {"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"Bookmarks in \" + category.getName() + \": \");"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"        if (category.getLinks().size() \u003d\u003d 0) {"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"            System.out.println(\"\\t\u003cempty\u003e\");"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"            int i \u003d 1;"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"            for (BookmarkList link: category.getLinks()) {"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"                System.out.println(\"\\t\" + i + \".\" + link);"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"                i++;"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"    public void printGoodbyeMessage() {"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"        showCurrentMode(\"Bookmark Main\");"},{"lineNumber":44,"author":{"gitId":"farice9"},"content":"        System.out.println(\"Use \\\"exit\\\" to exit the mode or enter another category\\n\""},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"                + \"using \\\"bm \u003ccategory index\u003e\\\".\");"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"    public void showBookmarkList(ArrayList\u003cBookmarkCategory\u003e categories) {"},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"Here is the entire list\");"},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"        for (int i \u003d 0; i \u003c categories.size(); i++) {"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"            System.out.println((i + 1) + \". Category: \" + categories.get(i).getName());"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":"            showBookmarkLinkList(categories.get(i));"},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"        if (categories.size() \u003d\u003d 0) {"},{"lineNumber":55,"author":{"gitId":"lingsihui"},"content":"            System.out.println(\"\\t\u003cempty\u003e\");"},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":59,"author":{"gitId":"lingsihui"},"content":"    public void printChooseCategoryMessage() {"},{"lineNumber":60,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"You have not chosen a category.\");"},{"lineNumber":61,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"Change category by using \\\"bm \u003cCategoryNumber\u003e\\\". \");"},{"lineNumber":62,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"View the categories available by using \\\"list -c\\\". \");"},{"lineNumber":63,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"    public void showEmptyError(String item) {"},{"lineNumber":66,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"Empty \" + item + \" :(\");"},{"lineNumber":67,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"Please input a \" + item);"},{"lineNumber":68,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"You can input \\\"help\\\" to view the input format.\");"},{"lineNumber":69,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":71,"author":{"gitId":"lingsihui"},"content":"    public void showInvalidError(String item) {"},{"lineNumber":72,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"Sorry you have entered an invalid \" + item"},{"lineNumber":73,"author":{"gitId":"lingsihui"},"content":"                + \" or your input is in the wrong format!\");"},{"lineNumber":74,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"Please enter a valid \" + item + \" or input \\\"help\\\" to find out the correct format!\");"},{"lineNumber":75,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":77,"author":{"gitId":"lingsihui"},"content":"    public void showInvalidNumberError() {"},{"lineNumber":78,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"Sorry, the format requires a valid number.\");"},{"lineNumber":79,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"Please enter a valid number!\");"},{"lineNumber":80,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"You can input \\\"help\\\" to view the input format.\");"},{"lineNumber":81,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":83,"author":{"gitId":"lingsihui"},"content":"    public void showModeChangeMessage(ArrayList\u003cBookmarkCategory\u003e categories, int categoryNumberInList) {"},{"lineNumber":84,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"You are now in \" + categories.get(categoryNumberInList).getName() + \" category\");"},{"lineNumber":85,"author":{"gitId":"lingsihui"},"content":"        showBookmarkLinkList(categories.get(categoryNumberInList));"},{"lineNumber":86,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"Add new bookmarks by using \\\"add \u003clink\u003e\\\"\");"},{"lineNumber":87,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":89,"author":{"gitId":"lingsihui"},"content":"    public void showAlreadyInModeMessage(ArrayList\u003cBookmarkCategory\u003e categories, int categoryName) {"},{"lineNumber":90,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"You are already in chosen Category: \" + categories.get(categoryName - 1).getName());"},{"lineNumber":91,"author":{"gitId":"lingsihui"},"content":"        showBookmarkLinkList(categories.get(categoryName - 1));"},{"lineNumber":92,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":94,"author":{"gitId":"lingsihui"},"content":"    public void showStarBookmarks(ArrayList\u003cBookmarkCategory\u003e categories) {"},{"lineNumber":95,"author":{"gitId":"lingsihui"},"content":"        int i \u003d 0;"},{"lineNumber":96,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"Starred bookmarks: \");"},{"lineNumber":97,"author":{"gitId":"lingsihui"},"content":"        for (BookmarkCategory category : categories) {"},{"lineNumber":98,"author":{"gitId":"lingsihui"},"content":"            for (BookmarkList link : category.getLinks()) {"},{"lineNumber":99,"author":{"gitId":"lingsihui"},"content":"                if (link.getStar()) {"},{"lineNumber":100,"author":{"gitId":"lingsihui"},"content":"                    i++;"},{"lineNumber":101,"author":{"gitId":"lingsihui"},"content":"                    System.out.println(i + \".\" + link);"},{"lineNumber":102,"author":{"gitId":"lingsihui"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"lingsihui"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"lingsihui"},"content":"        if (i \u003d\u003d 0) {"},{"lineNumber":106,"author":{"gitId":"farice9"},"content":"            System.out.println(\"\u003cempty\u003e\");"},{"lineNumber":107,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":109,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":111,"author":{"gitId":"lingsihui"},"content":"    public void showExistingBookmarkError(String item) {"},{"lineNumber":112,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"You have the exact same bookmark \" + item + \" in your list!\");"},{"lineNumber":113,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"Add a new unique bookmark \" + item + \"!\");"},{"lineNumber":114,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":116,"author":{"gitId":"lingsihui"},"content":"    public void showCorrectCommand(String item) {"},{"lineNumber":117,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"Did you mean \\\"\" + item + \"\\\"?\");"},{"lineNumber":118,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"If you did please input \\\"\" + item + \"\\\"\");"},{"lineNumber":119,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"If not input \\\"help\\\" to view the correct command format.\");"},{"lineNumber":120,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":122,"author":{"gitId":"lingsihui"},"content":"    public void showCurrentMode(String name) {"},{"lineNumber":123,"author":{"gitId":"lingsihui"},"content":"        System.out.println(\"You are currently in : \" + name);"},{"lineNumber":124,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":117,"farice9":8}},{"path":"src/main/java/bookmark/commands/AddCategoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import exceptions.EmptyBookmarkException;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"import exceptions.ExistingBookmarkException;"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":"public class AddCategoryCommand extends BookmarkCommand {"},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"    public static final int CAT_LENGTH \u003d 3;"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"    private int categoryNumber;"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    private String  categoryToAdd;"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    private String categoryName;"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"    public AddCategoryCommand(String command,int categoryNumber) {"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"        this.categoryNumber \u003d categoryNumber;"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"        this.categoryToAdd \u003d command.trim();"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"        assert command.toLowerCase().startsWith(\"cat\") : \"Add category command is \""},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"                + \"called when line does not start with cat\";"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"        assert categoryNumber \u003e\u003d 0 : \"Missing category number\";"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"     * Adds new BookmarkCategory to ArrayList after evaluating category name."},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"     * @param ui prints output message"},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"     * @param categories add category to array list"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"     * @param storage store new category to file"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"     * @throws EmptyBookmarkException if category name is empty"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"     * @throws ExistingBookmarkException if bookmark category already exist"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories, BookmarkStorage storage) {"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"            evaluateCategory();"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"            checkCategory(categories);"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"            categories.add(new BookmarkCategory(categoryName));"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"            System.out.println(\"Adding \" + categoryName + \" to bookmark category...\");"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"            ui.showBookmarkCategoryList(categories);"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"            storage.saveLinksToFile(categories);"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"        } catch (EmptyBookmarkException e) {"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"            ui.showEmptyError(\"Category\");"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"        } catch (ExistingBookmarkException e) {"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"            ui.showExistingBookmarkError(\"category\");"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":"    private void evaluateCategory() throws EmptyBookmarkException {"},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"        if (categoryToAdd.length() \u003c\u003d CAT_LENGTH) {"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"            throw new EmptyBookmarkException();"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"        assert categoryToAdd.length() \u003e 0 : \"Link should not be empty\";"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"        categoryName \u003d categoryToAdd.substring(CAT_LENGTH).trim();"},{"lineNumber":55,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":"    private void checkCategory(ArrayList\u003cBookmarkCategory\u003e categories) throws ExistingBookmarkException {"},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":"        for (BookmarkCategory existingCategory : categories) {"},{"lineNumber":59,"author":{"gitId":"lingsihui"},"content":"            if (categoryName.toLowerCase().equals(existingCategory.getName().toLowerCase())) {"},{"lineNumber":60,"author":{"gitId":"lingsihui"},"content":"                throw new ExistingBookmarkException();"},{"lineNumber":61,"author":{"gitId":"lingsihui"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"    public int getCategoryNumber() {"},{"lineNumber":66,"author":{"gitId":"lingsihui"},"content":"        return categoryNumber;"},{"lineNumber":67,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":68}},{"path":"src/main/java/bookmark/commands/AddLinkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkList;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"import exceptions.ExistingBookmarkException;"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import exceptions.InvalidBookmarkException;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":"import exceptions.EmptyBookmarkException;"},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"public class AddLinkCommand extends BookmarkCommand {"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    public static final int ADD_LENGTH \u003d 3;"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    private String line;"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":"    private int categoryNumber;"},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"    private String link;"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"    private String title;"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"    public AddLinkCommand(String line, int categoryNumber) {"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"        this.categoryNumber \u003d categoryNumber;"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"        this.line \u003d line.trim();"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"        assert line.toLowerCase().startsWith(\"add\") : \"Add link command is called when line does not start with add\";"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"        assert categoryNumber \u003e\u003d 0 : \"Missing category number\";"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"     * Adds new BookmarkLink to ArrayList after evaluating category link."},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"     * @param ui prints output message"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"     * @param categories add link to array list"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"     * @param storage store new link to file"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"     * @throws EmptyBookmarkException if category name is empty"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"     * @throws ExistingBookmarkException if bookmark category already exist"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"     * @throws InvalidBookmarkException if bookmark link is invalid."},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories, BookmarkStorage storage) {"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"            if (categoryNumber \u003d\u003d 0) {"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"                ui.printChooseCategoryMessage();"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"            } else {"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"                assert categoryNumber \u003e 0 : \"Category number is not chosen\";"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"                evaluateLink();"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"                checkLink(categories);"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"                categories.get(categoryNumber - 1).addLink(link,title);"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"                ui.showBookmarkLinkList(categories.get(categoryNumber - 1));"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"                storage.saveLinksToFile(categories);"},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":"        } catch (EmptyBookmarkException e) {"},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"            ui.showEmptyError(\"Link / title\");"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"        } catch (InvalidBookmarkException e) {"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":"            ui.showInvalidError(\"Link\");"},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"        } catch (ExistingBookmarkException e) {"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"            ui.showExistingBookmarkError(\"link\");"},{"lineNumber":55,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":"    private void evaluateLink() throws EmptyBookmarkException, InvalidBookmarkException {"},{"lineNumber":59,"author":{"gitId":"lingsihui"},"content":"        if (line.length() \u003c\u003d ADD_LENGTH) {"},{"lineNumber":60,"author":{"gitId":"lingsihui"},"content":"            throw new EmptyBookmarkException();"},{"lineNumber":61,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"lingsihui"},"content":"        assert line.length() \u003e 0 : \"Link should not be empty\";"},{"lineNumber":63,"author":{"gitId":"lingsihui"},"content":"        link \u003d line.substring(ADD_LENGTH).trim();"},{"lineNumber":64,"author":{"gitId":"lingsihui"},"content":"        if (link.contains(\" t-\u003e\")) {"},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"            String[] array \u003d link.split(\" t-\u003e\");"},{"lineNumber":66,"author":{"gitId":"lingsihui"},"content":"            if (array.length \u003c 2) {"},{"lineNumber":67,"author":{"gitId":"lingsihui"},"content":"                throw new EmptyBookmarkException();"},{"lineNumber":68,"author":{"gitId":"lingsihui"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"lingsihui"},"content":"            link \u003d array[0].trim();"},{"lineNumber":70,"author":{"gitId":"lingsihui"},"content":"            title \u003d array[1].trim();"},{"lineNumber":71,"author":{"gitId":"lingsihui"},"content":"        } else {"},{"lineNumber":72,"author":{"gitId":"lingsihui"},"content":"            title \u003d null;"},{"lineNumber":73,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"lingsihui"},"content":"        if (!link.contains(\".\") || link.contains(\" \") || link.contains(\"|\")) {"},{"lineNumber":75,"author":{"gitId":"lingsihui"},"content":"            throw new InvalidBookmarkException();"},{"lineNumber":76,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"lingsihui"},"content":"        assert link.contains(\".\") \u0026\u0026 !link.contains(\" \") : \"Invalid link\";"},{"lineNumber":78,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":80,"author":{"gitId":"lingsihui"},"content":"    private void checkLink(ArrayList\u003cBookmarkCategory\u003e categories) throws ExistingBookmarkException {"},{"lineNumber":81,"author":{"gitId":"lingsihui"},"content":"        for (BookmarkList existingLink : categories.get(categoryNumber - 1).getLinks()) {"},{"lineNumber":82,"author":{"gitId":"lingsihui"},"content":"            if (link.equals(existingLink.getLink())) {"},{"lineNumber":83,"author":{"gitId":"lingsihui"},"content":"                throw new ExistingBookmarkException();"},{"lineNumber":84,"author":{"gitId":"lingsihui"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":88,"author":{"gitId":"lingsihui"},"content":"    public int getCategoryNumber() {"},{"lineNumber":89,"author":{"gitId":"lingsihui"},"content":"        return categoryNumber;"},{"lineNumber":90,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":91}},{"path":"src/main/java/bookmark/commands/BackCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import exceptions.EmptyBookmarkException;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"import exceptions.ExistingBookmarkException;"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import exceptions.InvalidBookmarkException;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"public class BackCommand extends BookmarkCommand {"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"    public static final int BACK_LENGTH \u003d 4;"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    private int categoryNumber;"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    private String input;"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"    public BackCommand(String command, int chosenCategory) {"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"        this.input \u003d command.trim();"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"        this.categoryNumber \u003d chosenCategory;"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"        assert categoryNumber \u003e\u003d 0 : \"Missing category number\";"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"     * Goes back to the previous mode vy changing category number."},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"     * @param ui prints output message"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"     * @param categories prints category list"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories, BookmarkStorage bookmarkStorage) {"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"        if (input.substring(BACK_LENGTH).length() \u003e 0) {"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"            ui.showCorrectCommand(\"back\");"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"            if (categoryNumber \u003d\u003d 0) {"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"                ui.printGoodbyeMessage();"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"            } else {"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"                ui.showCurrentMode(\"Bookmark Main\");"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"                ui.showBookmarkCategoryList(categories);"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"                assert categoryNumber \u003e 0 : \"Category number more than 0\";"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"                categoryNumber \u003d 0;"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"    public int getCategoryNumber() {"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"        return categoryNumber;"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":48}},{"path":"src/main/java/bookmark/commands/BookmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"public abstract class BookmarkCommand {"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":"    public abstract void executeCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories,"},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"                                        BookmarkStorage bookmarkStorage);"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    public abstract int getCategoryNumber();"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":15}},{"path":"src/main/java/bookmark/commands/ChangeModeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import exceptions.ExistingBookmarkException;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"import exceptions.InvalidBookmarkException;"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import exceptions.EmptyBookmarkException;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"public class ChangeModeCommand extends BookmarkCommand {"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"    private String line;"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    public static final int RM_LENGTH \u003d 2;"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    private int categoryNumber;"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"    public ChangeModeCommand(String line, int categoryNumber) {"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"        this.line \u003d line.trim();"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"        this.categoryNumber \u003d categoryNumber;"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"        assert line.startsWith(\"bm\") : \"change mode command is called when line does not start with cd\";"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"        assert categoryNumber \u003e\u003d 0 : \"Missing category number\";"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"     * Change mode from bookmark main to each bookmark category."},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"     * @param ui prints output message."},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"     * @param categories prints list of links in category chosen."},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories, BookmarkStorage bookmarkStorage) {"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"            int category \u003d getChosenCategory(categories);"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"            if (category \u003d\u003d categoryNumber) {"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"                ui.showAlreadyInModeMessage(categories,categoryNumber);"},{"lineNumber":35,"author":{"gitId":"farice9"},"content":"                assert category \u003d\u003d categoryNumber : \"studyit.Mode does not change when it is already in the mode\";"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"            } else {"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"                categoryNumber \u003d category;"},{"lineNumber":38,"author":{"gitId":"farice9"},"content":"                int categoryNumberInList \u003d categoryNumber - 1;"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"                ui.showModeChangeMessage(categories, categoryNumberInList);"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"                assert category \u003e 0 : \"Category number incorrect\";"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"        } catch (EmptyBookmarkException e) {"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"            ui.showEmptyError(\"Category Number\");"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"            ui.showInvalidNumberError();"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"        } catch (InvalidBookmarkException e) {"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"            ui.showInvalidError(\"Category Number\");"},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"    private int getChosenCategory(ArrayList\u003cBookmarkCategory\u003e categories)"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":"            throws InvalidBookmarkException, EmptyBookmarkException, NumberFormatException {"},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"        if (line.length() \u003c\u003d RM_LENGTH) {"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"            throw new EmptyBookmarkException();"},{"lineNumber":55,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":"        int category \u003d Integer.parseInt(line.substring(RM_LENGTH).trim());"},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":"        if (category \u003d\u003d 0 || category \u003e categories.size()) {"},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":"            throw new InvalidBookmarkException();"},{"lineNumber":59,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"lingsihui"},"content":"        return category;"},{"lineNumber":61,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":62,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":64,"author":{"gitId":"lingsihui"},"content":"    public int getCategoryNumber() {"},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"        return categoryNumber;"},{"lineNumber":66,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":68,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":66,"farice9":2}},{"path":"src/main/java/bookmark/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":"public class ListCommand extends BookmarkCommand {"},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"    public static final int LIST_LENGTH \u003d 4;"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":"    public static final int STAR_LENGTH \u003d 4;"},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"    public static final int CAT_LENGTH \u003d 3;"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"    private int categoryNumber;"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    private String input;"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":"    public ListCommand(String command, int categoryNumber) {"},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"        this.input \u003d command.trim();"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"        this.categoryNumber \u003d categoryNumber;"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"        assert categoryNumber \u003e\u003d 0 : \"Missing category number\";"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"     * Shows user the list of bookmarks according to the variations of list command."},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"     * list -a : shows all the bookmark links in every category."},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"     * list: shows the bookmark links in the category the user is in."},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"     * list -s : shows all the starred bookmark links"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"     * list -c : shows the list of categories available"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"     * @param ui prints output message"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"     * @param categories prints category list"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories, BookmarkStorage bookmarkStorage) {"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"        String line \u003d input.substring(LIST_LENGTH).toLowerCase().trim();"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"        if (line.contains(\"-\")) {"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"            if (line.contains(\"-s\")) {"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"                executeListStarCommand(ui, categories, line);"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"            } else if (line.contains(\"-c\")) {"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"                executeListCatCommand(ui, categories, line);"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"            } else if (line.contains(\"-a\")) {"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"                executeListAllCommand(ui, categories, line);"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"            } else {"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"                ui.showCorrectCommand(\"list\");"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"        } else {"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"            if (line.length() \u003e 0) {"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"                ui.showCorrectCommand(\"list\");"},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"            } else {"},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":"                if (categoryNumber \u003d\u003d 0) {"},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"                    ui.showBookmarkList(categories);"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"                } else {"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":"                    assert categoryNumber \u003e 0 : \"Category number cannot be accessed\";"},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"                    ui.showBookmarkLinkList(categories.get(categoryNumber - 1));"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"lingsihui"},"content":"                printCurrentMode(ui, categories);"},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":60,"author":{"gitId":"lingsihui"},"content":"    private void printCurrentMode(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories) {"},{"lineNumber":61,"author":{"gitId":"lingsihui"},"content":"        if (categoryNumber \u003d\u003d 0) {"},{"lineNumber":62,"author":{"gitId":"lingsihui"},"content":"            ui.showCurrentMode(\"Bookmark Main\");"},{"lineNumber":63,"author":{"gitId":"lingsihui"},"content":"        } else {"},{"lineNumber":64,"author":{"gitId":"lingsihui"},"content":"            ui.showCurrentMode(categories.get(categoryNumber - 1).getName() + \" category\");"},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"            assert categoryNumber \u003e 0 : \"Cannot print category name when it is not available\";"},{"lineNumber":66,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":69,"author":{"gitId":"lingsihui"},"content":"    private void executeListCatCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories, String line) {"},{"lineNumber":70,"author":{"gitId":"lingsihui"},"content":"        if (line.substring(2).length() \u003e 0) {"},{"lineNumber":71,"author":{"gitId":"lingsihui"},"content":"            ui.showCorrectCommand(\"list -c\");"},{"lineNumber":72,"author":{"gitId":"lingsihui"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"lingsihui"},"content":"            ui.showBookmarkCategoryList(categories);"},{"lineNumber":74,"author":{"gitId":"lingsihui"},"content":"            printCurrentMode(ui, categories);"},{"lineNumber":75,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":78,"author":{"gitId":"lingsihui"},"content":"    private void executeListStarCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories, String line) {"},{"lineNumber":79,"author":{"gitId":"lingsihui"},"content":"        if (line.substring(2).length() \u003e 0) {"},{"lineNumber":80,"author":{"gitId":"lingsihui"},"content":"            ui.showCorrectCommand(\"list -s\");"},{"lineNumber":81,"author":{"gitId":"lingsihui"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"lingsihui"},"content":"            ui.showStarBookmarks(categories);"},{"lineNumber":83,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":86,"author":{"gitId":"lingsihui"},"content":"    private void executeListAllCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories, String line) {"},{"lineNumber":87,"author":{"gitId":"lingsihui"},"content":"        if (line.substring(2).length() \u003e 0) {"},{"lineNumber":88,"author":{"gitId":"lingsihui"},"content":"            ui.showCorrectCommand(\"list -a\");"},{"lineNumber":89,"author":{"gitId":"lingsihui"},"content":"        } else {"},{"lineNumber":90,"author":{"gitId":"lingsihui"},"content":"            ui.showBookmarkList(categories);"},{"lineNumber":91,"author":{"gitId":"lingsihui"},"content":"            printCurrentMode(ui, categories);"},{"lineNumber":92,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":95,"author":{"gitId":"lingsihui"},"content":"    public int getCategoryNumber() {"},{"lineNumber":96,"author":{"gitId":"lingsihui"},"content":"        return categoryNumber;"},{"lineNumber":97,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":99,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":99}},{"path":"src/main/java/bookmark/commands/RemoveCategoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import exceptions.EmptyBookmarkException;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"import exceptions.ExistingBookmarkException;"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import exceptions.InvalidBookmarkException;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"public class RemoveCategoryCommand extends BookmarkCommand {"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"    public static final int DELETE_LENGTH \u003d 6;"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    private int catNumber;"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    private int categoryNumber;"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":"    private String line;"},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"    public RemoveCategoryCommand(String line, int categoryNumber) {"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"        this.categoryNumber \u003d categoryNumber;"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"        this.line \u003d line.trim();"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"        assert line.toLowerCase().startsWith(\"delete\") : \"Delete category command is called wrongly\";"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"        assert categoryNumber \u003e\u003d 0 : \"Missing category number\";"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"     * Remove existing BookmarkLink from ArrayList after evaluating bookmark link number."},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"     * @param ui prints output message"},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"     * @param categories remove link to array list"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"     * @param storage remove link from file"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"     * @throws EmptyBookmarkException if link number is empty"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"     * @throws NumberFormatException if number is not the input"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"     * @throws IndexOutOfBoundsException if number exceed large number"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"     * @throws InvalidBookmarkException if bookmark link number is invalid."},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories, BookmarkStorage storage) {"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"            if (categoryNumber !\u003d 0) {"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"                System.out.println(\"Please go back to main bookmark menu to delete a category\");"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"                assert categoryNumber \u003e 0 : \"Choose Category message is called when category number is chosen\";"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"            } else if (line.length() \u003c\u003d DELETE_LENGTH) {"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"                throw new EmptyBookmarkException();"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"            } else {"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"                line \u003d line.substring(DELETE_LENGTH);"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"                assert line.length() \u003e 0 : \"Link should not be empty\";"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"                catNumber \u003d evaluateLinkNumber(categories);"},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"                System.out.println(\"Deleting Category: \" + categories.get(catNumber - 1).getName());"},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":"                categories.remove(catNumber - 1);"},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"                ui.showBookmarkCategoryList(categories);"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"                storage.saveLinksToFile(categories);"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"        } catch (EmptyBookmarkException e) {"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"            ui.showEmptyError(\"Category Number\");"},{"lineNumber":55,"author":{"gitId":"lingsihui"},"content":"        } catch (InvalidBookmarkException e) {"},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":"            ui.showInvalidError(\"Category Number\");"},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":"            ui.showInvalidNumberError();"},{"lineNumber":59,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":62,"author":{"gitId":"lingsihui"},"content":"    private int evaluateLinkNumber(ArrayList\u003cBookmarkCategory\u003e categories)"},{"lineNumber":63,"author":{"gitId":"lingsihui"},"content":"            throws NumberFormatException, InvalidBookmarkException {"},{"lineNumber":64,"author":{"gitId":"lingsihui"},"content":"        line \u003d line.trim();"},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"        int catNum \u003d Integer.parseInt(line);"},{"lineNumber":66,"author":{"gitId":"lingsihui"},"content":"        if (catNum \u003d\u003d 0 || catNum \u003e categories.size()) {"},{"lineNumber":67,"author":{"gitId":"lingsihui"},"content":"            throw new InvalidBookmarkException();"},{"lineNumber":68,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"lingsihui"},"content":"        return catNum;"},{"lineNumber":70,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":72,"author":{"gitId":"lingsihui"},"content":"    public int getCategoryNumber() {"},{"lineNumber":73,"author":{"gitId":"lingsihui"},"content":"        return categoryNumber;"},{"lineNumber":74,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"lingsihui"},"content":"}"},{"lineNumber":76,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":77,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":78,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":79,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":80,"author":{"gitId":"lingsihui"},"content":""}],"authorContributionMap":{"lingsihui":80}},{"path":"src/main/java/bookmark/commands/RemoveLinkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import exceptions.InvalidBookmarkException;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"import exceptions.EmptyBookmarkException;"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":"public class RemoveLinkCommand extends BookmarkCommand {"},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"    public static final int RM_LENGTH \u003d 2;"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"    private int linkNumber;"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    private int categoryNumber;"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    private String line;"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"    public RemoveLinkCommand(String line, int categoryNumber) {"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"        this.categoryNumber \u003d categoryNumber;"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"        this.line \u003d line.trim();"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"        assert line.startsWith(\"rm\") : \"Remove link command is called when line does not start with rm\";"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"        assert categoryNumber \u003e\u003d 0 : \"Missing category number\";"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"     * Remove existing BookmarkCategory from ArrayList after evaluating bookmark category number."},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"     * @param ui prints output message"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"     * @param categories remove category to array list"},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"     * @param storage remove category from file"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"     * @throws EmptyBookmarkException if category number is empty"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"     * @throws NumberFormatException if number is not the input"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"     * @throws IndexOutOfBoundsException if number exceed large number"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"     * @throws InvalidBookmarkException if bookmark category number is invalid (0, more than category size)."},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories, BookmarkStorage storage) {"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"            if (categoryNumber \u003d\u003d 0) {"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"                ui.printChooseCategoryMessage();"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"                assert categoryNumber \u003d\u003d 0 : \"Choose Category message is called when category number is chosen\";"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"            } else if (line.length() \u003c\u003d RM_LENGTH) {"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"                throw new EmptyBookmarkException();"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"            } else {"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"                line \u003d line.substring(RM_LENGTH);"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"                assert line.length() \u003e 0 : \"Link should not be empty\";"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"                linkNumber \u003d evaluateLinkNumber(categories);"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"                System.out.println(\"Removing link: \""},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"                        + categories.get(categoryNumber - 1).getLinks().get(linkNumber - 1));"},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":"                categories.get(categoryNumber - 1).removeLink(linkNumber);"},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"                ui.showBookmarkLinkList(categories.get(categoryNumber - 1));"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"                storage.saveLinksToFile(categories);"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"        } catch (EmptyBookmarkException e) {"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"            ui.showEmptyError(\"Link Number\");"},{"lineNumber":55,"author":{"gitId":"lingsihui"},"content":"        } catch (InvalidBookmarkException e) {"},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":"            ui.showInvalidError(\"Link Number\");"},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":"            ui.showInvalidNumberError();"},{"lineNumber":59,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":62,"author":{"gitId":"lingsihui"},"content":"    private int evaluateLinkNumber(ArrayList\u003cBookmarkCategory\u003e categories)"},{"lineNumber":63,"author":{"gitId":"lingsihui"},"content":"            throws NumberFormatException, InvalidBookmarkException {"},{"lineNumber":64,"author":{"gitId":"lingsihui"},"content":"        line \u003d line.trim();"},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"        int linkNum \u003d Integer.parseInt(line);"},{"lineNumber":66,"author":{"gitId":"lingsihui"},"content":"        if (linkNum \u003d\u003d 0 || linkNum \u003e categories.get(categoryNumber - 1).getLinks().size()) {"},{"lineNumber":67,"author":{"gitId":"lingsihui"},"content":"            throw new InvalidBookmarkException();"},{"lineNumber":68,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"lingsihui"},"content":"        return linkNum;"},{"lineNumber":70,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":72,"author":{"gitId":"lingsihui"},"content":"    public int getCategoryNumber() {"},{"lineNumber":73,"author":{"gitId":"lingsihui"},"content":"        return categoryNumber;"},{"lineNumber":74,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":75}},{"path":"src/main/java/bookmark/commands/StarCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import exceptions.EmptyBookmarkException;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"import exceptions.InvalidBookmarkException;"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":"public class StarCommand extends BookmarkCommand {"},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"    public static final int STAR_LENGTH \u003d 4;"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"    private int chosenCategory;"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    private String line;"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    private int starLinkNumber;"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"    public StarCommand(String line, int chosenCategory) {"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"        this.line \u003d line.trim();"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"        this.chosenCategory \u003d chosenCategory;"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"     * Mark existing BookmarkLink as star or unstar existing BookmarkLink."},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"     * @param ui prints output message"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"     * @param categories star link in array list"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"     * @param storage update starred link in file"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"     * @throws EmptyBookmarkException if link number is empty"},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"     * @throws NumberFormatException if number is not the input"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"     * @throws IndexOutOfBoundsException if number exceed large number"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"     * @throws InvalidBookmarkException if bookmark link number is invalid."},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand(BookmarkUi ui, ArrayList\u003cBookmarkCategory\u003e categories, BookmarkStorage storage) {"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"            if (chosenCategory \u003d\u003d 0) {"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"                ui.printChooseCategoryMessage();"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"            } else if (line.length() \u003c\u003d STAR_LENGTH) {"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"                throw new EmptyBookmarkException();"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"            } else {"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"                assert chosenCategory \u003e 0 : \"Category number is not chosen\";"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"                evaluateStarNumber(categories);"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"                categories.get(chosenCategory - 1).markLinkAsStar(starLinkNumber - 1);"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"                ui.showBookmarkLinkList(categories.get(chosenCategory - 1));"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"                ui.showStarBookmarks(categories);"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"                storage.saveLinksToFile(categories);"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"        } catch (EmptyBookmarkException e) {"},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":"            ui.showEmptyError(\"Star Number\");"},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"        } catch (InvalidBookmarkException e) {"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"            ui.showInvalidError(\"Star Number\");"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"            ui.showInvalidNumberError();"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":"    private void evaluateStarNumber(ArrayList\u003cBookmarkCategory\u003e categories)"},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":"            throws NumberFormatException, InvalidBookmarkException {"},{"lineNumber":59,"author":{"gitId":"lingsihui"},"content":"        line \u003d line.substring(STAR_LENGTH).trim();"},{"lineNumber":60,"author":{"gitId":"lingsihui"},"content":"        int catNum \u003d Integer.parseInt(line);"},{"lineNumber":61,"author":{"gitId":"lingsihui"},"content":"        if (catNum \u003d\u003d 0 || catNum \u003e categories.get(chosenCategory - 1).getLinks().size()) {"},{"lineNumber":62,"author":{"gitId":"lingsihui"},"content":"            throw new InvalidBookmarkException();"},{"lineNumber":63,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"lingsihui"},"content":"        starLinkNumber \u003d catNum;"},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":67,"author":{"gitId":"lingsihui"},"content":"    public int getCategoryNumber() {"},{"lineNumber":68,"author":{"gitId":"lingsihui"},"content":"        return chosenCategory;"},{"lineNumber":69,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":70}},{"path":"src/main/java/exceptions/ClashScheduleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"public class ClashScheduleException extends Exception {"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":4}},{"path":"src/main/java/exceptions/EmptyBookmarkException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"public class EmptyBookmarkException extends Exception{"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":4}},{"path":"src/main/java/exceptions/EmptyInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luziyi9898"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":3,"author":{"gitId":"luziyi9898"},"content":"public class EmptyInputException extends Exception{"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":"}"}],"authorContributionMap":{"luziyi9898":4}},{"path":"src/main/java/exceptions/ExistingBookmarkException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"public class ExistingBookmarkException extends Exception{"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":4}},{"path":"src/main/java/exceptions/InvalidBookmarkException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"public class InvalidBookmarkException extends Exception {"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":4}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":"}"}],"authorContributionMap":{"farice9":4}},{"path":"src/main/java/exceptions/InvalidDayOfTheWeekException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"public class InvalidDayOfTheWeekException extends Exception {"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":4}},{"path":"src/main/java/exceptions/InvalidEmailException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luziyi9898"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":3,"author":{"gitId":"luziyi9898"},"content":"public class InvalidEmailException extends Exception {"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":"}"}],"authorContributionMap":{"luziyi9898":4}},{"path":"src/main/java/exceptions/InvalidGradeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luziyi9898"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":3,"author":{"gitId":"luziyi9898"},"content":"public class InvalidGradeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":"}"}],"authorContributionMap":{"luziyi9898":4}},{"path":"src/main/java/exceptions/InvalidMcException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luziyi9898"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":3,"author":{"gitId":"luziyi9898"},"content":"public class InvalidMcException extends Exception{"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":"}"}],"authorContributionMap":{"luziyi9898":4}},{"path":"src/main/java/exceptions/InvalidModeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"public class InvalidModeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":"}"}],"authorContributionMap":{"farice9":4}},{"path":"src/main/java/exceptions/InvalidTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"public class InvalidTimeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":4}},{"path":"src/main/java/exceptions/RepeatedGradeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luziyi9898"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":3,"author":{"gitId":"luziyi9898"},"content":"public class RepeatedGradeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":"}"}],"authorContributionMap":{"luziyi9898":4}},{"path":"src/main/java/flashcard/Flashcard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hailqueenflo"},"content":"package flashcard;"},{"lineNumber":2,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":3,"author":{"gitId":"hailqueenflo"},"content":"public class Flashcard {"},{"lineNumber":4,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":5,"author":{"gitId":"hailqueenflo"},"content":"    public String question;"},{"lineNumber":6,"author":{"gitId":"hailqueenflo"},"content":"    public String answer;"},{"lineNumber":7,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":"    public Flashcard(String question, String answer) {"},{"lineNumber":9,"author":{"gitId":"hailqueenflo"},"content":"        this.question \u003d question;"},{"lineNumber":10,"author":{"gitId":"hailqueenflo"},"content":"        this.answer \u003d answer;"},{"lineNumber":11,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":13,"author":{"gitId":"hailqueenflo"},"content":"    public String writeToFile() {"},{"lineNumber":14,"author":{"gitId":"hailqueenflo"},"content":"        return question + \"|\" + answer + \"\\n\";"},{"lineNumber":15,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"hailqueenflo"},"content":"}"}],"authorContributionMap":{"hailqueenflo":15,"slightlyharp":1}},{"path":"src/main/java/flashcard/FlashcardDeck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hailqueenflo"},"content":"package flashcard;"},{"lineNumber":2,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":3,"author":{"gitId":"hailqueenflo"},"content":"import userinterface.Ui;"},{"lineNumber":4,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":5,"author":{"gitId":"hailqueenflo"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"hailqueenflo"},"content":"import java.util.Random;"},{"lineNumber":7,"author":{"gitId":"hailqueenflo"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"hailqueenflo"},"content":"import java.util.stream.Collectors;"},{"lineNumber":9,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":10,"author":{"gitId":"hailqueenflo"},"content":"public class FlashcardDeck {"},{"lineNumber":11,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":12,"author":{"gitId":"hailqueenflo"},"content":"    public static final String BACK \u003d \"back\";"},{"lineNumber":13,"author":{"gitId":"hailqueenflo"},"content":"    public static final String SHOW_ANSWER \u003d \"show answer\";"},{"lineNumber":14,"author":{"gitId":"hailqueenflo"},"content":"    public ArrayList\u003cFlashcard\u003e flashcardDeck;"},{"lineNumber":15,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":16,"author":{"gitId":"hailqueenflo"},"content":"    public FlashcardDeck() {"},{"lineNumber":17,"author":{"gitId":"hailqueenflo"},"content":"        flashcardDeck \u003d new ArrayList\u003cFlashcard\u003e();"},{"lineNumber":18,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":20,"author":{"gitId":"hailqueenflo"},"content":"    public void addCards() {"},{"lineNumber":21,"author":{"gitId":"hailqueenflo"},"content":"        Ui.printDivider();"},{"lineNumber":22,"author":{"gitId":"hailqueenflo"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":23,"author":{"gitId":"hailqueenflo"},"content":"        System.out.println(\"Please enter question: \");"},{"lineNumber":24,"author":{"gitId":"hailqueenflo"},"content":"        final String question \u003d in.nextLine();"},{"lineNumber":25,"author":{"gitId":"hailqueenflo"},"content":"        System.out.println(\"Please enter answer: \");"},{"lineNumber":26,"author":{"gitId":"hailqueenflo"},"content":"        String answer \u003d in.nextLine();"},{"lineNumber":27,"author":{"gitId":"hailqueenflo"},"content":"        while (answer.equalsIgnoreCase(BACK)) {"},{"lineNumber":28,"author":{"gitId":"hailqueenflo"},"content":"            System.out.println(\"The answer cannot be \\\"back\\\"! Please enter another answer: \");"},{"lineNumber":29,"author":{"gitId":"hailqueenflo"},"content":"            answer \u003d in.nextLine();"},{"lineNumber":30,"author":{"gitId":"hailqueenflo"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"hailqueenflo"},"content":"        while (answer.equalsIgnoreCase(SHOW_ANSWER)) {"},{"lineNumber":32,"author":{"gitId":"hailqueenflo"},"content":"            System.out.println(\"The answer cannot be \\\"show answer\\\"! Please enter another answer: \");"},{"lineNumber":33,"author":{"gitId":"hailqueenflo"},"content":"            answer \u003d in.nextLine();"},{"lineNumber":34,"author":{"gitId":"hailqueenflo"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"hailqueenflo"},"content":"        Ui.printDivider();"},{"lineNumber":36,"author":{"gitId":"hailqueenflo"},"content":"        flashcardDeck.add(new Flashcard(question, answer));"},{"lineNumber":37,"author":{"gitId":"hailqueenflo"},"content":"        System.out.println(\"You have successfully created the flashcard below: \\n\""},{"lineNumber":38,"author":{"gitId":"hailqueenflo"},"content":"                + \"Question: \" + question + \"\\n\""},{"lineNumber":39,"author":{"gitId":"hailqueenflo"},"content":"                + \"Answer: \" + answer);"},{"lineNumber":40,"author":{"gitId":"hailqueenflo"},"content":"        Ui.printDivider();"},{"lineNumber":41,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":43,"author":{"gitId":"hailqueenflo"},"content":"    public void listCards() {"},{"lineNumber":44,"author":{"gitId":"hailqueenflo"},"content":"        Ui.printDivider();"},{"lineNumber":45,"author":{"gitId":"hailqueenflo"},"content":"        if (flashcardDeck.size() \u003d\u003d 0) {"},{"lineNumber":46,"author":{"gitId":"hailqueenflo"},"content":"            System.out.println(\"There are no cards in your deck!\\n\""},{"lineNumber":47,"author":{"gitId":"hailqueenflo"},"content":"                    + \"Use \\\"add\\\" to add flashcards.\");"},{"lineNumber":48,"author":{"gitId":"hailqueenflo"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"hailqueenflo"},"content":"            System.out.println(\"Here is the list of flashcards you have: \");"},{"lineNumber":50,"author":{"gitId":"hailqueenflo"},"content":"            int cardIndex \u003d 1;"},{"lineNumber":51,"author":{"gitId":"hailqueenflo"},"content":"            for (Flashcard flashcard : flashcardDeck) {"},{"lineNumber":52,"author":{"gitId":"hailqueenflo"},"content":"                System.out.println(cardIndex + \". \" + flashcard.question + \"|\" + flashcard.answer);"},{"lineNumber":53,"author":{"gitId":"hailqueenflo"},"content":"                cardIndex++;"},{"lineNumber":54,"author":{"gitId":"hailqueenflo"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"hailqueenflo"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"hailqueenflo"},"content":"        Ui.printDivider();"},{"lineNumber":57,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":59,"author":{"gitId":"hailqueenflo"},"content":"    public void testRandomCard() {"},{"lineNumber":60,"author":{"gitId":"hailqueenflo"},"content":"        if (flashcardDeck.size() \u003e 0) {"},{"lineNumber":61,"author":{"gitId":"hailqueenflo"},"content":"            Scanner in \u003d new Scanner(System.in);"},{"lineNumber":62,"author":{"gitId":"hailqueenflo"},"content":"            int score \u003d 0;"},{"lineNumber":63,"author":{"gitId":"hailqueenflo"},"content":"            Ui.printDivider();"},{"lineNumber":64,"author":{"gitId":"hailqueenflo"},"content":"            System.out.println(\"You have entered the test mode.\\n\""},{"lineNumber":65,"author":{"gitId":"hailqueenflo"},"content":"                    + \"Use \\\"back\\\" to return to flashcard main, or \\\"show answer\\\" to reveal answer.\");"},{"lineNumber":66,"author":{"gitId":"hailqueenflo"},"content":"            Ui.printDivider();"},{"lineNumber":67,"author":{"gitId":"hailqueenflo"},"content":"            String attempt \u003d \"null\";"},{"lineNumber":68,"author":{"gitId":"hailqueenflo"},"content":"            while (!attempt.equalsIgnoreCase(BACK)) {"},{"lineNumber":69,"author":{"gitId":"hailqueenflo"},"content":"                Random random \u003d new Random();"},{"lineNumber":70,"author":{"gitId":"hailqueenflo"},"content":"                int randomIndex \u003d random.nextInt(flashcardDeck.size());"},{"lineNumber":71,"author":{"gitId":"hailqueenflo"},"content":"                System.out.println(\"What is the answer to this question?\");"},{"lineNumber":72,"author":{"gitId":"hailqueenflo"},"content":"                System.out.println(flashcardDeck.get(randomIndex).question);"},{"lineNumber":73,"author":{"gitId":"hailqueenflo"},"content":"                attempt \u003d in.nextLine();"},{"lineNumber":74,"author":{"gitId":"hailqueenflo"},"content":"                while (!attempt.equalsIgnoreCase(flashcardDeck.get(randomIndex).answer)"},{"lineNumber":75,"author":{"gitId":"hailqueenflo"},"content":"                        \u0026\u0026 !attempt.equalsIgnoreCase(BACK) \u0026\u0026 !attempt.equalsIgnoreCase(SHOW_ANSWER)) {"},{"lineNumber":76,"author":{"gitId":"hailqueenflo"},"content":"                    System.out.println(\"Incorrect! Try again?\");"},{"lineNumber":77,"author":{"gitId":"hailqueenflo"},"content":"                    attempt \u003d in.nextLine();"},{"lineNumber":78,"author":{"gitId":"hailqueenflo"},"content":"                }"},{"lineNumber":79,"author":{"gitId":"hailqueenflo"},"content":"                if (attempt.equalsIgnoreCase(BACK)) {"},{"lineNumber":80,"author":{"gitId":"hailqueenflo"},"content":"                    Ui.printDivider();"},{"lineNumber":81,"author":{"gitId":"hailqueenflo"},"content":"                    System.out.println(\"Exiting test mode...\\n\""},{"lineNumber":82,"author":{"gitId":"hailqueenflo"},"content":"                            + \"You are now back in flashcard main.\");"},{"lineNumber":83,"author":{"gitId":"hailqueenflo"},"content":"                } else if (attempt.equalsIgnoreCase(SHOW_ANSWER)) {"},{"lineNumber":84,"author":{"gitId":"hailqueenflo"},"content":"                    Ui.printDivider();"},{"lineNumber":85,"author":{"gitId":"hailqueenflo"},"content":"                    System.out.println(\"The answer for this question is: \" + flashcardDeck.get(randomIndex).answer);"},{"lineNumber":86,"author":{"gitId":"hailqueenflo"},"content":"                } else {"},{"lineNumber":87,"author":{"gitId":"hailqueenflo"},"content":"                    score++;"},{"lineNumber":88,"author":{"gitId":"hailqueenflo"},"content":"                    System.out.print(\"This is the right answer! \");"},{"lineNumber":89,"author":{"gitId":"hailqueenflo"},"content":"                    if (score \u003d\u003d 1) {"},{"lineNumber":90,"author":{"gitId":"hailqueenflo"},"content":"                        System.out.println(\"You now have \" + score + \" point.\");"},{"lineNumber":91,"author":{"gitId":"hailqueenflo"},"content":"                    } else {"},{"lineNumber":92,"author":{"gitId":"hailqueenflo"},"content":"                        System.out.println(\"You now have \" + score + \" points.\");"},{"lineNumber":93,"author":{"gitId":"hailqueenflo"},"content":"                    }"},{"lineNumber":94,"author":{"gitId":"hailqueenflo"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"hailqueenflo"},"content":"                Ui.printDivider();"},{"lineNumber":96,"author":{"gitId":"hailqueenflo"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"hailqueenflo"},"content":"        } else {"},{"lineNumber":98,"author":{"gitId":"hailqueenflo"},"content":"            Ui.printDivider();"},{"lineNumber":99,"author":{"gitId":"hailqueenflo"},"content":"            System.out.println(\"There are no cards in your deck to test from!\\n\""},{"lineNumber":100,"author":{"gitId":"hailqueenflo"},"content":"                    + \"Use \\\"add\\\" to add flashcards, before testing yourself.\");"},{"lineNumber":101,"author":{"gitId":"hailqueenflo"},"content":"            Ui.printDivider();"},{"lineNumber":102,"author":{"gitId":"hailqueenflo"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":105,"author":{"gitId":"hailqueenflo"},"content":"    public void deleteCard() {"},{"lineNumber":106,"author":{"gitId":"hailqueenflo"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":107,"author":{"gitId":"hailqueenflo"},"content":"        Ui.printDivider();"},{"lineNumber":108,"author":{"gitId":"hailqueenflo"},"content":"        System.out.println(\"Please enter the index of the card you wish to delete.\");"},{"lineNumber":109,"author":{"gitId":"hailqueenflo"},"content":"        String userInput \u003d in.nextLine();"},{"lineNumber":110,"author":{"gitId":"hailqueenflo"},"content":"        int cardIndex \u003d 0;"},{"lineNumber":111,"author":{"gitId":"hailqueenflo"},"content":"        try {"},{"lineNumber":112,"author":{"gitId":"hailqueenflo"},"content":"            cardIndex \u003d Integer.parseInt(userInput);"},{"lineNumber":113,"author":{"gitId":"hailqueenflo"},"content":"            if (flashcardDeck.size() \u003d\u003d 0) {"},{"lineNumber":114,"author":{"gitId":"hailqueenflo"},"content":"                Ui.printDivider();"},{"lineNumber":115,"author":{"gitId":"hailqueenflo"},"content":"                System.out.println(\"You do not have any cards in your deck!\\n\""},{"lineNumber":116,"author":{"gitId":"hailqueenflo"},"content":"                        + \"Please use \\\"add\\\" to add flashcards to your deck.\");"},{"lineNumber":117,"author":{"gitId":"hailqueenflo"},"content":"                Ui.printDivider();"},{"lineNumber":118,"author":{"gitId":"hailqueenflo"},"content":"            } else if (cardIndex \u003d\u003d 0 || cardIndex \u003c 0) {"},{"lineNumber":119,"author":{"gitId":"hailqueenflo"},"content":"                Ui.printDivider();"},{"lineNumber":120,"author":{"gitId":"hailqueenflo"},"content":"                System.out.println(\"Please enter a card index greater than 0!\");"},{"lineNumber":121,"author":{"gitId":"hailqueenflo"},"content":"                Ui.printDivider();"},{"lineNumber":122,"author":{"gitId":"hailqueenflo"},"content":"            } else if (cardIndex \u003e flashcardDeck.size()) {"},{"lineNumber":123,"author":{"gitId":"hailqueenflo"},"content":"                Ui.printDivider();"},{"lineNumber":124,"author":{"gitId":"hailqueenflo"},"content":"                System.out.println(\"Sorry, you only have \" + flashcardDeck.size() + \" cards in your deck!\\n\""},{"lineNumber":125,"author":{"gitId":"hailqueenflo"},"content":"                        + \"Please enter a number within the range of 1-\" + flashcardDeck.size() + \".\");"},{"lineNumber":126,"author":{"gitId":"hailqueenflo"},"content":"                Ui.printDivider();"},{"lineNumber":127,"author":{"gitId":"hailqueenflo"},"content":"            } else {"},{"lineNumber":128,"author":{"gitId":"hailqueenflo"},"content":"                assert cardIndex \u003c\u003d flashcardDeck.size() : \"card index inserted should be less than size of deck \""},{"lineNumber":129,"author":{"gitId":"hailqueenflo"},"content":"                        + \"at this step\";"},{"lineNumber":130,"author":{"gitId":"hailqueenflo"},"content":"                Ui.printDivider();"},{"lineNumber":131,"author":{"gitId":"hailqueenflo"},"content":"                System.out.println(\"Noted. I have removed this card: \""},{"lineNumber":132,"author":{"gitId":"hailqueenflo"},"content":"                        + flashcardDeck.get(cardIndex - 1).question + \"|\" + flashcardDeck.get(cardIndex - 1).answer"},{"lineNumber":133,"author":{"gitId":"hailqueenflo"},"content":"                        + \"\\n\" + \"Now you have \" + (flashcardDeck.size() - 1) + \" cards in the list.\");"},{"lineNumber":134,"author":{"gitId":"hailqueenflo"},"content":"                Ui.printDivider();"},{"lineNumber":135,"author":{"gitId":"hailqueenflo"},"content":"                flashcardDeck.remove(cardIndex - 1);"},{"lineNumber":136,"author":{"gitId":"hailqueenflo"},"content":"            }"},{"lineNumber":137,"author":{"gitId":"hailqueenflo"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":138,"author":{"gitId":"hailqueenflo"},"content":"            Ui.printDivider();"},{"lineNumber":139,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":140,"author":{"gitId":"hailqueenflo"},"content":"            System.out.println(\"Please enter the index of the card as an integer!\");"},{"lineNumber":141,"author":{"gitId":"hailqueenflo"},"content":"            Ui.printDivider();"},{"lineNumber":142,"author":{"gitId":"hailqueenflo"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":145,"author":{"gitId":"hailqueenflo"},"content":"    public void findCard() {"},{"lineNumber":146,"author":{"gitId":"hailqueenflo"},"content":"        int numberOfCardsFound \u003d 0;"},{"lineNumber":147,"author":{"gitId":"hailqueenflo"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":148,"author":{"gitId":"hailqueenflo"},"content":"        Ui.printDivider();"},{"lineNumber":149,"author":{"gitId":"hailqueenflo"},"content":"        System.out.println(\"Please enter a search term: \");"},{"lineNumber":150,"author":{"gitId":"hailqueenflo"},"content":"        String searchItem \u003d in.nextLine();"},{"lineNumber":151,"author":{"gitId":"hailqueenflo"},"content":"        ArrayList\u003cFlashcard\u003e cardsFound \u003d (ArrayList\u003cFlashcard\u003e) flashcardDeck.stream()"},{"lineNumber":152,"author":{"gitId":"hailqueenflo"},"content":"                .filter((flashcard) -\u003e flashcard.question.toLowerCase().contains(searchItem.toLowerCase()))"},{"lineNumber":153,"author":{"gitId":"hailqueenflo"},"content":"                .collect((Collectors.toList()));"},{"lineNumber":154,"author":{"gitId":"hailqueenflo"},"content":"        if (cardsFound.size() \u003d\u003d 0) {"},{"lineNumber":155,"author":{"gitId":"hailqueenflo"},"content":"            Ui.printDivider();"},{"lineNumber":156,"author":{"gitId":"hailqueenflo"},"content":"            System.out.println(\"There are no matching cards in your list.\");"},{"lineNumber":157,"author":{"gitId":"hailqueenflo"},"content":"            Ui.printDivider();"},{"lineNumber":158,"author":{"gitId":"hailqueenflo"},"content":"        } else {"},{"lineNumber":159,"author":{"gitId":"hailqueenflo"},"content":"            Ui.printDivider();"},{"lineNumber":160,"author":{"gitId":"hailqueenflo"},"content":"            System.out.println(\"Here are the matching cards in your list:\");"},{"lineNumber":161,"author":{"gitId":"hailqueenflo"},"content":"            for (Flashcard flashcard: cardsFound) {"},{"lineNumber":162,"author":{"gitId":"hailqueenflo"},"content":"                numberOfCardsFound++;"},{"lineNumber":163,"author":{"gitId":"hailqueenflo"},"content":"                System.out.println(numberOfCardsFound + \". \" + flashcard.question + \"|\" + flashcard.answer);"},{"lineNumber":164,"author":{"gitId":"hailqueenflo"},"content":"            }"},{"lineNumber":165,"author":{"gitId":"hailqueenflo"},"content":"            Ui.printDivider();"},{"lineNumber":166,"author":{"gitId":"hailqueenflo"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"hailqueenflo"},"content":"}"}],"authorContributionMap":{"hailqueenflo":168}},{"path":"src/main/java/flashcard/FlashcardRun.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hailqueenflo"},"content":"package flashcard;"},{"lineNumber":2,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import studyit.StudyItLog;"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":"import userinterface.Ui;"},{"lineNumber":5,"author":{"gitId":"farice9"},"content":""},{"lineNumber":6,"author":{"gitId":"hailqueenflo"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"hailqueenflo"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":9,"author":{"gitId":"hailqueenflo"},"content":"public class FlashcardRun {"},{"lineNumber":10,"author":{"gitId":"hailqueenflo"},"content":"    public static final String TEST \u003d \"test\";"},{"lineNumber":11,"author":{"gitId":"hailqueenflo"},"content":"    public static final String DELETE \u003d \"delete\";"},{"lineNumber":12,"author":{"gitId":"hailqueenflo"},"content":"    public static final String FIND \u003d \"find\";"},{"lineNumber":13,"author":{"gitId":"hailqueenflo"},"content":"    public FlashcardDeck flashcardDeck;"},{"lineNumber":14,"author":{"gitId":"hailqueenflo"},"content":"    public FlashcardStorage storage;"},{"lineNumber":15,"author":{"gitId":"hailqueenflo"},"content":"    public static final String ADD \u003d \"add\";"},{"lineNumber":16,"author":{"gitId":"hailqueenflo"},"content":"    public static final String LIST \u003d \"list\";"},{"lineNumber":17,"author":{"gitId":"hailqueenflo"},"content":"    public static final String EXIT \u003d \"exit\";"},{"lineNumber":18,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":19,"author":{"gitId":"hailqueenflo"},"content":"    public FlashcardRun() {"},{"lineNumber":20,"author":{"gitId":"hailqueenflo"},"content":"        flashcardDeck \u003d new FlashcardDeck();"},{"lineNumber":21,"author":{"gitId":"hailqueenflo"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"farice9"},"content":"            storage \u003d new FlashcardStorage(\"data/flashcard.txt\");"},{"lineNumber":23,"author":{"gitId":"farice9"},"content":"            storage.readFromFile(flashcardDeck);"},{"lineNumber":24,"author":{"gitId":"hailqueenflo"},"content":"        } catch (IOException e) {"},{"lineNumber":25,"author":{"gitId":"hailqueenflo"},"content":"            e.printStackTrace();"},{"lineNumber":26,"author":{"gitId":"hailqueenflo"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"farice9"},"content":""},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"        StudyItLog.logger.info(\"Flashcard mode initialized\");"},{"lineNumber":29,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":31,"author":{"gitId":"hailqueenflo"},"content":"    public void run(String command) {"},{"lineNumber":32,"author":{"gitId":"hailqueenflo"},"content":"        switch (command) {"},{"lineNumber":33,"author":{"gitId":"hailqueenflo"},"content":"        case ADD:"},{"lineNumber":34,"author":{"gitId":"hailqueenflo"},"content":"            flashcardDeck.addCards();"},{"lineNumber":35,"author":{"gitId":"hailqueenflo"},"content":"            break;"},{"lineNumber":36,"author":{"gitId":"hailqueenflo"},"content":"        case DELETE:"},{"lineNumber":37,"author":{"gitId":"hailqueenflo"},"content":"            flashcardDeck.deleteCard();"},{"lineNumber":38,"author":{"gitId":"hailqueenflo"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"hailqueenflo"},"content":"        case LIST:"},{"lineNumber":40,"author":{"gitId":"hailqueenflo"},"content":"            flashcardDeck.listCards();"},{"lineNumber":41,"author":{"gitId":"hailqueenflo"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"hailqueenflo"},"content":"        case TEST:"},{"lineNumber":43,"author":{"gitId":"hailqueenflo"},"content":"            flashcardDeck.testRandomCard();"},{"lineNumber":44,"author":{"gitId":"hailqueenflo"},"content":"            break;"},{"lineNumber":45,"author":{"gitId":"hailqueenflo"},"content":"        case FIND:"},{"lineNumber":46,"author":{"gitId":"hailqueenflo"},"content":"            flashcardDeck.findCard();"},{"lineNumber":47,"author":{"gitId":"hailqueenflo"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"hailqueenflo"},"content":"        default:"},{"lineNumber":49,"author":{"gitId":"farice9"},"content":"            Ui.printDivider();"},{"lineNumber":50,"author":{"gitId":"hailqueenflo"},"content":"            System.out.println(\"Invalid command. Valid commands are \\\"add\\\", \\\"delete\\\", \\\"list\\\", \""},{"lineNumber":51,"author":{"gitId":"hailqueenflo"},"content":"                    + \"\\\"test\\\" and \\\"find\\\".\""},{"lineNumber":52,"author":{"gitId":"hailqueenflo"},"content":"                    + \"\\nUse \\\"exit\\\" to exit the flashcard mode.\");"},{"lineNumber":53,"author":{"gitId":"farice9"},"content":"            Ui.printDivider();"},{"lineNumber":54,"author":{"gitId":"farice9"},"content":"            StudyItLog.logger.warning(\"Invalid flashcard command: Command unidentifiable\");"},{"lineNumber":55,"author":{"gitId":"hailqueenflo"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"hailqueenflo"},"content":"        storage.writeToFile(flashcardDeck);"},{"lineNumber":57,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"hailqueenflo"},"content":"}"}],"authorContributionMap":{"hailqueenflo":48,"farice9":10}},{"path":"src/main/java/flashcard/FlashcardStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hailqueenflo"},"content":"package flashcard;"},{"lineNumber":2,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import studyit.StudyItLog;"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":""},{"lineNumber":5,"author":{"gitId":"hailqueenflo"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"hailqueenflo"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"hailqueenflo"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"hailqueenflo"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"hailqueenflo"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"hailqueenflo"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":12,"author":{"gitId":"hailqueenflo"},"content":"public class FlashcardStorage {"},{"lineNumber":13,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":14,"author":{"gitId":"hailqueenflo"},"content":"    public ArrayList\u003cFlashcard\u003e flashcardDeck;"},{"lineNumber":15,"author":{"gitId":"hailqueenflo"},"content":"    private final File file;"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":"    private static final String dirPath \u003d \"data\";"},{"lineNumber":17,"author":{"gitId":"hailqueenflo"},"content":"    private final String filePath;"},{"lineNumber":18,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":19,"author":{"gitId":"hailqueenflo"},"content":"    public FlashcardStorage(String filePath) throws IOException {"},{"lineNumber":20,"author":{"gitId":"farice9"},"content":"        // Creates the data directory"},{"lineNumber":21,"author":{"gitId":"farice9"},"content":"        File fileDir \u003d new File(dirPath);"},{"lineNumber":22,"author":{"gitId":"farice9"},"content":""},{"lineNumber":23,"author":{"gitId":"farice9"},"content":"        if (!fileDir.exists()) {"},{"lineNumber":24,"author":{"gitId":"farice9"},"content":"            fileDir.mkdir();"},{"lineNumber":25,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"farice9"},"content":""},{"lineNumber":27,"author":{"gitId":"hailqueenflo"},"content":"        file \u003d new File(filePath);"},{"lineNumber":28,"author":{"gitId":"hailqueenflo"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":29,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":31,"author":{"gitId":"hailqueenflo"},"content":"    public void writeToFile(FlashcardDeck flashcardDeck) {"},{"lineNumber":32,"author":{"gitId":"hailqueenflo"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"hailqueenflo"},"content":"            FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":34,"author":{"gitId":"hailqueenflo"},"content":"            for (Flashcard flashcard : flashcardDeck.flashcardDeck) {"},{"lineNumber":35,"author":{"gitId":"hailqueenflo"},"content":"                fw.write(flashcard.writeToFile());"},{"lineNumber":36,"author":{"gitId":"hailqueenflo"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"hailqueenflo"},"content":"            fw.close();"},{"lineNumber":38,"author":{"gitId":"hailqueenflo"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"hailqueenflo"},"content":"            System.out.println(\"Something went wrong!\" + e.getMessage());"},{"lineNumber":40,"author":{"gitId":"farice9"},"content":"            StudyItLog.logger.warning(\"Problem writing to flashcard storage file\\n\" + e);"},{"lineNumber":41,"author":{"gitId":"hailqueenflo"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":44,"author":{"gitId":"farice9"},"content":"    public void readFromFile(FlashcardDeck flashcardDeck) throws IOException {"},{"lineNumber":45,"author":{"gitId":"hailqueenflo"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"hailqueenflo"},"content":"            Scanner s \u003d new Scanner(file);"},{"lineNumber":47,"author":{"gitId":"hailqueenflo"},"content":"            Flashcard flashcard;"},{"lineNumber":48,"author":{"gitId":"hailqueenflo"},"content":"            while (s.hasNext()) {"},{"lineNumber":49,"author":{"gitId":"hailqueenflo"},"content":"                String[] parseCard \u003d s.nextLine().split(\"\\\\|\");"},{"lineNumber":50,"author":{"gitId":"hailqueenflo"},"content":"                String question \u003d parseCard[0];"},{"lineNumber":51,"author":{"gitId":"hailqueenflo"},"content":"                String answer \u003d parseCard[1];"},{"lineNumber":52,"author":{"gitId":"hailqueenflo"},"content":"                flashcard \u003d new Flashcard(question, answer);"},{"lineNumber":53,"author":{"gitId":"hailqueenflo"},"content":"                flashcardDeck.flashcardDeck.add(flashcard);"},{"lineNumber":54,"author":{"gitId":"hailqueenflo"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"hailqueenflo"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":56,"author":{"gitId":"farice9"},"content":"            System.out.println(\"data/flashcard.txt is not found, creating a new file now!\");"},{"lineNumber":57,"author":{"gitId":"farice9"},"content":""},{"lineNumber":58,"author":{"gitId":"farice9"},"content":"            file.createNewFile();"},{"lineNumber":59,"author":{"gitId":"farice9"},"content":""},{"lineNumber":60,"author":{"gitId":"farice9"},"content":"            StudyItLog.logger.info(e + \"\\nflashcard storage file created\");"},{"lineNumber":61,"author":{"gitId":"hailqueenflo"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":64,"author":{"gitId":"hailqueenflo"},"content":"}"}],"authorContributionMap":{"hailqueenflo":47,"slightlyharp":1,"farice9":16}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"hailqueenflo"},"content":"import flashcard.FlashcardDeck;"},{"lineNumber":4,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application."},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        System.out.println(\"What is your name?\");"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello \" + in.nextLine());"},{"lineNumber":22,"author":{"gitId":"hailqueenflo"},"content":"        FlashcardDeck flashcardDeck \u003d new FlashcardDeck();"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":""}],"authorContributionMap":{"hailqueenflo":3,"lingsihui":1,"-":21}},{"path":"src/main/java/studyit/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package studyit;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"hailqueenflo"},"content":"import flashcard.FlashcardRun;"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":"import timetable.TimeTableRun;"},{"lineNumber":5,"author":{"gitId":"farice9"},"content":"import userinterface.ErrorMessage;"},{"lineNumber":6,"author":{"gitId":"farice9"},"content":"import userinterface.HelpMessage;"},{"lineNumber":7,"author":{"gitId":"farice9"},"content":"import userinterface.Ui;"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkRun;"},{"lineNumber":9,"author":{"gitId":"farice9"},"content":"import academic.AcademicRun;"},{"lineNumber":10,"author":{"gitId":"farice9"},"content":""},{"lineNumber":11,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":12,"author":{"gitId":"farice9"},"content":"public class Command {"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"farice9"},"content":"     * Handles the user input command."},{"lineNumber":16,"author":{"gitId":"farice9"},"content":"     * It executes the command if it is a general command. Otherwise, it will"},{"lineNumber":17,"author":{"gitId":"farice9"},"content":"     * pass the command to each respective mode to handle under handleNonGeneralCommand()"},{"lineNumber":18,"author":{"gitId":"farice9"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"farice9"},"content":"     * @param command Raw string input of the user command"},{"lineNumber":20,"author":{"gitId":"farice9"},"content":"     * @param commandType Identifies which command type it is (passed in by command parser)"},{"lineNumber":21,"author":{"gitId":"farice9"},"content":"     * @param bookmarkRun Main component for bookmark mode"},{"lineNumber":22,"author":{"gitId":"farice9"},"content":"     * @param flashcardRun Main component for flashcard mode"},{"lineNumber":23,"author":{"gitId":"farice9"},"content":"     * @param timeTableRun Main component for timetable mode"},{"lineNumber":24,"author":{"gitId":"farice9"},"content":"     * @param academicRun Main component for academic mode"},{"lineNumber":25,"author":{"gitId":"farice9"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"    public static void executeCommand(String command, CommandType commandType,"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"                                      BookmarkRun bookmarkRun, FlashcardRun flashcardRun,"},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"                                      TimeTableRun timeTableRun, AcademicRun academicRun) {"},{"lineNumber":29,"author":{"gitId":"farice9"},"content":"        if (commandType \u003d\u003d CommandType.EXIT_PROGRAM) {"},{"lineNumber":30,"author":{"gitId":"farice9"},"content":"            Ui.printExit();"},{"lineNumber":31,"author":{"gitId":"farice9"},"content":"        } else if (commandType \u003d\u003d CommandType.EXIT_MODE) {"},{"lineNumber":32,"author":{"gitId":"farice9"},"content":"            Ui.exitMode();"},{"lineNumber":33,"author":{"gitId":"farice9"},"content":"        } else if (commandType \u003d\u003d CommandType.LOCATION) {"},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"            Ui.printLocation();"},{"lineNumber":35,"author":{"gitId":"farice9"},"content":"        } else if (commandType \u003d\u003d CommandType.CHANGE_MODE) {"},{"lineNumber":36,"author":{"gitId":"farice9"},"content":"            Ui.changeModeCommand(command);"},{"lineNumber":37,"author":{"gitId":"farice9"},"content":"        } else if (commandType \u003d\u003d CommandType.HELP) {"},{"lineNumber":38,"author":{"gitId":"farice9"},"content":"            HelpMessage.printHelpMessage();"},{"lineNumber":39,"author":{"gitId":"farice9"},"content":"        } else if (commandType \u003d\u003d CommandType.HIGHLIGHT) {"},{"lineNumber":40,"author":{"gitId":"farice9"},"content":"            Ui.printHighlight(bookmarkRun, academicRun);"},{"lineNumber":41,"author":{"gitId":"farice9"},"content":"        } else if (StudyIt.getCurrentMode() !\u003d Mode.MENU) {"},{"lineNumber":42,"author":{"gitId":"farice9"},"content":"            // Run the mode specific commands if the input is none of the general command"},{"lineNumber":43,"author":{"gitId":"farice9"},"content":"            handleNonGeneralCommand(command, bookmarkRun, flashcardRun, timeTableRun,"},{"lineNumber":44,"author":{"gitId":"farice9"},"content":"                    academicRun);"},{"lineNumber":45,"author":{"gitId":"farice9"},"content":"        } else {"},{"lineNumber":46,"author":{"gitId":"farice9"},"content":"            assert commandType \u003d\u003d CommandType.UNIDENTIFIABLE : \"This command should be unidentifiable\";"},{"lineNumber":47,"author":{"gitId":"farice9"},"content":"            ErrorMessage.printUnidentifiableCommand();"},{"lineNumber":48,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"farice9"},"content":""},{"lineNumber":51,"author":{"gitId":"farice9"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"farice9"},"content":"     * Handles the non-general command such as commands under different modes."},{"lineNumber":53,"author":{"gitId":"farice9"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"farice9"},"content":"     * @param command raw string of the user input"},{"lineNumber":55,"author":{"gitId":"farice9"},"content":"     * @param bookmarkRun Main component for bookmark mode"},{"lineNumber":56,"author":{"gitId":"farice9"},"content":"     * @param flashcardRun Main component for flashcard mode"},{"lineNumber":57,"author":{"gitId":"farice9"},"content":"     * @param timeTableRun Main component for timetable mode"},{"lineNumber":58,"author":{"gitId":"farice9"},"content":"     * @param academicRun Main component for academic mode"},{"lineNumber":59,"author":{"gitId":"farice9"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"farice9"},"content":"    public static void handleNonGeneralCommand(String command, BookmarkRun bookmarkRun,"},{"lineNumber":61,"author":{"gitId":"farice9"},"content":"                                               FlashcardRun flashcardRun, TimeTableRun timeTableRun,"},{"lineNumber":62,"author":{"gitId":"farice9"},"content":"                                               AcademicRun academicRun) {"},{"lineNumber":63,"author":{"gitId":"farice9"},"content":"        Mode currentMode \u003d StudyIt.getCurrentMode();"},{"lineNumber":64,"author":{"gitId":"farice9"},"content":"        if (currentMode \u003d\u003d Mode.BOOKMARK) {"},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"            executeBookmarkModeCommand(command, bookmarkRun);"},{"lineNumber":66,"author":{"gitId":"farice9"},"content":"        } else if (currentMode \u003d\u003d Mode.TIMETABLE) {"},{"lineNumber":67,"author":{"gitId":"slightlyharp"},"content":"            executeTimetableModeCommand(command, timeTableRun);"},{"lineNumber":68,"author":{"gitId":"farice9"},"content":"        } else if (currentMode \u003d\u003d Mode.ACADEMIC) {"},{"lineNumber":69,"author":{"gitId":"farice9"},"content":"            executeAcademicModeCommand(command, academicRun);"},{"lineNumber":70,"author":{"gitId":"farice9"},"content":"        } else if (currentMode \u003d\u003d Mode.FLASHCARD) {"},{"lineNumber":71,"author":{"gitId":"hailqueenflo"},"content":"            executeFlashcardCommand(command, flashcardRun);"},{"lineNumber":72,"author":{"gitId":"lingsihui"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"farice9"},"content":"            assert currentMode \u003d\u003d Mode.MENU : \"The current mode should be at menu\";"},{"lineNumber":74,"author":{"gitId":"lingsihui"},"content":"            StudyItLog.logger.severe(\"Mode is not handled properly.\");"},{"lineNumber":75,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"farice9"},"content":""},{"lineNumber":78,"author":{"gitId":"lingsihui"},"content":"    public static void executeBookmarkModeCommand(String command, BookmarkRun bookmarkRun) {"},{"lineNumber":79,"author":{"gitId":"farice9"},"content":"        StudyItLog.logger.info(\"Processing bookmark command: \" + command);"},{"lineNumber":80,"author":{"gitId":"farice9"},"content":"        Ui.printDivider();"},{"lineNumber":81,"author":{"gitId":"lingsihui"},"content":"        bookmarkRun.run(command);"},{"lineNumber":82,"author":{"gitId":"farice9"},"content":"        Ui.printDivider();"},{"lineNumber":83,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"farice9"},"content":""},{"lineNumber":85,"author":{"gitId":"slightlyharp"},"content":"    public static void executeTimetableModeCommand(String command, TimeTableRun timeTableRun) {"},{"lineNumber":86,"author":{"gitId":"farice9"},"content":"        StudyItLog.logger.info(\"Processing timetable command: \" + command);"},{"lineNumber":87,"author":{"gitId":"farice9"},"content":"        Ui.printDivider();"},{"lineNumber":88,"author":{"gitId":"slightlyharp"},"content":"        timeTableRun.run(command);"},{"lineNumber":89,"author":{"gitId":"farice9"},"content":"        Ui.printDivider();"},{"lineNumber":90,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"farice9"},"content":""},{"lineNumber":92,"author":{"gitId":"farice9"},"content":"    public static void executeAcademicModeCommand(String command, AcademicRun academicRun) {"},{"lineNumber":93,"author":{"gitId":"farice9"},"content":"        StudyItLog.logger.info(\"Processing academic command: \" + command);"},{"lineNumber":94,"author":{"gitId":"farice9"},"content":"        academicRun.run(command);"},{"lineNumber":95,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"farice9"},"content":""},{"lineNumber":97,"author":{"gitId":"hailqueenflo"},"content":"    public static void executeFlashcardCommand(String command, FlashcardRun flashcardRun) {"},{"lineNumber":98,"author":{"gitId":"farice9"},"content":"        StudyItLog.logger.info(\"Processing flashcard command: \" + command);"},{"lineNumber":99,"author":{"gitId":"hailqueenflo"},"content":"        flashcardRun.run(command);"},{"lineNumber":100,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"farice9"},"content":"}"}],"authorContributionMap":{"hailqueenflo":5,"lingsihui":9,"slightlyharp":4,"farice9":83}},{"path":"src/main/java/studyit/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package studyit;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import exceptions.InvalidModeException;"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":""},{"lineNumber":5,"author":{"gitId":"farice9"},"content":"public class CommandParser {"},{"lineNumber":6,"author":{"gitId":"farice9"},"content":""},{"lineNumber":7,"author":{"gitId":"farice9"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"farice9"},"content":"     * Standardize the command to lowercase and trimmed."},{"lineNumber":9,"author":{"gitId":"farice9"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"farice9"},"content":"     * @param text String text"},{"lineNumber":11,"author":{"gitId":"farice9"},"content":"     * @return the standardized command"},{"lineNumber":12,"author":{"gitId":"farice9"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"farice9"},"content":"    public static String standardizeCommand(String text) {"},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"        return text.trim().toLowerCase();"},{"lineNumber":15,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"farice9"},"content":""},{"lineNumber":17,"author":{"gitId":"farice9"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"farice9"},"content":"     * Identifies the general commands."},{"lineNumber":19,"author":{"gitId":"farice9"},"content":"     * @param command raw string of the user input"},{"lineNumber":20,"author":{"gitId":"farice9"},"content":"     * @return the command type of the command"},{"lineNumber":21,"author":{"gitId":"farice9"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"farice9"},"content":"    public static CommandType getCommandType(String command) {"},{"lineNumber":23,"author":{"gitId":"farice9"},"content":"        String commandModified \u003d standardizeCommand(command);"},{"lineNumber":24,"author":{"gitId":"farice9"},"content":""},{"lineNumber":25,"author":{"gitId":"farice9"},"content":"        if ((StudyIt.getCurrentMode() \u003d\u003d Mode.MENU) \u0026\u0026 (commandModified.equals(\"exit\"))) {"},{"lineNumber":26,"author":{"gitId":"farice9"},"content":"            return CommandType.EXIT_PROGRAM;"},{"lineNumber":27,"author":{"gitId":"farice9"},"content":"        } else if (commandModified.equals(\"exit\")) {"},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"            return CommandType.EXIT_MODE;"},{"lineNumber":29,"author":{"gitId":"farice9"},"content":"        } else if (commandModified.equals(\"location\")) {"},{"lineNumber":30,"author":{"gitId":"farice9"},"content":"            return CommandType.LOCATION;"},{"lineNumber":31,"author":{"gitId":"farice9"},"content":"        } else if (commandModified.startsWith(\"cd\")) {"},{"lineNumber":32,"author":{"gitId":"farice9"},"content":"            return CommandType.CHANGE_MODE;"},{"lineNumber":33,"author":{"gitId":"farice9"},"content":"        } else if (commandModified.equals(\"help\")) {"},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"            return CommandType.HELP;"},{"lineNumber":35,"author":{"gitId":"farice9"},"content":"        } else if (commandModified.equals(\"highlight\")) {"},{"lineNumber":36,"author":{"gitId":"farice9"},"content":"            return CommandType.HIGHLIGHT;"},{"lineNumber":37,"author":{"gitId":"farice9"},"content":"        } else {"},{"lineNumber":38,"author":{"gitId":"farice9"},"content":"            return CommandType.UNIDENTIFIABLE;"},{"lineNumber":39,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"farice9"},"content":""},{"lineNumber":42,"author":{"gitId":"farice9"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"farice9"},"content":"     * Parses which mode to switch to for \"cd\" command."},{"lineNumber":44,"author":{"gitId":"farice9"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"farice9"},"content":"     * @param command raw string of user input"},{"lineNumber":46,"author":{"gitId":"farice9"},"content":"     * @return the destination mode"},{"lineNumber":47,"author":{"gitId":"farice9"},"content":"     * @throws InvalidModeException The mode index inserted is not available"},{"lineNumber":48,"author":{"gitId":"farice9"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"farice9"},"content":"    public static Mode getDestinationMode(String command) throws InvalidModeException {"},{"lineNumber":50,"author":{"gitId":"farice9"},"content":"        String commandModified \u003d standardizeCommand(command);"},{"lineNumber":51,"author":{"gitId":"farice9"},"content":"        int initialLength \u003d \"cd\".length();"},{"lineNumber":52,"author":{"gitId":"farice9"},"content":"        String destination \u003d commandModified.substring(initialLength).trim();"},{"lineNumber":53,"author":{"gitId":"farice9"},"content":""},{"lineNumber":54,"author":{"gitId":"farice9"},"content":"        if (destination.equals(\"1\") || destination.equals(ModeNames.MENU_NAME)) {"},{"lineNumber":55,"author":{"gitId":"farice9"},"content":"            return Mode.MENU;"},{"lineNumber":56,"author":{"gitId":"farice9"},"content":"        } else if (destination.equals(\"2\") || destination.equals(ModeNames.BOOKMARK_NAME)) {"},{"lineNumber":57,"author":{"gitId":"farice9"},"content":"            return Mode.BOOKMARK;"},{"lineNumber":58,"author":{"gitId":"farice9"},"content":"        } else if (destination.equals(\"3\") || destination.equals(ModeNames.TIMETABLE_NAME)) {"},{"lineNumber":59,"author":{"gitId":"farice9"},"content":"            return Mode.TIMETABLE;"},{"lineNumber":60,"author":{"gitId":"farice9"},"content":"        } else if (destination.equals(\"4\") || destination.equals(ModeNames.ACADEMIC_NAME)) {"},{"lineNumber":61,"author":{"gitId":"farice9"},"content":"            return Mode.ACADEMIC;"},{"lineNumber":62,"author":{"gitId":"farice9"},"content":"        } else if (destination.equals(\"5\") || destination.equals(ModeNames.FLASHCARD_NAME)) {"},{"lineNumber":63,"author":{"gitId":"farice9"},"content":"            return Mode.FLASHCARD;"},{"lineNumber":64,"author":{"gitId":"farice9"},"content":"        } else {"},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"            StudyItLog.logger.info(\"Invalid mode was chosen.\");"},{"lineNumber":66,"author":{"gitId":"farice9"},"content":"            throw new InvalidModeException();"},{"lineNumber":67,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"farice9"},"content":"}"}],"authorContributionMap":{"lingsihui":1,"farice9":68}},{"path":"src/main/java/studyit/CommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package studyit;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"public enum CommandType {"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":"    EXIT_PROGRAM,"},{"lineNumber":5,"author":{"gitId":"farice9"},"content":"    EXIT_MODE,"},{"lineNumber":6,"author":{"gitId":"farice9"},"content":"    LOCATION,"},{"lineNumber":7,"author":{"gitId":"farice9"},"content":"    CHANGE_MODE,"},{"lineNumber":8,"author":{"gitId":"farice9"},"content":"    UNIDENTIFIABLE,"},{"lineNumber":9,"author":{"gitId":"luziyi9898"},"content":"    HELP,"},{"lineNumber":10,"author":{"gitId":"farice9"},"content":"    HIGHLIGHT"},{"lineNumber":11,"author":{"gitId":"farice9"},"content":"}"}],"authorContributionMap":{"luziyi9898":1,"farice9":10}},{"path":"src/main/java/studyit/Mode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package studyit;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"public enum Mode {"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":"    MENU,"},{"lineNumber":5,"author":{"gitId":"farice9"},"content":"    BOOKMARK,"},{"lineNumber":6,"author":{"gitId":"farice9"},"content":"    TIMETABLE,"},{"lineNumber":7,"author":{"gitId":"farice9"},"content":"    ACADEMIC,"},{"lineNumber":8,"author":{"gitId":"farice9"},"content":"    FLASHCARD"},{"lineNumber":9,"author":{"gitId":"farice9"},"content":"}"}],"authorContributionMap":{"farice9":9}},{"path":"src/main/java/studyit/ModeNames.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package studyit;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"public class ModeNames {"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":"    public static final String BOOKMARK_NAME \u003d \"bookmark\";"},{"lineNumber":5,"author":{"gitId":"farice9"},"content":"    public static final String TIMETABLE_NAME \u003d \"timetable\";"},{"lineNumber":6,"author":{"gitId":"farice9"},"content":"    public static final String ACADEMIC_NAME \u003d \"academic\";"},{"lineNumber":7,"author":{"gitId":"farice9"},"content":"    public static final String FLASHCARD_NAME \u003d \"flashcard\";"},{"lineNumber":8,"author":{"gitId":"farice9"},"content":"    public static final String MENU_NAME \u003d \"menu\";"},{"lineNumber":9,"author":{"gitId":"farice9"},"content":""},{"lineNumber":10,"author":{"gitId":"farice9"},"content":"    public static String getCurrentModeName() {"},{"lineNumber":11,"author":{"gitId":"farice9"},"content":"        Mode currentMode \u003d StudyIt.getCurrentMode();"},{"lineNumber":12,"author":{"gitId":"farice9"},"content":""},{"lineNumber":13,"author":{"gitId":"farice9"},"content":"        switch (currentMode) {"},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"        case BOOKMARK:"},{"lineNumber":15,"author":{"gitId":"farice9"},"content":"            return BOOKMARK_NAME;"},{"lineNumber":16,"author":{"gitId":"farice9"},"content":"        case TIMETABLE:"},{"lineNumber":17,"author":{"gitId":"farice9"},"content":"            return TIMETABLE_NAME;"},{"lineNumber":18,"author":{"gitId":"farice9"},"content":"        case ACADEMIC:"},{"lineNumber":19,"author":{"gitId":"farice9"},"content":"            return ACADEMIC_NAME;"},{"lineNumber":20,"author":{"gitId":"farice9"},"content":"        case FLASHCARD:"},{"lineNumber":21,"author":{"gitId":"farice9"},"content":"            return FLASHCARD_NAME;"},{"lineNumber":22,"author":{"gitId":"farice9"},"content":"        default:"},{"lineNumber":23,"author":{"gitId":"farice9"},"content":"            return MENU_NAME;"},{"lineNumber":24,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"farice9"},"content":"}"}],"authorContributionMap":{"farice9":26}},{"path":"src/main/java/studyit/StudyIt.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package studyit;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import academic.AcademicRun;"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":"import timetable.TimeTableRun;"},{"lineNumber":5,"author":{"gitId":"hailqueenflo"},"content":"import flashcard.FlashcardRun;"},{"lineNumber":6,"author":{"gitId":"farice9"},"content":"import userinterface.MainMenu;"},{"lineNumber":7,"author":{"gitId":"farice9"},"content":"import userinterface.Ui;"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkRun;"},{"lineNumber":9,"author":{"gitId":"farice9"},"content":""},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":12,"author":{"gitId":"farice9"},"content":"public class StudyIt {"},{"lineNumber":13,"author":{"gitId":"farice9"},"content":"    private static Mode currentMode \u003d Mode.MENU;"},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"    private BookmarkRun bookmarkRun;"},{"lineNumber":15,"author":{"gitId":"farice9"},"content":"    private TimeTableRun timeTableRun;"},{"lineNumber":16,"author":{"gitId":"farice9"},"content":"    private FlashcardRun flashcardRun;"},{"lineNumber":17,"author":{"gitId":"farice9"},"content":"    private AcademicRun academicRun;"},{"lineNumber":18,"author":{"gitId":"farice9"},"content":""},{"lineNumber":19,"author":{"gitId":"farice9"},"content":"    public static void changeMode(Mode destinationMode) {"},{"lineNumber":20,"author":{"gitId":"farice9"},"content":"        currentMode \u003d destinationMode;"},{"lineNumber":21,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"farice9"},"content":""},{"lineNumber":23,"author":{"gitId":"farice9"},"content":"    public static Mode getCurrentMode() {"},{"lineNumber":24,"author":{"gitId":"farice9"},"content":"        return currentMode;"},{"lineNumber":25,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"farice9"},"content":""},{"lineNumber":27,"author":{"gitId":"farice9"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"     * Sets up each mode (bookmark,timetable,flashcard,academic)."},{"lineNumber":29,"author":{"gitId":"farice9"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"    public StudyIt() {"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"        StudyItLog.setUpLogger();"},{"lineNumber":32,"author":{"gitId":"farice9"},"content":"        StudyItLog.logger.info(\"Initializing program\");"},{"lineNumber":33,"author":{"gitId":"farice9"},"content":"        bookmarkRun \u003d new BookmarkRun();"},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"        timeTableRun \u003d new TimeTableRun();"},{"lineNumber":35,"author":{"gitId":"farice9"},"content":"        flashcardRun \u003d new FlashcardRun();"},{"lineNumber":36,"author":{"gitId":"farice9"},"content":"        academicRun \u003d new AcademicRun();"},{"lineNumber":37,"author":{"gitId":"farice9"},"content":"        StudyItLog.logger.info(\"Program initialized\");"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":40,"author":{"gitId":"farice9"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"farice9"},"content":"     * Main method for Study It. Initializes Study It and enter the running process."},{"lineNumber":42,"author":{"gitId":"farice9"},"content":"     * @param args arguments"},{"lineNumber":43,"author":{"gitId":"farice9"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"farice9"},"content":"    public static void main(String[] args) {"},{"lineNumber":45,"author":{"gitId":"farice9"},"content":"        StudyIt studyIt \u003d new StudyIt();"},{"lineNumber":46,"author":{"gitId":"farice9"},"content":"        MainMenu.printWelcome();"},{"lineNumber":47,"author":{"gitId":"farice9"},"content":"        studyIt.run();"},{"lineNumber":48,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"farice9"},"content":""},{"lineNumber":50,"author":{"gitId":"farice9"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"farice9"},"content":"     * Main running program of Study it. Keeps the program in a constant loop"},{"lineNumber":52,"author":{"gitId":"farice9"},"content":"     * until the exit command is called. It\u0027ll take in user input and process them."},{"lineNumber":53,"author":{"gitId":"farice9"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"    public void run() {"},{"lineNumber":55,"author":{"gitId":"farice9"},"content":"        CommandType commandType;"},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":"        StudyItLog.logger.info(\"Executing program\");"},{"lineNumber":57,"author":{"gitId":"farice9"},"content":"        // Repeatedly receive \u0026 process user command until \"exit\" is given"},{"lineNumber":58,"author":{"gitId":"farice9"},"content":"        do {"},{"lineNumber":59,"author":{"gitId":"farice9"},"content":"            // Collect user\u0027s command \u0026 identify the type"},{"lineNumber":60,"author":{"gitId":"farice9"},"content":"            String command \u003d Ui.inputCommand();"},{"lineNumber":61,"author":{"gitId":"farice9"},"content":"            commandType \u003d CommandParser.getCommandType(command);"},{"lineNumber":62,"author":{"gitId":"farice9"},"content":""},{"lineNumber":63,"author":{"gitId":"farice9"},"content":"            StudyItLog.logger.info(\"Command received: \" + command);"},{"lineNumber":64,"author":{"gitId":"farice9"},"content":"            StudyItLog.logger.info(\"Command type identified: \" + commandType);"},{"lineNumber":65,"author":{"gitId":"farice9"},"content":""},{"lineNumber":66,"author":{"gitId":"lingsihui"},"content":"            Command.executeCommand(command, commandType, bookmarkRun, flashcardRun,"},{"lineNumber":67,"author":{"gitId":"farice9"},"content":"                    timeTableRun, academicRun);"},{"lineNumber":68,"author":{"gitId":"farice9"},"content":"        } while (commandType !\u003d CommandType.EXIT_PROGRAM);"},{"lineNumber":69,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":70,"author":{"gitId":"lingsihui"},"content":"        StudyItLog.logger.info(\"End of program.\");"},{"lineNumber":71,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"farice9"},"content":"}"}],"authorContributionMap":{"hailqueenflo":1,"lingsihui":10,"slightlyharp":3,"farice9":58}},{"path":"src/main/java/studyit/StudyItLog.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package studyit;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import java.util.logging.LogManager;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"import java.util.logging.Level;"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import java.util.logging.ConsoleHandler;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":"import java.util.logging.FileHandler;"},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"import java.util.logging.SimpleFormatter;"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"public class StudyItLog {"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    public static Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":"    public static void setUpLogger() {"},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"        LogManager.getLogManager().reset();"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"        logger.setLevel(Level.ALL);"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"        ConsoleHandler ch \u003d new ConsoleHandler();"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"        ch.setLevel(Level.SEVERE);"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"        logger.addHandler(ch);"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":24,"author":{"gitId":"farice9"},"content":""},{"lineNumber":25,"author":{"gitId":"farice9"},"content":""},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"farice9"},"content":"            String dirPath \u003d \"logs\";"},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"            File fileDir \u003d new File(dirPath);"},{"lineNumber":29,"author":{"gitId":"farice9"},"content":""},{"lineNumber":30,"author":{"gitId":"farice9"},"content":"            if (!fileDir.exists()) {"},{"lineNumber":31,"author":{"gitId":"farice9"},"content":"                fileDir.mkdir();"},{"lineNumber":32,"author":{"gitId":"farice9"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"farice9"},"content":""},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"            FileHandler fh \u003d new FileHandler(\"logs/StudyIt_Logger.log\", true);"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"            fh.setFormatter(new SimpleFormatter());"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"            fh.setLevel(Level.FINE);"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"            logger.addHandler(fh);"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":30,"farice9":12}},{"path":"src/main/java/timetable/Activity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"public class Activity extends Event {"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":"    public Activity(String activityName, boolean isOnline, String linkOrVenue, Duration duration) {"},{"lineNumber":6,"author":{"gitId":"slightlyharp"},"content":"        super(activityName, isOnline, linkOrVenue, EventType.A);"},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":"        super.addPeriod(duration);"},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":"        assert super.periods.size() \u003d\u003d 1 : \"periods size should return 1\";"},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":"    public void addPeriod(Duration duration) {"},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":"    public String getStorageString() {"},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"        return \"|\" + periods.get(0).startDateTime.toString()"},{"lineNumber":18,"author":{"gitId":"slightlyharp"},"content":"                + \"|\" + periods.get(0).endDateTime.toString();"},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":20}},{"path":"src/main/java/timetable/DateList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"import exceptions.ClashScheduleException;"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"slightlyharp"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"public class DateList {"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":"    public List\u003cEventList\u003e dateList;"},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":"    public List\u003cLesson\u003e lessons;"},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":"    public List\u003cActivity\u003e activities;"},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":14,"author":{"gitId":"slightlyharp"},"content":"    public DateList() {"},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":"        dateList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":"        lessons \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"        activities \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":20,"author":{"gitId":"slightlyharp"},"content":"    public void addEvent(Event event) throws ClashScheduleException {"},{"lineNumber":21,"author":{"gitId":"slightlyharp"},"content":"        for (Duration duration: event.periods) {"},{"lineNumber":22,"author":{"gitId":"slightlyharp"},"content":"            boolean existList \u003d false;"},{"lineNumber":23,"author":{"gitId":"slightlyharp"},"content":"            for (EventList eventList: dateList) {"},{"lineNumber":24,"author":{"gitId":"slightlyharp"},"content":"                if (eventList.dateTag.equals(duration.startDateTime.toLocalDate())) {"},{"lineNumber":25,"author":{"gitId":"slightlyharp"},"content":"                    if (clashDetection(duration, eventList)) {"},{"lineNumber":26,"author":{"gitId":"slightlyharp"},"content":"                        throw new ClashScheduleException();"},{"lineNumber":27,"author":{"gitId":"slightlyharp"},"content":"                    } else {"},{"lineNumber":28,"author":{"gitId":"slightlyharp"},"content":"                        eventList.addEvent(event);"},{"lineNumber":29,"author":{"gitId":"slightlyharp"},"content":"                        existList \u003d true;"},{"lineNumber":30,"author":{"gitId":"slightlyharp"},"content":"                    }"},{"lineNumber":31,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":32,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"slightlyharp"},"content":"            if (!existList) {"},{"lineNumber":34,"author":{"gitId":"slightlyharp"},"content":"                EventList newList \u003d new EventList(duration.startDateTime);"},{"lineNumber":35,"author":{"gitId":"slightlyharp"},"content":"                newList.addEvent(event);"},{"lineNumber":36,"author":{"gitId":"slightlyharp"},"content":"                dateList.add(newList);"},{"lineNumber":37,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":41,"author":{"gitId":"slightlyharp"},"content":"    public boolean clashDetection(Duration duration, EventList eventList) {"},{"lineNumber":42,"author":{"gitId":"slightlyharp"},"content":"        for (int i \u003d 0; i \u003c duration.timeSlot.size(); i++) {"},{"lineNumber":43,"author":{"gitId":"slightlyharp"},"content":"            for (Event event: eventList.events) {"},{"lineNumber":44,"author":{"gitId":"slightlyharp"},"content":"                for (Duration period: event.periods) {"},{"lineNumber":45,"author":{"gitId":"slightlyharp"},"content":"                    if (duration.startDateTime.toLocalDate().equals(period.startDateTime.toLocalDate())"},{"lineNumber":46,"author":{"gitId":"slightlyharp"},"content":"                        \u0026\u0026 period.containTimeSlot(duration.timeSlot.get(i))) {"},{"lineNumber":47,"author":{"gitId":"slightlyharp"},"content":"                        return true;"},{"lineNumber":48,"author":{"gitId":"slightlyharp"},"content":"                    }"},{"lineNumber":49,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"slightlyharp"},"content":"        return false;"},{"lineNumber":53,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":54,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":56,"author":{"gitId":"slightlyharp"},"content":"    public void deleteActivity(int index, TimeTableStorage storage) {"},{"lineNumber":57,"author":{"gitId":"slightlyharp"},"content":"        activities.remove(index - 1);"},{"lineNumber":58,"author":{"gitId":"slightlyharp"},"content":"        dateList.clear();"},{"lineNumber":59,"author":{"gitId":"slightlyharp"},"content":"        storage.wipeFile();"},{"lineNumber":60,"author":{"gitId":"slightlyharp"},"content":"        for (Lesson lesson: lessons) {"},{"lineNumber":61,"author":{"gitId":"slightlyharp"},"content":"            try {"},{"lineNumber":62,"author":{"gitId":"slightlyharp"},"content":"                addEvent(lesson);"},{"lineNumber":63,"author":{"gitId":"slightlyharp"},"content":"            } catch (ClashScheduleException e) {"},{"lineNumber":64,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"There is a clash in schedule\");"},{"lineNumber":65,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"slightlyharp"},"content":"            storage.writeFile(lesson);"},{"lineNumber":67,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"slightlyharp"},"content":"        for (Activity activity: activities) {"},{"lineNumber":69,"author":{"gitId":"slightlyharp"},"content":"            try {"},{"lineNumber":70,"author":{"gitId":"slightlyharp"},"content":"                addEvent(activity);"},{"lineNumber":71,"author":{"gitId":"slightlyharp"},"content":"            } catch (ClashScheduleException e) {"},{"lineNumber":72,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"There is a clash in schedule\");"},{"lineNumber":73,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"slightlyharp"},"content":"            storage.writeFile(activity);"},{"lineNumber":75,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":78,"author":{"gitId":"slightlyharp"},"content":"    public void deleteLesson(int index, TimeTableStorage storage) {"},{"lineNumber":79,"author":{"gitId":"slightlyharp"},"content":"        lessons.remove(index - 1);"},{"lineNumber":80,"author":{"gitId":"slightlyharp"},"content":"        dateList.clear();"},{"lineNumber":81,"author":{"gitId":"slightlyharp"},"content":"        storage.wipeFile();"},{"lineNumber":82,"author":{"gitId":"slightlyharp"},"content":"        for (Lesson lesson: lessons) {"},{"lineNumber":83,"author":{"gitId":"slightlyharp"},"content":"            try {"},{"lineNumber":84,"author":{"gitId":"slightlyharp"},"content":"                addEvent(lesson);"},{"lineNumber":85,"author":{"gitId":"slightlyharp"},"content":"            } catch (ClashScheduleException e) {"},{"lineNumber":86,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"There is a clash in schedule\");"},{"lineNumber":87,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"slightlyharp"},"content":"            storage.writeFile(lesson);"},{"lineNumber":89,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"slightlyharp"},"content":"        for (Activity activity: activities) {"},{"lineNumber":91,"author":{"gitId":"slightlyharp"},"content":"            try {"},{"lineNumber":92,"author":{"gitId":"slightlyharp"},"content":"                addEvent(activity);"},{"lineNumber":93,"author":{"gitId":"slightlyharp"},"content":"            } catch (ClashScheduleException e) {"},{"lineNumber":94,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"There is a clash in schedule\");"},{"lineNumber":95,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"slightlyharp"},"content":"            storage.writeFile(activity);"},{"lineNumber":97,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":100,"author":{"gitId":"slightlyharp"},"content":"    public void cleanUpEvent(TimeTableStorage storage) {"},{"lineNumber":101,"author":{"gitId":"slightlyharp"},"content":"        for (int i \u003d 0; i \u003c activities.size(); i++) {"},{"lineNumber":102,"author":{"gitId":"slightlyharp"},"content":"            if (activities.get(i).periods.get(0).endDateTime.isBefore(LocalDateTime.now().minusDays(7))) {"},{"lineNumber":103,"author":{"gitId":"slightlyharp"},"content":"                deleteActivity(i + 1, storage);"},{"lineNumber":104,"author":{"gitId":"slightlyharp"},"content":"                i--;"},{"lineNumber":105,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"slightlyharp"},"content":"        for (int i \u003d 0; i \u003c lessons.size(); i++) {"},{"lineNumber":108,"author":{"gitId":"slightlyharp"},"content":"            int periodLastIndex \u003d lessons.get(i).periods.size() - 1;"},{"lineNumber":109,"author":{"gitId":"slightlyharp"},"content":"            LocalDateTime lastDate \u003d lessons.get(i).periods.get(periodLastIndex).endDateTime;"},{"lineNumber":110,"author":{"gitId":"slightlyharp"},"content":"            if (lastDate.isBefore(LocalDateTime.now().minusDays(7))) {"},{"lineNumber":111,"author":{"gitId":"slightlyharp"},"content":"                deleteLesson(i + 1, storage);"},{"lineNumber":112,"author":{"gitId":"slightlyharp"},"content":"                i--;"},{"lineNumber":113,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":116}},{"path":"src/main/java/timetable/Duration.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":"public class Duration {"},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":"    public LocalDateTime startDateTime;"},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"    public LocalDateTime endDateTime;"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":"    public List\u003cInteger\u003e timeSlot;"},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":"    public Duration(LocalDateTime startDateTime, LocalDateTime endDateTime) {"},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":"        this.startDateTime \u003d startDateTime;"},{"lineNumber":14,"author":{"gitId":"slightlyharp"},"content":"        this.endDateTime \u003d endDateTime;"},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":"        timeSlot \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":"        int start \u003d getTime(startDateTime);"},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"        int end \u003d getTime(endDateTime);"},{"lineNumber":18,"author":{"gitId":"slightlyharp"},"content":"        for (int time \u003d start; time \u003c end; time +\u003d 100) {"},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":"            timeSlot.add(time);"},{"lineNumber":20,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":23,"author":{"gitId":"slightlyharp"},"content":"    public Duration(LocalDateTime startDateTime) {"},{"lineNumber":24,"author":{"gitId":"slightlyharp"},"content":"        this.startDateTime \u003d startDateTime;"},{"lineNumber":25,"author":{"gitId":"slightlyharp"},"content":"        this.endDateTime \u003d startDateTime.plusHours(1);"},{"lineNumber":26,"author":{"gitId":"slightlyharp"},"content":"        timeSlot \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"slightlyharp"},"content":"        int start \u003d getTime(startDateTime);"},{"lineNumber":28,"author":{"gitId":"slightlyharp"},"content":"        int end \u003d getTime(endDateTime);"},{"lineNumber":29,"author":{"gitId":"slightlyharp"},"content":"        for (int time \u003d start; time \u003c end; time +\u003d 100) {"},{"lineNumber":30,"author":{"gitId":"slightlyharp"},"content":"            timeSlot.add(time);"},{"lineNumber":31,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":34,"author":{"gitId":"slightlyharp"},"content":"    public int getTime(LocalDateTime dateTime) {"},{"lineNumber":35,"author":{"gitId":"slightlyharp"},"content":"        return dateTime.getHour() * 100 + dateTime.getMinute();"},{"lineNumber":36,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":38,"author":{"gitId":"slightlyharp"},"content":"    public boolean containTimeSlot(int timeSlot) {"},{"lineNumber":39,"author":{"gitId":"slightlyharp"},"content":"        return this.timeSlot.contains(timeSlot);"},{"lineNumber":40,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":41}},{"path":"src/main/java/timetable/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":"public abstract class Event {"},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":"    public String name;"},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"    public boolean isOnline;"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":"    public String linkOrVenue;"},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":"    public List\u003cDuration\u003e periods;"},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":"    public EventType eventType;"},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":14,"author":{"gitId":"slightlyharp"},"content":"    public Event(String name, boolean isOnline, String linkOrVenue,EventType eventType) {"},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":"        this.name \u003d name;"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":"        this.isOnline \u003d isOnline;"},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"        this.linkOrVenue \u003d linkOrVenue;"},{"lineNumber":18,"author":{"gitId":"slightlyharp"},"content":"        periods \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":"        this.eventType \u003d eventType;"},{"lineNumber":20,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":22,"author":{"gitId":"slightlyharp"},"content":"    public void addPeriod(Duration period) {"},{"lineNumber":23,"author":{"gitId":"slightlyharp"},"content":"        this.periods.add(period);"},{"lineNumber":24,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":26,"author":{"gitId":"slightlyharp"},"content":"    public abstract String getStorageString();"},{"lineNumber":27,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":27}},{"path":"src/main/java/timetable/EventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"slightlyharp"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":"public class EventList {"},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"    public LocalDate dateTag;"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":"    public List\u003cEvent\u003e events;"},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":"    public EventList(LocalDateTime dateTime) {"},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":"        dateTag \u003d dateTime.toLocalDate();"},{"lineNumber":14,"author":{"gitId":"slightlyharp"},"content":"        events \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"    public void addEvent(Event event) {"},{"lineNumber":18,"author":{"gitId":"slightlyharp"},"content":"        events.add(event);"},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":20}},{"path":"src/main/java/timetable/EventType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"public enum EventType {"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":"    A,L"},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":5}},{"path":"src/main/java/timetable/Lesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"public class Lesson extends Event {"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":"    public int numPerWeek;"},{"lineNumber":6,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":"    public Lesson(String moduleCode, String linkOrVenue, boolean isOnline, int numPerWeek) {"},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":"        super(moduleCode, isOnline,linkOrVenue,EventType.L);"},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"        this.numPerWeek \u003d numPerWeek;"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":"    public String getStorageString() {"},{"lineNumber":14,"author":{"gitId":"slightlyharp"},"content":"        String storageString \u003d \"|\" + numPerWeek + \"|\" + super.periods.size();"},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":"        for (Duration period : super.periods) {"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":"            storageString \u003d String.format(\"%s|%s\", storageString, period.startDateTime.toString());"},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"            storageString \u003d String.format(\"%s|%s\", storageString, period.endDateTime.toString());"},{"lineNumber":18,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":"        return storageString;"},{"lineNumber":20,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":21}},{"path":"src/main/java/timetable/Message.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"public class Message {"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":"    public static final String printSuccessfulClassAddition \u003d \"This class has been added successfully! \""},{"lineNumber":6,"author":{"gitId":"farice9"},"content":"            + \"\\nUse \\\"show schedule\\\" to view your timetable or use \\\"list class\\\" to see in the list form.\";"},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":8,"author":{"gitId":"hailqueenflo"},"content":"    public static final String printSuccessfulActivityAddition \u003d \"This activity has been added successfully! \""},{"lineNumber":9,"author":{"gitId":"farice9"},"content":"            + \"\\nUse \\\"show schedule\\\" to view your schedule or use \\\"list activity\\\" to see in the list form.\";"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":"    public static final String printShowSchedule \u003d \"This is your schedule for the next 7 days.\";"},{"lineNumber":12,"author":{"gitId":"hailqueenflo"},"content":"    public static final String printShowLink \u003d \"This is the conference link you need for the next two hours.\";"},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":14,"author":{"gitId":"slightlyharp"},"content":"    public static final String printInvalidEvent \u003d"},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":"            \"Sorry you have entered an invalid Timetable Command or your input is in the wrong format!\\n\""},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":"                    + \"Please enter a valid Timetable Command or input \\\"help\\\" to find out the correct format!\\n\";"},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"hailqueenflo":2,"slightlyharp":13,"farice9":2}},{"path":"src/main/java/timetable/TablePrinter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":6,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":"public class TablePrinter {"},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":"    private static final String space \u003d \" \";"},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":"    public static void printTable(List\u003cEventList\u003e dateList) {"},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":"        String[][] table \u003d new String[8][25];"},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":"        table[0][0] \u003d space;"},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":"        for (int i \u003d 0; i \u003c 2400; i +\u003d 100) {"},{"lineNumber":14,"author":{"gitId":"slightlyharp"},"content":"            table[0][i / 100 + 1] \u003d String.format(\"%04d\", i);"},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {"},{"lineNumber":18,"author":{"gitId":"slightlyharp"},"content":"            table[i + 1][0] \u003d LocalDate.now().plusDays(i).getDayOfWeek().name();"},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":"            boolean skip \u003d false;"},{"lineNumber":20,"author":{"gitId":"slightlyharp"},"content":"            for (int dateListIndex \u003d 0; dateListIndex \u003c dateList.size() \u0026\u0026 !skip; dateListIndex++) {"},{"lineNumber":21,"author":{"gitId":"slightlyharp"},"content":"                if (dateList.get(dateListIndex).dateTag.equals(LocalDate.now().plusDays(i))) {"},{"lineNumber":22,"author":{"gitId":"slightlyharp"},"content":"                    for (int j \u003d 0; j \u003c 24; j++) {"},{"lineNumber":23,"author":{"gitId":"slightlyharp"},"content":"                        boolean isFree \u003d true;"},{"lineNumber":24,"author":{"gitId":"slightlyharp"},"content":"                        for (int eventListIndex \u003d 0; eventListIndex \u003c dateList.get(dateListIndex).events.size();"},{"lineNumber":25,"author":{"gitId":"slightlyharp"},"content":"                             eventListIndex++) {"},{"lineNumber":26,"author":{"gitId":"slightlyharp"},"content":"                            Event current \u003d dateList.get(dateListIndex).events.get(eventListIndex);"},{"lineNumber":27,"author":{"gitId":"slightlyharp"},"content":"                            for (Duration period: current.periods) {"},{"lineNumber":28,"author":{"gitId":"slightlyharp"},"content":"                                if (period.containTimeSlot(j * 100) \u0026\u0026 period.startDateTime"},{"lineNumber":29,"author":{"gitId":"slightlyharp"},"content":"                                        .toLocalDate().equals(dateList.get(dateListIndex).dateTag)) {"},{"lineNumber":30,"author":{"gitId":"slightlyharp"},"content":"                                    table[i + 1][j + 1] \u003d current.name;"},{"lineNumber":31,"author":{"gitId":"slightlyharp"},"content":"                                    isFree \u003d false;"},{"lineNumber":32,"author":{"gitId":"slightlyharp"},"content":"                                }"},{"lineNumber":33,"author":{"gitId":"slightlyharp"},"content":"                            }"},{"lineNumber":34,"author":{"gitId":"slightlyharp"},"content":"                        }"},{"lineNumber":35,"author":{"gitId":"slightlyharp"},"content":"                        if (isFree) {"},{"lineNumber":36,"author":{"gitId":"slightlyharp"},"content":"                            table[i + 1][j + 1] \u003d space;"},{"lineNumber":37,"author":{"gitId":"slightlyharp"},"content":"                        }"},{"lineNumber":38,"author":{"gitId":"slightlyharp"},"content":"                    }"},{"lineNumber":39,"author":{"gitId":"slightlyharp"},"content":"                    skip \u003d true;"},{"lineNumber":40,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":41,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"slightlyharp"},"content":"            for (int j \u003d 0; j \u003c 24 \u0026\u0026 !skip; j++) {"},{"lineNumber":43,"author":{"gitId":"slightlyharp"},"content":"                table[i + 1][j + 1] \u003d space;"},{"lineNumber":44,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":47,"author":{"gitId":"slightlyharp"},"content":"        for (int i \u003d 0; i \u003c 25; i++) {"},{"lineNumber":48,"author":{"gitId":"slightlyharp"},"content":"            for (int j \u003d 0; j \u003c 8; j++) {"},{"lineNumber":49,"author":{"gitId":"slightlyharp"},"content":"                System.out.printf(\"%-10s|\", table[j][i].substring(0, Math.min(table[j][i].length(), 10)));"},{"lineNumber":50,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"slightlyharp"},"content":"            System.out.println(\"\");"},{"lineNumber":52,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":55,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":55}},{"path":"src/main/java/timetable/TimeTableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"import exceptions.InvalidDayOfTheWeekException;"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":"import exceptions.InvalidTimeException;"},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":6,"author":{"gitId":"slightlyharp"},"content":"import java.time.DateTimeException;"},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":"import java.time.DayOfWeek;"},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"import java.time.LocalDateTime;"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":"public class TimeTableCommand {"},{"lineNumber":14,"author":{"gitId":"slightlyharp"},"content":"    public static Lesson addClass() throws InvalidDayOfTheWeekException, InvalidTimeException {"},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":"        System.out.println(\"Please enter module code: \");"},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"        boolean isInvalid \u003d true;"},{"lineNumber":18,"author":{"gitId":"slightlyharp"},"content":"        String moduleCode \u003d null;"},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":"        while (isInvalid) {"},{"lineNumber":20,"author":{"gitId":"slightlyharp"},"content":"            moduleCode \u003d in.nextLine().replace(\" \", \"\");"},{"lineNumber":21,"author":{"gitId":"slightlyharp"},"content":"            if (moduleCode.length() \u003e 8) {"},{"lineNumber":22,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"The code exceeded the maximum number of characters allowed. Please enter again: \");"},{"lineNumber":23,"author":{"gitId":"slightlyharp"},"content":"            } else if (moduleCode.length() \u003c 1) {"},{"lineNumber":24,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"Please enter a valid module code\");"},{"lineNumber":25,"author":{"gitId":"slightlyharp"},"content":"            } else {"},{"lineNumber":26,"author":{"gitId":"slightlyharp"},"content":"                isInvalid \u003d false;"},{"lineNumber":27,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"slightlyharp"},"content":"        isInvalid \u003d true;"},{"lineNumber":30,"author":{"gitId":"slightlyharp"},"content":"        System.out.println(\"Is the class online? (yes/no)\");"},{"lineNumber":31,"author":{"gitId":"slightlyharp"},"content":"        boolean isOnline \u003d false;"},{"lineNumber":32,"author":{"gitId":"slightlyharp"},"content":"        while (isInvalid) {"},{"lineNumber":33,"author":{"gitId":"slightlyharp"},"content":"            String status \u003d in.nextLine();"},{"lineNumber":34,"author":{"gitId":"slightlyharp"},"content":"            if (status.equals(\"yes\") || status.equals(\"online\")) {"},{"lineNumber":35,"author":{"gitId":"slightlyharp"},"content":"                isOnline \u003d true;"},{"lineNumber":36,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"Please enter zoom link: \");"},{"lineNumber":37,"author":{"gitId":"slightlyharp"},"content":"                isInvalid \u003d false;"},{"lineNumber":38,"author":{"gitId":"slightlyharp"},"content":"            } else if (status.equals(\"no\") || status.equals(\"offline\")) {"},{"lineNumber":39,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"Please enter the venue: \");"},{"lineNumber":40,"author":{"gitId":"slightlyharp"},"content":"                isInvalid \u003d false;"},{"lineNumber":41,"author":{"gitId":"slightlyharp"},"content":"            } else {"},{"lineNumber":42,"author":{"gitId":"hailqueenflo"},"content":"                System.out.println(\"Invalid command!\\n Is the class online? (yes/no)\");"},{"lineNumber":43,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"slightlyharp"},"content":"        isInvalid \u003d true;"},{"lineNumber":46,"author":{"gitId":"slightlyharp"},"content":"        String linkOrVenue \u003d null;"},{"lineNumber":47,"author":{"gitId":"slightlyharp"},"content":"        while (isInvalid) {"},{"lineNumber":48,"author":{"gitId":"slightlyharp"},"content":"            linkOrVenue \u003d in.nextLine();"},{"lineNumber":49,"author":{"gitId":"slightlyharp"},"content":"            if (isOnline \u0026\u0026 (!linkOrVenue.contains(\".\") || linkOrVenue.contains(\" \"))) {"},{"lineNumber":50,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"The link you have entered is invalid. Please enter again\");"},{"lineNumber":51,"author":{"gitId":"slightlyharp"},"content":"            } else {"},{"lineNumber":52,"author":{"gitId":"slightlyharp"},"content":"                isInvalid \u003d false;"},{"lineNumber":53,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"slightlyharp"},"content":"        System.out.println(\"What are the days and time of the lesson?\\n(e.g. Monday 5-8pm, Tuesday 6-9pm)\");"},{"lineNumber":56,"author":{"gitId":"slightlyharp"},"content":"        final String [] periods \u003d in.nextLine().split(\", \");"},{"lineNumber":57,"author":{"gitId":"slightlyharp"},"content":"        isInvalid \u003d true;"},{"lineNumber":58,"author":{"gitId":"slightlyharp"},"content":"        int repeat \u003d 0;"},{"lineNumber":59,"author":{"gitId":"slightlyharp"},"content":"        while (isInvalid) {"},{"lineNumber":60,"author":{"gitId":"slightlyharp"},"content":"            try {"},{"lineNumber":61,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"How many weeks is the lesson?\");"},{"lineNumber":62,"author":{"gitId":"slightlyharp"},"content":"                repeat \u003d Integer.parseInt(in.nextLine());"},{"lineNumber":63,"author":{"gitId":"slightlyharp"},"content":"                if (repeat \u003c 54) {"},{"lineNumber":64,"author":{"gitId":"slightlyharp"},"content":"                    isInvalid \u003d false;"},{"lineNumber":65,"author":{"gitId":"slightlyharp"},"content":"                } else {"},{"lineNumber":66,"author":{"gitId":"slightlyharp"},"content":"                    System.out.println(\"Your lesson should not last for more than a year \""},{"lineNumber":67,"author":{"gitId":"slightlyharp"},"content":"                            + \"Please enter a number less than 53\");"},{"lineNumber":68,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"slightlyharp"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":70,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"You have enter an invalid value\");"},{"lineNumber":71,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"slightlyharp"},"content":"        isInvalid \u003d true;"},{"lineNumber":74,"author":{"gitId":"slightlyharp"},"content":"        LocalDateTime startDay \u003d null;"},{"lineNumber":75,"author":{"gitId":"slightlyharp"},"content":"        while (isInvalid) {"},{"lineNumber":76,"author":{"gitId":"slightlyharp"},"content":"            try {"},{"lineNumber":77,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"Which date does the lesson start? (eg. 26/10/2020)\");"},{"lineNumber":78,"author":{"gitId":"slightlyharp"},"content":"                startDay \u003d getDate(in.nextLine());"},{"lineNumber":79,"author":{"gitId":"slightlyharp"},"content":"                isInvalid \u003d false;"},{"lineNumber":80,"author":{"gitId":"slightlyharp"},"content":"            } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"},{"lineNumber":81,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"You have entered an invalid date format. Please try again\");"},{"lineNumber":82,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"slightlyharp"},"content":"        Lesson lesson \u003d new Lesson(moduleCode, linkOrVenue, isOnline, repeat);"},{"lineNumber":85,"author":{"gitId":"slightlyharp"},"content":"        addClassPeriods(periods, repeat, startDay, lesson);"},{"lineNumber":86,"author":{"gitId":"slightlyharp"},"content":"        return lesson;"},{"lineNumber":87,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":89,"author":{"gitId":"slightlyharp"},"content":"    public static void addClassPeriods(String[] periods, int repeat, LocalDateTime startDay,"},{"lineNumber":90,"author":{"gitId":"slightlyharp"},"content":"                                       Lesson lesson) throws InvalidDayOfTheWeekException, InvalidTimeException {"},{"lineNumber":91,"author":{"gitId":"slightlyharp"},"content":"        int startDayNum \u003d startDay.getDayOfWeek().getValue();"},{"lineNumber":92,"author":{"gitId":"slightlyharp"},"content":"        for (int i \u003d 0; i \u003c repeat; i++) {"},{"lineNumber":93,"author":{"gitId":"slightlyharp"},"content":"            for (String period : periods) {"},{"lineNumber":94,"author":{"gitId":"slightlyharp"},"content":"                String [] dayAndTime \u003d period.split((\" \"));"},{"lineNumber":95,"author":{"gitId":"slightlyharp"},"content":"                String day \u003d dayAndTime[0].toUpperCase().replace(\" \", \"\");"},{"lineNumber":96,"author":{"gitId":"slightlyharp"},"content":"                String time \u003d dayAndTime[1];"},{"lineNumber":97,"author":{"gitId":"slightlyharp"},"content":"                int dayNum;"},{"lineNumber":98,"author":{"gitId":"slightlyharp"},"content":"                try {"},{"lineNumber":99,"author":{"gitId":"slightlyharp"},"content":"                    dayNum \u003d DayOfWeek.valueOf(day).getValue();"},{"lineNumber":100,"author":{"gitId":"slightlyharp"},"content":"                } catch (IllegalArgumentException e) {"},{"lineNumber":101,"author":{"gitId":"slightlyharp"},"content":"                    throw new InvalidDayOfTheWeekException();"},{"lineNumber":102,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"slightlyharp"},"content":"                String start;"},{"lineNumber":104,"author":{"gitId":"slightlyharp"},"content":"                String end;"},{"lineNumber":105,"author":{"gitId":"slightlyharp"},"content":"                int startTime;"},{"lineNumber":106,"author":{"gitId":"slightlyharp"},"content":"                int endTime;"},{"lineNumber":107,"author":{"gitId":"slightlyharp"},"content":"                try {"},{"lineNumber":108,"author":{"gitId":"slightlyharp"},"content":"                    start \u003d time.split(\"-\")[0];"},{"lineNumber":109,"author":{"gitId":"slightlyharp"},"content":"                    end \u003d time.split(\"-\")[1];"},{"lineNumber":110,"author":{"gitId":"slightlyharp"},"content":"                    startTime \u003d Integer.parseInt(start.replaceAll(\"[^0-9]\", \"\"));"},{"lineNumber":111,"author":{"gitId":"slightlyharp"},"content":"                    endTime \u003d Integer.parseInt(end.replaceAll(\"[^0-9]\", \"\"));"},{"lineNumber":112,"author":{"gitId":"slightlyharp"},"content":"                    if (start.contains(\"am\") || start.contains(\"pm\")) {"},{"lineNumber":113,"author":{"gitId":"slightlyharp"},"content":"                        if (start.contains(\"pm\") \u0026\u0026 startTime !\u003d 12) {"},{"lineNumber":114,"author":{"gitId":"slightlyharp"},"content":"                            startTime +\u003d 12;"},{"lineNumber":115,"author":{"gitId":"slightlyharp"},"content":"                        } else if (start.contains(\"am\") \u0026\u0026 startTime \u003d\u003d 12) {"},{"lineNumber":116,"author":{"gitId":"slightlyharp"},"content":"                            startTime \u003d 0;"},{"lineNumber":117,"author":{"gitId":"slightlyharp"},"content":"                        }"},{"lineNumber":118,"author":{"gitId":"slightlyharp"},"content":"                        if (end.contains(\"pm\") \u0026\u0026 startTime !\u003d 12) {"},{"lineNumber":119,"author":{"gitId":"slightlyharp"},"content":"                            endTime +\u003d 12;"},{"lineNumber":120,"author":{"gitId":"slightlyharp"},"content":"                        } else if (end.contains(\"am\") \u0026\u0026 startTime \u003d\u003d 12) {"},{"lineNumber":121,"author":{"gitId":"slightlyharp"},"content":"                            startTime \u003d 0;"},{"lineNumber":122,"author":{"gitId":"slightlyharp"},"content":"                        }"},{"lineNumber":123,"author":{"gitId":"slightlyharp"},"content":"                    } else if (end.contains(\"pm\")) {"},{"lineNumber":124,"author":{"gitId":"slightlyharp"},"content":"                        endTime +\u003d 12;"},{"lineNumber":125,"author":{"gitId":"slightlyharp"},"content":"                        if (startTime !\u003d 12) {"},{"lineNumber":126,"author":{"gitId":"slightlyharp"},"content":"                            startTime +\u003d 12;"},{"lineNumber":127,"author":{"gitId":"slightlyharp"},"content":"                        }"},{"lineNumber":128,"author":{"gitId":"slightlyharp"},"content":"                    } else if (end.contains(\"am\") \u0026\u0026 startTime \u003d\u003d 12) {"},{"lineNumber":129,"author":{"gitId":"slightlyharp"},"content":"                        startTime \u003d 0;"},{"lineNumber":130,"author":{"gitId":"slightlyharp"},"content":"                    }"},{"lineNumber":131,"author":{"gitId":"slightlyharp"},"content":"                    if (startTime \u003e\u003d endTime) {"},{"lineNumber":132,"author":{"gitId":"slightlyharp"},"content":"                        throw new InvalidTimeException();"},{"lineNumber":133,"author":{"gitId":"slightlyharp"},"content":"                    }"},{"lineNumber":134,"author":{"gitId":"slightlyharp"},"content":"                } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {"},{"lineNumber":135,"author":{"gitId":"slightlyharp"},"content":"                    throw new InvalidTimeException();"},{"lineNumber":136,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":137,"author":{"gitId":"slightlyharp"},"content":"                int daysDifference \u003d dayNum - startDayNum;"},{"lineNumber":138,"author":{"gitId":"slightlyharp"},"content":"                if (daysDifference \u003c 0) {"},{"lineNumber":139,"author":{"gitId":"slightlyharp"},"content":"                    daysDifference +\u003d 7;"},{"lineNumber":140,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":141,"author":{"gitId":"slightlyharp"},"content":"                LocalDateTime startDateTime \u003d startDay.plusDays(daysDifference).plusHours(startTime).plusDays(7 * i);"},{"lineNumber":142,"author":{"gitId":"slightlyharp"},"content":"                LocalDateTime endDateTime \u003d startDateTime.withHour(endTime).plusDays(7 * i);"},{"lineNumber":143,"author":{"gitId":"slightlyharp"},"content":"                Duration duration \u003d new Duration(startDateTime, endDateTime);"},{"lineNumber":144,"author":{"gitId":"slightlyharp"},"content":"                lesson.addPeriod(duration);"},{"lineNumber":145,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":146,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":149,"author":{"gitId":"slightlyharp"},"content":"    public static Activity addActivity() {"},{"lineNumber":150,"author":{"gitId":"slightlyharp"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":151,"author":{"gitId":"slightlyharp"},"content":"        boolean isInvalid \u003d true;"},{"lineNumber":152,"author":{"gitId":"slightlyharp"},"content":"        String activityName \u003d null;"},{"lineNumber":153,"author":{"gitId":"slightlyharp"},"content":"        System.out.println(\"Please enter the activity: \");"},{"lineNumber":154,"author":{"gitId":"slightlyharp"},"content":"        while (isInvalid) {"},{"lineNumber":155,"author":{"gitId":"slightlyharp"},"content":"            activityName \u003d in.nextLine();"},{"lineNumber":156,"author":{"gitId":"slightlyharp"},"content":"            if  (activityName.replace(\" \", \"\").length() \u003c 1) {"},{"lineNumber":157,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"Please enter a valid activity\");"},{"lineNumber":158,"author":{"gitId":"slightlyharp"},"content":"            } else {"},{"lineNumber":159,"author":{"gitId":"slightlyharp"},"content":"                isInvalid \u003d false;"},{"lineNumber":160,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":161,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"slightlyharp"},"content":"        isInvalid \u003d true;"},{"lineNumber":163,"author":{"gitId":"slightlyharp"},"content":"        System.out.println(\"Is the activity online? (yes/no)\");"},{"lineNumber":164,"author":{"gitId":"slightlyharp"},"content":"        boolean isOnline \u003d false;"},{"lineNumber":165,"author":{"gitId":"slightlyharp"},"content":"        while (isInvalid) {"},{"lineNumber":166,"author":{"gitId":"slightlyharp"},"content":"            String status \u003d in.nextLine();"},{"lineNumber":167,"author":{"gitId":"slightlyharp"},"content":"            if (status.equals(\"yes\") || status.equals(\"online\")) {"},{"lineNumber":168,"author":{"gitId":"slightlyharp"},"content":"                isOnline \u003d true;"},{"lineNumber":169,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"Please enter zoom link: \");"},{"lineNumber":170,"author":{"gitId":"slightlyharp"},"content":"                isInvalid \u003d false;"},{"lineNumber":171,"author":{"gitId":"slightlyharp"},"content":"            } else if (status.equals(\"no\") || status.equals(\"offline\")) {"},{"lineNumber":172,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"Please enter the venue: \");"},{"lineNumber":173,"author":{"gitId":"slightlyharp"},"content":"                isInvalid \u003d false;"},{"lineNumber":174,"author":{"gitId":"slightlyharp"},"content":"            } else {"},{"lineNumber":175,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"Invalid command!\\n Is the class online? (yes/no)\");"},{"lineNumber":176,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":177,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"slightlyharp"},"content":"        isInvalid \u003d true;"},{"lineNumber":179,"author":{"gitId":"slightlyharp"},"content":"        String linkOrVenue \u003d null;"},{"lineNumber":180,"author":{"gitId":"slightlyharp"},"content":"        while (isInvalid) {"},{"lineNumber":181,"author":{"gitId":"slightlyharp"},"content":"            linkOrVenue \u003d in.nextLine();"},{"lineNumber":182,"author":{"gitId":"slightlyharp"},"content":"            if (isOnline \u0026\u0026 (!linkOrVenue.contains(\".\") || linkOrVenue.contains(\" \"))) {"},{"lineNumber":183,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"The link you have entered is invalid. Please enter again\");"},{"lineNumber":184,"author":{"gitId":"slightlyharp"},"content":"            } else {"},{"lineNumber":185,"author":{"gitId":"slightlyharp"},"content":"                isInvalid \u003d false;"},{"lineNumber":186,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":187,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"slightlyharp"},"content":"        isInvalid \u003d true;"},{"lineNumber":189,"author":{"gitId":"slightlyharp"},"content":"        LocalDateTime date \u003d null;"},{"lineNumber":190,"author":{"gitId":"slightlyharp"},"content":"        while (isInvalid) {"},{"lineNumber":191,"author":{"gitId":"slightlyharp"},"content":"            System.out.println(\"Please enter the date of your activity (e.g. 28/10/2020): \");"},{"lineNumber":192,"author":{"gitId":"slightlyharp"},"content":"            try {"},{"lineNumber":193,"author":{"gitId":"slightlyharp"},"content":"                date \u003d getDate(in.nextLine());"},{"lineNumber":194,"author":{"gitId":"slightlyharp"},"content":"                isInvalid \u003d false;"},{"lineNumber":195,"author":{"gitId":"slightlyharp"},"content":"            } catch (NumberFormatException | ArrayIndexOutOfBoundsException | DateTimeException e) {"},{"lineNumber":196,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"You have entered an invalid date format. Please try again\");"},{"lineNumber":197,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":198,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"slightlyharp"},"content":"        isInvalid \u003d true;"},{"lineNumber":200,"author":{"gitId":"slightlyharp"},"content":"        String start;"},{"lineNumber":201,"author":{"gitId":"slightlyharp"},"content":"        String end;"},{"lineNumber":202,"author":{"gitId":"slightlyharp"},"content":"        int startTime;"},{"lineNumber":203,"author":{"gitId":"slightlyharp"},"content":"        int endTime;"},{"lineNumber":204,"author":{"gitId":"slightlyharp"},"content":"        LocalDateTime startDateTime \u003d null;"},{"lineNumber":205,"author":{"gitId":"slightlyharp"},"content":"        LocalDateTime endDateTime \u003d null;"},{"lineNumber":206,"author":{"gitId":"slightlyharp"},"content":"        while (isInvalid) {"},{"lineNumber":207,"author":{"gitId":"slightlyharp"},"content":"            System.out.println(\"Please enter the time of your activity (e.g. 6-9pm): \");"},{"lineNumber":208,"author":{"gitId":"slightlyharp"},"content":"            String time \u003d in.nextLine();"},{"lineNumber":209,"author":{"gitId":"slightlyharp"},"content":"            try {"},{"lineNumber":210,"author":{"gitId":"slightlyharp"},"content":"                start \u003d time.split(\"-\")[0];"},{"lineNumber":211,"author":{"gitId":"slightlyharp"},"content":"                end \u003d time.split(\"-\")[1];"},{"lineNumber":212,"author":{"gitId":"slightlyharp"},"content":"                startTime \u003d Integer.parseInt(start.replaceAll(\"[^0-9]\", \"\"));"},{"lineNumber":213,"author":{"gitId":"slightlyharp"},"content":"                endTime \u003d Integer.parseInt(end.replaceAll(\"[^0-9]\", \"\"));"},{"lineNumber":214,"author":{"gitId":"slightlyharp"},"content":"                if (start.contains(\"am\") || start.contains(\"pm\")) {"},{"lineNumber":215,"author":{"gitId":"slightlyharp"},"content":"                    if (start.contains(\"pm\") \u0026\u0026 startTime !\u003d 12) {"},{"lineNumber":216,"author":{"gitId":"slightlyharp"},"content":"                        startTime +\u003d 12;"},{"lineNumber":217,"author":{"gitId":"slightlyharp"},"content":"                    } else if (start.contains(\"am\") \u0026\u0026 startTime \u003d\u003d 12) {"},{"lineNumber":218,"author":{"gitId":"slightlyharp"},"content":"                        startTime \u003d 0;"},{"lineNumber":219,"author":{"gitId":"slightlyharp"},"content":"                    }"},{"lineNumber":220,"author":{"gitId":"slightlyharp"},"content":"                    if (end.contains(\"pm\") \u0026\u0026 endTime !\u003d 12) {"},{"lineNumber":221,"author":{"gitId":"slightlyharp"},"content":"                        endTime +\u003d 12;"},{"lineNumber":222,"author":{"gitId":"slightlyharp"},"content":"                    } else if (end.contains(\"am\") \u0026\u0026 startTime \u003d\u003d 12) {"},{"lineNumber":223,"author":{"gitId":"slightlyharp"},"content":"                        startTime \u003d 0;"},{"lineNumber":224,"author":{"gitId":"slightlyharp"},"content":"                    }"},{"lineNumber":225,"author":{"gitId":"slightlyharp"},"content":"                } else if (end.contains(\"pm\")) {"},{"lineNumber":226,"author":{"gitId":"slightlyharp"},"content":"                    endTime +\u003d 12;"},{"lineNumber":227,"author":{"gitId":"slightlyharp"},"content":"                    if (startTime !\u003d 12) {"},{"lineNumber":228,"author":{"gitId":"slightlyharp"},"content":"                        startTime +\u003d 12;"},{"lineNumber":229,"author":{"gitId":"slightlyharp"},"content":"                    }"},{"lineNumber":230,"author":{"gitId":"slightlyharp"},"content":"                } else if (end.contains(\"am\") \u0026\u0026 startTime \u003d\u003d 12) {"},{"lineNumber":231,"author":{"gitId":"slightlyharp"},"content":"                    startTime \u003d 0;"},{"lineNumber":232,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":233,"author":{"gitId":"slightlyharp"},"content":"                if (startTime \u003c endTime) {"},{"lineNumber":234,"author":{"gitId":"slightlyharp"},"content":"                    isInvalid \u003d false;"},{"lineNumber":235,"author":{"gitId":"slightlyharp"},"content":"                    startDateTime \u003d date.plusHours(startTime);"},{"lineNumber":236,"author":{"gitId":"slightlyharp"},"content":"                    endDateTime \u003d date.withHour(endTime);"},{"lineNumber":237,"author":{"gitId":"slightlyharp"},"content":"                } else {"},{"lineNumber":238,"author":{"gitId":"slightlyharp"},"content":"                    System.out.println(\"You have entered an ending time that is not later than the starting time.\""},{"lineNumber":239,"author":{"gitId":"slightlyharp"},"content":"                            + \" Please try again \");"},{"lineNumber":240,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":241,"author":{"gitId":"slightlyharp"},"content":"            } catch (ArrayIndexOutOfBoundsException | NumberFormatException | DateTimeException e) {"},{"lineNumber":242,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"You have entered an invalid time. Please try again\");"},{"lineNumber":243,"author":{"gitId":"slightlyharp"},"content":"                isInvalid \u003d true;"},{"lineNumber":244,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":245,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":247,"author":{"gitId":"slightlyharp"},"content":"        Duration duration \u003d new Duration(startDateTime, endDateTime);"},{"lineNumber":248,"author":{"gitId":"slightlyharp"},"content":"        return new Activity(activityName, isOnline, linkOrVenue, duration);"},{"lineNumber":249,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":251,"author":{"gitId":"slightlyharp"},"content":"    public static void showLink(DateList dateList) {"},{"lineNumber":252,"author":{"gitId":"slightlyharp"},"content":"        LocalDate todayDate \u003d LocalDateTime.now().toLocalDate();"},{"lineNumber":253,"author":{"gitId":"slightlyharp"},"content":"        int now \u003d LocalDateTime.now().toLocalTime().getHour() * 100;"},{"lineNumber":254,"author":{"gitId":"slightlyharp"},"content":"        for (EventList eventList: dateList.dateList) {"},{"lineNumber":255,"author":{"gitId":"slightlyharp"},"content":"            if (eventList.dateTag.equals(todayDate)) {"},{"lineNumber":256,"author":{"gitId":"slightlyharp"},"content":"                accessEventList(eventList, todayDate, now);"},{"lineNumber":257,"author":{"gitId":"slightlyharp"},"content":"                return;"},{"lineNumber":258,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":259,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":260,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":262,"author":{"gitId":"slightlyharp"},"content":"    public static void accessEventList(EventList eventList, LocalDate todayDate, int now) {"},{"lineNumber":263,"author":{"gitId":"slightlyharp"},"content":"        boolean exist \u003d false;"},{"lineNumber":264,"author":{"gitId":"slightlyharp"},"content":"        for (Event event: eventList.events) {"},{"lineNumber":265,"author":{"gitId":"slightlyharp"},"content":"            for (Duration period: event.periods) {"},{"lineNumber":266,"author":{"gitId":"slightlyharp"},"content":"                if ((period.timeSlot.contains(now) || period.timeSlot.contains(now + 100)"},{"lineNumber":267,"author":{"gitId":"slightlyharp"},"content":"                        || period.timeSlot.contains(now + 200))"},{"lineNumber":268,"author":{"gitId":"slightlyharp"},"content":"                        \u0026\u0026 period.startDateTime.toLocalDate().equals(todayDate)) {"},{"lineNumber":269,"author":{"gitId":"slightlyharp"},"content":"                    System.out.print(event.linkOrVenue + \" | \" + event.name + \"\\n\");"},{"lineNumber":270,"author":{"gitId":"slightlyharp"},"content":"                    exist \u003d true;"},{"lineNumber":271,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":272,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":273,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":274,"author":{"gitId":"slightlyharp"},"content":"        if (!exist) {"},{"lineNumber":275,"author":{"gitId":"slightlyharp"},"content":"            System.out.println(\"You do not have anything scheduled in the next two hours\");"},{"lineNumber":276,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":277,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":278,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":279,"author":{"gitId":"slightlyharp"},"content":"    public static void showActivities(DateList dateList) {"},{"lineNumber":280,"author":{"gitId":"slightlyharp"},"content":"        int index \u003d 0;"},{"lineNumber":281,"author":{"gitId":"slightlyharp"},"content":"        for (Activity activity: dateList.activities) {"},{"lineNumber":282,"author":{"gitId":"slightlyharp"},"content":"            index++;"},{"lineNumber":283,"author":{"gitId":"slightlyharp"},"content":"            System.out.println(index + \". \" + activity.name + \" \""},{"lineNumber":284,"author":{"gitId":"slightlyharp"},"content":"                    + activity.periods.get(0).startDateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))"},{"lineNumber":285,"author":{"gitId":"slightlyharp"},"content":"                    + (activity.isOnline ? \" online link: \" : \" offline venue: \") + activity.linkOrVenue);"},{"lineNumber":286,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":287,"author":{"gitId":"slightlyharp"},"content":"        if (index \u003d\u003d 0) {"},{"lineNumber":288,"author":{"gitId":"slightlyharp"},"content":"            System.out.println(\"There is no activity in the list\");"},{"lineNumber":289,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":290,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":291,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":292,"author":{"gitId":"slightlyharp"},"content":"    public static void showClass(DateList dateList) {"},{"lineNumber":293,"author":{"gitId":"slightlyharp"},"content":"        int index \u003d 0;"},{"lineNumber":294,"author":{"gitId":"slightlyharp"},"content":"        for (Lesson lesson: dateList.lessons) {"},{"lineNumber":295,"author":{"gitId":"slightlyharp"},"content":"            index++;"},{"lineNumber":296,"author":{"gitId":"slightlyharp"},"content":"            System.out.print(index + \". \" + lesson.name + \" \");"},{"lineNumber":297,"author":{"gitId":"slightlyharp"},"content":"            DayOfWeek first \u003d null;"},{"lineNumber":298,"author":{"gitId":"slightlyharp"},"content":"            try {"},{"lineNumber":299,"author":{"gitId":"slightlyharp"},"content":"                first \u003d lesson.periods.get(0).startDateTime.getDayOfWeek();"},{"lineNumber":300,"author":{"gitId":"slightlyharp"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":301,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"There is error in saved classes, do you want to reformat the data file?\");"},{"lineNumber":302,"author":{"gitId":"slightlyharp"},"content":"                Scanner in \u003d new Scanner(System.in);"},{"lineNumber":303,"author":{"gitId":"slightlyharp"},"content":"                if (in.nextLine().equals(\"yes\")) {"},{"lineNumber":304,"author":{"gitId":"slightlyharp"},"content":"                    new TimeTableStorage(\"data/timetable.txt\", dateList).wipeFile();"},{"lineNumber":305,"author":{"gitId":"slightlyharp"},"content":"                } else {"},{"lineNumber":306,"author":{"gitId":"slightlyharp"},"content":"                    System.out.println(\"Please edit the data to fix this this.\");"},{"lineNumber":307,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":308,"author":{"gitId":"slightlyharp"},"content":"                return;"},{"lineNumber":309,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":310,"author":{"gitId":"slightlyharp"},"content":"            int num \u003d 1;"},{"lineNumber":311,"author":{"gitId":"slightlyharp"},"content":"            System.out.print(first);"},{"lineNumber":312,"author":{"gitId":"slightlyharp"},"content":"            try {"},{"lineNumber":313,"author":{"gitId":"slightlyharp"},"content":"                while (first !\u003d lesson.periods.get(num).startDateTime.getDayOfWeek()) {"},{"lineNumber":314,"author":{"gitId":"slightlyharp"},"content":"                    System.out.print(\", \" + lesson.periods.get(num).startDateTime.getDayOfWeek());"},{"lineNumber":315,"author":{"gitId":"slightlyharp"},"content":"                    num++;"},{"lineNumber":316,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":317,"author":{"gitId":"slightlyharp"},"content":"                System.out.print(\"\\n\");"},{"lineNumber":318,"author":{"gitId":"slightlyharp"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":319,"author":{"gitId":"slightlyharp"},"content":"                System.out.print(\"\\n\");"},{"lineNumber":320,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":321,"author":{"gitId":"slightlyharp"},"content":"            System.out.println((lesson.isOnline ? \" online link:\" : \" offline venue: \")"},{"lineNumber":322,"author":{"gitId":"slightlyharp"},"content":"                    + lesson.linkOrVenue);"},{"lineNumber":323,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":324,"author":{"gitId":"slightlyharp"},"content":"        if (index \u003d\u003d 0) {"},{"lineNumber":325,"author":{"gitId":"slightlyharp"},"content":"            System.out.println(\"There is no classes in the list\");"},{"lineNumber":326,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":327,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":328,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":329,"author":{"gitId":"slightlyharp"},"content":"    public static LocalDateTime getDate(String date) {"},{"lineNumber":330,"author":{"gitId":"slightlyharp"},"content":"        String [] dateArray \u003d date.split(\"/\");"},{"lineNumber":331,"author":{"gitId":"slightlyharp"},"content":"        int day \u003d Integer.parseInt(dateArray[0]);"},{"lineNumber":332,"author":{"gitId":"slightlyharp"},"content":"        int month \u003d Integer.parseInt(dateArray[1]);"},{"lineNumber":333,"author":{"gitId":"slightlyharp"},"content":"        int year \u003d Integer.parseInt(dateArray[2]);"},{"lineNumber":334,"author":{"gitId":"slightlyharp"},"content":"        return LocalDateTime.of(year, month, day, 0, 0);"},{"lineNumber":335,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":336,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":337,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":338,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"hailqueenflo":1,"slightlyharp":337}},{"path":"src/main/java/timetable/TimeTableParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"import exceptions.ClashScheduleException;"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":"import exceptions.InvalidDayOfTheWeekException;"},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":"import exceptions.InvalidTimeException;"},{"lineNumber":6,"author":{"gitId":"farice9"},"content":"import studyit.StudyItLog;"},{"lineNumber":7,"author":{"gitId":"farice9"},"content":""},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":"import java.time.DateTimeException;"},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"import java.time.LocalDateTime;"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":"public class TimeTableParser {"},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":"    public static void commandParser(String command, DateList dateList, TimeTableStorage storage) {"},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":"        switch (command) {"},{"lineNumber":14,"author":{"gitId":"slightlyharp"},"content":"        case \"show schedule\":"},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":"            System.out.println(Message.printShowSchedule);"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":"            TablePrinter.printTable(dateList.dateList);"},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"            return;"},{"lineNumber":18,"author":{"gitId":"slightlyharp"},"content":"        case \"show link\":"},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":"            System.out.println(Message.printShowLink);"},{"lineNumber":20,"author":{"gitId":"slightlyharp"},"content":"            TimeTableCommand.showLink(dateList);"},{"lineNumber":21,"author":{"gitId":"slightlyharp"},"content":"            return;"},{"lineNumber":22,"author":{"gitId":"slightlyharp"},"content":"        case \"list activity\":"},{"lineNumber":23,"author":{"gitId":"slightlyharp"},"content":"            TimeTableCommand.showActivities(dateList);"},{"lineNumber":24,"author":{"gitId":"slightlyharp"},"content":"            return;"},{"lineNumber":25,"author":{"gitId":"slightlyharp"},"content":"        case \"list class\":"},{"lineNumber":26,"author":{"gitId":"slightlyharp"},"content":"            TimeTableCommand.showClass(dateList);"},{"lineNumber":27,"author":{"gitId":"slightlyharp"},"content":"            return;"},{"lineNumber":28,"author":{"gitId":"slightlyharp"},"content":"        case \"clean up\":"},{"lineNumber":29,"author":{"gitId":"slightlyharp"},"content":"            dateList.cleanUpEvent(storage);"},{"lineNumber":30,"author":{"gitId":"slightlyharp"},"content":"            System.out.println(\"Clean up completed\");"},{"lineNumber":31,"author":{"gitId":"slightlyharp"},"content":"            return;"},{"lineNumber":32,"author":{"gitId":"slightlyharp"},"content":"        default:"},{"lineNumber":33,"author":{"gitId":"slightlyharp"},"content":"            String[] words \u003d command.split(\" \");"},{"lineNumber":34,"author":{"gitId":"slightlyharp"},"content":"            if (words.length \u003d\u003d 2) {"},{"lineNumber":35,"author":{"gitId":"slightlyharp"},"content":"                try {"},{"lineNumber":36,"author":{"gitId":"slightlyharp"},"content":"                    String action \u003d words[0];"},{"lineNumber":37,"author":{"gitId":"slightlyharp"},"content":"                    String type \u003d words[1];"},{"lineNumber":38,"author":{"gitId":"slightlyharp"},"content":"                    if (action.equals(\"add\")) {"},{"lineNumber":39,"author":{"gitId":"slightlyharp"},"content":"                        switch (type) {"},{"lineNumber":40,"author":{"gitId":"slightlyharp"},"content":"                        case \"activity\": {"},{"lineNumber":41,"author":{"gitId":"slightlyharp"},"content":"                            Activity activity \u003d TimeTableCommand.addActivity();"},{"lineNumber":42,"author":{"gitId":"slightlyharp"},"content":"                            dateList.addEvent(activity);"},{"lineNumber":43,"author":{"gitId":"slightlyharp"},"content":"                            dateList.activities.add(activity);"},{"lineNumber":44,"author":{"gitId":"slightlyharp"},"content":"                            storage.writeFile(activity);"},{"lineNumber":45,"author":{"gitId":"hailqueenflo"},"content":"                            System.out.println(Message.printSuccessfulActivityAddition);"},{"lineNumber":46,"author":{"gitId":"slightlyharp"},"content":"                        }"},{"lineNumber":47,"author":{"gitId":"slightlyharp"},"content":"                        break;"},{"lineNumber":48,"author":{"gitId":"slightlyharp"},"content":"                        case \"class\": {"},{"lineNumber":49,"author":{"gitId":"slightlyharp"},"content":"                            Lesson lesson \u003d TimeTableCommand.addClass();"},{"lineNumber":50,"author":{"gitId":"slightlyharp"},"content":"                            dateList.addEvent(lesson);"},{"lineNumber":51,"author":{"gitId":"slightlyharp"},"content":"                            dateList.lessons.add(lesson);"},{"lineNumber":52,"author":{"gitId":"slightlyharp"},"content":"                            storage.writeFile(lesson);"},{"lineNumber":53,"author":{"gitId":"slightlyharp"},"content":"                            System.out.println(Message.printSuccessfulClassAddition);"},{"lineNumber":54,"author":{"gitId":"slightlyharp"},"content":"                        }"},{"lineNumber":55,"author":{"gitId":"slightlyharp"},"content":"                        break;"},{"lineNumber":56,"author":{"gitId":"slightlyharp"},"content":"                        default:"},{"lineNumber":57,"author":{"gitId":"slightlyharp"},"content":"                            System.out.print((Message.printInvalidEvent));"},{"lineNumber":58,"author":{"gitId":"slightlyharp"},"content":"                        }"},{"lineNumber":59,"author":{"gitId":"slightlyharp"},"content":"                    } else {"},{"lineNumber":60,"author":{"gitId":"slightlyharp"},"content":"                        System.out.print(Message.printInvalidEvent);"},{"lineNumber":61,"author":{"gitId":"slightlyharp"},"content":"                    }"},{"lineNumber":62,"author":{"gitId":"slightlyharp"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":63,"author":{"gitId":"hailqueenflo"},"content":"                    System.out.println(\"Input for days and time of the lesson is invalid. Please add the class again.\");"},{"lineNumber":64,"author":{"gitId":"slightlyharp"},"content":"                    StudyItLog.logger.warning(\"Invalid timetable command: Invalid date input\");"},{"lineNumber":65,"author":{"gitId":"slightlyharp"},"content":"                } catch (InvalidDayOfTheWeekException e) {"},{"lineNumber":66,"author":{"gitId":"hailqueenflo"},"content":"                    System.out.println(\"Day of the week input is invalid. Please add the class again.\");"},{"lineNumber":67,"author":{"gitId":"farice9"},"content":"                    StudyItLog.logger.warning(\"Invalid timetable command: Invalid day of the week input\");"},{"lineNumber":68,"author":{"gitId":"slightlyharp"},"content":"                } catch (ClashScheduleException e) {"},{"lineNumber":69,"author":{"gitId":"hailqueenflo"},"content":"                    System.out.println(\"There is a clash in schedule! Please check your schedule and add again.\");"},{"lineNumber":70,"author":{"gitId":"slightlyharp"},"content":"                } catch (InvalidTimeException | DateTimeException e) {"},{"lineNumber":71,"author":{"gitId":"hailqueenflo"},"content":"                    System.out.println(\"Input for time of the lesson is invalid! Please add class again.\");"},{"lineNumber":72,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":73,"author":{"gitId":"slightlyharp"},"content":"            } else if (command.contains(\"delete activity\") \u0026\u0026 words.length \u003d\u003d 3) {"},{"lineNumber":74,"author":{"gitId":"slightlyharp"},"content":"                try {"},{"lineNumber":75,"author":{"gitId":"slightlyharp"},"content":"                    int index \u003d Integer.parseInt(words[2]);"},{"lineNumber":76,"author":{"gitId":"slightlyharp"},"content":"                    System.out.println(dateList.activities.get(index - 1).name + \" has been deleted\");"},{"lineNumber":77,"author":{"gitId":"slightlyharp"},"content":"                    dateList.deleteActivity(index, storage);"},{"lineNumber":78,"author":{"gitId":"slightlyharp"},"content":"                } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {"},{"lineNumber":79,"author":{"gitId":"slightlyharp"},"content":"                    System.out.println(Message.printInvalidEvent);"},{"lineNumber":80,"author":{"gitId":"slightlyharp"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":81,"author":{"gitId":"hailqueenflo"},"content":"                    System.out.println(\"The number you have entered is invalid.\");"},{"lineNumber":82,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"slightlyharp"},"content":"            } else if (command.contains(\"delete class\") \u0026\u0026 words.length \u003d\u003d 3) {"},{"lineNumber":84,"author":{"gitId":"slightlyharp"},"content":"                try {"},{"lineNumber":85,"author":{"gitId":"slightlyharp"},"content":"                    int index \u003d Integer.parseInt(words[2]);"},{"lineNumber":86,"author":{"gitId":"slightlyharp"},"content":"                    System.out.println(dateList.lessons.get(index - 1).name + \" has been deleted\");"},{"lineNumber":87,"author":{"gitId":"slightlyharp"},"content":"                    dateList.deleteLesson(index, storage);"},{"lineNumber":88,"author":{"gitId":"slightlyharp"},"content":"                } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {"},{"lineNumber":89,"author":{"gitId":"slightlyharp"},"content":"                    System.out.println(Message.printInvalidEvent);"},{"lineNumber":90,"author":{"gitId":"slightlyharp"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":91,"author":{"gitId":"hailqueenflo"},"content":"                    System.out.println(\"The number you have entered is invalid.\");"},{"lineNumber":92,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"slightlyharp"},"content":"            } else {"},{"lineNumber":94,"author":{"gitId":"slightlyharp"},"content":"                System.out.print(Message.printInvalidEvent);"},{"lineNumber":95,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":99,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":100,"author":{"gitId":"slightlyharp"},"content":"    public static void fileParser(String command, DateList dateList) {"},{"lineNumber":101,"author":{"gitId":"slightlyharp"},"content":"        String[] words \u003d command.split(\"\\\\|\");"},{"lineNumber":102,"author":{"gitId":"slightlyharp"},"content":"        EventType eventType \u003d EventType.valueOf(words[0]);"},{"lineNumber":103,"author":{"gitId":"slightlyharp"},"content":"        String name \u003d words[1];"},{"lineNumber":104,"author":{"gitId":"slightlyharp"},"content":"        String linkOrVenue \u003d words[2];"},{"lineNumber":105,"author":{"gitId":"slightlyharp"},"content":"        boolean isOnline \u003d Boolean.parseBoolean(words[3]);"},{"lineNumber":106,"author":{"gitId":"slightlyharp"},"content":"        try {"},{"lineNumber":107,"author":{"gitId":"slightlyharp"},"content":"            switch (eventType) {"},{"lineNumber":108,"author":{"gitId":"slightlyharp"},"content":"            case L: {"},{"lineNumber":109,"author":{"gitId":"slightlyharp"},"content":"                int numPerWeek \u003d Integer.parseInt(words[4]);"},{"lineNumber":110,"author":{"gitId":"slightlyharp"},"content":"                int durationNum \u003d Integer.parseInt(words[5]);"},{"lineNumber":111,"author":{"gitId":"slightlyharp"},"content":"                Lesson lesson \u003d new Lesson(name, linkOrVenue, isOnline, numPerWeek);"},{"lineNumber":112,"author":{"gitId":"slightlyharp"},"content":"                for (int i \u003d 0; i \u003c durationNum; i++) {"},{"lineNumber":113,"author":{"gitId":"slightlyharp"},"content":"                    assert words[5 + 2 * i + 1].contains(\"-\") : \"this word should be the datetime format\";"},{"lineNumber":114,"author":{"gitId":"slightlyharp"},"content":"                    LocalDateTime start \u003d LocalDateTime.parse(words[5 + 2 * i + 1]);"},{"lineNumber":115,"author":{"gitId":"slightlyharp"},"content":"                    assert words[5 + 2 * i + 2].contains(\"-\") : \"this word should be the datetime format\";"},{"lineNumber":116,"author":{"gitId":"slightlyharp"},"content":"                    LocalDateTime end \u003d LocalDateTime.parse(words[5 + 2 * i + 2]);"},{"lineNumber":117,"author":{"gitId":"slightlyharp"},"content":"                    Duration duration \u003d new Duration(start, end);"},{"lineNumber":118,"author":{"gitId":"slightlyharp"},"content":"                    lesson.addPeriod(duration);"},{"lineNumber":119,"author":{"gitId":"slightlyharp"},"content":"                }"},{"lineNumber":120,"author":{"gitId":"slightlyharp"},"content":"                dateList.addEvent(lesson);"},{"lineNumber":121,"author":{"gitId":"slightlyharp"},"content":"                dateList.lessons.add(lesson);"},{"lineNumber":122,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"slightlyharp"},"content":"            break;"},{"lineNumber":124,"author":{"gitId":"slightlyharp"},"content":"            case A: {"},{"lineNumber":125,"author":{"gitId":"slightlyharp"},"content":"                LocalDateTime start \u003d LocalDateTime.parse(words[4]);"},{"lineNumber":126,"author":{"gitId":"slightlyharp"},"content":"                LocalDateTime end \u003d LocalDateTime.parse(words[5]);"},{"lineNumber":127,"author":{"gitId":"slightlyharp"},"content":"                Duration duration \u003d new Duration(start, end);"},{"lineNumber":128,"author":{"gitId":"slightlyharp"},"content":"                Activity activity \u003d new Activity(name, isOnline, linkOrVenue, duration);"},{"lineNumber":129,"author":{"gitId":"slightlyharp"},"content":"                dateList.addEvent(activity);"},{"lineNumber":130,"author":{"gitId":"slightlyharp"},"content":"                dateList.activities.add(activity);"},{"lineNumber":131,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":132,"author":{"gitId":"slightlyharp"},"content":"            break;"},{"lineNumber":133,"author":{"gitId":"slightlyharp"},"content":"            default:"},{"lineNumber":134,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"slightlyharp"},"content":"        } catch (ClashScheduleException e) {"},{"lineNumber":136,"author":{"gitId":"hailqueenflo"},"content":"            System.out.println(\"There is a clash in schedule!\");"},{"lineNumber":137,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":140,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":141,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"hailqueenflo":8,"slightlyharp":130,"farice9":3}},{"path":"src/main/java/timetable/TimeTableRun.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import studyit.StudyItLog;"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":""},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":"public class TimeTableRun {"},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"    public DateList events;"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":"    public TimeTableStorage storage;"},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":"    public TimeTableRun() {"},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":"        events \u003d new DateList();"},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"        storage \u003d new TimeTableStorage(\"data/timetable.txt\", events);"},{"lineNumber":15,"author":{"gitId":"farice9"},"content":"        StudyItLog.logger.info(\"Academic mode initialized\");"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":18,"author":{"gitId":"slightlyharp"},"content":"    public void run(String command) {"},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":"        TimeTableParser.commandParser(command, events, storage);"},{"lineNumber":20,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":17,"farice9":4}},{"path":"src/main/java/timetable/TimeTableStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import studyit.StudyItLog;"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":""},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"slightlyharp"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":"public class TimeTableStorage {"},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":14,"author":{"gitId":"slightlyharp"},"content":"    private static File taskFile;"},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":"    private final String filePath;"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"    public TimeTableStorage(String filePath, DateList dateList) {"},{"lineNumber":18,"author":{"gitId":"farice9"},"content":"        // Creates data directory"},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":"        String dirPath \u003d \"data\";"},{"lineNumber":20,"author":{"gitId":"farice9"},"content":"        File fileDir \u003d new File(dirPath);"},{"lineNumber":21,"author":{"gitId":"farice9"},"content":""},{"lineNumber":22,"author":{"gitId":"farice9"},"content":"        if (!fileDir.exists()) {"},{"lineNumber":23,"author":{"gitId":"farice9"},"content":"            fileDir.mkdir();"},{"lineNumber":24,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"farice9"},"content":""},{"lineNumber":26,"author":{"gitId":"slightlyharp"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":27,"author":{"gitId":"slightlyharp"},"content":"        taskFile \u003d new File(filePath);"},{"lineNumber":28,"author":{"gitId":"slightlyharp"},"content":"        checkFile(dateList);"},{"lineNumber":29,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":31,"author":{"gitId":"slightlyharp"},"content":"    public void checkFile(DateList dateList) {"},{"lineNumber":32,"author":{"gitId":"slightlyharp"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"slightlyharp"},"content":"            if (taskFile.createNewFile()) {"},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"                System.out.println(\"data/timetable.txt is not found, creating a new file now!\");"},{"lineNumber":35,"author":{"gitId":"slightlyharp"},"content":"            } else {"},{"lineNumber":36,"author":{"gitId":"slightlyharp"},"content":"                loadFile(dateList);"},{"lineNumber":37,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"slightlyharp"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"slightlyharp"},"content":"            System.out.println(\"An error occurred: \" + e.getMessage());"},{"lineNumber":40,"author":{"gitId":"farice9"},"content":"            StudyItLog.logger.warning(\"Problem loading timetable storage file\\n\" + e);"},{"lineNumber":41,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":44,"author":{"gitId":"slightlyharp"},"content":"    private void loadFile(DateList dateList) {"},{"lineNumber":45,"author":{"gitId":"slightlyharp"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"slightlyharp"},"content":"            Scanner s \u003d new Scanner(taskFile);"},{"lineNumber":47,"author":{"gitId":"slightlyharp"},"content":"            while (s.hasNext()) {"},{"lineNumber":48,"author":{"gitId":"slightlyharp"},"content":"                String command \u003d s.nextLine();"},{"lineNumber":49,"author":{"gitId":"slightlyharp"},"content":"                TimeTableParser.fileParser(command, dateList);"},{"lineNumber":50,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"slightlyharp"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":52,"author":{"gitId":"slightlyharp"},"content":"            System.out.println(\"File not found\");"},{"lineNumber":53,"author":{"gitId":"slightlyharp"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException | NumberFormatException e) {"},{"lineNumber":54,"author":{"gitId":"slightlyharp"},"content":"            Scanner in \u003d new Scanner(System.in);"},{"lineNumber":55,"author":{"gitId":"slightlyharp"},"content":"            System.out.println(\"Data file for timetable is corrupted do you want to format the file\");"},{"lineNumber":56,"author":{"gitId":"slightlyharp"},"content":"            if (in.nextLine().equals(\"yes\")) {"},{"lineNumber":57,"author":{"gitId":"slightlyharp"},"content":"                wipeFile();"},{"lineNumber":58,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"Data file for timetable have been formatted\");"},{"lineNumber":59,"author":{"gitId":"slightlyharp"},"content":"            } else {"},{"lineNumber":60,"author":{"gitId":"slightlyharp"},"content":"                System.out.println(\"Please exit the program and edit timetable.txt \""},{"lineNumber":61,"author":{"gitId":"slightlyharp"},"content":"                        + \"manually before using this feature.\");"},{"lineNumber":62,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":66,"author":{"gitId":"slightlyharp"},"content":"    public void writeFile(Event event) {"},{"lineNumber":67,"author":{"gitId":"slightlyharp"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"slightlyharp"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);"},{"lineNumber":69,"author":{"gitId":"slightlyharp"},"content":"            if (event.eventType.equals(EventType.L)) {"},{"lineNumber":70,"author":{"gitId":"slightlyharp"},"content":"                fw.write(\"L|\" + event.name + \"|\" + event.linkOrVenue + \"|\" + event.isOnline"},{"lineNumber":71,"author":{"gitId":"slightlyharp"},"content":"                        + event.getStorageString() + System.lineSeparator());"},{"lineNumber":72,"author":{"gitId":"slightlyharp"},"content":"            } else if (event.eventType.equals(EventType.A)) {"},{"lineNumber":73,"author":{"gitId":"slightlyharp"},"content":"                fw.write(\"A|\" + event.name + \"|\" + event.linkOrVenue + \"|\" + event.isOnline"},{"lineNumber":74,"author":{"gitId":"slightlyharp"},"content":"                        + event.getStorageString() + System.lineSeparator());"},{"lineNumber":75,"author":{"gitId":"slightlyharp"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"slightlyharp"},"content":"            fw.close();"},{"lineNumber":77,"author":{"gitId":"slightlyharp"},"content":"        } catch (IOException e) {"},{"lineNumber":78,"author":{"gitId":"slightlyharp"},"content":"            System.out.println(\"Something went wrong\" + e.getMessage());"},{"lineNumber":79,"author":{"gitId":"farice9"},"content":"            StudyItLog.logger.warning(\"Problem writing to timetable storage file\\n\" + e);"},{"lineNumber":80,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":83,"author":{"gitId":"slightlyharp"},"content":"    public void wipeFile() {"},{"lineNumber":84,"author":{"gitId":"slightlyharp"},"content":"        try {"},{"lineNumber":85,"author":{"gitId":"slightlyharp"},"content":"            FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":86,"author":{"gitId":"slightlyharp"},"content":"            fw.write(\"\");"},{"lineNumber":87,"author":{"gitId":"slightlyharp"},"content":"            fw.close();"},{"lineNumber":88,"author":{"gitId":"slightlyharp"},"content":"        } catch (IOException e) {"},{"lineNumber":89,"author":{"gitId":"slightlyharp"},"content":"            System.out.println(\"Something went wrong\" + e.getMessage());"},{"lineNumber":90,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":93,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":81,"farice9":12}},{"path":"src/main/java/userinterface/ErrorMessage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package userinterface;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"public class ErrorMessage extends Ui {"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":""},{"lineNumber":5,"author":{"gitId":"farice9"},"content":"    public static void printUnidentifiableCommand() {"},{"lineNumber":6,"author":{"gitId":"farice9"},"content":"        printLine(\"Sorry that\u0027s not an available command! Please try again\\n\""},{"lineNumber":7,"author":{"gitId":"farice9"},"content":"                + \"or you can type \\\"help\\\" for more information\");"},{"lineNumber":8,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"farice9"},"content":""},{"lineNumber":10,"author":{"gitId":"luziyi9898"},"content":"    public static void printUnidentifiableInput() {"},{"lineNumber":11,"author":{"gitId":"luziyi9898"},"content":"        printLine(\"Sorry that\u0027s not an available input! Please try again\\n\""},{"lineNumber":12,"author":{"gitId":"luziyi9898"},"content":"                + \"or you can type \\\"help\\\" for more information\");"},{"lineNumber":13,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":15,"author":{"gitId":"luziyi9898"},"content":"    public static void printInvalidNumber() {"},{"lineNumber":16,"author":{"gitId":"luziyi9898"},"content":"        printLine(\"Please enter a valid number when applicable!\\n\""},{"lineNumber":17,"author":{"gitId":"luziyi9898"},"content":"                + \"or you can type \\\"help\\\" for more information\");"},{"lineNumber":18,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":20,"author":{"gitId":"luziyi9898"},"content":"    public static void printInvalidGrade() {"},{"lineNumber":21,"author":{"gitId":"luziyi9898"},"content":"        printLine(\"Please enter a valid grade!\\n\""},{"lineNumber":22,"author":{"gitId":"luziyi9898"},"content":"                + \"or you can type \\\"help\\\" for more information\");"},{"lineNumber":23,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"luziyi9898"},"content":"    "},{"lineNumber":25,"author":{"gitId":"luziyi9898"},"content":"    public static void printInvalidMc() {"},{"lineNumber":26,"author":{"gitId":"luziyi9898"},"content":"        printLine(\"MC must be a positive integer!\\n\""},{"lineNumber":27,"author":{"gitId":"luziyi9898"},"content":"                + \"or you can type \\\"help\\\" for more information\");"},{"lineNumber":28,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":30,"author":{"gitId":"luziyi9898"},"content":"    public static void printInvalidEmail() {"},{"lineNumber":31,"author":{"gitId":"luziyi9898"},"content":"        printLine(\"Please enter a valid email with the structure of abc@xyz!\\n\""},{"lineNumber":32,"author":{"gitId":"luziyi9898"},"content":"                + \"or you can type \\\"help\\\" for more information\");"},{"lineNumber":33,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":35,"author":{"gitId":"luziyi9898"},"content":"    public static void printRepeatedGrade() {"},{"lineNumber":36,"author":{"gitId":"luziyi9898"},"content":"        printLine(\"This grade has already been added!\");"},{"lineNumber":37,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":39,"author":{"gitId":"luziyi9898"},"content":"    public static void printEmptyInput() {"},{"lineNumber":40,"author":{"gitId":"luziyi9898"},"content":"        printLine(\"You cannot leave this input empty!\\n\""},{"lineNumber":41,"author":{"gitId":"luziyi9898"},"content":"                + \"or you can type \\\"help\\\" for more information\");"},{"lineNumber":42,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"luziyi9898"},"content":"}"},{"lineNumber":44,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":45,"author":{"gitId":"luziyi9898"},"content":""}],"authorContributionMap":{"luziyi9898":35,"farice9":10}},{"path":"src/main/java/userinterface/HelpMessage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package userinterface;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import studyit.Mode;"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":"import studyit.StudyIt;"},{"lineNumber":5,"author":{"gitId":"farice9"},"content":""},{"lineNumber":6,"author":{"gitId":"farice9"},"content":"public class HelpMessage extends Ui {"},{"lineNumber":7,"author":{"gitId":"farice9"},"content":"    private static final String generalCommands \u003d \"Here are the general commands available:\\n\""},{"lineNumber":8,"author":{"gitId":"farice9"},"content":"            + \"help                 - prints out help message\\n\""},{"lineNumber":9,"author":{"gitId":"farice9"},"content":"            + \"location             - tells you your current mode\\n\""},{"lineNumber":10,"author":{"gitId":"farice9"},"content":"            + \"cd MODE_INDEX/NAME - changes the program to the corresponding mode\\n\""},{"lineNumber":11,"author":{"gitId":"farice9"},"content":"            + \"highlight            - prints out the important items you stored\\n\""},{"lineNumber":12,"author":{"gitId":"farice9"},"content":"            + \"exit                 - exit the program/mode you are currently at\\n\";"},{"lineNumber":13,"author":{"gitId":"farice9"},"content":""},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"    public static final String currentModes \u003d \"These are the modes you can go to:\\n\""},{"lineNumber":15,"author":{"gitId":"farice9"},"content":"            + \"1 menu\\n\""},{"lineNumber":16,"author":{"gitId":"farice9"},"content":"            + \"2 bookmark   - bookmark internet links\\n\""},{"lineNumber":17,"author":{"gitId":"farice9"},"content":"            + \"3 timetable  - plan your study schedule\\n\""},{"lineNumber":18,"author":{"gitId":"farice9"},"content":"            + \"4 academic   - track your academic details\\n\""},{"lineNumber":19,"author":{"gitId":"farice9"},"content":"            + \"5 flashcard  - flashcards to revise your study materials\\n\";"},{"lineNumber":20,"author":{"gitId":"farice9"},"content":""},{"lineNumber":21,"author":{"gitId":"luziyi9898"},"content":"    private static final String academicCommands \u003d \"Here are the academic commands available:\\n\""},{"lineNumber":22,"author":{"gitId":"farice9"},"content":"            + \"list star                      - prints the list of starred components\\n\\n\""},{"lineNumber":23,"author":{"gitId":"farice9"},"content":"            + \"---------CONTACTS--------\\n\""},{"lineNumber":24,"author":{"gitId":"farice9"},"content":"            + \"add contact c/CONTACT          - adds a contact\\n\""},{"lineNumber":25,"author":{"gitId":"farice9"},"content":"            + \"     m/MOBILE e/EMAIL\\n\""},{"lineNumber":26,"author":{"gitId":"luziyi9898"},"content":"            + \"list contact                   - prints the list of contact currently stored\\n\""},{"lineNumber":27,"author":{"gitId":"farice9"},"content":"            + \"delete contact INDEX_NUMBER    - deletes contact at specified index\\n\""},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"            + \"star contact INDEX_NUMBER      - marks the contact as star\\n\\n\""},{"lineNumber":29,"author":{"gitId":"farice9"},"content":"            + \"----------GRADE----------\\n\""},{"lineNumber":30,"author":{"gitId":"farice9"},"content":"            + \"add grade n/MODULE_NAME        - adds a grade\\n\""},{"lineNumber":31,"author":{"gitId":"farice9"},"content":"            + \"     m/MC g/GRADE\\n\""},{"lineNumber":32,"author":{"gitId":"luziyi9898"},"content":"            + \"check cap                      - prints the current CAP based on grade stored\\n\""},{"lineNumber":33,"author":{"gitId":"luziyi9898"},"content":"            + \"list grade                     - prints the list of grades currently stored\\n\""},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"            + \"delete grade INDEX_NUMBER      - deletes grade at specified index\\n\""},{"lineNumber":35,"author":{"gitId":"farice9"},"content":"            + \"su grade INDEX_NUMBER          - SU the grade at specified index\\n\""},{"lineNumber":36,"author":{"gitId":"farice9"},"content":"            + \"star grade INDEX_NUMBER        - marks the grade as star\";"},{"lineNumber":37,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"    private static final String bookmarkCommands \u003d \"Here are the bookmark commands available:\\n\""},{"lineNumber":39,"author":{"gitId":"farice9"},"content":"            + \"bm CATEGORY_INDEX            - changes mode from bookmark main into a category \\n\""},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"            + \"back                         - go back to bookmark main\\n\""},{"lineNumber":41,"author":{"gitId":"farice9"},"content":"            + \"add LINK                     - add bookmark link into a specific category\\n\""},{"lineNumber":42,"author":{"gitId":"farice9"},"content":"            + \"add LINK t-\u003e TITLE           - add optional title to your link!\\n\""},{"lineNumber":43,"author":{"gitId":"farice9"},"content":"            + \"cat CATEGORY_NAME            - add category to bookmark list\\n\""},{"lineNumber":44,"author":{"gitId":"farice9"},"content":"            + \"rm LINK_INDEX                - remove a bookmark link into a specific category\\n\""},{"lineNumber":45,"author":{"gitId":"farice9"},"content":"            + \"delete CATEGORY_INDEX        - remove a bookmark category\\n\""},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"            + \"list                         - prints the list of links in your current mode\\n\""},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"            + \"list -s                      - prints the list of starred bookmarks\\n\""},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"            + \"list -c                      - prints the list of categories available\\n\""},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":"            + \"list -a                      - prints the list of categories and\\n\""},{"lineNumber":50,"author":{"gitId":"farice9"},"content":"            + \"                               respective list of links\\n\""},{"lineNumber":51,"author":{"gitId":"farice9"},"content":"            + \"star LINK_NUMBER             - mark the bookmark link as star\";"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":53,"author":{"gitId":"hailqueenflo"},"content":"    private static final String timetableCommands \u003d  \"Here are the timetable commands available:\\n\""},{"lineNumber":54,"author":{"gitId":"hailqueenflo"},"content":"            + \"add class                        - adds a class to the timetable\\n\""},{"lineNumber":55,"author":{"gitId":"hailqueenflo"},"content":"            + \"add activity                     - adds an activity to the timetable\\n\""},{"lineNumber":56,"author":{"gitId":"farice9"},"content":"            + \"show link                        - displays the links/venues of events occurring\\n\""},{"lineNumber":57,"author":{"gitId":"farice9"},"content":"            + \"                                   in the next 2 hours\\n\""},{"lineNumber":58,"author":{"gitId":"farice9"},"content":"            + \"show schedule                    - displays schedule\\n\""},{"lineNumber":59,"author":{"gitId":"slightlyharp"},"content":"            + \"list activity                    - display the list of activities with its date\\n\""},{"lineNumber":60,"author":{"gitId":"slightlyharp"},"content":"            + \"list class                       - display the list of class with days of the week\\n\""},{"lineNumber":61,"author":{"gitId":"farice9"},"content":"            + \"delete activity INDEX_NUMBER     - delete the activity at specific index\\n\""},{"lineNumber":62,"author":{"gitId":"farice9"},"content":"            + \"delete class INDEX_NUMBER        - delete the class at specific index\\n\""},{"lineNumber":63,"author":{"gitId":"farice9"},"content":"            + \"clean up                         - delete all activities that end more than 7 days ago\\n\""},{"lineNumber":64,"author":{"gitId":"slightlyharp"},"content":"            + \"                                   and classes that had its last lesson more than 7 days ago\";"},{"lineNumber":65,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":66,"author":{"gitId":"hailqueenflo"},"content":"    private static final String flashcardCommands \u003d \"Here are the flashcard commands available:\\n\""},{"lineNumber":67,"author":{"gitId":"hailqueenflo"},"content":"            + \"add     - adds a question and answer to the flashcard deck\\n\""},{"lineNumber":68,"author":{"gitId":"hailqueenflo"},"content":"            + \"list    - shows the flashcards that have been added\\n\""},{"lineNumber":69,"author":{"gitId":"farice9"},"content":"            + \"delete  - deletes the flashcard corresponding to the card index entered by user\\n\""},{"lineNumber":70,"author":{"gitId":"hailqueenflo"},"content":"            + \"test    - user can attempt to answer a random question from the flashcard deck\\n\""},{"lineNumber":71,"author":{"gitId":"hailqueenflo"},"content":"            + \"          use \\\"back\\\" to exit test mode, and \\\"show answer\\\" to show the answer to the question\\n\""},{"lineNumber":72,"author":{"gitId":"farice9"},"content":"            + \"find    - searches and returns flashcards containing user\u0027s desired search term\\n\""},{"lineNumber":73,"author":{"gitId":"farice9"},"content":"            + \"back    - exit test mode and go back to flashcard main\";"},{"lineNumber":74,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":75,"author":{"gitId":"farice9"},"content":"    public static void printHelpMessage() {"},{"lineNumber":76,"author":{"gitId":"farice9"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":77,"author":{"gitId":"farice9"},"content":"        System.out.println(generalCommands);"},{"lineNumber":78,"author":{"gitId":"farice9"},"content":"        System.lineSeparator();"},{"lineNumber":79,"author":{"gitId":"farice9"},"content":"        System.out.println(currentModes);"},{"lineNumber":80,"author":{"gitId":"farice9"},"content":"        System.lineSeparator();"},{"lineNumber":81,"author":{"gitId":"farice9"},"content":""},{"lineNumber":82,"author":{"gitId":"farice9"},"content":"        Mode currentMode \u003d StudyIt.getCurrentMode();"},{"lineNumber":83,"author":{"gitId":"farice9"},"content":"        if (currentMode \u003d\u003d Mode.BOOKMARK) {"},{"lineNumber":84,"author":{"gitId":"farice9"},"content":"            printBookmarkHelp();"},{"lineNumber":85,"author":{"gitId":"farice9"},"content":"        } else if (currentMode \u003d\u003d Mode.TIMETABLE) {"},{"lineNumber":86,"author":{"gitId":"farice9"},"content":"            printTimetableHelp();"},{"lineNumber":87,"author":{"gitId":"farice9"},"content":"        } else if (currentMode \u003d\u003d Mode.ACADEMIC) {"},{"lineNumber":88,"author":{"gitId":"farice9"},"content":"            printAcademicHelp();"},{"lineNumber":89,"author":{"gitId":"farice9"},"content":"        } else if (currentMode \u003d\u003d Mode.FLASHCARD) {"},{"lineNumber":90,"author":{"gitId":"farice9"},"content":"            printFlashcardHelp();"},{"lineNumber":91,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"farice9"},"content":""},{"lineNumber":93,"author":{"gitId":"farice9"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":94,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"farice9"},"content":""},{"lineNumber":96,"author":{"gitId":"farice9"},"content":"    public static void printBookmarkHelp() {"},{"lineNumber":97,"author":{"gitId":"lingsihui"},"content":"        System.out.println(bookmarkCommands);"},{"lineNumber":98,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"farice9"},"content":""},{"lineNumber":100,"author":{"gitId":"farice9"},"content":"    public static void printTimetableHelp() {"},{"lineNumber":101,"author":{"gitId":"hailqueenflo"},"content":"        System.out.println(timetableCommands);"},{"lineNumber":102,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"farice9"},"content":""},{"lineNumber":104,"author":{"gitId":"farice9"},"content":"    public static void printAcademicHelp() {"},{"lineNumber":105,"author":{"gitId":"luziyi9898"},"content":"        System.out.println(academicCommands);"},{"lineNumber":106,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"farice9"},"content":""},{"lineNumber":108,"author":{"gitId":"farice9"},"content":"    public static void printFlashcardHelp() {"},{"lineNumber":109,"author":{"gitId":"hailqueenflo"},"content":"        System.out.println(flashcardCommands);"},{"lineNumber":110,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"farice9"},"content":"}"}],"authorContributionMap":{"lingsihui":8,"hailqueenflo":10,"slightlyharp":4,"luziyi9898":7,"farice9":82}},{"path":"src/main/java/userinterface/MainMenu.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package userinterface;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import userinterface.Ui;"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"farice9"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"farice9"},"content":""},{"lineNumber":7,"author":{"gitId":"farice9"},"content":"public class MainMenu extends Ui {"},{"lineNumber":8,"author":{"gitId":"farice9"},"content":"    private static DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"EEE d MMM yyyy\");"},{"lineNumber":9,"author":{"gitId":"farice9"},"content":"    private static DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");"},{"lineNumber":10,"author":{"gitId":"farice9"},"content":"    private static LocalDateTime currentDateTime \u003d LocalDateTime.now();"},{"lineNumber":11,"author":{"gitId":"farice9"},"content":"    private static String currentDateFormatted \u003d dateFormat.format(currentDateTime);"},{"lineNumber":12,"author":{"gitId":"farice9"},"content":"    private static String currentTimeFormatted \u003d timeFormat.format(currentDateTime);"},{"lineNumber":13,"author":{"gitId":"farice9"},"content":""},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"    private static final String WELCOME_MESSAGE \u003d LINE_DIVIDER + System.lineSeparator()"},{"lineNumber":15,"author":{"gitId":"farice9"},"content":"            + \"Welcome to Study It! Your personal study assistant!\""},{"lineNumber":16,"author":{"gitId":"farice9"},"content":"            + \"\\n\\n\""},{"lineNumber":17,"author":{"gitId":"farice9"},"content":"            + \"Today\u0027s date: \" + currentDateFormatted"},{"lineNumber":18,"author":{"gitId":"farice9"},"content":"            + \"\\nThe time now is \" + currentTimeFormatted"},{"lineNumber":19,"author":{"gitId":"farice9"},"content":"            + \"\\n\\n\""},{"lineNumber":20,"author":{"gitId":"farice9"},"content":"            + \"Let\u0027s get productive!\""},{"lineNumber":21,"author":{"gitId":"farice9"},"content":"            + \"\\n\\n\""},{"lineNumber":22,"author":{"gitId":"farice9"},"content":"            + HelpMessage.currentModes"},{"lineNumber":23,"author":{"gitId":"farice9"},"content":"            + \"\\nInsert \\\"cd MODE_INDEX or MODE_NAME\\\" to access these modes\""},{"lineNumber":24,"author":{"gitId":"farice9"},"content":"            + \"\\nor \\\"help\\\" to get the list of available commands\\n\""},{"lineNumber":25,"author":{"gitId":"farice9"},"content":"            + LINE_DIVIDER;"},{"lineNumber":26,"author":{"gitId":"farice9"},"content":""},{"lineNumber":27,"author":{"gitId":"farice9"},"content":"    public static void printWelcome() {"},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"        System.out.println(WELCOME_MESSAGE);"},{"lineNumber":29,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"farice9"},"content":""},{"lineNumber":31,"author":{"gitId":"farice9"},"content":"    public static void printWelcomeBackMessage() {"},{"lineNumber":32,"author":{"gitId":"farice9"},"content":"        System.out.println(\"Welcome back to main menu!\""},{"lineNumber":33,"author":{"gitId":"farice9"},"content":"                + \"\\n\""},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"                + \"\\nToday\u0027s date: \" + currentDateFormatted"},{"lineNumber":35,"author":{"gitId":"farice9"},"content":"                + \"\\nThe time now is \" + currentTimeFormatted);"},{"lineNumber":36,"author":{"gitId":"farice9"},"content":"        printDivider();"},{"lineNumber":37,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"farice9"},"content":"}"}],"authorContributionMap":{"farice9":38}},{"path":"src/main/java/userinterface/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"package userinterface;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import academic.AcademicRun;"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":"import academic.AcademicUi;"},{"lineNumber":5,"author":{"gitId":"farice9"},"content":"import academic.Grade;"},{"lineNumber":6,"author":{"gitId":"farice9"},"content":"import academic.Person;"},{"lineNumber":7,"author":{"gitId":"farice9"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":8,"author":{"gitId":"farice9"},"content":"import bookmark.BookmarkRun;"},{"lineNumber":9,"author":{"gitId":"farice9"},"content":"import exceptions.InvalidModeException;"},{"lineNumber":10,"author":{"gitId":"farice9"},"content":"import studyit.ModeNames;"},{"lineNumber":11,"author":{"gitId":"farice9"},"content":"import studyit.Mode;"},{"lineNumber":12,"author":{"gitId":"farice9"},"content":"import studyit.CommandParser;"},{"lineNumber":13,"author":{"gitId":"farice9"},"content":"import studyit.StudyIt;"},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"import studyit.StudyItLog;"},{"lineNumber":15,"author":{"gitId":"farice9"},"content":""},{"lineNumber":16,"author":{"gitId":"farice9"},"content":"import java.util.ArrayList;"},{"lineNumber":17,"author":{"gitId":"farice9"},"content":"import java.util.Scanner;"},{"lineNumber":18,"author":{"gitId":"farice9"},"content":""},{"lineNumber":19,"author":{"gitId":"farice9"},"content":""},{"lineNumber":20,"author":{"gitId":"farice9"},"content":"public class Ui {"},{"lineNumber":21,"author":{"gitId":"farice9"},"content":"    public static final String LINE_DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\""},{"lineNumber":22,"author":{"gitId":"farice9"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"},{"lineNumber":23,"author":{"gitId":"farice9"},"content":""},{"lineNumber":24,"author":{"gitId":"farice9"},"content":"    public static void printDivider() {"},{"lineNumber":25,"author":{"gitId":"farice9"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":26,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"farice9"},"content":""},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"farice9"},"content":"     * Receive command input from the user via terminal."},{"lineNumber":30,"author":{"gitId":"farice9"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"farice9"},"content":"     * @return the command input as a String"},{"lineNumber":32,"author":{"gitId":"farice9"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"farice9"},"content":"    public static String inputCommand() {"},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"        String command;"},{"lineNumber":35,"author":{"gitId":"farice9"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":36,"author":{"gitId":"farice9"},"content":"        assert in !\u003d null : \"null is passed in\";"},{"lineNumber":37,"author":{"gitId":"farice9"},"content":""},{"lineNumber":38,"author":{"gitId":"farice9"},"content":"        command \u003d in.nextLine();"},{"lineNumber":39,"author":{"gitId":"farice9"},"content":"        assert command.length() \u003e\u003d 0 : \"The length of command should be at least 0\";"},{"lineNumber":40,"author":{"gitId":"farice9"},"content":""},{"lineNumber":41,"author":{"gitId":"farice9"},"content":"        return command;"},{"lineNumber":42,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"farice9"},"content":""},{"lineNumber":44,"author":{"gitId":"farice9"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"farice9"},"content":"     * Prints text with line divider above and below the text."},{"lineNumber":46,"author":{"gitId":"farice9"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"farice9"},"content":"     * @param text any String type text"},{"lineNumber":48,"author":{"gitId":"farice9"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"farice9"},"content":"    public static void printLine(String text) {"},{"lineNumber":50,"author":{"gitId":"farice9"},"content":"        System.out.println(LINE_DIVIDER + \"\\n\" + text + \"\\n\" + LINE_DIVIDER);"},{"lineNumber":51,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"farice9"},"content":""},{"lineNumber":53,"author":{"gitId":"farice9"},"content":"    public static void printExit() {"},{"lineNumber":54,"author":{"gitId":"farice9"},"content":"        System.out.println(LINE_DIVIDER + \"\\nSee you again soon!!!\\n\" + LINE_DIVIDER);"},{"lineNumber":55,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"farice9"},"content":""},{"lineNumber":57,"author":{"gitId":"farice9"},"content":"    public static void printLocation() {"},{"lineNumber":58,"author":{"gitId":"farice9"},"content":"        printLine(\"You are currently at \" + ModeNames.getCurrentModeName() + \"!\");"},{"lineNumber":59,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"farice9"},"content":""},{"lineNumber":61,"author":{"gitId":"farice9"},"content":"    public static void changeModeCommand(String command) {"},{"lineNumber":62,"author":{"gitId":"farice9"},"content":"        try {"},{"lineNumber":63,"author":{"gitId":"farice9"},"content":"            Mode newMode \u003d CommandParser.getDestinationMode(command);"},{"lineNumber":64,"author":{"gitId":"farice9"},"content":""},{"lineNumber":65,"author":{"gitId":"farice9"},"content":"            if (newMode !\u003d StudyIt.getCurrentMode()) {"},{"lineNumber":66,"author":{"gitId":"farice9"},"content":"                StudyIt.changeMode(newMode);"},{"lineNumber":67,"author":{"gitId":"farice9"},"content":"                printLine(\"Mode changed! You are now at: \" + ModeNames.getCurrentModeName());"},{"lineNumber":68,"author":{"gitId":"farice9"},"content":"                printModeIntro(newMode);"},{"lineNumber":69,"author":{"gitId":"farice9"},"content":"            } else {"},{"lineNumber":70,"author":{"gitId":"farice9"},"content":"                printLine(\"You are already in \" + ModeNames.getCurrentModeName() + \"!\");"},{"lineNumber":71,"author":{"gitId":"farice9"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"farice9"},"content":"        } catch (InvalidModeException e) {"},{"lineNumber":73,"author":{"gitId":"farice9"},"content":"            printLine(\"Invalid mode name! Please try again.\\n\""},{"lineNumber":74,"author":{"gitId":"farice9"},"content":"                    + \"You are still at: \" + ModeNames.getCurrentModeName());"},{"lineNumber":75,"author":{"gitId":"lingsihui"},"content":"            StudyItLog.logger.fine(\"Cannot understand mode chosen.\");"},{"lineNumber":76,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"farice9"},"content":""},{"lineNumber":79,"author":{"gitId":"farice9"},"content":"    public static void printModeIntro(Mode newMode) {"},{"lineNumber":80,"author":{"gitId":"farice9"},"content":"        // Prints introduction to the mode (if any)"},{"lineNumber":81,"author":{"gitId":"farice9"},"content":"        if (newMode \u003d\u003d Mode.BOOKMARK) {"},{"lineNumber":82,"author":{"gitId":"farice9"},"content":"            BookmarkUi.printWelcomeBookmarkMessage();"},{"lineNumber":83,"author":{"gitId":"farice9"},"content":"            printDivider();"},{"lineNumber":84,"author":{"gitId":"farice9"},"content":"        } else if (newMode \u003d\u003d Mode.ACADEMIC) {"},{"lineNumber":85,"author":{"gitId":"farice9"},"content":"            printWelcomeAcademicMessage();"},{"lineNumber":86,"author":{"gitId":"farice9"},"content":"        } else if (newMode \u003d\u003d Mode.TIMETABLE) {"},{"lineNumber":87,"author":{"gitId":"farice9"},"content":"            printWelcomeTimetableMessage();"},{"lineNumber":88,"author":{"gitId":"farice9"},"content":"        } else if (newMode \u003d\u003d Mode.FLASHCARD) {"},{"lineNumber":89,"author":{"gitId":"farice9"},"content":"            printWelcomeFlashcardMessage();"},{"lineNumber":90,"author":{"gitId":"farice9"},"content":"        } else if (newMode \u003d\u003d Mode.MENU) {"},{"lineNumber":91,"author":{"gitId":"farice9"},"content":"            MainMenu.printWelcomeBackMessage();"},{"lineNumber":92,"author":{"gitId":"farice9"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"farice9"},"content":""},{"lineNumber":95,"author":{"gitId":"farice9"},"content":"    public static void printWelcomeAcademicMessage() {"},{"lineNumber":96,"author":{"gitId":"farice9"},"content":"        System.out.println(\"Welcome to academic mode!\");"},{"lineNumber":97,"author":{"gitId":"farice9"},"content":"        System.out.println(\"\\nYou can use this mode to keep track of your grades \""},{"lineNumber":98,"author":{"gitId":"farice9"},"content":"                + \"\u0026 important contacts\");"},{"lineNumber":99,"author":{"gitId":"farice9"},"content":"        System.out.println(\"\\nInsert \\\"help\\\" to find the list of commands available\");"},{"lineNumber":100,"author":{"gitId":"farice9"},"content":"        printDivider();"},{"lineNumber":101,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"farice9"},"content":""},{"lineNumber":103,"author":{"gitId":"farice9"},"content":"    public static void printWelcomeTimetableMessage() {"},{"lineNumber":104,"author":{"gitId":"farice9"},"content":"        System.out.println(\"Welcome to timetable mode!\");"},{"lineNumber":105,"author":{"gitId":"farice9"},"content":"        System.out.println(\"\\nYou can use this mode to schedule your classes \u0026 events\");"},{"lineNumber":106,"author":{"gitId":"farice9"},"content":"        System.out.println(\"\\nInsert \\\"help\\\" to find the list of commands available\");"},{"lineNumber":107,"author":{"gitId":"farice9"},"content":"        printDivider();"},{"lineNumber":108,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"farice9"},"content":""},{"lineNumber":110,"author":{"gitId":"farice9"},"content":"    public static void printWelcomeFlashcardMessage() {"},{"lineNumber":111,"author":{"gitId":"farice9"},"content":"        System.out.println(\"Welcome to flashcard mode!\");"},{"lineNumber":112,"author":{"gitId":"farice9"},"content":"        System.out.println(\"\\nYou can use this mode to create and store flashcards and use them to help\");"},{"lineNumber":113,"author":{"gitId":"farice9"},"content":"        System.out.println(\"you memorize your study content!\");"},{"lineNumber":114,"author":{"gitId":"farice9"},"content":"        System.out.println(\"\\nInsert \\\"help\\\" to find the list of commands available\");"},{"lineNumber":115,"author":{"gitId":"farice9"},"content":"        printDivider();"},{"lineNumber":116,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"farice9"},"content":""},{"lineNumber":118,"author":{"gitId":"farice9"},"content":"    public static void exitMode() {"},{"lineNumber":119,"author":{"gitId":"farice9"},"content":"        printDivider();"},{"lineNumber":120,"author":{"gitId":"farice9"},"content":"        System.out.println(\"Exited \" + ModeNames.getCurrentModeName() + \"!\");"},{"lineNumber":121,"author":{"gitId":"farice9"},"content":"        StudyIt.changeMode(Mode.MENU); //TODO: Check UI"},{"lineNumber":122,"author":{"gitId":"farice9"},"content":"        System.out.println(\"You are now back at: \" + ModeNames.getCurrentModeName());"},{"lineNumber":123,"author":{"gitId":"farice9"},"content":"        printDivider();"},{"lineNumber":124,"author":{"gitId":"farice9"},"content":"        MainMenu.printWelcomeBackMessage();"},{"lineNumber":125,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"farice9"},"content":""},{"lineNumber":127,"author":{"gitId":"farice9"},"content":"    public static void printHighlight(BookmarkRun bookmarkRun, AcademicRun academicRun) {"},{"lineNumber":128,"author":{"gitId":"farice9"},"content":"        printDivider();"},{"lineNumber":129,"author":{"gitId":"farice9"},"content":"        System.out.println(\"Here are your starred items:\");"},{"lineNumber":130,"author":{"gitId":"farice9"},"content":"        bookmarkRun.run(\"list -s\");"},{"lineNumber":131,"author":{"gitId":"farice9"},"content":"        System.out.println();"},{"lineNumber":132,"author":{"gitId":"farice9"},"content":"        academicRun.run(\"list star\");"},{"lineNumber":133,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"farice9"},"content":"}"}],"authorContributionMap":{"lingsihui":1,"farice9":133}},{"path":"src/test/java/AcademicParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":2,"author":{"gitId":"farice9"},"content":"import academic.AcademicCommandParser;"},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import academic.AcademicCommandType;"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":5,"author":{"gitId":"luziyi9898"},"content":"import exceptions.InvalidGradeException;"},{"lineNumber":6,"author":{"gitId":"luziyi9898"},"content":"import exceptions.InvalidMcException;"},{"lineNumber":7,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":8,"author":{"gitId":"luziyi9898"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":10,"author":{"gitId":"luziyi9898"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":11,"author":{"gitId":"luziyi9898"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;"},{"lineNumber":12,"author":{"gitId":"luziyi9898"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":13,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":14,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":15,"author":{"gitId":"luziyi9898"},"content":"class AcademicParserTest {"},{"lineNumber":16,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":17,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":18,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"luziyi9898"},"content":"    void getCommandType_correctCommandInputs_success() throws InvalidCommandException {"},{"lineNumber":20,"author":{"gitId":"luziyi9898"},"content":"        AcademicCommandParser parser \u003d new AcademicCommandParser();"},{"lineNumber":21,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":22,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(AcademicCommandType.ADD_CONTACT, parser.getAcademicCommandType(\"add contact\"));"},{"lineNumber":23,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(AcademicCommandType.LIST_CONTACT, parser.getAcademicCommandType(\"list contact\"));"},{"lineNumber":24,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(AcademicCommandType.ADD_GRADE, parser.getAcademicCommandType(\"add grade\"));"},{"lineNumber":25,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(AcademicCommandType.CHECK_CAP, parser.getAcademicCommandType(\"check cap\"));"},{"lineNumber":26,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(AcademicCommandType.LIST_GRADE, parser.getAcademicCommandType(\"list grade\"));"},{"lineNumber":27,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(AcademicCommandType.LIST_GRADE, parser.getAcademicCommandType(\"list grade\"));"},{"lineNumber":28,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(AcademicCommandType.DELETE_PERSON, parser.getAcademicCommandType(\"delete contact\"));"},{"lineNumber":29,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(AcademicCommandType.DELETE_GRADE, parser.getAcademicCommandType(\"delete grade\"));"},{"lineNumber":30,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(AcademicCommandType.SU_GRADE, parser.getAcademicCommandType(\"su grade\"));"},{"lineNumber":31,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(AcademicCommandType.STAR_GRADE, parser.getAcademicCommandType(\"star grade\"));"},{"lineNumber":32,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(AcademicCommandType.STAR_CONTACT, parser.getAcademicCommandType(\"star contact\"));"},{"lineNumber":33,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(AcademicCommandType.LIST_STAR, parser.getAcademicCommandType(\"list star\"));"},{"lineNumber":34,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":36,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"luziyi9898"},"content":"    void getCommandType_incorrectCommandInput_exceptionThrown() {"},{"lineNumber":38,"author":{"gitId":"luziyi9898"},"content":"        AcademicCommandParser parser \u003d new AcademicCommandParser();"},{"lineNumber":39,"author":{"gitId":"luziyi9898"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e {"},{"lineNumber":40,"author":{"gitId":"luziyi9898"},"content":"            parser.getAcademicCommandType(\"what is this command?\");"},{"lineNumber":41,"author":{"gitId":"luziyi9898"},"content":"        });"},{"lineNumber":42,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":44,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_incorrectGetContact_exceptionThrown() {"},{"lineNumber":46,"author":{"gitId":"luziyi9898"},"content":"        AcademicCommandParser parser \u003d new AcademicCommandParser();"},{"lineNumber":47,"author":{"gitId":"luziyi9898"},"content":"        assertThrows(NumberFormatException.class, () -\u003e {"},{"lineNumber":48,"author":{"gitId":"luziyi9898"},"content":"            parser.getContact(\"add contact c/Prof Lim  m/number81234567  e/E7654321@u.nus.edu\");"},{"lineNumber":49,"author":{"gitId":"luziyi9898"},"content":"        });"},{"lineNumber":50,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":52,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":53,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_incorrectGetGrade_gradeExceptionThrown() {"},{"lineNumber":54,"author":{"gitId":"luziyi9898"},"content":"        AcademicCommandParser parser \u003d new AcademicCommandParser();"},{"lineNumber":55,"author":{"gitId":"luziyi9898"},"content":"        assertThrows(InvalidGradeException.class, () -\u003e {"},{"lineNumber":56,"author":{"gitId":"luziyi9898"},"content":"            parser.getGrade(\"add grade n/CS2101  m/4  g/A+++\");"},{"lineNumber":57,"author":{"gitId":"luziyi9898"},"content":"        });"},{"lineNumber":58,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":59,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":61,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":62,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_incorrectGetGrade_mcExceptionThrown() {"},{"lineNumber":63,"author":{"gitId":"luziyi9898"},"content":"        AcademicCommandParser parser \u003d new AcademicCommandParser();"},{"lineNumber":64,"author":{"gitId":"luziyi9898"},"content":"        assertThrows(InvalidMcException.class, () -\u003e {"},{"lineNumber":65,"author":{"gitId":"luziyi9898"},"content":"            parser.getGrade(\"add grade n/CS2101  m/0 g/A\");"},{"lineNumber":66,"author":{"gitId":"luziyi9898"},"content":"        });"},{"lineNumber":67,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":69,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":70,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_getContactCommand_parsedCorrectly() throws InvalidCommandException {"},{"lineNumber":71,"author":{"gitId":"luziyi9898"},"content":"        AcademicCommandParser parser \u003d new AcademicCommandParser();"},{"lineNumber":72,"author":{"gitId":"luziyi9898"},"content":"        String input \u003d \"add contact c/Prof Lim  m/81234567  e/E7654321@u.nus.edu\";"},{"lineNumber":73,"author":{"gitId":"luziyi9898"},"content":"        final String[] result \u003d parser.getContact(input);"},{"lineNumber":74,"author":{"gitId":"luziyi9898"},"content":"        final String[] expectedResult \u003d {\"Prof Lim\",\"81234567\",\"E7654321@u.nus.edu\"};"},{"lineNumber":75,"author":{"gitId":"luziyi9898"},"content":"        assertArrayEquals(expectedResult,result);"},{"lineNumber":76,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":78,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":79,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_getGradeCommand_parsedCorrectly()"},{"lineNumber":80,"author":{"gitId":"luziyi9898"},"content":"            throws InvalidGradeException, InvalidMcException, InvalidCommandException {"},{"lineNumber":81,"author":{"gitId":"luziyi9898"},"content":"        AcademicCommandParser parser \u003d new AcademicCommandParser();"},{"lineNumber":82,"author":{"gitId":"luziyi9898"},"content":"        String input \u003d \"add grade n/CS2101  m/4  g/A-\";"},{"lineNumber":83,"author":{"gitId":"luziyi9898"},"content":"        final String[] result \u003d parser.getGrade(input);"},{"lineNumber":84,"author":{"gitId":"luziyi9898"},"content":"        final String[] expectedResult \u003d {\"CS2101\",\"4\",\"A-\"};"},{"lineNumber":85,"author":{"gitId":"luziyi9898"},"content":"        assertArrayEquals(expectedResult,result);"},{"lineNumber":86,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":88,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":89,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_parseImportedGrade_parsedCorrectly() {"},{"lineNumber":90,"author":{"gitId":"luziyi9898"},"content":"        AcademicCommandParser parser \u003d new AcademicCommandParser();"},{"lineNumber":91,"author":{"gitId":"luziyi9898"},"content":"        String input \u003d \"[G] | CS2101 | 4 | A- | true | true\";"},{"lineNumber":92,"author":{"gitId":"luziyi9898"},"content":"        final String[] result \u003d parser.parseImportedGrade(input);"},{"lineNumber":93,"author":{"gitId":"luziyi9898"},"content":"        final String[] expectedResult \u003d {\"CS2101\",\"4\",\"A-\",\"true\",\"true\"};"},{"lineNumber":94,"author":{"gitId":"luziyi9898"},"content":"        assertArrayEquals(expectedResult,result);"},{"lineNumber":95,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":97,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":98,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_parseImportedPerson_parsedCorrectly() {"},{"lineNumber":99,"author":{"gitId":"luziyi9898"},"content":"        AcademicCommandParser parser \u003d new AcademicCommandParser();"},{"lineNumber":100,"author":{"gitId":"luziyi9898"},"content":"        String input \u003d \"[P] | Prof Lim | 81234567 | E7654321@u.nus.edu | false\";"},{"lineNumber":101,"author":{"gitId":"luziyi9898"},"content":"        final String[] result \u003d parser.parseImportedPerson(input);"},{"lineNumber":102,"author":{"gitId":"luziyi9898"},"content":"        final String[] expectedResult \u003d {\"Prof Lim\",\"81234567\",\"E7654321@u.nus.edu\",\"false\"};"},{"lineNumber":103,"author":{"gitId":"luziyi9898"},"content":"        assertArrayEquals(expectedResult,result);"},{"lineNumber":104,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":106,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":107,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_parseDeletePerson_parsedCorrectly() {"},{"lineNumber":108,"author":{"gitId":"luziyi9898"},"content":"        AcademicCommandParser parser \u003d new AcademicCommandParser();"},{"lineNumber":109,"author":{"gitId":"luziyi9898"},"content":"        String input \u003d \"delete person 5\";"},{"lineNumber":110,"author":{"gitId":"luziyi9898"},"content":"        final Integer result \u003d parser.parseDeletePerson(input);"},{"lineNumber":111,"author":{"gitId":"luziyi9898"},"content":"        final Integer expectedResult \u003d 5;"},{"lineNumber":112,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(expectedResult,result);"},{"lineNumber":113,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":115,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":116,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_parseDeleteGrade_parsedCorrectly() {"},{"lineNumber":117,"author":{"gitId":"luziyi9898"},"content":"        AcademicCommandParser parser \u003d new AcademicCommandParser();"},{"lineNumber":118,"author":{"gitId":"luziyi9898"},"content":"        String input \u003d \"delete grade 21\";"},{"lineNumber":119,"author":{"gitId":"luziyi9898"},"content":"        final Integer result \u003d parser.parseDeleteGrade(input);"},{"lineNumber":120,"author":{"gitId":"luziyi9898"},"content":"        final Integer expectedResult \u003d 21;"},{"lineNumber":121,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(expectedResult,result);"},{"lineNumber":122,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":124,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":125,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_parseSuGrade_parsedCorrectly() {"},{"lineNumber":126,"author":{"gitId":"luziyi9898"},"content":"        AcademicCommandParser parser \u003d new AcademicCommandParser();"},{"lineNumber":127,"author":{"gitId":"luziyi9898"},"content":"        String input \u003d \"su grade 1\";"},{"lineNumber":128,"author":{"gitId":"luziyi9898"},"content":"        final Integer result \u003d parser.parseSuGrade(input);"},{"lineNumber":129,"author":{"gitId":"luziyi9898"},"content":"        final Integer expectedResult \u003d 1;"},{"lineNumber":130,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(expectedResult,result);"},{"lineNumber":131,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":133,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":134,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_parseStarGrade_parsedCorrectly() {"},{"lineNumber":135,"author":{"gitId":"luziyi9898"},"content":"        AcademicCommandParser parser \u003d new AcademicCommandParser();"},{"lineNumber":136,"author":{"gitId":"luziyi9898"},"content":"        String input \u003d \"star grade 2\";"},{"lineNumber":137,"author":{"gitId":"luziyi9898"},"content":"        final Integer result \u003d parser.parseStarGrade(input);"},{"lineNumber":138,"author":{"gitId":"luziyi9898"},"content":"        final Integer expectedResult \u003d 2;"},{"lineNumber":139,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(expectedResult,result);"},{"lineNumber":140,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":142,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":143,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_parseStarContact_parsedCorrectly() {"},{"lineNumber":144,"author":{"gitId":"luziyi9898"},"content":"        AcademicCommandParser parser \u003d new AcademicCommandParser();"},{"lineNumber":145,"author":{"gitId":"luziyi9898"},"content":"        String input \u003d \"star contact 3\";"},{"lineNumber":146,"author":{"gitId":"luziyi9898"},"content":"        final Integer result \u003d parser.parseStarContact(input);"},{"lineNumber":147,"author":{"gitId":"luziyi9898"},"content":"        final Integer expectedResult \u003d 3;"},{"lineNumber":148,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(expectedResult,result);"},{"lineNumber":149,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"luziyi9898"},"content":"}"}],"authorContributionMap":{"luziyi9898":148,"farice9":2}},{"path":"src/test/java/CommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"farice9"},"content":"import exceptions.InvalidModeException;"},{"lineNumber":2,"author":{"gitId":"farice9"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import studyit.CommandParser;"},{"lineNumber":4,"author":{"gitId":"farice9"},"content":"import studyit.CommandType;"},{"lineNumber":5,"author":{"gitId":"farice9"},"content":"import studyit.Mode;"},{"lineNumber":6,"author":{"gitId":"farice9"},"content":"import studyit.StudyIt;"},{"lineNumber":7,"author":{"gitId":"farice9"},"content":""},{"lineNumber":8,"author":{"gitId":"farice9"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":9,"author":{"gitId":"farice9"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"farice9"},"content":""},{"lineNumber":11,"author":{"gitId":"farice9"},"content":"class CommandParserTest {"},{"lineNumber":12,"author":{"gitId":"farice9"},"content":""},{"lineNumber":13,"author":{"gitId":"farice9"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"farice9"},"content":"    void testStandardizeCommand() {"},{"lineNumber":15,"author":{"gitId":"farice9"},"content":"        CommandParser commandParser \u003d new CommandParser();"},{"lineNumber":16,"author":{"gitId":"farice9"},"content":"        assertEquals(\"this is a test\", commandParser.standardizeCommand(\" ThIs is A teST  \"));"},{"lineNumber":17,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"farice9"},"content":""},{"lineNumber":19,"author":{"gitId":"farice9"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"farice9"},"content":"    void getCommandType_correctCommandInputs_success() {"},{"lineNumber":21,"author":{"gitId":"farice9"},"content":"        CommandParser commandParser \u003d new CommandParser();"},{"lineNumber":22,"author":{"gitId":"farice9"},"content":""},{"lineNumber":23,"author":{"gitId":"farice9"},"content":"        // Checks if exit detects correctly when it is in main menu"},{"lineNumber":24,"author":{"gitId":"farice9"},"content":"        assertEquals(CommandType.EXIT_PROGRAM, commandParser.getCommandType(\"exit\"));"},{"lineNumber":25,"author":{"gitId":"farice9"},"content":"        assertEquals(CommandType.LOCATION, commandParser.getCommandType(\"location\"));"},{"lineNumber":26,"author":{"gitId":"farice9"},"content":"        assertEquals(CommandType.CHANGE_MODE, commandParser.getCommandType(\"cd 3\"));"},{"lineNumber":27,"author":{"gitId":"farice9"},"content":"        assertEquals(CommandType.HELP, commandParser.getCommandType(\"help\"));"},{"lineNumber":28,"author":{"gitId":"farice9"},"content":"        assertEquals(CommandType.HIGHLIGHT, commandParser.getCommandType(\"highlight\"));"},{"lineNumber":29,"author":{"gitId":"farice9"},"content":""},{"lineNumber":30,"author":{"gitId":"farice9"},"content":"        // Checks if exit detects exit mode when inside one of the modes"},{"lineNumber":31,"author":{"gitId":"farice9"},"content":"        StudyIt studyIt \u003d new StudyIt();"},{"lineNumber":32,"author":{"gitId":"farice9"},"content":"        studyIt.changeMode(Mode.ACADEMIC);"},{"lineNumber":33,"author":{"gitId":"farice9"},"content":"        assertEquals(CommandType.EXIT_MODE, commandParser.getCommandType(\"exit\"));"},{"lineNumber":34,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"farice9"},"content":""},{"lineNumber":36,"author":{"gitId":"farice9"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"farice9"},"content":"    void getCommandType_incorrectCommandInput_unidentifiableCommandType() {"},{"lineNumber":38,"author":{"gitId":"farice9"},"content":"        CommandParser commandParser \u003d new CommandParser();"},{"lineNumber":39,"author":{"gitId":"farice9"},"content":""},{"lineNumber":40,"author":{"gitId":"farice9"},"content":"        assertEquals(CommandType.UNIDENTIFIABLE, commandParser.getCommandType(\"asdhajskd\"));"},{"lineNumber":41,"author":{"gitId":"farice9"},"content":"        assertEquals(CommandType.UNIDENTIFIABLE, commandParser.getCommandType(\"highlight 50000\"));"},{"lineNumber":42,"author":{"gitId":"farice9"},"content":"        assertEquals(CommandType.UNIDENTIFIABLE, commandParser.getCommandType(\"help test\"));"},{"lineNumber":43,"author":{"gitId":"farice9"},"content":"        assertEquals(CommandType.UNIDENTIFIABLE, commandParser.getCommandType(\"location wrong\"));"},{"lineNumber":44,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"farice9"},"content":""},{"lineNumber":46,"author":{"gitId":"farice9"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"farice9"},"content":"    void getDestinationMode_correctModeInputs_success() throws Exception {"},{"lineNumber":48,"author":{"gitId":"farice9"},"content":"        CommandParser commandParser \u003d new CommandParser();"},{"lineNumber":49,"author":{"gitId":"farice9"},"content":""},{"lineNumber":50,"author":{"gitId":"farice9"},"content":"        // Test for mode index input"},{"lineNumber":51,"author":{"gitId":"farice9"},"content":"        assertEquals(Mode.MENU, commandParser.getDestinationMode(\"cd 1\"));"},{"lineNumber":52,"author":{"gitId":"farice9"},"content":"        assertEquals(Mode.BOOKMARK, commandParser.getDestinationMode(\"cd 2\"));"},{"lineNumber":53,"author":{"gitId":"farice9"},"content":"        assertEquals(Mode.TIMETABLE, commandParser.getDestinationMode(\"cd 3\"));"},{"lineNumber":54,"author":{"gitId":"farice9"},"content":"        assertEquals(Mode.ACADEMIC, commandParser.getDestinationMode(\"cd 4\"));"},{"lineNumber":55,"author":{"gitId":"farice9"},"content":"        assertEquals(Mode.FLASHCARD, commandParser.getDestinationMode(\"cd 5\"));"},{"lineNumber":56,"author":{"gitId":"farice9"},"content":""},{"lineNumber":57,"author":{"gitId":"farice9"},"content":"        // Test for mode name input"},{"lineNumber":58,"author":{"gitId":"farice9"},"content":"        assertEquals(Mode.MENU, commandParser.getDestinationMode(\"cd menu\"));"},{"lineNumber":59,"author":{"gitId":"farice9"},"content":"        assertEquals(Mode.BOOKMARK, commandParser.getDestinationMode(\"cd bookmark\"));"},{"lineNumber":60,"author":{"gitId":"farice9"},"content":"        assertEquals(Mode.TIMETABLE, commandParser.getDestinationMode(\"cd timetable\"));"},{"lineNumber":61,"author":{"gitId":"farice9"},"content":"        assertEquals(Mode.ACADEMIC, commandParser.getDestinationMode(\"cd academic\"));"},{"lineNumber":62,"author":{"gitId":"farice9"},"content":"        assertEquals(Mode.FLASHCARD, commandParser.getDestinationMode(\"cd flashcard\"));"},{"lineNumber":63,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"farice9"},"content":""},{"lineNumber":65,"author":{"gitId":"farice9"},"content":"    @Test"},{"lineNumber":66,"author":{"gitId":"farice9"},"content":"    void getDestinationMode_incorrectModeNumber_exceptionThrown() {"},{"lineNumber":67,"author":{"gitId":"farice9"},"content":"        CommandParser commandParser \u003d new CommandParser();"},{"lineNumber":68,"author":{"gitId":"farice9"},"content":""},{"lineNumber":69,"author":{"gitId":"farice9"},"content":"        assertThrows(InvalidModeException.class, () -\u003e {"},{"lineNumber":70,"author":{"gitId":"farice9"},"content":"            commandParser.getDestinationMode(\"cd 10\");"},{"lineNumber":71,"author":{"gitId":"farice9"},"content":"        });"},{"lineNumber":72,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"farice9"},"content":""},{"lineNumber":74,"author":{"gitId":"farice9"},"content":"    @Test"},{"lineNumber":75,"author":{"gitId":"farice9"},"content":"    void getDestinationMode_incorrectModeName_exceptionThrown() {"},{"lineNumber":76,"author":{"gitId":"farice9"},"content":"        CommandParser commandParser \u003d new CommandParser();"},{"lineNumber":77,"author":{"gitId":"farice9"},"content":""},{"lineNumber":78,"author":{"gitId":"farice9"},"content":"        assertThrows(InvalidModeException.class, () -\u003e {"},{"lineNumber":79,"author":{"gitId":"farice9"},"content":"            commandParser.getDestinationMode(\"cd easyA\");"},{"lineNumber":80,"author":{"gitId":"farice9"},"content":"        });"},{"lineNumber":81,"author":{"gitId":"farice9"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"farice9"},"content":"}"}],"authorContributionMap":{"farice9":82}},{"path":"src/test/java/academic/GradeBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luziyi9898"},"content":"package academic;"},{"lineNumber":2,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":3,"author":{"gitId":"luziyi9898"},"content":"import exceptions.EmptyInputException;"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":"import exceptions.RepeatedGradeException;"},{"lineNumber":5,"author":{"gitId":"luziyi9898"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":7,"author":{"gitId":"luziyi9898"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":9,"author":{"gitId":"luziyi9898"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"luziyi9898"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":11,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":12,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":13,"author":{"gitId":"luziyi9898"},"content":"class GradeBookTest {"},{"lineNumber":14,"author":{"gitId":"luziyi9898"},"content":"    private GradeBook gradeBook \u003d new GradeBook();"},{"lineNumber":15,"author":{"gitId":"luziyi9898"},"content":"    private ArrayList\u003cGrade\u003e currentGrade \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"luziyi9898"},"content":"    private Grade testGrade \u003d new Grade(\"CS2101\",4,\"A-\");"},{"lineNumber":17,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":18,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":19,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":20,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_addGrade_success() throws RepeatedGradeException, EmptyInputException {"},{"lineNumber":22,"author":{"gitId":"luziyi9898"},"content":"        String[] inputVars \u003d {\"CS2101\",\"4\",\"A-\",\"false\",\"false\"};"},{"lineNumber":23,"author":{"gitId":"luziyi9898"},"content":"        gradeBook.addGrade(inputVars,currentGrade);"},{"lineNumber":24,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(Grade.printIndividualGrade(testGrade),Grade.printIndividualGrade(currentGrade.get(0)));"},{"lineNumber":25,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":27,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_printCap_success() throws RepeatedGradeException, EmptyInputException {"},{"lineNumber":29,"author":{"gitId":"luziyi9898"},"content":"        String[] inputVars \u003d {\"CS2101\",\"4\",\"A-\",\"false\",\"false\"};"},{"lineNumber":30,"author":{"gitId":"luziyi9898"},"content":"        gradeBook.addGrade(inputVars,currentGrade);"},{"lineNumber":31,"author":{"gitId":"luziyi9898"},"content":"        String result \u003d gradeBook.printCap(currentGrade);"},{"lineNumber":32,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(\"Current CAP is 4.5.\",result);"},{"lineNumber":33,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":35,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_printListOfGrades_success() throws RepeatedGradeException, EmptyInputException {"},{"lineNumber":37,"author":{"gitId":"luziyi9898"},"content":"        String[] inputVars \u003d {\"CS2101\",\"4\",\"A-\",\"false\",\"false\"};"},{"lineNumber":38,"author":{"gitId":"luziyi9898"},"content":"        gradeBook.addGrade(inputVars,currentGrade);"},{"lineNumber":39,"author":{"gitId":"luziyi9898"},"content":"        String result \u003d gradeBook.printListOfGrades(currentGrade);"},{"lineNumber":40,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(\"1.[CS2101] [4MC] [A-]\",result);"},{"lineNumber":41,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":43,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_combineGradeDetails_success() {"},{"lineNumber":45,"author":{"gitId":"luziyi9898"},"content":"        String result \u003d gradeBook.combineGradeDetails(testGrade);"},{"lineNumber":46,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(\"[CS2101] [4MC] [A-]\",result);"},{"lineNumber":47,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":49,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_deleteGrade_success() throws RepeatedGradeException, EmptyInputException {"},{"lineNumber":51,"author":{"gitId":"luziyi9898"},"content":"        String[] inputVars \u003d {\"CS2101\",\"4\",\"A-\",\"false\",\"false\"};"},{"lineNumber":52,"author":{"gitId":"luziyi9898"},"content":"        gradeBook.addGrade(inputVars,currentGrade);"},{"lineNumber":53,"author":{"gitId":"luziyi9898"},"content":"        gradeBook.deleteGrade(1,currentGrade);"},{"lineNumber":54,"author":{"gitId":"luziyi9898"},"content":"        assertTrue(currentGrade.size() \u003d\u003d 0);"},{"lineNumber":55,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":57,"author":{"gitId":"luziyi9898"},"content":"}"},{"lineNumber":58,"author":{"gitId":"luziyi9898"},"content":""}],"authorContributionMap":{"luziyi9898":58}},{"path":"src/test/java/academic/PersonBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luziyi9898"},"content":"package academic;"},{"lineNumber":2,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":3,"author":{"gitId":"luziyi9898"},"content":"import exceptions.EmptyInputException;"},{"lineNumber":4,"author":{"gitId":"luziyi9898"},"content":"import exceptions.InvalidEmailException;"},{"lineNumber":5,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":6,"author":{"gitId":"luziyi9898"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":8,"author":{"gitId":"luziyi9898"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":10,"author":{"gitId":"luziyi9898"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":11,"author":{"gitId":"luziyi9898"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":12,"author":{"gitId":"luziyi9898"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;"},{"lineNumber":13,"author":{"gitId":"luziyi9898"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":14,"author":{"gitId":"luziyi9898"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;"},{"lineNumber":15,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":16,"author":{"gitId":"luziyi9898"},"content":"class PersonBookTest {"},{"lineNumber":17,"author":{"gitId":"luziyi9898"},"content":"    private PersonBook personBook \u003d new PersonBook();"},{"lineNumber":18,"author":{"gitId":"luziyi9898"},"content":"    private ArrayList\u003cPerson\u003e listOfPerson \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"luziyi9898"},"content":"    private Person testPerson \u003d new Person(\"Prof Lim\", \"81234567\", \"E7654321@u.nus.edu\");"},{"lineNumber":20,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":21,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":22,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_addPerson_success() throws InvalidEmailException, EmptyInputException {"},{"lineNumber":24,"author":{"gitId":"luziyi9898"},"content":"        String[] inputVars \u003d {\"Prof Lim\",\"81234567\",\"E7654321@u.nus.edu\",\"false\"};"},{"lineNumber":25,"author":{"gitId":"luziyi9898"},"content":"        personBook.addPerson(inputVars,listOfPerson);"},{"lineNumber":26,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(Person.printIndividualPerson(testPerson),Person.printIndividualPerson(listOfPerson.get(0)));"},{"lineNumber":27,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":29,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_incorrectAddPerson_invalidEmailExceptionThrown() {"},{"lineNumber":31,"author":{"gitId":"luziyi9898"},"content":"        String[] inputVars \u003d {\"Prof Lim\",\"81234567\",\"thisIsAEmail\",\"false\"};"},{"lineNumber":32,"author":{"gitId":"luziyi9898"},"content":"        assertThrows(InvalidEmailException.class, () -\u003e {"},{"lineNumber":33,"author":{"gitId":"luziyi9898"},"content":"            personBook.addPerson(inputVars,listOfPerson);"},{"lineNumber":34,"author":{"gitId":"luziyi9898"},"content":"        });"},{"lineNumber":35,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":37,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_printPersonBook_success() throws InvalidEmailException, EmptyInputException {"},{"lineNumber":39,"author":{"gitId":"luziyi9898"},"content":"        String[] inputVars \u003d {\"Prof Lim\",\"81234567\",\"E7654321@u.nus.edu\",\"false\"};"},{"lineNumber":40,"author":{"gitId":"luziyi9898"},"content":"        personBook.addPerson(inputVars,listOfPerson);"},{"lineNumber":41,"author":{"gitId":"luziyi9898"},"content":"        String result \u003d personBook.printPersonBook(listOfPerson);"},{"lineNumber":42,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(\"1.[Prof Lim] [81234567] [E7654321@u.nus.edu]\",result);"},{"lineNumber":43,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":45,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_combinePersonDetails_success() {"},{"lineNumber":47,"author":{"gitId":"luziyi9898"},"content":"        String result \u003d personBook.combinePersonDetails(testPerson);"},{"lineNumber":48,"author":{"gitId":"luziyi9898"},"content":"        assertEquals(\"[Prof Lim] [81234567] [E7654321@u.nus.edu]\",result);"},{"lineNumber":49,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":51,"author":{"gitId":"luziyi9898"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"luziyi9898"},"content":"    void evaluateInput_deletePerson_success() throws InvalidEmailException, EmptyInputException {"},{"lineNumber":53,"author":{"gitId":"luziyi9898"},"content":"        String[] inputVars \u003d {\"Prof Lim\",\"81234567\",\"E7654321@u.nus.edu\",\"false\"};"},{"lineNumber":54,"author":{"gitId":"luziyi9898"},"content":"        personBook.addPerson(inputVars,listOfPerson);"},{"lineNumber":55,"author":{"gitId":"luziyi9898"},"content":"        personBook.deletePerson(1,listOfPerson);"},{"lineNumber":56,"author":{"gitId":"luziyi9898"},"content":"        assertTrue(listOfPerson.size() \u003d\u003d 0);"},{"lineNumber":57,"author":{"gitId":"luziyi9898"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":59,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":60,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":61,"author":{"gitId":"luziyi9898"},"content":""},{"lineNumber":62,"author":{"gitId":"luziyi9898"},"content":"}"}],"authorContributionMap":{"luziyi9898":62}},{"path":"src/test/java/bookmark/BookmarkParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"farice9"},"content":"import bookmark.BookmarkParser;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.AddLinkCommand;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.BackCommand;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.ChangeModeCommand;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.ListCommand;"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.RemoveLinkCommand;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":"import bookmark.commands.BookmarkCommand;"},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"class BookmarkParserTest {"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"    private int chosenCategory;"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"    void evaluateInput_listCommand_parsedCorrectly() throws InvalidCommandException {"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"        BookmarkParser parser \u003d new BookmarkParser();"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"        String input \u003d \"list\";"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"        final BookmarkCommand result \u003d parser.evaluateInput(input,chosenCategory);"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"        assertTrue(result.getClass().isAssignableFrom(ListCommand.class));"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"    void evaluateInput_changeModeCommand_parsedCorrectly() throws InvalidCommandException {"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"        BookmarkParser parser \u003d new BookmarkParser();"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"        String input \u003d \"bm 2\";"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"        final BookmarkCommand result \u003d parser.evaluateInput(input,chosenCategory);"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"        assertTrue(result.getClass().isAssignableFrom(ChangeModeCommand.class));"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"    void evaluateInput_addCommand_parsedCorrectly() throws InvalidCommandException {"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"        BookmarkParser parser \u003d new BookmarkParser();"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"        String input \u003d \"add http://facebook.com\";"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"        final BookmarkCommand result \u003d parser.evaluateInput(input,chosenCategory);"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"        assertTrue(result.getClass().isAssignableFrom(AddLinkCommand.class));"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"    void evaluateInput_removeCommand_parsedCorrectly() throws InvalidCommandException {"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"        BookmarkParser parser \u003d new BookmarkParser();"},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"        String input \u003d \"rm 2\";"},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":"        final BookmarkCommand result \u003d parser.evaluateInput(input,chosenCategory);"},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"        assertTrue(result.getClass().isAssignableFrom(RemoveLinkCommand.class));"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"    void evaluateInput_backCommand_parsedCorrectly() throws InvalidCommandException {"},{"lineNumber":55,"author":{"gitId":"lingsihui"},"content":"        BookmarkParser parser \u003d new BookmarkParser();"},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":"        String input \u003d \"back\";"},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":"        final BookmarkCommand result \u003d parser.evaluateInput(input,chosenCategory);"},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":"        assertTrue(result.getClass().isAssignableFrom(BackCommand.class));"},{"lineNumber":59,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":61,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":62,"author":{"gitId":"lingsihui"},"content":"    void evaluateInput_invalidBookmarkCommand_expectExceptions() {"},{"lineNumber":63,"author":{"gitId":"lingsihui"},"content":"        BookmarkParser parser \u003d new BookmarkParser();"},{"lineNumber":64,"author":{"gitId":"lingsihui"},"content":"        String input \u003d \"huhuhuh\";"},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e {"},{"lineNumber":66,"author":{"gitId":"lingsihui"},"content":"            parser.evaluateInput(input,chosenCategory);"},{"lineNumber":67,"author":{"gitId":"lingsihui"},"content":"        });"},{"lineNumber":68,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":70,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":71,"author":{"gitId":"lingsihui"},"content":"    void evaluateInput_nullCommand_expectExceptions() {"},{"lineNumber":72,"author":{"gitId":"lingsihui"},"content":"        BookmarkParser parser \u003d new BookmarkParser();"},{"lineNumber":73,"author":{"gitId":"lingsihui"},"content":"        String input \u003d null;"},{"lineNumber":74,"author":{"gitId":"lingsihui"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e {"},{"lineNumber":75,"author":{"gitId":"lingsihui"},"content":"            parser.evaluateInput(input,chosenCategory);"},{"lineNumber":76,"author":{"gitId":"lingsihui"},"content":"        });"},{"lineNumber":77,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":77,"farice9":1}},{"path":"src/test/java/bookmark/commands/AddCategoryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"class AddCategoryCommandTest {"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"    private BookmarkUi ui \u003d new BookmarkUi();"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    private ArrayList\u003cBookmarkCategory\u003e categories \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    private BookmarkStorage storage \u003d new BookmarkStorage(\"data/bookmark.txt\");"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand_addValidCategory_addCategoryCorrectly() {"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"cat Entertainment\";"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 0;"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"        AddCategoryCommand command \u003d new AddCategoryCommand(inputString, categoryNumber);"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui, categories, storage);"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"        assertEquals(1, categories.size());"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand_addCategoryInAnotherMode_addCategoryCorrectly() {"},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"cat Entertainment\";"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 2;"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"        AddCategoryCommand command \u003d new AddCategoryCommand(inputString, categoryNumber);"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui, categories, storage);"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"        assertEquals(1, categories.size());"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand_addEmptyCategoryCommand_doesNotAddCategory() {"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"cat \";"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 0;"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"        AddCategoryCommand command \u003d new AddCategoryCommand(inputString, categoryNumber);"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui, categories, storage);"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"        assertEquals(0, categories.size());"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":44}},{"path":"src/test/java/bookmark/commands/AddLinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"class AddLinkCommandTest {"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    private BookmarkUi ui \u003d new BookmarkUi();"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":"    private ArrayList\u003cBookmarkCategory\u003e categories \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"    private BookmarkStorage storage \u003d new BookmarkStorage(\"data/bookmark.txt\");"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand_addValidLinkCommand_addLinkCorrectly() {"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"NUS\"));"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"Zoom\"));"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"add https://facebook.com\";"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 2;"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"        AddLinkCommand command \u003d new AddLinkCommand(inputString,categoryNumber);"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"        assertEquals(1,categories.get(categoryNumber - 1).getLinks().size());"},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand_addInValidLinkCommand_doesNotAddLink() {"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"NUS\"));"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"Zoom\"));"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"add huhuhuh\";"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 2;"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"        AddLinkCommand command \u003d new AddLinkCommand(inputString,categoryNumber);"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"        assertEquals(0,categories.get(categoryNumber - 1).getLinks().size());"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand_addEmptyLinkCommand_doesNotAddLink() {"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"NUS\"));"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"Zoom\"));"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"add \";"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 2;"},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"        AddLinkCommand command \u003d new AddLinkCommand(inputString,categoryNumber);"},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"        assertEquals(0,categories.get(categoryNumber - 1).getLinks().size());"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand_categoryNotChosen_doesNotAddLink() {"},{"lineNumber":55,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"NUS\"));"},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"Zoom\"));"},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"add \";"},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 0;"},{"lineNumber":59,"author":{"gitId":"lingsihui"},"content":"        AddLinkCommand command \u003d new AddLinkCommand(inputString,categoryNumber);"},{"lineNumber":60,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":61,"author":{"gitId":"lingsihui"},"content":"        assertEquals(0,categories.get(categoryNumber).getLinks().size());"},{"lineNumber":62,"author":{"gitId":"lingsihui"},"content":"        assertEquals(0,categories.get(categoryNumber + 1).getLinks().size());"},{"lineNumber":63,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":66,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand_validLinkWithTitle_addLinkCorrectly() {"},{"lineNumber":67,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"NUS\"));"},{"lineNumber":68,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"Zoom\"));"},{"lineNumber":69,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"add https://facebook.com t-\u003eSocial Media\";;"},{"lineNumber":70,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 2;"},{"lineNumber":71,"author":{"gitId":"lingsihui"},"content":"        AddLinkCommand command \u003d new AddLinkCommand(inputString,categoryNumber);"},{"lineNumber":72,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":73,"author":{"gitId":"lingsihui"},"content":"        assertEquals(1,categories.get(categoryNumber - 1).getLinks().size());"},{"lineNumber":74,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":76,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":77,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand_validLinkWithEmptyTitle_doesNotAddLink() {"},{"lineNumber":78,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"NUS\"));"},{"lineNumber":79,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"Zoom\"));"},{"lineNumber":80,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"add https://facebook.com t-\u003e\";;"},{"lineNumber":81,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 2;"},{"lineNumber":82,"author":{"gitId":"lingsihui"},"content":"        AddLinkCommand command \u003d new AddLinkCommand(inputString,categoryNumber);"},{"lineNumber":83,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":84,"author":{"gitId":"lingsihui"},"content":"        assertEquals(0,categories.get(categoryNumber - 1).getLinks().size());"},{"lineNumber":85,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":87,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":88,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":89,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":90,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":91,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":92,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":92}},{"path":"src/test/java/bookmark/commands/BackCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"class BackCommandTest {"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"    private BookmarkUi ui \u003d new BookmarkUi();"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    private ArrayList\u003cBookmarkCategory\u003e categories \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    private BookmarkStorage storage \u003d new BookmarkStorage(\"data/bookmark.txt\");"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_backCommandInMain_showByeMessage() {"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 0;"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"        String input \u003d \"back\";"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"        BackCommand command \u003d new BackCommand(input, categoryNumber);"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"        assertEquals(0,command.getCategoryNumber());"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_backCommandInCategory_returnToBookmarkMain() {"},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 1;"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"        String input \u003d \"back\";"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"        BackCommand command \u003d new BackCommand(input,categoryNumber);"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"        assertEquals(0,command.getCategoryNumber());"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":35}},{"path":"src/test/java/bookmark/commands/ChangeModeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"class ChangeModeCommandTest {"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"    private BookmarkUi ui \u003d new BookmarkUi();"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    private ArrayList\u003cBookmarkCategory\u003e categories \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    private BookmarkStorage storage \u003d new BookmarkStorage(\"data/bookmark.txt\");"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_validCategory_returnsUpdatedCategoryNumber() {"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"NUS\"));"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"Zoom\"));"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 0;"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"bm 2\";"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"        ChangeModeCommand command \u003d new ChangeModeCommand(inputString,categoryNumber);"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"        assertEquals(2,command.getCategoryNumber());"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_InvalidCategory_doesNotUpdateCategoryNumber() {"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"NUS\"));"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"Zoom\"));"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 0;"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"bm 200\";"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"        ChangeModeCommand command \u003d new ChangeModeCommand(inputString,categoryNumber);"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"        assertEquals(0,command.getCategoryNumber());"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_EmptyCategory_doesNotUpdateCategoryNumber() {"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"NUS\"));"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"Zoom\"));"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 0;"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"bm \";"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"        ChangeModeCommand command \u003d new ChangeModeCommand(inputString,categoryNumber);"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"        assertEquals(0,command.getCategoryNumber());"},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_SameCategory_doesNotUpdateCategoryNumber() {"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"NUS\"));"},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"Zoom\"));"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 2;"},{"lineNumber":55,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"bm 2\";"},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":"        ChangeModeCommand command \u003d new ChangeModeCommand(inputString,categoryNumber);"},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":"        assertEquals(2,command.getCategoryNumber());"},{"lineNumber":59,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":60}},{"path":"src/test/java/bookmark/commands/RemoveCategoryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"class RemoveCategoryCommandTest {"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"    private BookmarkUi ui \u003d new BookmarkUi();"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":"    private ArrayList\u003cBookmarkCategory\u003e categories \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    private BookmarkStorage storage \u003d new BookmarkStorage(\"data/bookmark.txt\");"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_deleteValidCategory_deleteCategoryCorrectly() {"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"        setUpBookmark();"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"delete 1\";"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 0;"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"        RemoveCategoryCommand removeCommand \u003d new RemoveCategoryCommand(inputString,categoryNumber);"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"        removeCommand.executeCommand(ui,categories,storage);"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"        assertEquals(0,categories.size());"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_deleteInValidCategoryCommand_doseNotDeleteCategory() {"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"        setUpBookmark();"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"delete 10000\"; //rm 0"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 0;"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"        RemoveCategoryCommand removeCommand \u003d new RemoveCategoryCommand(inputString,categoryNumber);"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"        removeCommand.executeCommand(ui,categories,storage);"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"        assertEquals(1,categories.size());"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_deleteEmptyCategoryCommand_doesNotDeleteCategory() {"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"        setUpBookmark();"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"delete \";"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 0;"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"        RemoveCategoryCommand removeCommand \u003d new RemoveCategoryCommand(inputString,categoryNumber);"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"        removeCommand.executeCommand(ui,categories,storage);"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"        assertEquals(1,categories.size());"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_deleteNotANumber_doesNotDeleteCategory() {"},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"        setUpBookmark();"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"delete abcdef\";"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 0;"},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"        RemoveCategoryCommand removeCommand \u003d new RemoveCategoryCommand(inputString,categoryNumber);"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"        removeCommand.executeCommand(ui,categories,storage);"},{"lineNumber":55,"author":{"gitId":"lingsihui"},"content":"        assertEquals(1,categories.size());"},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand_deleteInWrongMode_doesNotDeleteCategory() {"},{"lineNumber":60,"author":{"gitId":"lingsihui"},"content":"        setUpBookmark();"},{"lineNumber":61,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"delete 1\";"},{"lineNumber":62,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 2;"},{"lineNumber":63,"author":{"gitId":"lingsihui"},"content":"        RemoveCategoryCommand removeCommand \u003d new RemoveCategoryCommand(inputString,categoryNumber);"},{"lineNumber":64,"author":{"gitId":"lingsihui"},"content":"        removeCommand.executeCommand(ui,categories,storage);"},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"        assertEquals(1,categories.size());"},{"lineNumber":66,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":68,"author":{"gitId":"lingsihui"},"content":"    private void setUpBookmark() {"},{"lineNumber":69,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"NUS\"));"},{"lineNumber":70,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":72,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":72}},{"path":"src/test/java/bookmark/commands/RemoveLinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"class RemoveLinkCommandTest {"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":"    private BookmarkUi ui \u003d new BookmarkUi();"},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":"    private ArrayList\u003cBookmarkCategory\u003e categories \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"    private BookmarkStorage storage \u003d new BookmarkStorage(\"data/bookmark.txt\");"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_removeValidLinkCommand_removeLinkCorrectly() {"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":"        setUpBookmark();"},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"rm 1\";"},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 2;"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"        RemoveLinkCommand removeCommand \u003d new RemoveLinkCommand(inputString,categoryNumber);"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"        removeCommand.executeCommand(ui,categories,storage);"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"        assertEquals(0,categories.get(categoryNumber - 1).getLinks().size());"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_removeInValidCategoryCommand_doseNotRemoveLink() {"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"        setUpBookmark();"},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"rm 10000\"; //rm 0"},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 2;"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"        RemoveLinkCommand removeCommand \u003d new RemoveLinkCommand(inputString,categoryNumber);"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"        removeCommand.executeCommand(ui,categories,storage);"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"        assertEquals(1,categories.get(categoryNumber - 1).getLinks().size());"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_removeEmptyCategoryCommand_doesNotRemoveLink() {"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"        setUpBookmark();"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"rm \";"},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 2;"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"        RemoveLinkCommand removeCommand \u003d new RemoveLinkCommand(inputString,categoryNumber);"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"        removeCommand.executeCommand(ui,categories,storage);"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"        assertEquals(1,categories.get(categoryNumber - 1).getLinks().size());"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_removeNotANumber_doesNotRemoveLink() {"},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"        setUpBookmark();"},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"rm abcdef\";"},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 2;"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"        RemoveLinkCommand removeCommand \u003d new RemoveLinkCommand(inputString,categoryNumber);"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":"        removeCommand.executeCommand(ui,categories,storage);"},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"        assertEquals(1,categories.get(categoryNumber - 1).getLinks().size());"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":"    public void executeCommand_categoryNotChosen_doesNotRemoveLink() {"},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":"        setUpBookmark();"},{"lineNumber":59,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"rm 1\";"},{"lineNumber":60,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 0;"},{"lineNumber":61,"author":{"gitId":"lingsihui"},"content":"        RemoveLinkCommand removeCommand \u003d new RemoveLinkCommand(inputString,categoryNumber);"},{"lineNumber":62,"author":{"gitId":"lingsihui"},"content":"        removeCommand.executeCommand(ui,categories,storage);"},{"lineNumber":63,"author":{"gitId":"lingsihui"},"content":"        assertEquals(0,categories.get(categoryNumber).getLinks().size());"},{"lineNumber":64,"author":{"gitId":"lingsihui"},"content":"        assertEquals(1,categories.get(categoryNumber + 1).getLinks().size());"},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":67,"author":{"gitId":"lingsihui"},"content":"    private void setUpBookmark() {"},{"lineNumber":68,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"NUS\"));"},{"lineNumber":69,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"Zoom\"));"},{"lineNumber":70,"author":{"gitId":"lingsihui"},"content":"        String addLink \u003d \"add https://huhuhu.com\";"},{"lineNumber":71,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 2;"},{"lineNumber":72,"author":{"gitId":"lingsihui"},"content":"        AddLinkCommand command \u003d new AddLinkCommand(addLink,categoryNumber);"},{"lineNumber":73,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":74,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":76,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":76}},{"path":"src/test/java/bookmark/commands/StarCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lingsihui"},"content":"package bookmark.commands;"},{"lineNumber":2,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":3,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkCategory;"},{"lineNumber":4,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkStorage;"},{"lineNumber":5,"author":{"gitId":"lingsihui"},"content":"import bookmark.BookmarkUi;"},{"lineNumber":6,"author":{"gitId":"lingsihui"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":8,"author":{"gitId":"lingsihui"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":10,"author":{"gitId":"lingsihui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":11,"author":{"gitId":"lingsihui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":12,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":13,"author":{"gitId":"lingsihui"},"content":"class StarCommandTest {"},{"lineNumber":14,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":15,"author":{"gitId":"lingsihui"},"content":"    private BookmarkUi ui \u003d new BookmarkUi();"},{"lineNumber":16,"author":{"gitId":"lingsihui"},"content":"    private ArrayList\u003cBookmarkCategory\u003e categories \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"lingsihui"},"content":"    private BookmarkStorage storage \u003d new BookmarkStorage(\"data/bookmark.txt\");"},{"lineNumber":18,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":19,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":20,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_validStarCommand_markLinkAsStar() {"},{"lineNumber":22,"author":{"gitId":"lingsihui"},"content":"        setUp();"},{"lineNumber":23,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 1;"},{"lineNumber":24,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"star 1\";"},{"lineNumber":25,"author":{"gitId":"lingsihui"},"content":"        StarCommand command \u003d new StarCommand(inputString,categoryNumber);"},{"lineNumber":26,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":27,"author":{"gitId":"lingsihui"},"content":"        assertTrue(categories.get(0).getLinks().get(0).getStar());"},{"lineNumber":28,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":30,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_InvalidStarCommand_doesNotMarkLinkAsStar() {"},{"lineNumber":32,"author":{"gitId":"lingsihui"},"content":"        setUp();"},{"lineNumber":33,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 1;"},{"lineNumber":34,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"star 1000\";"},{"lineNumber":35,"author":{"gitId":"lingsihui"},"content":"        StarCommand command \u003d new StarCommand(inputString,categoryNumber);"},{"lineNumber":36,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":37,"author":{"gitId":"lingsihui"},"content":"        assertFalse(categories.get(0).getLinks().get(0).getStar());"},{"lineNumber":38,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":40,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_EmptyStarCommand_doesNotMarkLinkAsStar() {"},{"lineNumber":42,"author":{"gitId":"lingsihui"},"content":"        setUp();"},{"lineNumber":43,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 1;"},{"lineNumber":44,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"star \";"},{"lineNumber":45,"author":{"gitId":"lingsihui"},"content":"        StarCommand command \u003d new StarCommand(inputString,categoryNumber);"},{"lineNumber":46,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":47,"author":{"gitId":"lingsihui"},"content":"        assertFalse(categories.get(0).getLinks().get(0).getStar());"},{"lineNumber":48,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":50,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_notANumberStarCommand_doesNotMarkLinkAsStar() {"},{"lineNumber":52,"author":{"gitId":"lingsihui"},"content":"        setUp();"},{"lineNumber":53,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 1;"},{"lineNumber":54,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"star adhuhu\";"},{"lineNumber":55,"author":{"gitId":"lingsihui"},"content":"        StarCommand command \u003d new StarCommand(inputString,categoryNumber);"},{"lineNumber":56,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":57,"author":{"gitId":"lingsihui"},"content":"        assertFalse(categories.get(0).getLinks().get(0).getStar());"},{"lineNumber":58,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":60,"author":{"gitId":"lingsihui"},"content":"    @Test"},{"lineNumber":61,"author":{"gitId":"lingsihui"},"content":"    void executeCommand_categoryNotChosenStarCommand_doesNotMarkLinkAsStar() {"},{"lineNumber":62,"author":{"gitId":"lingsihui"},"content":"        setUp();"},{"lineNumber":63,"author":{"gitId":"lingsihui"},"content":"        int categoryNumber \u003d 0;"},{"lineNumber":64,"author":{"gitId":"lingsihui"},"content":"        String inputString \u003d \"star 1\";"},{"lineNumber":65,"author":{"gitId":"lingsihui"},"content":"        StarCommand command \u003d new StarCommand(inputString,categoryNumber);"},{"lineNumber":66,"author":{"gitId":"lingsihui"},"content":"        command.executeCommand(ui,categories,storage);"},{"lineNumber":67,"author":{"gitId":"lingsihui"},"content":"        assertFalse(categories.get(0).getLinks().get(0).getStar());"},{"lineNumber":68,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"lingsihui"},"content":""},{"lineNumber":70,"author":{"gitId":"lingsihui"},"content":"    void setUp() {"},{"lineNumber":71,"author":{"gitId":"lingsihui"},"content":"        categories.add(new BookmarkCategory(\"NUS\"));"},{"lineNumber":72,"author":{"gitId":"lingsihui"},"content":"        categories.get(0).addLink(\"https://huhu.com\", null);"},{"lineNumber":73,"author":{"gitId":"lingsihui"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"lingsihui"},"content":"}"}],"authorContributionMap":{"lingsihui":74}},{"path":"src/test/java/flashcard/FlashcardDeckTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hailqueenflo"},"content":"package flashcard;"},{"lineNumber":2,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":3,"author":{"gitId":"hailqueenflo"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":4,"author":{"gitId":"hailqueenflo"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":6,"author":{"gitId":"hailqueenflo"},"content":"import java.io.ByteArrayInputStream;"},{"lineNumber":7,"author":{"gitId":"hailqueenflo"},"content":"import java.io.InputStream;"},{"lineNumber":8,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":9,"author":{"gitId":"hailqueenflo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":11,"author":{"gitId":"hailqueenflo"},"content":"class FlashcardDeckTest {"},{"lineNumber":12,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":13,"author":{"gitId":"hailqueenflo"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"hailqueenflo"},"content":"    void executeCommand_addCardsCommand_addCardCorrectly() {"},{"lineNumber":15,"author":{"gitId":"hailqueenflo"},"content":"        FlashcardDeck flashcardDeck \u003d new FlashcardDeck();"},{"lineNumber":16,"author":{"gitId":"hailqueenflo"},"content":"        String input \u003d \"2+2\\n4\\n\";"},{"lineNumber":17,"author":{"gitId":"hailqueenflo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"},{"lineNumber":18,"author":{"gitId":"hailqueenflo"},"content":"        System.setIn(in);"},{"lineNumber":19,"author":{"gitId":"hailqueenflo"},"content":"        flashcardDeck.addCards();"},{"lineNumber":20,"author":{"gitId":"hailqueenflo"},"content":"        assertEquals(\"2+2\", flashcardDeck.flashcardDeck.get(0).question);"},{"lineNumber":21,"author":{"gitId":"hailqueenflo"},"content":"        assertEquals(\"4\", flashcardDeck.flashcardDeck.get(0).answer);"},{"lineNumber":22,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":24,"author":{"gitId":"hailqueenflo"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"hailqueenflo"},"content":"    void executeCommand_deleteCardCommand_deleteCardCorrectly() {"},{"lineNumber":26,"author":{"gitId":"hailqueenflo"},"content":"        FlashcardDeck flashcardDeck \u003d new FlashcardDeck();"},{"lineNumber":27,"author":{"gitId":"hailqueenflo"},"content":"        Flashcard flashcard1 \u003d new Flashcard(\"1+1\", \"2\");"},{"lineNumber":28,"author":{"gitId":"hailqueenflo"},"content":"        Flashcard flashcard2 \u003d new Flashcard(\"2+2\", \"4\");"},{"lineNumber":29,"author":{"gitId":"hailqueenflo"},"content":"        Flashcard flashcard3 \u003d new Flashcard(\"3+3\", \"6\");"},{"lineNumber":30,"author":{"gitId":"hailqueenflo"},"content":"        Flashcard flashcard4 \u003d new Flashcard(\"4+4\", \"8\");"},{"lineNumber":31,"author":{"gitId":"hailqueenflo"},"content":"        flashcardDeck.flashcardDeck.add(flashcard1);"},{"lineNumber":32,"author":{"gitId":"hailqueenflo"},"content":"        flashcardDeck.flashcardDeck.add(flashcard2);"},{"lineNumber":33,"author":{"gitId":"hailqueenflo"},"content":"        flashcardDeck.flashcardDeck.add(flashcard3);"},{"lineNumber":34,"author":{"gitId":"hailqueenflo"},"content":"        flashcardDeck.flashcardDeck.add(flashcard4);"},{"lineNumber":35,"author":{"gitId":"hailqueenflo"},"content":"        String input \u003d \"3\\n\";"},{"lineNumber":36,"author":{"gitId":"hailqueenflo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"},{"lineNumber":37,"author":{"gitId":"hailqueenflo"},"content":"        System.setIn(in);"},{"lineNumber":38,"author":{"gitId":"hailqueenflo"},"content":"        assertEquals(4, flashcardDeck.flashcardDeck.size());"},{"lineNumber":39,"author":{"gitId":"hailqueenflo"},"content":"        flashcardDeck.deleteCard();"},{"lineNumber":40,"author":{"gitId":"hailqueenflo"},"content":"        assertEquals(3, flashcardDeck.flashcardDeck.size());"},{"lineNumber":41,"author":{"gitId":"hailqueenflo"},"content":"        assertEquals(\"4+4\", flashcardDeck.flashcardDeck.get(2).question);"},{"lineNumber":42,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":44,"author":{"gitId":"hailqueenflo"},"content":"}"}],"authorContributionMap":{"hailqueenflo":44}},{"path":"src/test/java/flashcard/FlashcardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hailqueenflo"},"content":"package flashcard;"},{"lineNumber":2,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":3,"author":{"gitId":"hailqueenflo"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":5,"author":{"gitId":"hailqueenflo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":7,"author":{"gitId":"hailqueenflo"},"content":"class FlashcardTest {"},{"lineNumber":8,"author":{"gitId":"hailqueenflo"},"content":""},{"lineNumber":9,"author":{"gitId":"hailqueenflo"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"hailqueenflo"},"content":"    void writeToFile_addCards_savedToFile() {"},{"lineNumber":11,"author":{"gitId":"hailqueenflo"},"content":"        Flashcard flashcard \u003d new Flashcard(\"2+2\", \"4\");"},{"lineNumber":12,"author":{"gitId":"hailqueenflo"},"content":"        String expected \u003d \"2+2|4\\n\";"},{"lineNumber":13,"author":{"gitId":"hailqueenflo"},"content":"        String actual \u003d flashcard.writeToFile();"},{"lineNumber":14,"author":{"gitId":"hailqueenflo"},"content":"        assertEquals(expected, actual);"},{"lineNumber":15,"author":{"gitId":"hailqueenflo"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"hailqueenflo"},"content":"}"}],"authorContributionMap":{"hailqueenflo":16}},{"path":"src/test/java/timetable/DateListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"import exceptions.ClashScheduleException;"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":6,"author":{"gitId":"slightlyharp"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":"class DateListTest {"},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"slightlyharp"},"content":"    void addLesson_checkListValue() throws ClashScheduleException {"},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":"        DateList dateList \u003d new DateList();"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":"        Lesson lesson \u003d new Lesson(\"CS2113\", \"www.zoom.com/abcde\", true, 1);"},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"        Duration duration1 \u003d new Duration(LocalDateTime.of(2020,10,16,16,0),"},{"lineNumber":18,"author":{"gitId":"slightlyharp"},"content":"                LocalDateTime.of(2020,10,16,18,0));"},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":"        lesson.addPeriod(duration1);"},{"lineNumber":20,"author":{"gitId":"slightlyharp"},"content":"        Duration duration2 \u003d new Duration(LocalDateTime.of(2020,10,19,16,0),"},{"lineNumber":21,"author":{"gitId":"slightlyharp"},"content":"                LocalDateTime.of(2020,10,19,18,0));"},{"lineNumber":22,"author":{"gitId":"slightlyharp"},"content":"        lesson.addPeriod(duration2);"},{"lineNumber":23,"author":{"gitId":"slightlyharp"},"content":"        LocalDate result1 \u003d LocalDate.of(2020,10,16);"},{"lineNumber":24,"author":{"gitId":"slightlyharp"},"content":"        LocalDate result2 \u003d LocalDate.of(2020,10,19);"},{"lineNumber":25,"author":{"gitId":"slightlyharp"},"content":"        dateList.addEvent(lesson);"},{"lineNumber":26,"author":{"gitId":"slightlyharp"},"content":"        assertEquals(result1, dateList.dateList.get(0).dateTag);"},{"lineNumber":27,"author":{"gitId":"slightlyharp"},"content":"        assertEquals(result2, dateList.dateList.get(1).dateTag);"},{"lineNumber":28,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":30,"author":{"gitId":"slightlyharp"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"slightlyharp"},"content":"    void addLesson_addTwoLesson() throws ClashScheduleException {"},{"lineNumber":32,"author":{"gitId":"slightlyharp"},"content":"        Lesson lesson1 \u003d new Lesson(\"CS2113\", \"www.zoom.com/abcde\", true, 1);"},{"lineNumber":33,"author":{"gitId":"slightlyharp"},"content":"        Lesson lesson2 \u003d new Lesson(\"CS2101\", \"www.zoom.com/cdefg\", true, 1);"},{"lineNumber":34,"author":{"gitId":"slightlyharp"},"content":"        Duration duration1 \u003d new Duration(LocalDateTime.of(2020,10,16,16,0),"},{"lineNumber":35,"author":{"gitId":"slightlyharp"},"content":"                LocalDateTime.of(2020,10,16,18,0));"},{"lineNumber":36,"author":{"gitId":"slightlyharp"},"content":"        lesson1.addPeriod(duration1);"},{"lineNumber":37,"author":{"gitId":"slightlyharp"},"content":"        Duration duration2 \u003d new Duration(LocalDateTime.of(2020,10,19,16,0),"},{"lineNumber":38,"author":{"gitId":"slightlyharp"},"content":"                LocalDateTime.of(2020,10,19,18,0));"},{"lineNumber":39,"author":{"gitId":"slightlyharp"},"content":"        lesson2.addPeriod(duration2);"},{"lineNumber":40,"author":{"gitId":"slightlyharp"},"content":"        DateList dateList \u003d new DateList();"},{"lineNumber":41,"author":{"gitId":"slightlyharp"},"content":"        dateList.addEvent(lesson1);"},{"lineNumber":42,"author":{"gitId":"slightlyharp"},"content":"        dateList.addEvent(lesson2);"},{"lineNumber":43,"author":{"gitId":"slightlyharp"},"content":"        assertEquals(\"CS2101\", dateList.dateList.get(1).events.get(0).name);"},{"lineNumber":44,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":45}},{"path":"src/test/java/timetable/DurationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":"class DurationTest {"},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":"    private static final  LocalDateTime dateTime1 \u003d LocalDateTime.of(2020, 10,16,16,0);"},{"lineNumber":14,"author":{"gitId":"slightlyharp"},"content":"    private static final  LocalDateTime dateTime2 \u003d LocalDateTime.of(2020,10,16,18,0);"},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":"    private static final Duration duration \u003d new Duration(dateTime1, dateTime2);"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"slightlyharp"},"content":"    void getTime() {"},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":"        assertEquals(1600, duration.getTime(dateTime1));"},{"lineNumber":20,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":22,"author":{"gitId":"slightlyharp"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"slightlyharp"},"content":"    void containTimeSlot_testTrue() {"},{"lineNumber":24,"author":{"gitId":"slightlyharp"},"content":"        assertTrue(duration.containTimeSlot(1700));"},{"lineNumber":25,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":27,"author":{"gitId":"slightlyharp"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"slightlyharp"},"content":"    void containTimeSlot_testFalse() {"},{"lineNumber":29,"author":{"gitId":"slightlyharp"},"content":"        assertFalse(duration.containTimeSlot(1300));"},{"lineNumber":30,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":31}},{"path":"src/test/java/timetable/LessonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"class LessonTest {"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":"    void getStorageString_test() {"},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":"        Lesson lesson \u003d new Lesson(\"CS2113\", \"www.zoom.com/abcde\", true, 1);"},{"lineNumber":14,"author":{"gitId":"slightlyharp"},"content":"        Duration duration \u003d new Duration(LocalDateTime.of(2020,10,16,16,0),"},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":"                LocalDateTime.of(2020,10,16,18,0));"},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":"        lesson.addPeriod(duration);"},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"        assertEquals(\"|1|1|2020-10-16T16:00|2020-10-16T18:00\","},{"lineNumber":18,"author":{"gitId":"slightlyharp"},"content":"                lesson.getStorageString());"},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":20}},{"path":"src/test/java/timetable/TimeTableParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"slightlyharp"},"content":"package timetable;"},{"lineNumber":2,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":3,"author":{"gitId":"slightlyharp"},"content":"import exceptions.ClashScheduleException;"},{"lineNumber":4,"author":{"gitId":"slightlyharp"},"content":"import exceptions.InvalidDayOfTheWeekException;"},{"lineNumber":5,"author":{"gitId":"slightlyharp"},"content":"import exceptions.InvalidTimeException;"},{"lineNumber":6,"author":{"gitId":"slightlyharp"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":8,"author":{"gitId":"slightlyharp"},"content":"import java.io.ByteArrayInputStream;"},{"lineNumber":9,"author":{"gitId":"slightlyharp"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":10,"author":{"gitId":"slightlyharp"},"content":"import java.io.InputStream;"},{"lineNumber":11,"author":{"gitId":"slightlyharp"},"content":"import java.io.PrintStream;"},{"lineNumber":12,"author":{"gitId":"slightlyharp"},"content":"import java.time.LocalDateTime;"},{"lineNumber":13,"author":{"gitId":"slightlyharp"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"slightlyharp"},"content":"import java.util.List;"},{"lineNumber":15,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":16,"author":{"gitId":"slightlyharp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":17,"author":{"gitId":"slightlyharp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":18,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":19,"author":{"gitId":"slightlyharp"},"content":"class TimeTableParserTest {"},{"lineNumber":20,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":21,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":22,"author":{"gitId":"slightlyharp"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"slightlyharp"},"content":"    void addClassTest() throws InvalidDayOfTheWeekException, InvalidTimeException {"},{"lineNumber":24,"author":{"gitId":"slightlyharp"},"content":"        String input \u003d \"CS1234\\n\" + \"yes\\n\" + \"www.zoom.com/asdf\\n\""},{"lineNumber":25,"author":{"gitId":"slightlyharp"},"content":"                + \"Wednesday 2-4pm\\n\" + \"1\\n\" + \"20/10/2020\\n\";"},{"lineNumber":26,"author":{"gitId":"slightlyharp"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"},{"lineNumber":27,"author":{"gitId":"slightlyharp"},"content":"        System.setIn(in);"},{"lineNumber":28,"author":{"gitId":"slightlyharp"},"content":"        Lesson lesson \u003d TimeTableCommand.addClass();"},{"lineNumber":29,"author":{"gitId":"slightlyharp"},"content":"        Duration duration \u003d new Duration(LocalDateTime.of(2020,10,21,14,0),"},{"lineNumber":30,"author":{"gitId":"slightlyharp"},"content":"                LocalDateTime.of(2020,10,21,16,0));"},{"lineNumber":31,"author":{"gitId":"slightlyharp"},"content":"        List\u003cDuration\u003e expectedPeriod \u003d new ArrayList\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"slightlyharp"},"content":"        expectedPeriod.add(duration);"},{"lineNumber":33,"author":{"gitId":"slightlyharp"},"content":"        assertEquals(\"CS1234\", lesson.name);"},{"lineNumber":34,"author":{"gitId":"slightlyharp"},"content":"        assertEquals(EventType.L, lesson.eventType);"},{"lineNumber":35,"author":{"gitId":"slightlyharp"},"content":"        assertEquals(expectedPeriod.get(0).timeSlot, lesson.periods.get(0).timeSlot);"},{"lineNumber":36,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":38,"author":{"gitId":"slightlyharp"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"slightlyharp"},"content":"    void addClassTest_throwInvalidDayOfWeekException() {"},{"lineNumber":40,"author":{"gitId":"slightlyharp"},"content":"        String input \u003d \"CS1234\\n\" + \"yes\\n\" + \"www.zoom.com/asdf\\n\""},{"lineNumber":41,"author":{"gitId":"slightlyharp"},"content":"                + \"Wednfesday 2-4pm\\n\" + \"1\\n\" + \"20/10/2020\\n\";"},{"lineNumber":42,"author":{"gitId":"slightlyharp"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"},{"lineNumber":43,"author":{"gitId":"slightlyharp"},"content":"        System.setIn(in);"},{"lineNumber":44,"author":{"gitId":"slightlyharp"},"content":"        assertThrows(InvalidDayOfTheWeekException.class, TimeTableCommand::addClass);"},{"lineNumber":45,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":47,"author":{"gitId":"slightlyharp"},"content":""},{"lineNumber":48,"author":{"gitId":"slightlyharp"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"slightlyharp"},"content":"    void showLinkTest() throws InvalidDayOfTheWeekException, ClashScheduleException, InvalidTimeException {"},{"lineNumber":50,"author":{"gitId":"slightlyharp"},"content":"        DateList dateList \u003d new DateList();"},{"lineNumber":51,"author":{"gitId":"slightlyharp"},"content":"        int currentHour \u003d LocalDateTime.now().getHour();"},{"lineNumber":52,"author":{"gitId":"slightlyharp"},"content":"        String currentDay \u003d LocalDateTime.now().getDayOfWeek().toString();"},{"lineNumber":53,"author":{"gitId":"slightlyharp"},"content":"        Lesson lesson1 \u003d new Lesson(\"CS1234\", \"www.zoom.com/asdf\", true, 1);"},{"lineNumber":54,"author":{"gitId":"slightlyharp"},"content":"        Lesson lesson2 \u003d new Lesson(\"CS5678\", \"www.zoom.com/qwer\", true, 1);"},{"lineNumber":55,"author":{"gitId":"slightlyharp"},"content":"        if (currentHour \u003c 22) {"},{"lineNumber":56,"author":{"gitId":"slightlyharp"},"content":"            String periodText1 \u003d currentDay + \" \" + (currentHour) + \"-\" + (currentHour + 1);"},{"lineNumber":57,"author":{"gitId":"slightlyharp"},"content":"            String[] period1 \u003d periodText1.split(\", \");"},{"lineNumber":58,"author":{"gitId":"slightlyharp"},"content":"            String periodText2 \u003d currentDay + \" \" + (currentHour + 1) + \"-\" + (currentHour + 2);"},{"lineNumber":59,"author":{"gitId":"slightlyharp"},"content":"            String[] period2 \u003d periodText2.split(\", \");"},{"lineNumber":60,"author":{"gitId":"slightlyharp"},"content":"            TimeTableCommand.addClassPeriods(period1, 1, LocalDateTime.now().toLocalDate().atTime(0, 0), lesson1);"},{"lineNumber":61,"author":{"gitId":"slightlyharp"},"content":"            TimeTableCommand.addClassPeriods(period2, 1, LocalDateTime.now().toLocalDate().atTime(0, 0), lesson2);"},{"lineNumber":62,"author":{"gitId":"slightlyharp"},"content":"            dateList.addEvent(lesson1);"},{"lineNumber":63,"author":{"gitId":"slightlyharp"},"content":"            dateList.addEvent(lesson2);"},{"lineNumber":64,"author":{"gitId":"slightlyharp"},"content":"            ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"},{"lineNumber":65,"author":{"gitId":"slightlyharp"},"content":"            System.setOut(new PrintStream(outContent));"},{"lineNumber":66,"author":{"gitId":"slightlyharp"},"content":"            TimeTableCommand.showLink(dateList);"},{"lineNumber":67,"author":{"gitId":"slightlyharp"},"content":"            String expected \u003d \"www.zoom.com/asdf | CS1234\\nwww.zoom.com/qwer | CS5678\\n\";"},{"lineNumber":68,"author":{"gitId":"slightlyharp"},"content":"            assertEquals(expected, outContent.toString());"},{"lineNumber":69,"author":{"gitId":"slightlyharp"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"slightlyharp"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"slightlyharp"},"content":"}"}],"authorContributionMap":{"slightlyharp":71}}]
