[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    mainClassName \u003d \"fitr.Fitr\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    archiveBaseName \u003d \"fitr\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 3,
      "-": 44
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Fang Hui Hui | [Github](https://github.com/hui444) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Goh Song Han | [Github](https://github.com/gohsonghan98) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Harris Maung | [Github](https://github.com/sixletters) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jericho Chua | [Github](https://github.com/jerichochua) | [Portfolio](docs/team/jericho.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Mingbang | [Github](https://github.com/dmbclub) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 3,
      "dmbclub": 1,
      "-": 4,
      "gohsonghan98": 1
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- [Design \u0026 implementation](#design--implementation)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [Storage component](#storage-component)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- [Product scope](#product-scope)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [Target user profile](#target-user-profile)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [Value proposition](#value-proposition)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- [User stories](#user-stories)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- [Non-functional requirements](#non-functional-requirements)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- [Glossary](#glossary)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- [Instructions for manual testing](#instructions-for-manual-testing)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "## Design \u0026 implementation"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Storage component"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "{TBD}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "## Product scope"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "University students"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "Our program helps users to keep fit without needing them to do any research on healthy living or workout options. We will be collecting user information such as age, weight, fitness level and recommend users to preset exercises."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "## User stories"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "|v1.0|student|enter my food intake|log my calories|"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "|v1.0|student|view my past calories intake|track my calories|"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "|v1.0|student|store the food I consumed together with its calories in the app|add food that I previously consumed without having to enter the calories again|"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "|v1.0|new user|access the help function|I know what to do with the app|"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "|v1.0|student|print my exercise track record|see my workout progress|"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "|v1.0|student|enter my height and weight|the system can calculate my bmi|"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "## Non-functional requirements"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "{Give non-functional requirements}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "## Glossary"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "* *glossary item* - Definition"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "## Instructions for manual testing"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 15,
      "dmbclub": 8,
      "-": 28
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "# Fitr"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Fitr is a command-line application, helping you keep track of your food intake and exercises."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 2,
      "-": 6
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- [Introduction](#introduction)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- [Features](#features)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    - [Adding an exercise: `exercise`](#adding-an-exercise-exercise)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [Adding a food item: `food`](#adding-a-food-item-food)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [Deleting an item: `delete`](#deleting-an-item-delete)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [Viewing the exercise list: `view exercise`](#viewing-the-exercise-list-view-exercise)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [Viewing the food list: `view food`](#viewing-the-food-list-view-food)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [Viewing the user profile: `view profile`](#viewing-the-user-profile-view-profile)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [Viewing the user\u0027s BMI: `view bmi`](#viewing-the-users-bmi-view-bmi)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [Viewing the user\u0027s caloric summary: `view summary`](#viewing-the-users-caloric-summary-view-summary)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [Editing the user\u0027s profile: `edit`](#editing-the-users-profile-edit)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [Viewing help: `help`](#viewing-help-help)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [Clearing the lists: `clear`](#clearing-the-lists-clear)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [Exiting the program: `bye`](#exiting-the-program-bye)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [Saving the data](#saving-the-data)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- [FAQ](#faq)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Fitr is a command-line application, helping you keep track of your food intake and exercises."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "2. Download the latest version of `Fitr` from [here](https://github.com/AY2021S1-CS2113T-W13-2/tp/releases)."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "3. Open Command Prompt / Terminal"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "4. Type the following command `java -jar`, followed by the location of the `Fitr` JAR file, to run it."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "### Adding an exercise: `exercise`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "Adds a new exercise to the list of exercises you have done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Format: `exercise NAME_OF_EXERCISE /AMOUNT_OF_CALORIES_BURNT`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- The `NAME_OF_EXERCISE` can be in a natural language format."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- The `AMOUNT_OF_CALORIES_BURNT` has to be a positive number.  "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `exercise Pushups /500`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `exercise 5km run /1000`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `The following exercise has been added: Pushups`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `The following exercise has been added: 5km run`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sixletters"
        },
        "content": "### Adding a food item: `food`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sixletters"
        },
        "content": "Adds a new food to the list of foods you have eaten."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Format: `exercise NAME_OF_FOOD /AMOUNT_OF_CALORIES_CONSUMED`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- The `NAME_OF_FOOD` can be in a natural language format."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- The `AMOUNT_OF_CALORIES_CONSUMED` has to be a positive number.  "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `food chicken rice /500`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `food Mcspicy /600`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `The following food has been added: chicken rice`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `The following food has been added: Mcspicy`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Deleting an item: `delete`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Deletes a particular item at a specified index in a specified list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Format: `delete LIST INDEX`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- The `LIST` has to be either `food` or `exercise`, otherwise an exception will be thrown."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- The `INDEX` has to be a positive number smaller than or equals to the size of the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `delete food 1`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `delete exercise 2`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Viewing the exercise list: `view exercise`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Displays the user\u0027s exercise entries from the exercise list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Format: `view exercise`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Here is the list of your exercises:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "[1] Exercise: swim"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    Burnt Cal: 500"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "[2] Exercise: run"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    Burnt Cal: 10"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Viewing the food list: `view food`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Displays the user\u0027s food entries from the food list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Format: `view food`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Here is the list of your food:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "[1] Food: chicken"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    Cal: 10"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "[2] Food: fish"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    Cal: 10"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "[3] Food: egg"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    Cal: 50"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "[4] Food: fish"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    Cal: 500"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Viewing the user profile: `view profile`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Displays the user\u0027s profile: name, age, gender, height (in m), weight (in kg)."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Format: `view profile`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "User profile:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Name: John Doe"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Age: 22"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Gender: Male"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Height (in m): 1.8"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Weight (in kg): 80.0"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Viewing the user\u0027s BMI: `view bmi`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Displays the user\u0027s BMI (body mass index) based on the user\u0027s height and weight in the user profile."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Format: `view bmi`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Your BMI is: "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "24.69"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Viewing the user\u0027s caloric summary: `view summary`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Displays a summary of the calories consumed, calories burnt, and net calories based on the entries in the exercise and food list."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Format: `view summary`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Total calorie consumed:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "570"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Total calorie burnt:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "510"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Net calorie:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "60"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Editing the user\u0027s profile: `edit`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Changes the user\u0027s name, age, gender, height (in m), or weight (in kg)."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Format: `edit ARGUMENT`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Argument | Format | Description | Notes for input"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "----- | ------ | -------- | ------"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "name | `edit name` | Changes name in user profile | Not case-sensitive"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "age | `edit age` | Changes age in user profile | Only number inputs allowed, decimal number is not allowed"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "gender | `edit gender` | Changes gender in user profile | Not case-sensitive, only takes in `m` or `f` input."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "height | `edit height` | Changes height in user profile | Only number inputs allowed, decimal number is allowed"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "weight | `edit weight` | Changes weight in user profile | Only number inputs allowed, decimal number is allowed"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Examples of usage:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Edit name"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "edit name"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Change your name to: "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Tom"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Name changed to: Tom"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Edit age"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "edit age"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Change your age to: "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "20"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Age changed to: 20"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Edit gender"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "edit gender"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Change your gender (M|F) to: "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "f"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Gender changed to: Female"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Edit height"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "edit height"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Change your height (in m) to: "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "1.9"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Height (in m) changed to: 1.9"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Edit weight"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Change your weight (in kg) to: "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "90"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "Weight (in kg) changed to: 90.0"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "```"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Viewing help: `help`"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Show help messages with all the valid commands supported by Fitr."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "These are commands Fitr understands:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "food              Adds food entry to Fitr program"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                  Format: food \u003cName of food\u003e / \u003cNumber of Calories\u003e \u003cQuantity (Optional)\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "exercise          Adds exercise entry to Fitr program"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                  Format: exercise \u003cName of exercise\u003e / \u003cNumber of Calories\u003e \u003cQuantity (Optional)\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "view profile      View your profile information"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "view bmi          View your BMI"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "view food         View food entries"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "view exercise     View exercise entries"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "view summary      View calorie summary"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "delete            Deletes selected entry"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                  Format: delete food \u003cIndex from Food List\u003e or delete exercise \u003cIndex from Exercise List\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "bye               Exits the program"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Clearing the lists: `clear`\t"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Clears either the exercise list, or the food list, or both.\t"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Format: `clear LIST`\t"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `LIST` can either take `exercise` or `food`.\t"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- If `LIST` is not provided, both exercise and food lists are cleared.\t"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Example of usage:\t"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `clear food` clears the food list.\t"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `clear` clears both the exercise and food lists."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Exiting the program: `bye`"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Saving the data"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "The user\u0027s profile, food consumed and exercises done are saved automatically after any command that changes the data. "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "There is no need to save manually."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "**A**: Install `Fitr` on another computer, and overwrite the empty data files that it creates with the files with your data files."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Action | Format | Examples"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "------ | ------ | --------"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "hui444"
        },
        "content": "add food entry | `food \u003cname of food\u003e / \u003cnumber of calories consumed\u003e \u003cquantity (optional)\u003e` | `food apple / 52 1`"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "hui444"
        },
        "content": "add exercise entry | `exercise \u003cname of exercise\u003e / \u003cnumber of calories burnt\u003e` | `exercise 5km run / 400`"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "hui444"
        },
        "content": "delete food entry | `delete food \u003cIndex from Food List\u003e` | `delete food 3`"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "hui444"
        },
        "content": "delete exercise entry | `delete exercise \u003cIndex from Exercise List\u003e\"` | `delete exercise 5`"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "hui444"
        },
        "content": "view help | `help` "
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "hui444"
        },
        "content": "view bmi | `view bmi`"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "hui444"
        },
        "content": "view profile | `view profile`"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "hui444"
        },
        "content": "view food entries | `view food`"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "hui444"
        },
        "content": "view exercise entries | `view exercise`"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "hui444"
        },
        "content": "view calorie summary | `view summary`"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "clear | `clear` | `clear`, `clear exercise`, `clear food`"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "hui444"
        },
        "content": "terminate Fitr program | `bye`"
      }
    ],
    "authorContributionMap": {
      "hui444": 11,
      "sixletters": 8,
      "jerichochua": 102,
      "dmbclub": 2,
      "-": 34,
      "gohsonghan98": 104
    }
  },
  {
    "path": "docs/team/jericho.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "# Jericho - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "TBD"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "TBD"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 9
    }
  },
  {
    "path": "src/main/java/fitr/Calorie.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Calorie {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected int amountOfCalories;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public Calorie(int calories) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.amountOfCalories \u003d calories;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public int get() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return amountOfCalories;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 12,
      "jerichochua": 1
    }
  },
  {
    "path": "src/main/java/fitr/Exercise.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Exercise {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected String nameOfExercise; // The name of the Exercise"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected Calorie caloriesBurnt;// Amount of calories burnt from exercise"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected int durationOfExercise \u003d 1; // Duration of the exercises"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    protected int caloricBurnRate; // Caloric Rate of the food, if amount isnt given we will take it as a whole unit."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public Exercise(String nameOfExercise, Calorie caloriesBurnt, int durationOfExercise) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.nameOfExercise \u003d nameOfExercise;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloriesBurnt \u003d caloriesBurnt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.durationOfExercise \u003d durationOfExercise;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloricBurnRate \u003d this.caloriesBurnt.get() / this.durationOfExercise;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public Exercise(String name, Calorie caloriesBurnt) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.nameOfExercise \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloriesBurnt \u003d caloriesBurnt;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloricBurnRate \u003d this.caloriesBurnt.get() / this.durationOfExercise;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public int getCalories() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return caloriesBurnt.get();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public String getNameOfExercise() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return nameOfExercise;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public int getCaloricBurnRate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return caloricBurnRate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public int getDuration() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return durationOfExercise;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 35,
      "jerichochua": 1,
      "gohsonghan98": 1
    }
  },
  {
    "path": "src/main/java/fitr/Fitr.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.ExerciseList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.FoodList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.user.User;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Fitr {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    private FoodList foodList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    private ExerciseList exerciseList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    private User user;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Fitr(String filePathOfUserConfig, String filePathOfFoodList, String filePathOfExerciseList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            user \u003d new User();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            Ui.printGreetingMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            storage \u003d new Storage(filePathOfUserConfig, filePathOfFoodList, filePathOfExerciseList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            if (!storage.readUserConfigFile(user)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                user.setup();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                storage.writeUserConfigFile(user);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hui444"
        },
        "content": "            Ui.printSuggestQuestion();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            foodList \u003d new FoodList(storage.loadFoodList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            exerciseList \u003d new ExerciseList(storage.loadExerciseList());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            System.out.println(\"Theres no file\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            String userInput \u003d Ui.read();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            Command c \u003d Parser.parse(userInput);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            c.execute(foodList, exerciseList, storage, user);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Ui.printExitMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        new Fitr(\"userConfig.txt\", \"foodList.txt\", \"exerciseList.txt\").run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 1,
      "sixletters": 8,
      "jerichochua": 22,
      "dmbclub": 14,
      "-": 4,
      "gohsonghan98": 1
    }
  },
  {
    "path": "src/main/java/fitr/Food.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Food {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected String nameOfFood; // The name of the Food"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected Calorie caloriesInFood;// Amount of calories consumed"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected int amountOfFood \u003d 1; // Amount of food in grams, if not it will be taken as arbritary unit e.g, 1 banana"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected int caloricRate;// Caloric Rate of the food, if amount is not given we will take it as a whole unit."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public Food(String nameOfFood,Calorie calories,int amount) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.nameOfFood \u003d nameOfFood;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloriesInFood \u003d calories;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.amountOfFood \u003d amount;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloricRate \u003d this.caloriesInFood.get() / this.amountOfFood;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public Food(String name,Calorie caloriesBurnt) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.nameOfFood \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloriesInFood \u003d caloriesBurnt;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloricRate \u003d this.caloriesInFood.get() / this.amountOfFood;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public int getCalories() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return caloriesInFood.get();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public String getFoodName() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return nameOfFood;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public int getCaloricRate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return caloricRate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public int getAmountOfFood() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return amountOfFood;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 35,
      "jerichochua": 1,
      "gohsonghan98": 1
    }
  },
  {
    "path": "src/main/java/fitr/Goal.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package fitr;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Goal {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "    protected String goalType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public Goal(String goalType, String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "        this.goalType \u003d goalType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public String getGoalType() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "        return goalType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 19
    }
  },
  {
    "path": "src/main/java/fitr/command/AddExerciseCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Calorie;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Exercise;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import fitr.exception.FitrException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.ExerciseList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.FoodList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.user.User;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class AddExerciseCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public AddExerciseCommand(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public void execute(FoodList foodList, ExerciseList exerciseList, Storage storage, User user) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        command \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            String nameOfExercise \u003d command.split(\"/\", 2)[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            if (nameOfExercise.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            nameOfExercise \u003d nameOfExercise.trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            command \u003d command.split(\"/\", 2)[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            if (command.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                Calorie amountOfCaloriesBurnt \u003d new Calorie(Integer.parseInt(command.split(\" \")[0]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                if (amountOfCaloriesBurnt.get() \u003c -1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    throw new NumberFormatException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                exerciseList.addExercise(new Exercise(nameOfExercise, amountOfCaloriesBurnt));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                storage.writeExerciseList(exerciseList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                Ui.printCustomMessage(\"The following exercise has been added: \" + nameOfExercise);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            } else if (command.split(\" \").length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                Calorie amountOfCaloriesBurnt \u003d new Calorie(Integer.parseInt(command.split(\" \")[0]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                int durationOfExercise \u003d Integer.parseInt(command.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                if (amountOfCaloriesBurnt.get() \u003c 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    throw new NumberFormatException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                if (durationOfExercise \u003c 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    throw new FitrException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                exerciseList.addExercise(new Exercise(nameOfExercise, amountOfCaloriesBurnt, durationOfExercise));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                storage.writeExerciseList(exerciseList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                Ui.printCustomMessage(\"The following exercise has been added: \" + nameOfExercise);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (NumberFormatException | NullPointerException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            Ui.printCustomError(\"Sorry, invalid calorie amount entered\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            Ui.printCustomError(\"Please key in the correct format\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            Ui.printCustomError(\"Sorry, there is an error in the file\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (FitrException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            Ui.printCustomError(\"Sorry, the duration has to be a positive number\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 1,
      "sixletters": 55,
      "jerichochua": 8,
      "gohsonghan98": 1
    }
  },
  {
    "path": "src/main/java/fitr/command/AddFoodCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Calorie;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Food;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import fitr.exception.FitrException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.ExerciseList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.FoodList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.user.User;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class AddFoodCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public AddFoodCommand(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public void execute(FoodList foodList, ExerciseList exerciseList, Storage storage, User user) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        command \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            String nameOfFood \u003d command.split(\"/\", 2)[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            nameOfFood \u003d nameOfFood.trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            if (nameOfFood.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            command \u003d command.split(\"/\", 2)[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            if (command.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                Calorie amountOfCalories \u003d new Calorie(Integer.parseInt(command.split(\" \")[0]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                if (amountOfCalories.get() \u003c 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    throw new NumberFormatException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hui444"
        },
        "content": "                foodList.addFood(new Food(nameOfFood, amountOfCalories));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hui444"
        },
        "content": "                storage.writeFoodList(foodList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                Ui.printCustomMessage(\"The following food has been added: \" + nameOfFood);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            } else if (command.split(\" \").length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                Calorie amountOfCalories \u003d new Calorie(Integer.parseInt(command.split(\" \")[0]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                int amountOfFood \u003d Integer.parseInt(command.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                if (amountOfCalories.get() \u003c 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    throw new NumberFormatException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                if (amountOfFood \u003c 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    throw new FitrException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hui444"
        },
        "content": "                foodList.addFood(new Food(nameOfFood, amountOfCalories, amountOfFood));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hui444"
        },
        "content": "                storage.writeFoodList(foodList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                Ui.printCustomMessage(\"The following food has been added: \" + nameOfFood);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (NumberFormatException | NullPointerException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            Ui.printCustomError(\"Sorry, invalid calorie amount entered\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            Ui.printCustomError(\"Please key in the correct format\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            Ui.printCustomError(\"Sorry, there is an error in the file\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (FitrException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            Ui.printCustomError(\"Sorry, the amount of food has to be a positive number\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 5,
      "sixletters": 51,
      "jerichochua": 8,
      "gohsonghan98": 1
    }
  },
  {
    "path": "src/main/java/fitr/command/AddGoalCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package fitr.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import fitr.list.ExerciseList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "import fitr.list.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "import fitr.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "import fitr.user.User;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class AddGoalCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public AddGoalCommand(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public void execute(FoodList foodList, ExerciseList exerciseList, Storage storage, User user) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 23
    }
  },
  {
    "path": "src/main/java/fitr/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.ExerciseList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.FoodList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.user.User;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public abstract void execute(FoodList foodList, ExerciseList exerciseList, Storage storage, User user);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 1,
      "sixletters": 6,
      "jerichochua": 6,
      "gohsonghan98": 1
    }
  },
  {
    "path": "src/main/java/fitr/command/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.ExerciseList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import fitr.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.user.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public void execute(FoodList foodList, ExerciseList exerciseList, Storage storage, User user) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            command \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            String type \u003d command.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            if (type.equals(\"food\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                int deletionIndex \u003d Integer.parseInt(command.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                Ui.printCustomMessage(\"The following has been deleted from the list of food consumed: \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "                        + foodList.getFood(deletionIndex - 1).getFoodName());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": "                foodList.deleteFood(deletionIndex - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": "                storage.writeFoodList(foodList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            } else if (type.equals(\"exercise\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                int deletionIndex \u003d Integer.parseInt(command.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                Ui.printCustomMessage(\"The following has been deleted from the list of food consumed: \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                        + exerciseList.getExercise(deletionIndex - 1).getNameOfExercise());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                exerciseList.deleteExercise(deletionIndex - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                storage.writeExerciseList(exerciseList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            Ui.printCustomError(\"Sorry that index does not exist in the list\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            Ui.printCustomError(\"Sorry index deletion must be an number\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            Ui.printCustomError(\"Sorry there is an error in the file\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 4,
      "sixletters": 31,
      "jerichochua": 11,
      "gohsonghan98": 1
    }
  },
  {
    "path": "src/main/java/fitr/command/EditProfileCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "package fitr.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.list.ExerciseList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.list.FoodList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.user.User;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "public class EditProfileCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public EditProfileCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public void execute(FoodList foodList, ExerciseList exerciseList, Storage storage, User user) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        if (command.equalsIgnoreCase(Messages.EDIT_NAME)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            editName(user);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else if (command.equalsIgnoreCase(Messages.EDIT_HEIGHT)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            editHeight(user);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else if (command.equalsIgnoreCase(Messages.EDIT_WEIGHT)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            editWeight(user);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else if (command.equalsIgnoreCase(Messages.EDIT_AGE)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            editAge(user);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else if (command.equalsIgnoreCase(Messages.EDIT_GENDER)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            editGender(user);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            Ui.printInvalidCommandError();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            storage.writeUserConfigFile(user);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            Ui.printCustomMessage(Messages.MISSING_FILE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private void editName(User user) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(Messages.EDIT_NAME_HEADER);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        user.setName();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(Messages.NAME_ECHO_HEADER + user.getName());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private void editHeight(User user) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(Messages.EDIT_HEIGHT_HEADER);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        user.setupHeight();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(Messages.HEIGHT_ECHO_HEADER + user.getHeight());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private void editWeight(User user) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(Messages.EDIT_WEIGHT_HEADER);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        user.setupWeight();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(Messages.WEIGHT_ECHO_HEADER + user.getWeight());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private void editAge(User user) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(Messages.EDIT_AGE_HEADER);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        user.setupAge();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(Messages.AGE_ECHO_HEADER + user.getAge());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private void editGender(User user) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(Messages.EDIT_GENDER_HEADER);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        user.setupGender();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(Messages.GENDER_ECHO_HEADER + user.getGender());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 1,
      "gohsonghan98": 75
    }
  },
  {
    "path": "src/main/java/fitr/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.ExerciseList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.user.User;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(ExitCommand.class.getName());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public ExitCommand(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assert command !\u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public void execute(FoodList foodList, ExerciseList exerciseList, Storage storage, User user) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LOGGER.fine(\"Exiting the application.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 1,
      "sixletters": 10,
      "jerichochua": 15,
      "gohsonghan98": 1
    }
  },
  {
    "path": "src/main/java/fitr/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.ExerciseList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.FoodList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.user.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public HelpCommand(String userInput) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        this.command \u003d userInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public void execute(FoodList foodList, ExerciseList exerciseList, Storage storage, User user) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Ui.printHelpMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 1,
      "jerichochua": 7,
      "dmbclub": 14,
      "gohsonghan98": 1
    }
  },
  {
    "path": "src/main/java/fitr/command/InvalidCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.ExerciseList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.FoodList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.user.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public InvalidCommand(String userInput) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d userInput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public void execute(FoodList foodList, ExerciseList exerciseList, Storage storage, User user) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        Ui.printFormatError(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 1,
      "sixletters": 5,
      "jerichochua": 6,
      "dmbclub": 11,
      "gohsonghan98": 1
    }
  },
  {
    "path": "src/main/java/fitr/command/ViewCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.ExerciseList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.user.User;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.ERROR_INVALID_VIEW_COMMAND;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.EMPTY_FOOD_LIST;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.EMPTY_EXERCISE_LIST;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.FOOD_LIST_HEADER;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.EXERCISE_LIST_HEADER;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.CALORIE_CONSUMED_HEADER;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.CALORIE_BURNT_HEADER;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.NET_CALORIE_HEADER;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.BMI_HEADER;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.USER_PROFILE_HEADER;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.OPEN_SQUARE_BRACKET;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.CLOSE_SQUARE_BRACKET;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.FOOD_HEADER;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.SPACE_FORMATTING;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.CAL_HEADER;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.EXERCISE_HEADER;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.BURNT_CAL_HEADER;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Commands.COMMAND_VIEW_FOOD;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Commands.COMMAND_VIEW_EXERCISE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Commands.COMMAND_VIEW_SUMMARY;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Commands.COMMAND_VIEW_BMI;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Commands.COMMAND_VIEW_PROFILE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public ViewCommand(String command) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void execute(FoodList foodList, ExerciseList exerciseList, Storage storage, User user) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        if (command.equalsIgnoreCase(COMMAND_VIEW_FOOD)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            viewFood(foodList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else if (command.equalsIgnoreCase(COMMAND_VIEW_EXERCISE)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            viewExercise(exerciseList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else if (command.equalsIgnoreCase(COMMAND_VIEW_SUMMARY)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            viewSummary(foodList, exerciseList, user);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else if (command.equalsIgnoreCase(COMMAND_VIEW_BMI)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            viewBmi(user);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else if (command.equalsIgnoreCase(COMMAND_VIEW_PROFILE)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            viewProfile(user);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            Ui.printCustomError(ERROR_INVALID_VIEW_COMMAND);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    //View food"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private void viewFood(FoodList foodList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        if (foodList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            Ui.printCustomMessage(EMPTY_FOOD_LIST);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            int printIndex \u003d index + 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            Ui.printCustomMessage(FOOD_LIST_HEADER);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            while (index \u003c foodList.getSize()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                Ui.printCustomMessage(OPEN_SQUARE_BRACKET + printIndex + CLOSE_SQUARE_BRACKET"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                        + FOOD_HEADER + foodList.getFood(index).getFoodName()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                        + SPACE_FORMATTING + CAL_HEADER + foodList.getFood(index).getCalories());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                printIndex++;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    //View exercise"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private void viewExercise(ExerciseList exerciseList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        if (exerciseList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            Ui.printCustomMessage(EMPTY_EXERCISE_LIST);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            int printIndex \u003d index + 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            Ui.printCustomMessage(EXERCISE_LIST_HEADER);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            while (index \u003c exerciseList.getSize()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                Ui.printCustomMessage(OPEN_SQUARE_BRACKET + printIndex + CLOSE_SQUARE_BRACKET"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                        + EXERCISE_HEADER + exerciseList.getExercise(index).getNameOfExercise()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                        + SPACE_FORMATTING + BURNT_CAL_HEADER"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                        + exerciseList.getExercise(index).getCalories());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                printIndex++;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    //View summary of total amount of calories consumed and burnt."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private void viewSummary(FoodList foodList, ExerciseList exerciseList, User user) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(CALORIE_CONSUMED_HEADER);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(String.valueOf(user.calculateCalorieConsumed(foodList).get()));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(CALORIE_BURNT_HEADER);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(String.valueOf(user.calculateCalorieBurnt(exerciseList).get()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(NET_CALORIE_HEADER);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(String.valueOf(user.calculateCalorie(foodList, exerciseList).get()));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private void viewBmi(User user) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(BMI_HEADER);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        String bmiString \u003d String.format(\"%.2f\", user.getBmi());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(bmiString);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private void viewProfile(User user) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(USER_PROFILE_HEADER);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(user.toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 11,
      "jerichochua": 11,
      "gohsonghan98": 96
    }
  },
  {
    "path": "src/main/java/fitr/common/Commands.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Container for commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Commands {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_FOOD \u003d \"food\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_EXERCISE \u003d \"exercise\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_VIEW \u003d \"view\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_VIEW_FOOD \u003d \"view food\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_VIEW_EXERCISE \u003d \"view exercise\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_VIEW_SUMMARY \u003d \"view summary\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_VIEW_BMI \u003d \"view bmi\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_VIEW_PROFILE \u003d \"view profile\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public static final String COMMAND_EDIT_PROFILE \u003d \"edit\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public static final String COMMAND_HELP \u003d \"help\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 16,
      "jerichochua": 1,
      "dmbclub": 2
    }
  },
  {
    "path": "src/main/java/fitr/common/Messages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String MESSAGE_GREET \u003d \"Hello! Welcome to Fitr.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String MESSAGE_SUGGEST_QUESTION \u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String FORMAT_FOOD \u003d \"food \u003cName of food\u003e / \u003cNumber of Calories\u003e \u003cQuantity (Optional)\u003e\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String FORMAT_EXERCISE \u003d \"exercise \u003cName of exercise\u003e / \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "            + \"\u003cNumber of Calories\u003e \u003cQuantity (Optional)\u003e\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String FORMAT_DELETE \u003d \"delete food \u003cIndex from Food List\u003e \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "            + \"or delete exercise \u003cIndex from Exercise List\u003e\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    //User class messages"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String USER_SETUP_GREET \u003d \"Before we begin, let me get to know you :)\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String INPUT_NAME \u003d \"Please enter your name:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String INPUT_AGE \u003d \"Please enter your age:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String INPUT_HEIGHT \u003d \"Please enter your height (in m):\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String INPUT_WEIGHT \u003d \"Please enter your weight (in kg):\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String INPUT_GENDER \u003d \"Please enter your gender (Enter \u0027M\u0027 for Male or \u0027F\u0027 for Female):\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String SETUP_COMPLETE \u003d \"Setup complete!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String ERROR_INVALID_AGE_INPUT \u003d \"Oops! That is an invalid age input.\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String ERROR_INVALID_GENDER_INPUT \u003d \"Oops! That is an invalid gender input.\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String ERROR_INVALID_HEIGHT_INPUT \u003d \"Oops! That is an invalid height input.\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String ERROR_INVALID_WEIGHT_INPUT \u003d \"Oops! That is an invalid weight input.\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String NAME_OUTPUT_HEADER \u003d \"Name: \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String AGE_OUTPUT_HEADER \u003d \"Age: \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String GENDER_OUTPUT_HEADER \u003d \"Gender: \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String HEIGHT_OUTPUT_HEADER \u003d \"Height (in m): \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String WEIGHT_OUTPUT_HEADER \u003d \"Weight (in kg): \";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String LINE_BREAK \u003d \"\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String MALE_SYMBOL \u003d \"M\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String FEMALE_SYMBOL \u003d \"F\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String MALE_STRING \u003d \"Male\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String FEMALE_STRING \u003d \"Female\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String ERROR_INVALID_COMMAND \u003d \"Sorry this is an invalid command!\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String ERROR_INVALID_INDEX \u003d \"Please input a valid index!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String ERROR_INVALID_CALORIES \u003d \"Sorry! Calories should be a number.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    //ViewCommand class messages"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String ERROR_INVALID_VIEW_COMMAND \u003d \"Sorry this is an invalid view command!\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String EMPTY_FOOD_LIST \u003d \"The food list is empty...\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String EMPTY_EXERCISE_LIST \u003d \"The exercise list is empty...\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String FOOD_LIST_HEADER \u003d \"Here is the list of your food:\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String EXERCISE_LIST_HEADER \u003d \"Here is the list of your exercises:\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String CALORIE_CONSUMED_HEADER \u003d \"Total calorie consumed:\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String CALORIE_BURNT_HEADER \u003d \"Total calorie burnt:\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String NET_CALORIE_HEADER \u003d \"Net calorie:\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String BMI_HEADER \u003d \"Your BMI is: \";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String USER_PROFILE_HEADER \u003d \"User profile:\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String OPEN_SQUARE_BRACKET \u003d \"[\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String CLOSE_SQUARE_BRACKET \u003d \"] \";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String FOOD_HEADER \u003d \"Food: \";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String EXERCISE_HEADER \u003d \"Exercise: \";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String SPACE_FORMATTING \u003d \"\\n    \";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String CAL_HEADER \u003d \"Cal: \";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String BURNT_CAL_HEADER \u003d \"Burnt Cal: \";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    //EditProfileCommand class messages"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String EDIT_NAME \u003d \"edit name\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String EDIT_HEIGHT \u003d \"edit height\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String EDIT_WEIGHT \u003d \"edit weight\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String EDIT_AGE \u003d \"edit age\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String EDIT_GENDER \u003d \"edit gender\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String MISSING_FILE \u003d \"Theres no file\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String EDIT_NAME_HEADER \u003d \"Change your name to: \";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String NAME_ECHO_HEADER \u003d \"Name changed to: \";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String EDIT_HEIGHT_HEADER \u003d \"Change your height (in m) to: \";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String HEIGHT_ECHO_HEADER \u003d \"Height (in m) changed to: \";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String EDIT_WEIGHT_HEADER \u003d \"Change your weight (in kg) to: \";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String WEIGHT_ECHO_HEADER \u003d \"Weight (in kg) changed to: \";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String EDIT_AGE_HEADER \u003d \"Change your age to: \";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String AGE_ECHO_HEADER \u003d \"Age changed to: \";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String EDIT_GENDER_HEADER \u003d \"Change your gender (M|F) to: \";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static final String GENDER_ECHO_HEADER \u003d \"Gender changed to: \";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 32,
      "jerichochua": 1,
      "gohsonghan98": 48
    }
  },
  {
    "path": "src/main/java/fitr/exception/FitrException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class FitrException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 3,
      "jerichochua": 1
    }
  },
  {
    "path": "src/main/java/fitr/list/ExerciseList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Exercise;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class ExerciseList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final ArrayList\u003cExercise\u003e exerciseList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public ExerciseList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public ExerciseList(ArrayList\u003cExercise\u003e exerciseList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.exerciseList \u003d exerciseList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void addExercise(Exercise exercise) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        exerciseList.add(exercise);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Exercise getExercise(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return exerciseList.get(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Exercise deleteExercise(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return exerciseList.remove(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return exerciseList.size();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void clearList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        exerciseList.clear();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 37
    }
  },
  {
    "path": "src/main/java/fitr/list/FoodList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class FoodList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final ArrayList\u003cFood\u003e foodList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public FoodList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public FoodList(ArrayList\u003cFood\u003e foodList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.foodList \u003d foodList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void addFood(Food food) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        foodList.add(food);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Food getFood(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return foodList.get(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Food deleteFood(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return foodList.remove(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return foodList.size();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void clearList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        foodList.clear();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 3,
      "jerichochua": 34
    }
  },
  {
    "path": "src/main/java/fitr/list/GoalList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package fitr.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import fitr.Goal;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class GoalList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private final ArrayList\u003cGoal\u003e goalList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public GoalList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "        this(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public GoalList(ArrayList\u003cGoal\u003e goalList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "        this.goalList \u003d goalList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public void addGoal(Goal goal) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "        goalList.add(goal);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public Goal deleteGoal(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "        return goalList.remove(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public Goal getGoal(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hui444"
        },
        "content": "        return goalList.get(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hui444"
        },
        "content": "        return goalList.size();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public void clearList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hui444"
        },
        "content": "        goalList.clear();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 37
    }
  },
  {
    "path": "src/main/java/fitr/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.command.AddExerciseCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.command.AddFoodCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.command.HelpCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.command.InvalidCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.command.ViewCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.command.EditProfileCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "import fitr.common.Commands;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dmbclub"
        },
        "content": " * Parses the user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dmbclub"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommand\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "     * Parses the user input and return a corresponding command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "     * @param userInput String of user input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "     * @return a Command object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public static Command parse(String userInput) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        Matcher matcher \u003d COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            return new InvalidCommand(userInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        String userCommand \u003d matcher.group(\"command\").trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        String arguments \u003d matcher.group(\"arguments\").trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        switch (userCommand.toLowerCase()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        case Commands.COMMAND_FOOD:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            return new AddFoodCommand(arguments);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        case Commands.COMMAND_EXERCISE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            return new AddExerciseCommand(arguments);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        case Commands.COMMAND_VIEW:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            return new ViewCommand(arguments);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        case Commands.COMMAND_EDIT_PROFILE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            return new EditProfileCommand(arguments);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        case Commands.COMMAND_HELP:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            return new HelpCommand(arguments);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        case Commands.COMMAND_DELETE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            return new DeleteCommand(arguments);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        case Commands.COMMAND_BYE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            return new ExitCommand(arguments);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            return new InvalidCommand(arguments);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 10,
      "dmbclub": 44,
      "gohsonghan98": 1
    }
  },
  {
    "path": "src/main/java/fitr/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Calorie;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Exercise;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Food;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.ExerciseList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.FoodList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.user.User;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Handles the loading and saving of data to a file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static final String DEFAULT_EXERCISE_LIST_FILEPATH \u003d \"exercises.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static final String DEFAULT_FOOD_LIST_FILEPATH \u003d \"food.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static final String DEFAULT_USER_CONFIG_FILEPATH \u003d \"user.txt\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static final String COMMA_SEPARATOR \u003d \",\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Storage.class.getName());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final String exerciseListPath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final String foodListPath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final String userConfigPath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Set up the files required in the application, by creating the files if the files do not exist and"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * setting the file paths."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param userConfigPath file path of the user\u0027s profile"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param foodListPath file path of the food list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param exerciseListPath file path of the exercise list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws IOException if an I/O error has occurred"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Storage(String userConfigPath, String foodListPath, String exerciseListPath) throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.userConfigPath \u003d userConfigPath;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.foodListPath \u003d foodListPath;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.exerciseListPath \u003d exerciseListPath;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        File exerciseListFile \u003d new File(exerciseListPath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        File foodListFile \u003d new File(foodListPath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        File userConfigFile \u003d new File(userConfigPath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        if (!exerciseListFile.exists()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            exerciseListFile.createNewFile();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            LOGGER.fine(\"Exercise list file created: \" + exerciseListPath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        if (!foodListFile.exists()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            foodListFile.createNewFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            LOGGER.fine(\"Food list file created: \" + foodListPath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        if (!userConfigFile.exists()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            userConfigFile.createNewFile();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            LOGGER.fine(\"User profile file created: \" + userConfigPath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Storage() throws IOException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this(DEFAULT_USER_CONFIG_FILEPATH, DEFAULT_FOOD_LIST_FILEPATH, DEFAULT_EXERCISE_LIST_FILEPATH);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Reads the user\u0027s data from the user config file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param user the user to load the file into"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return True if the file is read successfully, False if not"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws FileNotFoundException if the file is not found"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean readUserConfigFile(User user) throws FileNotFoundException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LOGGER.fine(\"Attempting to read file: \" + userConfigPath);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        boolean isReadSuccess \u003d false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        File file \u003d new File(userConfigPath);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Scanner readFile \u003d new Scanner(file);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String gender;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        int age;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        double height;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        double weight;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String[] arguments;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        while (readFile.hasNext()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            line \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            arguments \u003d line.split(COMMA_SEPARATOR);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            name \u003d arguments[0];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            gender \u003d arguments[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            age \u003d Integer.parseInt(arguments[2]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            height \u003d Double.parseDouble(arguments[3]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            weight \u003d Double.parseDouble(arguments[4]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            user.loadUserData(name, age, height, weight, gender);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            isReadSuccess \u003d true;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LOGGER.fine(\"User profile file read successfully.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return isReadSuccess;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Writes the user\u0027s data into the user config file."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param user the user to load the file into"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws IOException if an I/O error has occurred"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void writeUserConfigFile(User user) throws IOException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LOGGER.fine(\"Attempting to write to file: \" + userConfigPath);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        FileWriter file \u003d new FileWriter(userConfigPath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        file.write(user.getName()"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                + COMMA_SEPARATOR + user.getGender()"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                + COMMA_SEPARATOR + user.getAge()"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                + COMMA_SEPARATOR + user.getHeight()"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                + COMMA_SEPARATOR + user.getWeight());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LOGGER.fine(\"User profile file written successfully.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        file.close();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Loads the list of the user\u0027s consumed food from a file and returns an ArrayList of Food objects."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return an ArrayList of Food objects"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws FileNotFoundException if the file is not found"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public ArrayList\u003cFood\u003e loadFoodList() throws FileNotFoundException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LOGGER.fine(\"Attempting to read file: \" + foodListPath);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cFood\u003e foodList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String[] arguments;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        File foodListFile \u003d new File(foodListPath);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Scanner readFile \u003d new Scanner(foodListFile);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        while (readFile.hasNext()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            line \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            arguments \u003d line.split(COMMA_SEPARATOR);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            foodList.add(new Food(arguments[0],"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                    new Calorie(Integer.parseInt(arguments[1])), Integer.parseInt(arguments[2])));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LOGGER.fine(\"Food list file read successfully.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return foodList;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Writes the food list data into a file."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param foodList the food list to write to the file"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws IOException if an I/O error has occurred"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void writeFoodList(FoodList foodList) throws IOException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LOGGER.fine(\"Attempting to write to file: \" + foodListPath);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        FileWriter file \u003d new FileWriter(foodListPath);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Food food;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        for (int i \u003d 0; i \u003c foodList.getSize(); i++) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            food \u003d foodList.getFood(i);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            file.write(food.getFoodName()"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                    + COMMA_SEPARATOR + food.getCalories()"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                    + COMMA_SEPARATOR + food.getAmountOfFood() + System.lineSeparator());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LOGGER.fine(\"Food list file written successfully.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        file.close();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Loads the user\u0027s exercises from a file and returns an ArrayList of Exercise objects."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return an ArrayList of Exercise objects"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws FileNotFoundException if the file is not found"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public ArrayList\u003cExercise\u003e loadExerciseList() throws FileNotFoundException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LOGGER.fine(\"Attempting to read file: \" + exerciseListPath);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cExercise\u003e exerciseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String[] arguments;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        File exerciseListFile \u003d new File(exerciseListPath);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Scanner readFile \u003d new Scanner(exerciseListFile);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        while (readFile.hasNext()) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            line \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            arguments \u003d line.split(COMMA_SEPARATOR);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            exerciseList.add(new Exercise(arguments[0],"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                    new Calorie(Integer.parseInt(arguments[1])), Integer.parseInt(arguments[2])));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LOGGER.fine(\"Exercise list file read successfully.\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return exerciseList;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Writes the exercise list data into a file."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param exerciseList the exercise list to write to the file"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws IOException if an I/O error has occurred"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void writeExerciseList(ExerciseList exerciseList) throws IOException {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LOGGER.fine(\"Attempting to write to file: \" + exerciseListPath);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        FileWriter file \u003d new FileWriter(exerciseListPath);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Exercise exercise;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        for (int i \u003d 0; i \u003c exerciseList.getSize(); i++) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            exercise \u003d exerciseList.getExercise(i);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            file.write(exercise.getNameOfExercise()"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                    + COMMA_SEPARATOR + exercise.getCalories()"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                    + COMMA_SEPARATOR + exercise.getDuration() + System.lineSeparator());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LOGGER.fine(\"Exercise list file written successfully.\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        file.close();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 3,
      "jerichochua": 212,
      "gohsonghan98": 5
    }
  },
  {
    "path": "src/main/java/fitr/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static fitr.common.Commands.COMMAND_FOOD;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static fitr.common.Commands.COMMAND_EXERCISE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static fitr.common.Commands.COMMAND_VIEW_PROFILE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static fitr.common.Commands.COMMAND_VIEW_BMI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static fitr.common.Commands.COMMAND_VIEW_FOOD;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static fitr.common.Commands.COMMAND_VIEW_EXERCISE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static fitr.common.Commands.COMMAND_VIEW_SUMMARY;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static fitr.common.Commands.COMMAND_DELETE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static fitr.common.Commands.COMMAND_BYE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static fitr.common.Commands.COMMAND_VIEW;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static fitr.common.Messages.FORMAT_FOOD;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static fitr.common.Messages.FORMAT_EXERCISE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static fitr.common.Messages.FORMAT_DELETE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static fitr.common.Messages.MESSAGE_GREET;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static fitr.common.Messages.MESSAGE_SUGGEST_QUESTION;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static fitr.common.Messages.MESSAGE_BYE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static fitr.common.Messages.ERROR_INVALID_COMMAND;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static fitr.common.Messages.ERROR_INVALID_INDEX;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static fitr.common.Messages.ERROR_INVALID_CALORIES;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * Prints messages."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String SPACE \u003d \"%-18s%s%n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String GREEN_COLOUR \u003d \"\\033[0;32m\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String RED_COLOUR \u003d \"\\033[0;31m\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String RESET_COLOUR \u003d \"\\033[0m\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String FORMAT \u003d \" \".repeat(18) + GREEN_COLOUR + \"Format: \" + RESET_COLOUR;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public static String read() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hui444"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hui444"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printCustomMessage(String message) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printCustomError(String errorMessage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.println(RED_COLOUR + errorMessage + RESET_COLOUR);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public static void printGreetingMessage() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(MESSAGE_GREET);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printSuggestQuestion() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(MESSAGE_SUGGEST_QUESTION);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public static void printExitMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(MESSAGE_BYE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public static void printHelpMessage() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(\"These are commands Fitr understands:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_FOOD, \"Adds food entry to Fitr program\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(FORMAT + FORMAT_FOOD);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_EXERCISE, \"Adds exercise entry to Fitr program\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(FORMAT + FORMAT_EXERCISE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_VIEW_PROFILE, \"View your profile information\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_VIEW_BMI, \"View your BMI\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_VIEW_FOOD, \"View food entries\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_VIEW_EXERCISE, \"View exercise entries\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_VIEW_SUMMARY, \"View calorie summary\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_DELETE, \"Deletes selected entry\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(FORMAT + FORMAT_DELETE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_BYE, \"Exits the program\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printFormatError(String command) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hui444"
        },
        "content": "        if (command.equals(COMMAND_VIEW)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printCustomError(ERROR_INVALID_COMMAND);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hui444"
        },
        "content": "            System.out.printf(SPACE, COMMAND_VIEW_PROFILE, \"View your profile\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hui444"
        },
        "content": "            System.out.printf(SPACE, COMMAND_VIEW_BMI, \"View your BMI\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hui444"
        },
        "content": "            System.out.printf(SPACE, COMMAND_VIEW_FOOD, \"View food entries\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hui444"
        },
        "content": "            System.out.printf(SPACE, COMMAND_VIEW_EXERCISE, \"View exercise entries\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hui444"
        },
        "content": "            System.out.printf(SPACE, COMMAND_VIEW_SUMMARY, \"View calorie summary\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hui444"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hui444"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hui444"
        },
        "content": "        case COMMAND_FOOD:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printCustomError(\"Please input in the correct format!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printCustomError(FORMAT_FOOD);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hui444"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hui444"
        },
        "content": "        case COMMAND_EXERCISE:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printCustomError(\"Please input in the correct format!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printCustomError(FORMAT_EXERCISE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hui444"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hui444"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printCustomError(\"Please input in the correct format!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printCustomError(FORMAT_DELETE);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hui444"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hui444"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printInvalidCommandError();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hui444"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printCaloriesError() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomError(ERROR_INVALID_CALORIES);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printIndexError() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomError(ERROR_INVALID_INDEX);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void echoEntry(String entry) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(\"Okay! Fitr recorded:\" + System.lineSeparator()"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hui444"
        },
        "content": "                + \"\\t\" + entry);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void echoDelete(String entry) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(\"Done! Fitr removed:\" + System.lineSeparator()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hui444"
        },
        "content": "                + \"\\t\" + entry);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printInvalidCommandError() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomError(ERROR_INVALID_COMMAND);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 103,
      "sixletters": 13,
      "jerichochua": 17,
      "dmbclub": 4
    }
  },
  {
    "path": "src/main/java/fitr/user/User.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.ExerciseList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.list.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Calorie;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.USER_SETUP_GREET;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.INPUT_NAME;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.INPUT_AGE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.INPUT_HEIGHT;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.INPUT_WEIGHT;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.INPUT_GENDER;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.SETUP_COMPLETE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.ERROR_INVALID_AGE_INPUT;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.ERROR_INVALID_GENDER_INPUT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.ERROR_INVALID_HEIGHT_INPUT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.ERROR_INVALID_WEIGHT_INPUT;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.NAME_OUTPUT_HEADER;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.AGE_OUTPUT_HEADER;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.GENDER_OUTPUT_HEADER;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.HEIGHT_OUTPUT_HEADER;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.WEIGHT_OUTPUT_HEADER;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.LINE_BREAK;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.MALE_SYMBOL;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.FEMALE_SYMBOL;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.MALE_STRING;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static fitr.common.Messages.FEMALE_STRING;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": " * User class keeps track of user\u0027s personal information."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class User {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private int age;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private double height;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private double weight;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private String gender;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "     * Setup configures user profile for first time use."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setup() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(USER_SETUP_GREET);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(INPUT_NAME);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        setName();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(INPUT_AGE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        setupAge();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(INPUT_HEIGHT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        setupHeight();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(INPUT_WEIGHT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        setupWeight();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(INPUT_GENDER);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        setupGender();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Ui.printCustomMessage(SETUP_COMPLETE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public int getAge() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return age;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public double getHeight() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return height;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public double getWeight() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return weight;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public String getGender() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return gender;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setName() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        name \u003d Ui.read();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setAge(int age) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        this.age \u003d age;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setHeight(double height) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setWeight(double weight) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setGender(String gender) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        this.gender \u003d gender;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setupAge() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        int ageInput \u003d 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        while (ageInput \u003c\u003d 0) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                ageInput \u003d Integer.parseInt(Ui.read());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                if (ageInput \u003c\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                    Ui.printCustomMessage(ERROR_INVALID_AGE_INPUT + INPUT_AGE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                Ui.printCustomMessage(ERROR_INVALID_AGE_INPUT + INPUT_AGE);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                ageInput \u003d 0;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        setAge(ageInput);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setupHeight() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        double heightInput \u003d 0.00;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        // Height (in m)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        while (heightInput \u003c\u003d 0.00) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                heightInput \u003d Double.parseDouble(Ui.read());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                if (heightInput \u003c\u003d 0.00) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                    Ui.printCustomMessage(ERROR_INVALID_HEIGHT_INPUT + INPUT_HEIGHT);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                Ui.printCustomMessage(ERROR_INVALID_HEIGHT_INPUT + INPUT_HEIGHT);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                heightInput \u003d 0.00;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        setHeight(heightInput);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setupWeight() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        // Weight (in kg)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        double weightInput \u003d 0.00;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        while (weightInput \u003c\u003d 0.00) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                weightInput \u003d Double.parseDouble(Ui.read());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                if (weightInput \u003c\u003d 0.00) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                    Ui.printCustomMessage(ERROR_INVALID_WEIGHT_INPUT + INPUT_WEIGHT);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                Ui.printCustomMessage(ERROR_INVALID_WEIGHT_INPUT + INPUT_WEIGHT);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                weightInput \u003d 0.00;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        setWeight(weightInput);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setupGender() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        String genderInput \u003d Ui.read();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        while (!genderInput.equalsIgnoreCase(\"m\") \u0026\u0026 !genderInput.equalsIgnoreCase(\"f\")) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            Ui.printCustomMessage(ERROR_INVALID_GENDER_INPUT + INPUT_GENDER);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            genderInput \u003d Ui.read();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        if (genderInput.equalsIgnoreCase(MALE_SYMBOL)) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            setGender(MALE_STRING);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else if (genderInput.equalsIgnoreCase(FEMALE_SYMBOL)) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            setGender(FEMALE_STRING);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return NAME_OUTPUT_HEADER + getName() + LINE_BREAK + AGE_OUTPUT_HEADER + getAge() + LINE_BREAK"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                + GENDER_OUTPUT_HEADER + getGender() + LINE_BREAK + HEIGHT_OUTPUT_HEADER + getHeight()"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                + LINE_BREAK + WEIGHT_OUTPUT_HEADER + getWeight();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public Calorie calculateCalorieBurnt(ExerciseList exerciseList) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        int totalBurnt \u003d 0;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        while (index \u003c exerciseList.getSize()) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            totalBurnt +\u003d exerciseList.getExercise(index).getCalories();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return new Calorie(totalBurnt);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public Calorie calculateCalorieConsumed(FoodList foodList) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        int totalConsumed \u003d 0;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        while (index \u003c foodList.getSize()) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            totalConsumed +\u003d foodList.getFood(index).getCalories();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return new Calorie(totalConsumed);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public Calorie calculateCalorie(FoodList foodList, ExerciseList exerciseList) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        int totalCalories;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Calorie totalConsumed \u003d calculateCalorieConsumed(foodList);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Calorie totalBurnt \u003d calculateCalorieBurnt(exerciseList);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        totalCalories \u003d totalConsumed.get() - totalBurnt.get();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return new Calorie(totalCalories);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void loadUserData(String name, int age, double height, double weight, String gender) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        this.age \u003d age;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        this.gender \u003d gender;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public double getBmi() {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return weight / ((height) * (height));"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 2,
      "jerichochua": 5,
      "gohsonghan98": 201
    }
  },
  {
    "path": "src/test/data/StorageTest/InvalidExerciseData.txt",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "test"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 1
    }
  },
  {
    "path": "src/test/data/StorageTest/InvalidFoodData.txt",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "test"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 1
    }
  },
  {
    "path": "src/test/data/StorageTest/InvalidUserData.txt",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "test"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 1
    }
  },
  {
    "path": "src/test/data/StorageTest/ValidExerciseData.txt",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Test Exercise 1,500,10"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Test Exercise 2,100,5"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 2
    }
  },
  {
    "path": "src/test/data/StorageTest/ValidFoodData.txt",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Test Food 1,100,1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Test Food 2,50,5"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 2
    }
  },
  {
    "path": "src/test/data/StorageTest/ValidUserData.txt",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "TestUser,Male,20,1.7,60"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 1
    }
  },
  {
    "path": "src/test/java/fitr/CalorieTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package fitr;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import fitr.Calorie;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class CalorieTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void getCaloriesAsInt_validInt_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        Calorie newCalorie \u003d new Calorie(500);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        assertEquals(500,newCalorie.get());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 14
    }
  },
  {
    "path": "src/test/java/fitr/ExerciseTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package fitr;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import fitr.Calorie;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import fitr.Exercise;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class ExerciseTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    Calorie tempCalorie \u003d new Calorie(500);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void getCaloriesBurnt_validExerciseAndCalorie_success() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        Exercise tempExercise \u003d new Exercise(\"exercise\",tempCalorie);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        assertEquals(500,tempCalorie.get());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void getNameOfExercise_validExerciseAndCalorie_success() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        Exercise tempExercise \u003d new Exercise(\"exercise\",tempCalorie);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        assertEquals(\"exercise\",tempExercise.getNameOfExercise());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void getCaloricBurnRate_validExerciseWithoutSpecifiedDuration_success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        Exercise tempExercise \u003d new Exercise(\"exercise\",tempCalorie);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        assertEquals(500,tempExercise.getCaloricBurnRate());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void getCaloricBurnRate_validExerciseWithSpecifiedDuration_success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        Exercise tempExercise \u003d new Exercise(\"exercise\",tempCalorie,2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        assertEquals(250,tempExercise.getCaloricBurnRate());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void getDurationOfExercise_validExerciseWithSpecifiedDuration_success() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        Exercise tempExercise \u003d new Exercise(\"exercise\",tempCalorie,2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        assertEquals(2,tempExercise.getDuration());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void getDurationOfExercise_validExerciseWithoutSpecifiedDuration_success() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        Exercise tempExercise \u003d new Exercise(\"exercise\",tempCalorie);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        assertEquals(1,tempExercise.getDuration());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 49
    }
  },
  {
    "path": "src/test/java/fitr/FoodTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package fitr;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import fitr.Calorie;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import fitr.Food;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class FoodTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    Calorie tempCalorie \u003d new Calorie(500);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void getCaloriesConsumed_validFoodAndCalorie_success() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        Food tempExercise \u003d new Food(\"food\",tempCalorie);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        assertEquals(500,tempCalorie.get());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void getNameOfFood_validFoodAndCalorie_success() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        Food tempExercise \u003d new Food(\"exercise\",tempCalorie);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        assertEquals(\"exercise\",tempExercise.getFoodName());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void getCaloricConsumptionRate_validFoodWithoutSpecifiedAmount_success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        Food tempExercise \u003d new Food(\"exercise\",tempCalorie);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        assertEquals(500,tempExercise.getCaloricRate());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void getCaloricConsumptionRate_validFoodWithSpecifiedAmount_success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        Food tempExercise \u003d new Food(\"exercise\",tempCalorie,2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        assertEquals(250,tempExercise.getCaloricRate());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void getAmountOfFoodSpecified_validFoodWithSpecifiedAmount_success() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        Food tempExercise \u003d new Food(\"exercise\",tempCalorie,2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        assertEquals(2,tempExercise.getAmountOfFood());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void getAmountOfFoodUnspecified_validFoodWithSpecifiedAmount_success() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        Food tempExercise \u003d new Food(\"exercise\",tempCalorie);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        assertEquals(1,tempExercise.getAmountOfFood());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 47
    }
  },
  {
    "path": "src/test/java/fitr/command/HelpCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "package fitr.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "public class HelpCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public void testHelp() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        Command help \u003d new HelpCommand(\"help\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        assertFalse(help.isExit());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dmbclub": 13
    }
  },
  {
    "path": "src/test/java/fitr/command/InvalidCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "package fitr.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "public class InvalidCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public void testInvalid() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        Command invalid \u003d new InvalidCommand(\"haha\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        assertFalse(invalid.isExit());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dmbclub": 13
    }
  },
  {
    "path": "src/test/java/fitr/list/ExerciseListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Calorie;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Exercise;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class ExerciseListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void addExerciseToEmptyList_validExercise_success() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ExerciseList exerciseList \u003d new ExerciseList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        exerciseList.addExercise(new Exercise(\"Push ups\", new Calorie(100), 1));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(1, exerciseList.getSize());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void addExerciseToNonEmptyList_validExercise_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ExerciseList exerciseList \u003d new ExerciseList(getTestExerciseList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        exerciseList.addExercise(new Exercise(\"Push ups\", new Calorie(100), 1));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(4, exerciseList.getSize());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private ArrayList\u003cExercise\u003e getTestExerciseList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cExercise\u003e exerciseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        exerciseList.add(new Exercise(\"Crunches\", new Calorie(100), 1));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        exerciseList.add(new Exercise(\"Squats\", new Calorie(100), 2));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        exerciseList.add(new Exercise(\"Run\", new Calorie(300), 10));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return exerciseList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 33
    }
  },
  {
    "path": "src/test/java/fitr/list/FoodListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Calorie;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Food;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class FoodListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void addFoodToEmptyList_validFood_success() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        FoodList foodList \u003d new FoodList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        foodList.addFood(new Food(\"Rice\", new Calorie(100), 1));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(1, foodList.getSize());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void addFoodToNonEmptyList_validFood_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        FoodList foodList \u003d new FoodList(getTestFoodList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        foodList.addFood(new Food(\"Rice\", new Calorie(100), 1));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(4, foodList.getSize());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private ArrayList\u003cFood\u003e getTestFoodList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cFood\u003e foodList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        foodList.add(new Food(\"Meat\", new Calorie(100), 1));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        foodList.add(new Food(\"Fish\", new Calorie(100), 2));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        foodList.add(new Food(\"Noodles\", new Calorie(200), 1));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return foodList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 33
    }
  },
  {
    "path": "src/test/java/fitr/storage/StorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package fitr.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Calorie;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Exercise;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import fitr.Food;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void load_invalidExerciseData_exceptionThrown() throws Exception {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Storage storage \u003d getInvalidStorage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertThrows(ArrayIndexOutOfBoundsException.class, storage::loadExerciseList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void load_invalidFoodData_exceptionThrown() throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Storage storage \u003d getInvalidStorage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertThrows(ArrayIndexOutOfBoundsException.class, storage::loadFoodList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void load_validExerciseData_success() throws Exception {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Storage storage \u003d getValidStorage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cExercise\u003e actualExerciseList \u003d storage.loadExerciseList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cExercise\u003e expectedExerciseList \u003d getValidExerciseList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(expectedExerciseList.get(0).getNameOfExercise(), actualExerciseList.get(0).getNameOfExercise());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(expectedExerciseList.get(0).getCalories(), actualExerciseList.get(0).getCalories());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(expectedExerciseList.get(0).getDuration(), actualExerciseList.get(0).getDuration());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(expectedExerciseList.get(1).getNameOfExercise(), actualExerciseList.get(1).getNameOfExercise());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(expectedExerciseList.get(1).getCalories(), actualExerciseList.get(1).getCalories());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(expectedExerciseList.get(1).getDuration(), actualExerciseList.get(1).getDuration());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void load_validFoodData_success() throws Exception {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Storage storage \u003d getValidStorage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cFood\u003e actualFoodList \u003d storage.loadFoodList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cFood\u003e expectedFoodList \u003d getValidFoodList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(expectedFoodList.get(0).getFoodName(), actualFoodList.get(0).getFoodName());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(expectedFoodList.get(0).getCalories(), actualFoodList.get(0).getCalories());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(expectedFoodList.get(0).getAmountOfFood(), actualFoodList.get(0).getAmountOfFood());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(expectedFoodList.get(1).getFoodName(), actualFoodList.get(1).getFoodName());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(expectedFoodList.get(1).getCalories(), actualFoodList.get(1).getCalories());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(expectedFoodList.get(1).getAmountOfFood(), actualFoodList.get(1).getAmountOfFood());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private ArrayList\u003cExercise\u003e getValidExerciseList() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cExercise\u003e exerciseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        exerciseList.add(new Exercise(\"Test Exercise 1\", new Calorie(500), 10));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        exerciseList.add(new Exercise(\"Test Exercise 2\", new Calorie(100), 5));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return exerciseList;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private ArrayList\u003cFood\u003e getValidFoodList() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cFood\u003e foodList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        foodList.add(new Food(\"Test Food 1\", new Calorie(100), 1));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        foodList.add(new Food(\"Test Food 2\", new Calorie(50), 5));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return foodList;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private Storage getValidStorage() throws Exception {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return new Storage(\"src/test/data/StorageTest/ValidUserData.txt\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                \"src/test/data/StorageTest/ValidFoodData.txt\","
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                \"src/test/data/StorageTest/ValidExerciseData.txt\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private Storage getInvalidStorage() throws Exception {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return new Storage(\"src/test/data/StorageTest/InvalidUserData.txt\","
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                \"src/test/data/StorageTest/InvalidFoodData.txt\","
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                \"src/test/data/StorageTest/InvalidExerciseData.txt\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 81
    }
  },
  {
    "path": "src/test/java/fitr/ui/UiTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package fitr.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static fitr.ui.Ui.read;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "class UiTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public void readUserInput() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "        Ui uiText \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "        String input \u003d \"add 5\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "        assertEquals(\"add 5\", uiText.read());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 22
    }
  },
  {
    "path": "src/test/java/fitr/user/UserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "package fitr.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.Calorie;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.Exercise;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.Food;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.list.ExerciseList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import fitr.list.FoodList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "public class UserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    //BMI test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void testBmiCalculation_positiveInputs_correctResult() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        User user \u003d new User();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        user.setHeight(2.00);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        user.setWeight(4.00);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        assertEquals(1.00, user.getBmi());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    //user configuration test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void configureUserInformation_validInput_userConfigurationSuccess() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        User user \u003d new User();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        user.loadUserData(\"Bob\", 20, 2.00, 8.00, \"Male\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        assertEquals(\"Bob\", user.getName());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        assertEquals(20, user.getAge());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        assertEquals(2.00, user.getHeight());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        assertEquals(8.00, user.getWeight());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        assertEquals(\"Male\", user.getGender());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    //Calorie test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void testCalorieCalculation_positiveInputs_correctResult() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        FoodList foodList \u003d new FoodList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        ExerciseList exerciseList \u003d new ExerciseList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        foodList.addFood(new Food(\"Chicken\", new Calorie(200), 1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        foodList.addFood(new Food(\"Duck\", new Calorie(200), 1));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        exerciseList.addExercise(new Exercise(\"Squats\", new Calorie(100), 1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        exerciseList.addExercise(new Exercise(\"Running\", new Calorie(100), 1));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        User user \u003d new User();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        assertEquals(200, user.calculateCalorieBurnt(exerciseList).get());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        assertEquals(400, user.calculateCalorieConsumed(foodList).get());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        assertEquals(200, user.calculateCalorie(foodList, exerciseList).get());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gohsonghan98": 48
    }
  }
]
