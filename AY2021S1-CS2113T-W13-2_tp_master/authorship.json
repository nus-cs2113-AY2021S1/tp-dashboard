[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Fitr\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 1,
      "-": 45
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Fang Hui Hui | [Github](https://github.com/hui444) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Goh Song Han | [Github](https://github.com/gohsonghan98) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Harris Maung | [Github](https://github.com/sixletters) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jericho Chua | [Github](https://github.com/jerichochua) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Mingbang | [Github](https://github.com/dmbclub) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 3,
      "dmbclub": 1,
      "-": 4,
      "gohsonghan98": 1
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "{Give a product intro}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{Give steps to get started quickly}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Down the latest version of `Duke` from [here](http://link.to/duke)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "{Give detailed description of each feature}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "### Adding a todo: `todo`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a new item to the list of todo items."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `todo n/TODO_NAME d/DEADLINE`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "* The `DEADLINE` can be in a natural language format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "* The `TODO_NAME` cannot contain punctuation.  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Write the rest of the User Guide d/next week`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Exiting the program: `bye`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Saving the data"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "The user\u0027s profile, food consumed and exercises done are saved automatically after any command that changes the data. "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "There is no need to save manually."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: {your answer here}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Action | Format | Examples"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "------ | ------ | --------"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "bye | `bye`"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 15,
      "-": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public AddCommand(String command) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void execute(FoodList foodlist, ExerciseList exerciseList, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        String type \u003d command.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        command \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        if (type.equalsIgnoreCase(\"food\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                String nameOfFood \u003d command.split(\"/\", 2)[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                command \u003d command.split(\"/\", 2)[1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                if (command.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    Calorie amountOfCalories \u003d new Calorie(Integer.parseInt(command.split(\" \")[0]));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    foodlist.addFood(new Food(nameOfFood, amountOfCalories));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                } else if (command.split(\" \").length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    Calorie amountOfCalories \u003d new Calorie(Integer.parseInt(command.split(\" \")[0]));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    int amountOfFood \u003d Integer.parseInt(command.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    foodlist.addFood(new Food(nameOfFood, amountOfCalories, amountOfFood));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            } catch (NumberFormatException | NullPointerException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                System.out.println(\"Sorry calories have to be a number\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                System.out.print(\"Please key in the correct format\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else if (type.equalsIgnoreCase(\"exercise\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                String nameOfExercise \u003d command.split(\"/\", 2)[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                command \u003d command.split(\"/\", 2)[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                if (command.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    Calorie amountOfCaloriesBurnt \u003d new Calorie(Integer.parseInt(command.split(\" \")[0]));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    foodlist.addFood(new Food(nameOfExercise, amountOfCaloriesBurnt));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                } else if (command.split(\" \").length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    Calorie amountOfCaloriesBurnt \u003d new Calorie(Integer.parseInt(command.split(\" \")[0]));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    int durationOfExercise \u003d Integer.parseInt(command.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    exerciseList.addExercise(new Exercise(nameOfExercise, amountOfCaloriesBurnt, durationOfExercise));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            } catch (NumberFormatException | NullPointerException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                System.out.println(\"Sorry calories have to be a number\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                System.out.print(\"Please key in the correct format\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 44,
      "jerichochua": 6,
      "gohsonghan98": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/Calorie.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Calorie {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected int amountOfCalories;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public Calorie(int calories) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.amountOfCalories \u003d calories;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public int get() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return amountOfCalories;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public abstract void execute(FoodList foodlist, ExerciseList exerciseList, Storage storage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 7,
      "jerichochua": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void execute(FoodList foodlist,ExerciseList exerciseList, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            command \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            String type \u003d command.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            if (type.equals(\"food\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                int deletionIndex \u003d Integer.parseInt(command.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                foodlist.deleteFood(deletionIndex - 1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            } else if (type.equals(\"exercise\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                int deletionIndex \u003d Integer.parseInt(command.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                exerciseList.deleteExercise(deletionIndex - 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            System.out.println(\"Sorry that index does not exist in the list\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            System.out.println(\"Please key in the delete function in the correct format\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            System.out.println(\"Sorry index deletion must be an number\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 26,
      "jerichochua": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/Exercise.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Exercise {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected String nameOfExercise; // The name of the Exercise"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected Calorie caloriesBurnt;// Amount of calories burnt from exercise"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected int durationOfExercise \u003d 1; // Duration of the exercises"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    protected int caloricBurnRate; // Caloric Rate of the food, if amount isnt given we will take it as a whole unit."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public Exercise(String nameOfExercise,Calorie caloriesBurnt, int durationOfExercise) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.nameOfExercise \u003d nameOfExercise;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloriesBurnt \u003d caloriesBurnt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.durationOfExercise \u003d durationOfExercise;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloricBurnRate \u003d this.caloriesBurnt.get() / this.durationOfExercise;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public Exercise(String name,Calorie caloriesBurnt) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.nameOfExercise \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloriesBurnt \u003d caloriesBurnt;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloricBurnRate \u003d this.caloriesBurnt.get() / this.durationOfExercise;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public int getCalories() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return caloriesBurnt.get();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public String getNameOfExercise() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return nameOfExercise;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public int getCaloricBurnRate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return caloricBurnRate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public int getDuration() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return durationOfExercise;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 36,
      "gohsonghan98": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/ExerciseList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class ExerciseList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final ArrayList\u003cExercise\u003e exerciseList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public ExerciseList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public ExerciseList(ArrayList\u003cExercise\u003e exerciseList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.exerciseList \u003d exerciseList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void addExercise(Exercise exercise) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        exerciseList.add(exercise);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Exercise getExercise(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return exerciseList.get(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Exercise deleteExercise(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return exerciseList.remove(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return exerciseList.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public ExitCommand(String command) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void execute(FoodList foodlist, ExerciseList exerciseList, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 11,
      "jerichochua": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/Fitr.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Fitr {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    private FoodList foodList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    private ExerciseList exerciseList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    private User user;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Fitr(String filePathOfUserConfig, String filePathOfFoodList, String filePathOfExerciseList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            user \u003d new User();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            storage \u003d new Storage(filePathOfUserConfig, filePathOfFoodList, filePathOfExerciseList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            if (!storage.readUserConfigFile(user)) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                user.setup();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                storage.writeUserConfigFile(user);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            foodList \u003d new FoodList(storage.loadFoodList());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            exerciseList \u003d new ExerciseList(storage.loadExerciseList());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            System.out.println(\"Theres no file\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            String userInput \u003d UI.read();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            Command c \u003d Parser.parse(userInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            c.execute(foodList, exerciseList, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        UI.printExitMessage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        new Fitr(\"userConfig.txt\", \"foodList.txt\", \"exerciseList.txt\").run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 8,
      "jerichochua": 10,
      "dmbclub": 17,
      "-": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/FitrException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class FitrException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/Food.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Food {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected String nameOfFood; // The name of the Food"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected Calorie caloriesInFood;// Amount of calories consumed"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected int amountOfFood \u003d 1; // Amount of food in grams, if not it will be taken as arbritary unit e.g, 1 banana"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected int caloricRate;// Caloric Rate of the food, if amount is not given we will take it as a whole unit."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public Food(String nameOfFood,Calorie calories,int amount) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.nameOfFood \u003d nameOfFood;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloriesInFood \u003d calories;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.amountOfFood \u003d amount;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloricRate \u003d this.caloriesInFood.get() / this.amountOfFood;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public Food(String name,Calorie caloriesBurnt) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.nameOfFood \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloriesInFood \u003d caloriesBurnt;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.caloricRate \u003d this.caloriesInFood.get() / this.amountOfFood;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public int getCalories() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return caloriesInFood.get();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public String getFoodName() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return nameOfFood;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public int getCaloricRate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return caloricRate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public int getAmountOfFood() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return amountOfFood;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 36,
      "gohsonghan98": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/FoodList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class FoodList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final ArrayList\u003cFood\u003e foodList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public FoodList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public FoodList(ArrayList\u003cFood\u003e foodList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.foodList \u003d foodList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void addFood(Food food) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        foodList.add(food);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Food getFood(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return foodList.get(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Food deleteFood(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return foodList.remove(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return foodList.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 4,
      "jerichochua": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/InvalidCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public InvalidCommand(String userInput) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d userInput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public void execute(FoodList foodlist, ExerciseList exerciseList, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        UI.printInvalidCommandError();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 5,
      "dmbclub": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dmbclub"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public static Command parse(String userInput) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        String[] fullCommand \u003d userInput.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        switch (fullCommand[0].toLowerCase()) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        case \"food\":"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            if (fullCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "                return new InvalidCommand(userInput);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            return new AddCommand(userInput);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        case \"exercise\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            if (fullCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "                return new InvalidCommand(userInput);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            return new AddCommand(userInput);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        case \"view\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            return new ViewCommand(userInput);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            if (fullCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "                return new InvalidCommand(userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            return new DeleteCommand(userInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            return new ExitCommand(userInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "            return new InvalidCommand(userInput);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dmbclub": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Handles the loading and saving of data to a file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static final String DEFAULT_EXERCISE_LIST_FILEPATH \u003d \"exercises.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static final String DEFAULT_FOOD_LIST_FILEPATH \u003d \"food.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static final String DEFAULT_USER_CONFIG_FILEPATH \u003d \"user.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static final String COMMA_SEPARATOR \u003d \",\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final String exerciseListPath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final String foodListPath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final String userConfigPath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Set up the files required in the application, by creating the files if the files do not exist and"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * setting the file paths."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param userConfigPath file path of the user\u0027s profile"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param foodListPath file path of the food list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param exerciseListPath file path of the exercise list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws IOException if an I/O error has occurred"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Storage(String userConfigPath, String foodListPath, String exerciseListPath) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.userConfigPath \u003d userConfigPath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.foodListPath \u003d foodListPath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.exerciseListPath \u003d exerciseListPath;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        File exerciseListFile \u003d new File(exerciseListPath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        File foodListFile \u003d new File(foodListPath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        File userConfigFile \u003d new File(userConfigPath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        if (!exerciseListFile.exists()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            exerciseListFile.createNewFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        if (!foodListFile.exists()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            foodListFile.createNewFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        if (!userConfigFile.exists()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            userConfigFile.createNewFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Storage() throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this(DEFAULT_USER_CONFIG_FILEPATH, DEFAULT_FOOD_LIST_FILEPATH, DEFAULT_EXERCISE_LIST_FILEPATH);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Reads the user\u0027s data from the user config file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param user the user to load the file into"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return True if the file is read successfully, False if not"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws FileNotFoundException if the file is not found"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean readUserConfigFile(User user) throws FileNotFoundException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        boolean isReadSuccess \u003d false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        File file \u003d new File(userConfigPath);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Scanner readFile \u003d new Scanner(file);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String gender;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        int age;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        double height;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        double weight;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String[] arguments;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        while (readFile.hasNext()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            line \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            arguments \u003d line.split(COMMA_SEPARATOR);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            name \u003d arguments[0];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            gender \u003d arguments[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            age \u003d Integer.parseInt(arguments[2]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            height \u003d Double.parseDouble(arguments[3]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            weight \u003d Double.parseDouble(arguments[4]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            user.loadUserData(name, age, height, weight, gender);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            isReadSuccess \u003d true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return isReadSuccess;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Writes the user\u0027s data into the user config file."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param user the user to load the file into"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws IOException if an I/O error has occurred"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void writeUserConfigFile(User user) throws IOException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        FileWriter file \u003d new FileWriter(userConfigPath);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        file.write(User.getName()"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                + COMMA_SEPARATOR + User.getGender()"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                + COMMA_SEPARATOR + User.getAge()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                + COMMA_SEPARATOR + User.getHeight()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                + COMMA_SEPARATOR + User.getWeight());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        file.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Loads the list of the user\u0027s consumed food from a file and returns an ArrayList of Food objects."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return an ArrayList of Food objects"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws FileNotFoundException if the file is not found"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public ArrayList\u003cFood\u003e loadFoodList() throws FileNotFoundException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cFood\u003e foodList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String[] arguments;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        File foodListFile \u003d new File(foodListPath);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Scanner readFile \u003d new Scanner(foodListFile);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        while (readFile.hasNext()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            line \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            arguments \u003d line.split(COMMA_SEPARATOR);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            foodList.add(new Food(arguments[0],"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                    new Calorie(Integer.parseInt(arguments[1])), Integer.parseInt(arguments[2])));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return foodList;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Writes the food list data into a file."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param foodList the food list to write to the file"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws IOException if an I/O error has occurred"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void writeFoodList(FoodList foodList) throws IOException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        FileWriter file \u003d new FileWriter(foodListPath);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Food food;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        for (int i \u003d 0; i \u003c foodList.getSize(); i++) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            food \u003d foodList.getFood(i);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            file.write(food.getFoodName()"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                    + COMMA_SEPARATOR + food.getCalories()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                    + COMMA_SEPARATOR + food.getAmountOfFood() + System.lineSeparator());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        file.close();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Loads the user\u0027s exercises from a file and returns an ArrayList of Exercise objects."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return an ArrayList of Exercise objects"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws FileNotFoundException if the file is not found"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public ArrayList\u003cExercise\u003e loadExerciseList() throws FileNotFoundException {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cExercise\u003e exerciseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String[] arguments;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        File exerciseListFile \u003d new File(exerciseListPath);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Scanner readFile \u003d new Scanner(exerciseListFile);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        while (readFile.hasNext()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            line \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            arguments \u003d line.split(COMMA_SEPARATOR);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            exerciseList.add(new Exercise(arguments[0],"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                    new Calorie(Integer.parseInt(arguments[1])), Integer.parseInt(arguments[2])));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return exerciseList;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Writes the exercise list data into a file."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param exerciseList the exercise list to write to the file"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws IOException if an I/O error has occurred"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void writeExerciseList(ExerciseList exerciseList) throws IOException {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        FileWriter file \u003d new FileWriter(exerciseListPath);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Exercise exercise;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        for (int i \u003d 0; i \u003c exerciseList.getSize(); i++) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            exercise \u003d exerciseList.getExercise(i);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            file.write(exercise.getNameOfExercise()"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                    + COMMA_SEPARATOR + exercise.getCalories()"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                    + COMMA_SEPARATOR + exercise.getDuration() + System.lineSeparator());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        file.close();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 4,
      "jerichochua": 191
    }
  },
  {
    "path": "src/main/java/seedu/duke/UI.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Commands.COMMAND_FOOD;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Commands.COMMAND_EXERCISE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Commands.COMMAND_VIEW_FOOD;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Commands.COMMAND_VIEW_EXERCISE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Commands.COMMAND_VIEW_SUMMARY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Commands.COMMAND_DELETE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Commands.COMMAND_EXIT;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Commands.COMMAND_VIEW;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Messages.FORMAT_FOOD;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Messages.FORMAT_EXERCISE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Messages.FORMAT_DELETE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Messages.MESSAGE_GREET;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Messages.MESSAGE_BYE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Messages.ERROR_INVALID_COMMAND;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Messages.ERROR_INVALID_INDEX;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "import static seedu.duke.common.Messages.ERROR_INVALID_CALORIES;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * Prints messages."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String SPACE \u003d \"%-18s%s%n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String FORMAT \u003d \" \".repeat(18) + \"\\033[0;32mFormat: \\033[0m\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public static String read() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hui444"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hui444"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printCustomMessage(String message) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printCustomError(String errorMessage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.println(\"\\033[0;31m\" + errorMessage + \"\\033[0m\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public static void printGreetingMessage() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(MESSAGE_GREET);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public static void printExitMessage() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(MESSAGE_BYE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dmbclub"
        },
        "content": "    public static void printHelpMessage() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(\"These are commands Fitr understands:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_FOOD, \"Adds food entry to Fitr program\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(FORMAT + FORMAT_FOOD);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_EXERCISE, \"Adds exercise entry to Fitr program\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(FORMAT + FORMAT_EXERCISE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_VIEW_FOOD, \"View food entries\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_VIEW_EXERCISE, \"View exercise entries\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_VIEW_SUMMARY, \"View calorie summary\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_DELETE, \"Deletes selected entry\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(FORMAT + FORMAT_DELETE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.printf(SPACE, COMMAND_EXIT, \"Exits the program\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printFormatError(String command) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hui444"
        },
        "content": "        if (command.equals(COMMAND_VIEW)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printCustomError(ERROR_INVALID_COMMAND);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hui444"
        },
        "content": "            System.out.printf(SPACE, COMMAND_VIEW_FOOD, \"View food entries\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hui444"
        },
        "content": "            System.out.printf(SPACE, COMMAND_VIEW_EXERCISE, \"View exercise entries\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hui444"
        },
        "content": "            System.out.printf(SPACE, COMMAND_VIEW_SUMMARY, \"View calorie summary\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hui444"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomError(\"Please input in the correct format!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hui444"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hui444"
        },
        "content": "        case COMMAND_FOOD:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printCustomError(FORMAT_FOOD);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hui444"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hui444"
        },
        "content": "        case COMMAND_EXERCISE:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printCustomError(FORMAT_EXERCISE);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hui444"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hui444"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printCustomError(FORMAT_DELETE);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hui444"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hui444"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hui444"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printCaloriesError() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomError(ERROR_INVALID_CALORIES);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printIndexError() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomError(ERROR_INVALID_INDEX);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void echoEntry(String entry) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(\"Okay! Fitr recorded:\" + System.lineSeparator()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hui444"
        },
        "content": "                + \"\\t\" + entry);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void echoDelete(String entry) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomMessage(\"Done! Fitr removed:\" + System.lineSeparator()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hui444"
        },
        "content": "                + \"\\t\" + entry);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printInvalidCommandError() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printCustomError(ERROR_INVALID_COMMAND);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 101,
      "sixletters": 13,
      "dmbclub": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/User.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": " * User class keeps track of user\u0027s personal information."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class User {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static Integer age;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static Double height;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static Double weight;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static String gender;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private static boolean isConfig \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "     * Setup configures user profile for first time use."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setup() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(\"Hi there, before we begin, let me get to know you :)\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(\"Please enter your name:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        setName();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(\"Please enter your age:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        setupAge();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(\"Please enter your height (in m):\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        setupHeight();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(\"Please enter your weight (in kg):\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        setupWeight();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(\"Please enter your gender (Enter \u0027m\u0027 for Male or \u0027f\u0027 for Female):\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        setupGender();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(\"Setup complete!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        isConfig \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static String getName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static Integer getAge() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return age;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static Double getHeight() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return height;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static Double getWeight() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return weight;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public static String getGender() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return gender;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setName() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        name \u003d in.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setupAge() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Integer ageInput \u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        while (ageInput \u003c\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                ageInput \u003d Integer.parseInt(in.nextLine());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                if (ageInput \u003c\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                    System.out.println(\"Oops that is an invalid age input.\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                            + \"Please enter your age:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                System.out.println(\"Oops that is an invalid age input.\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                        + \"Please enter your age:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                ageInput \u003d 0;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        age \u003d ageInput;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setupHeight() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Double heightInput \u003d 0.00;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        // Height (in m)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        while (heightInput \u003c\u003d 0.00) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                heightInput \u003d Double.parseDouble(in.nextLine());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                if (heightInput \u003c\u003d 0.00) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                    System.out.println(\"Oops that is an invalid height input.\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                            + \"Please enter your height (in m):\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                System.out.println(\"Oops that is an invalid height input.\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                        + \"Please enter your height (in m):\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                heightInput \u003d 0.00;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        height \u003d heightInput;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setupWeight() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        // Weight (in kg)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Double weightInput \u003d 0.00;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        while (weightInput \u003c\u003d 0.00) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                weightInput \u003d Double.parseDouble(in.nextLine());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                if (weightInput \u003c\u003d 0.00) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                    System.out.println(\"Oops that is an invalid weight input\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                            + \"Please enter your weight (in kg):\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                System.out.println(\"Oops that is an invalid weight input.\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                        + \"Please enter your weight (in kg):\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                weightInput \u003d 0.00;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        weight \u003d weightInput;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void setupGender() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        String genderInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        while (!genderInput.equalsIgnoreCase(\"m\") \u0026\u0026 !genderInput.equalsIgnoreCase(\"f\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            System.out.println(\"oops that is an invalid Gender input.\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                    + \"Please enter your gender (Enter \u0027m\u0027 for Male or \u0027f\u0027 for Female):\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            genderInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        if (genderInput.equalsIgnoreCase(\"m\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            gender \u003d \"Male\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else if (genderInput.equalsIgnoreCase(\"f\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            gender \u003d \"Female\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return \"Name:\\n\" + getName() + \"\\n\" + \"Age:\\n\" + getAge() + \"\\n\" + \"Gender:\\n\" + getGender()"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                + \"\\n\" + \"Height:\\n\" + getHeight() + \"\\n\" + \"Weight:\\n\" + getWeight() + \"\\n\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public Calorie calculateCalorieBurnt(ExerciseList exerciseList) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        int totalBurnt \u003d 0;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        while (index \u003c exerciseList.getSize()) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            totalBurnt +\u003d exerciseList.getExercise(index).getCalories();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return new Calorie(totalBurnt);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public Calorie calculateCalorieConsumed(FoodList foodList) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        int totalConsumed \u003d 0;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        while (index \u003c foodList.getSize()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            totalConsumed +\u003d foodList.getFood(index).getCalories();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return new Calorie(totalConsumed);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public Calorie calculateCalorie(FoodList foodList, ExerciseList exerciseList) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        int totalCalories;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Calorie totalConsumed \u003d calculateCalorieConsumed(foodList);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        Calorie totalBurnt \u003d calculateCalorieBurnt(exerciseList);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        totalCalories \u003d totalConsumed.get() - totalBurnt.get();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return new Calorie(totalCalories);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void loadUserData(String name, Integer age, Double height, Double weight, String gender) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        this.age \u003d age;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        this.gender \u003d gender;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public double getBmi() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        return weight / ((height) * (height));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 4,
      "gohsonghan98": 172
    }
  },
  {
    "path": "src/main/java/seedu/duke/ViewCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    private User user;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public ViewCommand(String command) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void execute(FoodList foodList, ExerciseList exerciseList, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        user \u003d new User();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        if (command.equalsIgnoreCase(\"view food\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            viewFood(foodList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"view exercise\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            viewExercise(exerciseList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"view summary\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            viewSummary(foodList, exerciseList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"view bmi\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            viewBmi(user);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"view profile\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            viewProfile(user);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            System.out.println(\"Invalid view command!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    //View food"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void viewFood(FoodList foodList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        if (foodList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            System.out.println(\"The food list is empty...\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            int printIndex \u003d index + 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            System.out.println(\"Here is the list of your food:\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            while (index \u003c foodList.getSize()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                System.out.println(\"[\" + printIndex + \"] \" + \"Food: \" + foodList.getFood(index).getFoodName()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                        + \"\\n    Cal: \" + foodList.getFood(index).getCalories());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                printIndex++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    //View exercise"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void viewExercise(ExerciseList exerciseList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        if (exerciseList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            System.out.println(\"The exercise list is empty...\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            int printIndex \u003d index + 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            System.out.println(\"Here is the list of your exercises:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            while (index \u003c exerciseList.getSize()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                System.out.println(\"[\" + printIndex + \"] \" + \"Exercise: \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                        + exerciseList.getExercise(index).getNameOfExercise()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                        + \"\\n    Burnt Cal: \" + exerciseList.getExercise(index).getCalories());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "                printIndex++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    //View summary of total amount of calories consumed and burnt."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void viewSummary(FoodList foodList, ExerciseList exerciseList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(\"Total calorie consumed:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(user.calculateCalorieConsumed(foodList).get());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(\"Total calorie burnt:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(user.calculateCalorieBurnt(exerciseList).get());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(\"Net calorie:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(user.calculateCalorie(foodList, exerciseList).get());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void viewBmi(User user) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(\"Your BMI is:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(user.getBmi());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    public void viewProfile(User user) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(\"User profile:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "        System.out.println(user);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gohsonghan98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 12,
      "jerichochua": 5,
      "gohsonghan98": 70
    }
  },
  {
    "path": "src/main/java/seedu/duke/common/Commands.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package seedu.duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Container for commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Commands {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_FOOD \u003d \"food\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_EXERCISE \u003d \"exercise\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_VIEW \u003d \"view\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_VIEW_FOOD \u003d \"view food\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_VIEW_EXERCISE \u003d \"view exercise\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_VIEW_SUMMARY \u003d \"view summary\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_BMI \u003d \"bmi\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String COMMAND_EXIT \u003d \"exit\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/common/Messages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package seedu.duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String MESSAGE_GREET \u003d \"Hello! Welcome to Fitr. \""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "            + System.lineSeparator() + \"What can I do for you?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String FORMAT_FOOD \u003d \"food \u003cName of food\u003e / \u003cNumber of Calories\u003e \u003cQuantity (Optional)\u003e\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String FORMAT_EXERCISE \u003d \"exercise \u003cName of exercise\u003e / \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "            + \"\u003cNumber of Calories\u003e \u003cQuantity (Optional)\u003e\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String FORMAT_DELETE \u003d \"delete food \u003cIndex from Food List\u003e \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "            + \"or delete exercise \u003cIndex from Exercise List\u003e\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String INPUT_NAME \u003d \"Please enter your name:\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String INPUT_AGE \u003d \"Please enter your age:\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String INPUT_HEIGHT \u003d \"Please enter your height (in m):\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String INPUT_WEIGHT \u003d \"Please enter your weight (in kg):\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String INPUT_GENDER \u003d \"Please enter your gender (Enter \u0027M\u0027 for Male or \u0027F\u0027 for Female):\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String ERROR_INVALID_COMMAND \u003d \"Sorry this is an invalid command!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String ERROR_INVALID_INDEX \u003d \"Please input a valid index!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String ERROR_INVALID_CALORIES \u003d \"Sorry! Calories should be a number.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static final String ERROR_INVALID_INPUT \u003d \"Oops! That is an invalid input.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 27
    }
  },
  {
    "path": "src/test/java/seedu/duke/ExerciseListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class ExerciseListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void addExerciseToEmptyList_validExercise_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ExerciseList exerciseList \u003d new ExerciseList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        exerciseList.addExercise(new Exercise(\"Push ups\", new Calorie(100), 1));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(1, exerciseList.getSize());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void addExerciseToNonEmptyList_validExercise_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ExerciseList exerciseList \u003d new ExerciseList(getTestExerciseList());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        exerciseList.addExercise(new Exercise(\"Push ups\", new Calorie(100), 1));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(4, exerciseList.getSize());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private ArrayList\u003cExercise\u003e getTestExerciseList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cExercise\u003e exerciseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        exerciseList.add(new Exercise(\"Crunches\", new Calorie(100), 1));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        exerciseList.add(new Exercise(\"Squats\", new Calorie(100), 2));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        exerciseList.add(new Exercise(\"Run\", new Calorie(300), 10));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return exerciseList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 31
    }
  },
  {
    "path": "src/test/java/seedu/duke/FoodListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class FoodListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void addFoodToEmptyList_validFood_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        FoodList foodList \u003d new FoodList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        foodList.addFood(new Food(\"Rice\", new Calorie(100), 1));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(1, foodList.getSize());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void addFoodToNonEmptyList_validFood_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        FoodList foodList \u003d new FoodList(getTestFoodList());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        foodList.addFood(new Food(\"Rice\", new Calorie(100), 1));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        assertEquals(4, foodList.getSize());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private ArrayList\u003cFood\u003e getTestFoodList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cFood\u003e foodList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        foodList.add(new Food(\"Meat\", new Calorie(100), 1));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        foodList.add(new Food(\"Fish\", new Calorie(100), 2));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        foodList.add(new Food(\"Noodles\", new Calorie(200), 1));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return foodList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 31
    }
  }
]
