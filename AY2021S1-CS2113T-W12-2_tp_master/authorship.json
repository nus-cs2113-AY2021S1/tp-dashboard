[
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wish2023"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Daniel | [Github](https://github.com/daniellimws) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wish2023"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Vishesh | [Github](https://github.com/wish2023) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wish2023"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Amanda | [Github](https://github.com/amanda-chua) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wish2023"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alston | [Github](https://github.com/alstontham) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wish2023"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Marcus | [Github](https://github.com/Kafcis) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alstontham": 1,
      "-": 4,
      "wish2023": 5
    }
  },
  {
    "path": "src/main/java/athena/Athena.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package athena;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.commands.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class Athena {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public Athena() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        Athena athena \u003d new Athena();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        athena.runProgram();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        Storage storage \u003d new Storage(\"save.csv\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        TaskList oldTask \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        oldTask \u003d storage.loadTaskListData();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        Command command \u003d parser.parse(\"add n/Assignment2 t/1100 d/16-09 D/2 r/Monday i/high a/Refer to lecture notes\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        command.execute(taskList, athena.ui);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        command \u003d parser.parse(\"add n/Assignment2 t/1100 d/16-09 D/2 r/Monday i/high a/Refer to lecture notes\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        command.execute(taskList, athena.ui);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        command \u003d parser.parse(\"list\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        command.execute(taskList, athena.ui);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        command \u003d parser.parse(\"help\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        command.execute(taskList, athena.ui);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        command \u003d parser.parse(\"list\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        command.execute(oldTask, athena.ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        storage.saveTaskListData(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void runProgram() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        // TODO: pass task as argument"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "//        ui.printTaskAdded();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "//        ui.printTaskDeleted();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "//        ui.printTaskDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "//        ui.printTaskEdited();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alstontham": 10,
      "Kafcis": 12,
      "amanda-chua": 1,
      "daniellimws": 23
    }
  },
  {
    "path": "src/main/java/athena/Importance.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "package athena;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wish2023"
        },
        "content": "public enum Importance {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    HIGH, MEDIUM, LOW;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wish2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wish2023": 5
    }
  },
  {
    "path": "src/main/java/athena/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "package athena;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.commands.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.commands.EditCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.commands.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.commands.HelpCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.commands.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " * Handles parsing of user input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public static final String COMMAND_WORD_DELIMITER \u003d \" \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public static final String NAME_DELIMITER \u003d \"n/\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public static final String TIME_DELIMITER \u003d \"t/\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public static final String DURATION_DELIMITER \u003d \"d/\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public static final String DEADLINE_DELIMITER \u003d \"D/\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public static final String RECURRENCE_DELIMITER \u003d \"r/\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public static final String IMPORTANCE_DELIMITER \u003d \"i/\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public static final String ADDITIONAL_NOTES_DELIMITER \u003d \"a/\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * Parses user input and recognises what type of command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * and parameters the user typed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param input String representing user input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @return new Command object based on what the user input is"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public static Command parse(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        String[] commandAndDetails \u003d input.split(COMMAND_WORD_DELIMITER, 2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        String commandType \u003d commandAndDetails[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String taskInfo \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (commandAndDetails.length \u003e 1)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            taskInfo \u003d commandAndDetails[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        int nPosition \u003d taskInfo.indexOf(NAME_DELIMITER);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        int tPosition \u003d taskInfo.indexOf(TIME_DELIMITER);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        int dPosition \u003d taskInfo.indexOf(DURATION_DELIMITER);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        int DPosition \u003d taskInfo.indexOf(DEADLINE_DELIMITER);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        int rPosition \u003d taskInfo.indexOf(RECURRENCE_DELIMITER);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        int iPosition \u003d taskInfo.indexOf(IMPORTANCE_DELIMITER);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        int aPosition \u003d taskInfo.indexOf(ADDITIONAL_NOTES_DELIMITER);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        if (commandType.equals(\"add\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String[] retrieveName \u003d taskInfo.split(NAME_DELIMITER, 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String retrievedName \u003d retrieveName[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String name;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            int nameNextSlash \u003d retrievedName.indexOf(\"/\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (nameNextSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                name \u003d retrievedName;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                name \u003d retrievedName.substring(0, (nameNextSlash - 2));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String[] retrieveTime \u003d taskInfo.split(TIME_DELIMITER, 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String retrievedTime \u003d retrieveTime[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String time;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            int timeNextSlash \u003d retrievedTime.indexOf(\"/\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (timeNextSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                time \u003d retrievedTime;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                time \u003d retrievedTime.substring(0, (timeNextSlash - 2));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String duration;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (dPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                duration \u003d \"1 hour\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String[] retrieveDuration \u003d taskInfo.split(DURATION_DELIMITER, 2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String retrievedDuration \u003d retrieveDuration[1];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                int durationNextSlash \u003d retrievedDuration.indexOf(\"/\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                if (durationNextSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    duration \u003d retrievedDuration;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    duration \u003d retrievedDuration.substring(0, (durationNextSlash - 2));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String deadline;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (DPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                deadline \u003d \"No deadline\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String[] retrieveDeadline \u003d taskInfo.split(DEADLINE_DELIMITER, 2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String retrievedDeadline \u003d retrieveDeadline[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                int deadlineNextSlash \u003d retrievedDeadline.indexOf(\"/\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                if (deadlineNextSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    deadline \u003d retrievedDeadline;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    deadline \u003d retrievedDeadline.substring(0, (deadlineNextSlash - 2));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String recurrence;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (rPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                recurrence \u003d \"Once-off, happening today\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String[] retrieveRecurrence \u003d taskInfo.split(RECURRENCE_DELIMITER, 2);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String retrievedRecurrence \u003d retrieveRecurrence[1];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                int recurrenceNextSlash \u003d retrievedRecurrence.indexOf(\"/\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                if (recurrenceNextSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    recurrence \u003d retrievedRecurrence;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    recurrence \u003d retrievedRecurrence.substring(0, (recurrenceNextSlash - 2));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String importance;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (iPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                importance \u003d \"medium\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String[] retrieveImportance \u003d taskInfo.split(IMPORTANCE_DELIMITER, 2);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String retrievedImportance \u003d retrieveImportance[1];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                int importanceNextSlash \u003d retrievedImportance.indexOf(\"/\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                if (importanceNextSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    importance \u003d retrievedImportance;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    importance \u003d retrievedImportance.substring(0, (importanceNextSlash - 2));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String notes;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (aPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                notes \u003d \"No notes\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String[] retrieveNotes \u003d taskInfo.split(ADDITIONAL_NOTES_DELIMITER, 2);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String retrievedNotes \u003d retrieveNotes[1];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                int notesNextSlash \u003d retrievedNotes.indexOf(\"/\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                if (notesNextSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    notes \u003d retrievedNotes;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    notes \u003d retrievedNotes.substring(0, (notesNextSlash - 2));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            command \u003d new AddCommand(name, time, duration, deadline, recurrence, importance, notes);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        } else if (commandType.equals(\"edit\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            int indexNextSlash \u003d taskInfo.indexOf(\"/\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            int index \u003d Integer.parseInt(taskInfo.substring(0, (indexNextSlash - 2)));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String name;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (nPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                name \u003d null;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String[] retrieveName \u003d taskInfo.split(NAME_DELIMITER, 2);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String retrievedName \u003d retrieveName[1];"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                int nameNextSlash \u003d retrievedName.indexOf(\"/\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                if (nameNextSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    name \u003d retrievedName;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    name \u003d retrievedName.substring(0, (nameNextSlash - 2));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String time;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (tPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                time \u003d null;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String[] retrieveTime \u003d taskInfo.split(TIME_DELIMITER, 2);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String retrievedTime \u003d retrieveTime[1];"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                int timeNextSlash \u003d retrievedTime.indexOf(\"/\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                if (timeNextSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    time \u003d retrievedTime;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    time \u003d retrievedTime.substring(0, (timeNextSlash - 2));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String duration;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (dPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                duration \u003d null;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String[] retrieveDuration \u003d taskInfo.split(DURATION_DELIMITER, 2);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String retrievedDuration \u003d retrieveDuration[1];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                int durationNextSlash \u003d retrievedDuration.indexOf(\"/\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                if (durationNextSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    duration \u003d retrievedDuration;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    duration \u003d retrievedDuration.substring(0, (durationNextSlash - 2));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String deadline;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (DPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                deadline \u003d null;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String[] retrieveDeadline \u003d taskInfo.split(DEADLINE_DELIMITER, 2);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String retrievedDeadline \u003d retrieveDeadline[1];"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                int deadlineNextSlash \u003d retrievedDeadline.indexOf(\"/\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                if (deadlineNextSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    deadline \u003d retrievedDeadline;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    deadline \u003d retrievedDeadline.substring(0, (deadlineNextSlash - 2));"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String recurrence;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (rPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                recurrence \u003d null;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String[] retrieveRecurrence \u003d taskInfo.split(RECURRENCE_DELIMITER, 2);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String retrievedRecurrence \u003d retrieveRecurrence[1];"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                int recurrenceNextSlash \u003d retrievedRecurrence.indexOf(\"/\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                if (recurrenceNextSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    recurrence \u003d retrievedRecurrence;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    recurrence \u003d retrievedRecurrence.substring(0, (recurrenceNextSlash - 2));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String importance;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (iPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                importance \u003d null;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String[] retrieveImportance \u003d taskInfo.split(IMPORTANCE_DELIMITER, 2);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String retrievedImportance \u003d retrieveImportance[1];"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                int importanceNextSlash \u003d retrievedImportance.indexOf(\"/\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                if (importanceNextSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    importance \u003d retrievedImportance;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    importance \u003d retrievedImportance.substring(0, (importanceNextSlash - 2));"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            String notes;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (aPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                notes \u003d null;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String[] retrieveNotes \u003d taskInfo.split(ADDITIONAL_NOTES_DELIMITER, 2);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String retrievedNotes \u003d retrieveNotes[1];"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                int notesNextSlash \u003d retrievedNotes.indexOf(\"/\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                if (notesNextSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    notes \u003d retrievedNotes;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    notes \u003d retrievedNotes.substring(0, (notesNextSlash - 2));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            command \u003d new EditCommand(index, name, time, duration, deadline, recurrence, importance, notes);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        } else if (commandType.equals(\"list\")) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            String importance \u003d \"\";"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (iPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                importance \u003d \"\";"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String[] retrieveImportance \u003d taskInfo.split(IMPORTANCE_DELIMITER, 2);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                String retrievedImportance \u003d retrieveImportance[1];"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                int importanceNextSlash \u003d retrievedImportance.indexOf(\"/\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                if (importanceNextSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    importance \u003d retrievedImportance;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                    importance \u003d retrievedImportance.substring(0, (importanceNextSlash - 2));"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            command \u003d new ListCommand(importance);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        } else if (commandType.equals(\"done\")) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(taskInfo);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            command \u003d new DoneCommand(taskIndex);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        } else if (commandType.equals(\"delete\")) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(taskInfo);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            command \u003d new DeleteCommand(taskIndex);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        } else if (commandType.equals(\"help\")) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            command \u003d new HelpCommand();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            if (commandType.equals(\"bye\")) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amanda-chua": 267,
      "daniellimws": 8
    }
  },
  {
    "path": "src/main/java/athena/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "package athena;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * methods needed from tasklist"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * Name"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * Time"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * Duration"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * Deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * Recurrence"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * Importance"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * Notes"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * Index"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * Restore"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * task and tasklist constructor"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * methods given to tasklist"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * saveTaskListData(index) if index -1 then save everything"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * loadTaskListData return taskList and highest index(-1 if no existing data)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * methods needed from Timetable"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * date"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * time"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * index"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * methods given to Timetable"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * saveTimetableData()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * loadTimetableData return timetable"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * methods given to UI"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * lastSaved"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * index"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * methods given to Parser"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     * ???"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    private int size;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        this.filePath \u003d filepath;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    public void saveTaskListData(TaskList tasks) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        this.tasks\u003dtasks;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "            FileWriter csvWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "            for(Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "                csvWriter.append(task.getName()+\",\"+task.getStartTime()+\",\"+task.getDuration()+\",\"+task.getDeadline()+\",\"+"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "                                task.getRecurrence()+\",\"+task.getImportance()+\",\"+task.getNotes()+\"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "            csvWriter.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    public TaskList loadTaskListData() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        File csvFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        TaskList output \u003d new TaskList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        if (csvFile.isFile()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "            String row;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "            BufferedReader csvReader \u003d null;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "                csvReader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "                while ((row \u003d csvReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "                    String[] data \u003d row.split(\",\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "                    output.addTask(data[0],data[1],data[2],data[3],data[4],data[5],data[6]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "                csvReader.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kafcis": 91
    }
  },
  {
    "path": "src/main/java/athena/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "package athena;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wish2023"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public static final String YES \u003d \"Y\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public static final String NO \u003d \"N\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private String startTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private String recurrence;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private String importance;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private String notes;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private String getStatus() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return (isDone ? YES : NO);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public Task(String name, String startTime, String duration, String deadline,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            String recurrence, String importance, String notes) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.recurrence \u003d recurrence;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.importance \u003d importance;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.notes \u003d notes;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Edits the features of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param name New task name"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param startTime New task start time"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param duration New task duration"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param deadline New task deadline"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param recurrence New task recurrence"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param importance New task importance"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param notes New task notes"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public void edit(String name, String startTime, String duration,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            String deadline, String recurrence, String importance, String notes) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        if (!name.equals(null)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        if (!startTime.equals(null)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        if (!duration.equals(null)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            this.duration \u003d duration;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        if (!deadline.equals(null)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        if (!recurrence.equals(null)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            this.recurrence \u003d recurrence;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        if (!importance.equals(null)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            this.importance \u003d importance;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        if (!notes.equals(null)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            this.notes \u003d notes;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Return the importance of the task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @return Importance of task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public String getImportance() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return importance;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @return Description of task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    public String getStartTime() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    public String getNotes() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        return notes;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    public String getRecurrence() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "        return recurrence;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kafcis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kafcis"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return getStatus() + \" \" + name + \" at \" + startTime +  \" finish by \" + deadline;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wish2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kafcis": 25,
      "wish2023": 100
    }
  },
  {
    "path": "src/main/java/athena/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "package athena;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wish2023"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wish2023"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public static final String NO_FILTER \u003d \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private ArrayList\u003cTask\u003e getFilteredTasks(String filter) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            if (task.getImportance().equals(filter)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                filteredTasks.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return filteredTasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private Task createTask(String name, String startTime,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                            String duration, String deadline, String recurrence, String importance, String notes) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        Task task \u003d new Task(name, startTime, duration,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                deadline, recurrence, importance, notes);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Returns size of the task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @return Size of the task list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Marks specified task as done."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Lets the user know specified task has been marked as done."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param taskNumber Position of task in task list"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @return Task marked as done"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public Task markTaskAsDone(int taskNumber) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        tasks.get(taskNumber).setDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return tasks.get(taskNumber);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param name Name of task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param startTime Start time of task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param duration Duration of task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param deadline Deadline of task"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param recurrence Recurrence of task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param importance Importance of task"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param notes Additional notes of task"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public void addTask(String name, String startTime, String duration,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                        String deadline, String recurrence, String importance, String notes) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        Task task \u003d createTask(name, startTime, duration, deadline, recurrence, importance, notes);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Returns the task description at the specified position in task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param index Position of task in the task list"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @return Task description"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public String getDescription(int index) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return tasks.get(index).toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Deletes the task at the specified position in the task list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param taskNumber Position of task in task list"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @return Task deleted"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public Task deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        Task taskToDelete \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return taskToDelete;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Edits a task in the task list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param taskNumber Index of task"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param name Name of task"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param startTime Start time of task"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param duration Duration of task"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param deadline Deadline of task"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param recurrence Recurrence of task"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param importance Importance of task"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param notes Additional notes of task"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public void editTask(int taskNumber, String name, String startTime, String duration,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                         String deadline, String recurrence, String importance, String notes) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        tasks.get(taskNumber).edit(name, startTime, duration,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                deadline, recurrence, importance, notes);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Returns a filtered task list based on importance."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param importanceFilter The filter that decides which tasks are printed"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @return Filtered task list"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public TaskList getFilteredList(String importanceFilter) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        if (importanceFilter.equals(NO_FILTER)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            TaskList filteredTasks \u003d new TaskList(getFilteredTasks(importanceFilter));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            return filteredTasks;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wish2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 4,
      "wish2023": 136
    }
  },
  {
    "path": "src/main/java/athena/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alstontham"
        },
        "content": "package athena;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alstontham"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alstontham"
        },
        "content": " * Represents all of the text that the user sees on the command line."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alstontham"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alstontham"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * Prints the first message that the user sees upon launching the application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"Hello! I\u0027m the Goddess of Wisdom and War, the mighty ATHENA!\\n\" + \"...\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"Okay okay I\u0027m not a Goddess but I am your Automated Timetable Helper Encourager n\u0027 Assistant!\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"What can I do? Are you challenging me to a duel?\\n\" + \"...\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"Oh you mean in terms of tasks? Just type \\\"help\\\" to witness my mighty repertoire!\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"So, what would you like to do today?\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * Prints out a message verifying which task the user has added to their list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskName The name of the task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskStartTime When the task is scheduled to start"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskDuration How long the task will last for"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskDeadline When the task is due"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskRecurrence When will the task repeat"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskImportance What is the importance of the task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskNotes Any additional notes the user has added to the task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void printTaskAdded(String taskName, String taskStartTime, String taskDuration, String taskDeadline,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                               String taskRecurrence, String taskImportance, String taskNotes) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"You\u0027ve successfully added \" + taskName + \" to your list!\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"It will start at \" + taskStartTime + \" and finish on \" + taskDeadline + \".\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"You should spend a total of \" + taskDuration + \" hours on it.\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"It is set to happen \" + taskRecurrence + \" and has an importance of \" + taskImportance + \".\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"Additionally, you\u0027ve also added these additional notes!\\n\" + taskNotes + \".\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"Looks like another mission to complete! Let\u0027s do it!\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * Lists out the the tasks that the user has added."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"Here\u0027s your list of monsters you\u0027ve been tasked to eliminate!\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alstontham"
        },
        "content": "            System.out.println((i + 1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * Prints out a message verifying that the task the user specified has been marked as done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param task The task that the user marked as done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void printTaskDone(Task task) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"A job well done! I\u0027ve slayed the-- I mean, marked the task \" + task + \"as complete!\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * Prints out a message verifying that the task the user specified has been edited, and shows the user the"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * new task details."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskIndex The index of the task on the task list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskName The name of the task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskStartTime When the task is scheduled to start"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskDuration How long the task will last for"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskDeadline When the task is due"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskRecurrence When will the task repeat"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskImportance What is the importance of the task"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param taskNotes Any additional notes the user has added to the task"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void printTaskEdited(int taskIndex, String taskName, String taskStartTime, String taskDuration,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                                String taskDeadline, String taskRecurrence, String taskImportance, String taskNotes) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"You\u0027ve changed the details of task number \" + taskIndex + \": \" + taskName + \"?\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"Here are the new details of your task!\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"Start Time: \" + taskStartTime + \"\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"Duration: \" + taskDuration + \"\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"Due Date: \" + taskDeadline + \"\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"Recurrence: \" + taskRecurrence + \"\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"Importance: \" + taskImportance + \"\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"Additional Notes: \" + taskNotes + \"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"The mistakes of the past have been vanquished!\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * Prints out a message verifying that the task the user specified has been deleted."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * @param task The task that the user has deleted."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void printTaskDeleted(Task task) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"Are we pretending the task \" + task + \" never existed? Very well...\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * Prints out a help menu of all available tasks that ATHENA is able to do."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void printHelp() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"Not sure of what I\u0027m capable of doing? Well here\u0027s a list just for you!\\n\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"To add a task (parameters in square brackets are optional fields):\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"add n/NAME t/TIME [d/DURATION] [D/DEADLINE] [r/RECURRENCE] [i/IMPORTANCE] [a/ADDITIONAL-NOTES]\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"e.g. add n/Assignment1 t/1100 d/16/09 D/2 r/Monday i/high a/Refer to lecture notes\\n\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"To list your current tasks:\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"list f/FORECAST i/IMPORTANCE\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"e.g. list f/WEEK i/medium\\n\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"To mark a task as done:\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"done INDEX\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"e.g. done 2\\n\\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"To edit a task (parameters in square brackets are optional fields):\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"edit INDEX [n/NAME] [t/TIME] [d/DURATION] [D/DEADLINE] [r/RECURRENCE] [i/IMPORTANCE]\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"[a/ADDITIONAL-NOTES]\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"e.g. edit 2 n/Assignment1 t/1100 d/16/09 D/2 r/Monday i/high a/Refer to lecture notes\\n\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"To delete a task:\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"delete INDEX\\n\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"e.g. delete 2\\n\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"To say farewell to me, ATHENA:\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"exit\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alstontham"
        },
        "content": "                + \"But why would you want to leave me anyways? Hmph.\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     * Prints a message when the user chooses to exit the program."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alstontham"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alstontham"
        },
        "content": "        System.out.println(\"Going so soon? Well I\u0027ll be here the next time you need me. Farewell!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    //message that is printed out while awaiting the next command"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void nextCommandPrompt() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void printTimetable(Timetable timetable) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    //access from Parser"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void lastSaved() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void successMessage() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    //will have many of these, depending on how many types of errors we have"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    public void errorMessage() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "alstontham"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "alstontham"
        },
        "content": "    */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "alstontham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alstontham": 152,
      "daniellimws": 2
    }
  },
  {
    "path": "src/main/java/athena/commands/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "package athena.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " * Handles adding tasks to the Tasks list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private String taskStartTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private String taskDuration;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private String taskDeadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private String taskRecurrence;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private String taskImportance;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private String taskNotes;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public AddCommand(String name, String startTime, String duration, String deadline,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                      String recurrence, String importance, String notes) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskName \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskStartTime \u003d startTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskDuration \u003d duration;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskDeadline \u003d deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskRecurrence \u003d recurrence;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskImportance \u003d importance;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskNotes \u003d notes;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * Adds a task to the Tasks list and"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * calls Ui to print out the task added."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param taskList Tasks List"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param ui       Ui"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskList.addTask(taskName, taskStartTime, taskDuration, taskDeadline,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                taskRecurrence, taskImportance, taskNotes);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        ui.printTaskAdded(taskName, taskStartTime, taskDuration, taskDeadline,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                taskRecurrence, taskImportance, taskNotes);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amanda-chua": 44
    }
  },
  {
    "path": "src/main/java/athena/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "package athena.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " * Abstract Command class for Command objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * For Commands execution."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param taskList Tasks List"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param ui       Ui"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amanda-chua": 26,
      "daniellimws": 1
    }
  },
  {
    "path": "src/main/java/athena/commands/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "package athena.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " * Handles the delete command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private int deleteIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        deleteIndex \u003d index - 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * Deletes a task from the Tasks list and"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * calls Ui to print task deleted."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param taskList Tasks List"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param ui       Ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        Task taskDeleted \u003d taskList.deleteTask(deleteIndex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        ui.printTaskDeleted(taskDeleted);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amanda-chua": 29
    }
  },
  {
    "path": "src/main/java/athena/commands/DoneCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "package athena.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " * Handles the done command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private int doneIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        doneIndex \u003d index - 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * Marks a task as done from the Tasks list and"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * calls Ui to print task marked as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param taskList Tasks List"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param ui       Ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        Task taskDone \u003d taskList.markTaskAsDone(doneIndex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        ui.printTaskDone(taskDone);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amanda-chua": 29
    }
  },
  {
    "path": "src/main/java/athena/commands/EditCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "package athena.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private String taskStartTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private String taskDuration;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private String taskDeadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private String taskRecurrence;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private String taskImportance;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private String taskNotes;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public EditCommand(int index, String name, String startTime, String duration, String deadline,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                       String recurrence, String importance, String notes) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskIndex \u003d index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskName \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskStartTime \u003d startTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskDuration \u003d duration;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskDeadline \u003d deadline;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskRecurrence \u003d recurrence;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskImportance \u003d importance;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskNotes \u003d notes;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * Edits a task from the Tasks list and"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * calls Ui to print task edited."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param taskList Tasks List"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param ui       Ui"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskList.editTask(taskIndex, taskName, taskStartTime, taskDuration, taskDeadline,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                taskRecurrence, taskImportance, taskNotes);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        ui.printTaskEdited(taskIndex, taskName, taskStartTime, taskDuration, taskDeadline,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "                taskRecurrence, taskImportance, taskNotes);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amanda-chua": 42
    }
  },
  {
    "path": "src/main/java/athena/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "package athena.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " * Handles the exit command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * Calls Ui to print exit message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param taskList Tasks List"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param ui       Ui"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amanda-chua": 26
    }
  },
  {
    "path": "src/main/java/athena/commands/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "package athena.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " * Handles the help command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * Calls Ui to print help output."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param taskList Tasks List"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param ui       Ui"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        ui.printHelp();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amanda-chua": 21
    }
  },
  {
    "path": "src/main/java/athena/commands/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "package athena.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "import athena.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " * Handles the list command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    private String taskImportance;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public ListCommand(String importance) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        taskImportance \u003d importance;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * Calls TaskList to filter the list based on importance and"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * calls Ui to print the list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param taskList Tasks List"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     * @param ui       Ui"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        TaskList tasksFiltered \u003d taskList.getFilteredList(taskImportance);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "        ui.printList(tasksFiltered.getTasks());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amanda-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amanda-chua": 28
    }
  },
  {
    "path": "src/main/java/athena/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package athena.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String recurrence;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 5
    }
  },
  {
    "path": "src/main/java/athena/task/taskfilter/TaskFilter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package athena.task.taskfilter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import athena.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " * Contains information about how to filter a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " * This is used by athena.timetable.Timetable to filter out"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " * tasks based on the user\u0027s request."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public abstract class TaskFilter {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Should be overridden by children classes to filter a task based on certain"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * criteria."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param task Task to check."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @return Whether the task should be included."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public abstract boolean filterTask(Task task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 19
    }
  },
  {
    "path": "src/main/java/athena/tasklist/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package athena.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import athena.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 16
    }
  },
  {
    "path": "src/main/java/athena/timetable/Timetable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package athena.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import athena.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import athena.task.taskfilter.TaskFilter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import athena.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " * Takes a TaskList to generate a timetable for the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class Timetable {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private ArrayList\u003cTimetableDay\u003e timetableDays;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public Timetable(TaskList taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        populateTimetable();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Populates the timetable, represented by a list of TimetableDays with the information from the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * For this version, we only populate the timetable with the tasks for this week (starting from Monday)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private void populateTimetable() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.timetableDays \u003d new ArrayList\u003cTimetableDay\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        TreeMap\u003cLocalDate, TimetableDay\u003e timetableDayMap \u003d new TreeMap\u003cLocalDate, TimetableDay\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM HHmm\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(task.recurrence, formatter);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            TimetableDay timetableDay;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            if (timetableDayMap.containsKey(date)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                timetableDay \u003d timetableDayMap.get(date);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                timetableDay \u003d new TimetableDay(date);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                timetableDayMap.put(date, timetableDay);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            timetableDay.addTask(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        for (LocalDate key : timetableDayMap.keySet()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            timetableDays.add(timetableDayMap.get(key));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Gets the timetable for this week (starting from Monday)."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @return A list of TimetableDay objects representing the timetable for this week."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public ArrayList\u003cTimetableDay\u003e getTimetable() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return timetableDays;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Gets a list of tasks based on the user\u0027s requested filter."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * The tasks will be categorized by their dates using the TimetableDay class."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * For days without any tasks, a TimetableDay with an empty TaskList"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * will be returned."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param taskFilters Criteria to filter the list of tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @return A list of tasks stored in TimetableDay objects."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public ArrayList\u003cTimetableDay\u003e getTasksByFilters(ArrayList\u003cTaskFilter\u003e taskFilters) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        // TODO: Implement this"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return timetableDays;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 80
    }
  },
  {
    "path": "src/main/java/athena/timetable/TimetableDay.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package athena.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import athena.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import athena.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " * Represents a day in the timetable."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " * Contains the date and the list of tasks, which is a subset of all the tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " * that the user registered into the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class TimetableDay {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Initializes the object with the date and an empty task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param date Date represented by this object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public TimetableDay(LocalDate date) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Initializes the object with the date and a task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param date     Date represented by this object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param taskList Task list for this day."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public TimetableDay(LocalDate date, TaskList taskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Generates a string containing the date and list of tasks that is to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * be printed to the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @return A string containing the date and list of tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        // TODO: Generate a string containing the date and the tasks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 59
    }
  }
]
