[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    mainClassName \u003d \"seedu.duke.SmartHomeBot\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "-": 45
    }
  },
  {
    "path": "data/SmartHomeBot.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "[bedroom1]"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "bedroom1|light1|25|Light|On|0.1958333333333333"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 2
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ang Cheng Jun | [Github](https://github.com/Ang-Cheng-Jun) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Leon Low | [Github](https://github.com/leonlowzd) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ong Zong Xian | [Github](https://github.com/zongxian-ctrl) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Lee Wei | [Github](https://github.com/TanLeeWei) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "![](https://avatars2.githubusercontent.com/u/20167103?s\u003d460\u0026u\u003db903579ff2842a203c2d4f21e2eefe9b58f83c4f\u0026v\u003d4) | Yang Fan | [Github](https://github.com/fanceso) | [Portfolio](docs/team/yangfan.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "-": 4,
      "zongxian-ctrl": 4,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/EmptyParameterException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class EmptyParameterException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zongxian-ctrl": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.CreateCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.commands.HelpCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.InvalidCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.commands.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.commands.OffCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.commands.OnCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.RemoveCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.duke.commands.UsageCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static Command parseCommand(String userInput) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String[] words \u003d userInput.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String commandWord \u003d words[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String arguments \u003d userInput.replaceFirst(commandWord, \"\").trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            switch (commandWord) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case CreateCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return new CreateCommand(arguments);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case RemoveCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return new RemoveCommand(arguments);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return prepareAddCommand(arguments);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return new DeleteCommand(arguments);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            case OnCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return new OnCommand(arguments);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            case OffCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return new OffCommand(arguments);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return prepareListCommand(arguments);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            case UsageCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                return new UsageCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return new InvalidCommand(\"Invalid Command Format\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (EmptyParameterException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new InvalidCommand(\"The parameter of \" + commandWord + \" cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private static Command prepareAddCommand(String arguments) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        int indexLocation \u003d arguments.indexOf(\"l/\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        int indexPower \u003d arguments.indexOf(\"w/\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        int indexType \u003d arguments.indexOf(\"t/\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String location;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String power;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (indexLocation \u003c indexPower \u0026\u0026 indexPower \u003c indexType) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            name \u003d arguments.substring(0, indexLocation).trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            location \u003d arguments.substring(indexLocation + 2, indexPower).trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            power \u003d arguments.substring(indexPower + 2, indexType).trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            type \u003d arguments.substring(indexType + 2).toLowerCase().trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new InvalidCommand(\"Please follow order of AddCommand\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (powerIsNumeric(power)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return new AddCommand(name, location, power, type);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return new InvalidCommand(\"Power is not in number\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private static Command prepareListCommand(String arguments) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (arguments.equals(\"appliance\") || arguments.equals(\"location\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new ListCommand(arguments);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new InvalidCommand(\"Please enter either \u0027list appliance\u0027 or \u0027list location\u0027\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static boolean powerIsNumeric(String power) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            Double.parseDouble(power);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            System.out.println(\"Please enter a numerical value for power.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 17,
      "zongxian-ctrl": 62,
      "fanceso": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/SmartHomeBot.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.duke.data.ApplianceList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.duke.data.HomeLocations;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.duke.storage.StorageFile;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " * Entry point of the SmartHome application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class SmartHomeBot {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private ApplianceList appliances \u003d new ApplianceList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private HomeLocations homeLocations \u003d new HomeLocations();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private StorageFile storage \u003d new StorageFile(appliances, homeLocations);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        new SmartHomeBot().run();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /** Runs the program until termination. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Initialise the import of data from the text file,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * and prints the welcome message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.ui \u003d new TextUi();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        storage.readFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /** Prints the Goodbye message and exits. */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        ui.showGoodByeMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /** Reads the user command and executes it, until the user issues the bye command. */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            String userCommandText \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            command \u003d new Parser().parseCommand(userCommandText);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            command.setData(appliances, homeLocations);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            storage.writeToFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        } while (!ExitCommand.isExit(command));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 53,
      "TanLeeWei": 4,
      "fanceso": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.data.type.AirConditioner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.data.type.Fan;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.data.type.Lights;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.data.type.WaterHeater;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            + \": Adds a new appliance to the particular location to the SmartHomeBot. \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \"Parameters: add NAME l/LOCATION w/WATTS t/TYPE_OF_APPLIANCE \\n\" + \"Example: \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + COMMAND_WORD + \" Fan1 l/Bedroom 1 w/50 t/Fan\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String location;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private final String power;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public AddCommand(String name, String location, String power, String type) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.power \u003d power;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (homeLocationsList.isLocationCreated(location)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            switch (type.toLowerCase()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case Fan.TYPE_WORD:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                Fan fan \u003d new Fan(name, location, power);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                appliances.addAppliance(fan);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case AirConditioner.TYPE_WORD:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                AirConditioner ac \u003d new AirConditioner(name, location, power);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                appliances.addAppliance(ac);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case Lights.TYPE_WORD:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                Lights light \u003d new Lights(name, location, power);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                appliances.addAppliance(light);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case WaterHeater.TYPE_WORD:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                WaterHeater waterheater \u003d new WaterHeater(name, location, power);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                appliances.addAppliance(waterheater);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                System.out.println(\"Type Entered does not exist.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            System.out.println(\"Location does not exist.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 1,
      "zongxian-ctrl": 46,
      "fanceso": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.data.ApplianceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.data.HomeLocations;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    protected ApplianceList appliances;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    protected HomeLocations homeLocationsList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void setData(ApplianceList appliances, HomeLocations homeLocations) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.appliances \u003d appliances;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.homeLocationsList \u003d homeLocations;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zongxian-ctrl": 23
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/CreateCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.EmptyParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class CreateCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"create\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \": Creates a new location in SmartHomeBot\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Parameters: l/LOCATION\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \" l/Bedroom 1\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String usersEnteredLocation;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public CreateCommand(String location) throws EmptyParameterException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (location.isEmpty()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            throw new EmptyParameterException();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.usersEnteredLocation \u003d location;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (!homeLocationsList.isLocationCreated(usersEnteredLocation)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            homeLocationsList.addLocation(usersEnteredLocation);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            System.out.println(\"Location already exist\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 5,
      "zongxian-ctrl": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.EmptyParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \": Delete the existing appliance by its indicated INDEX that has been added to SmartHomeBot\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Parameters: INDEX\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \" 1\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String userEnteredName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public DeleteCommand(String name) throws EmptyParameterException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            throw new EmptyParameterException();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.userEnteredName \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        for (int i \u003d 0; i \u003c appliances.getAllAppliance().size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            if (appliances.getAppliance(i).getName().equals(userEnteredName)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                appliances.removeAppliance(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        System.out.println(userEnteredName + \" does not exist.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 5,
      "zongxian-ctrl": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return command instanceof ExitCommand; // instanceof returns false if it is null"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \": Shows program usage instructions.\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String line \u003d \"-------------------------------------------------------\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                line + \"\\n\" + HelpCommand.MESSAGE_USAGE + \"\\n\" + line"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                        + \"\\n\" + CreateCommand.MESSAGE_USAGE + \"\\n\" + line"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                        + \"\\n\" + RemoveCommand.MESSAGE_USAGE + \"\\n\" + line"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                        + \"\\n\" + AddCommand.MESSAGE_USAGE + \"\\n\" + line"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                        + \"\\n\" + DeleteCommand.MESSAGE_USAGE + \"\\n\" + line"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                        + \"\\n\" + OnCommand.MESSAGE_USAGE + \"\\n\" + line"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                        + \"\\n\" + OffCommand.MESSAGE_USAGE + \"\\n\" + line"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                        + \"\\n\" + ListCommand.MESSAGE_USAGE + \"\\n\" + line"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                        + \"\\n\" + ExitCommand.MESSAGE_USAGE + \"\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/InvalidCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public InvalidCommand(String feedbackToUser) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        System.out.print(this.feedbackToUser + \"\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \": Display all the appliances that have been added to SmartHomeBot \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String parameter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private static final String APPLIANCE_TYPE \u003d \"appliance\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private static final String LOCATION_TYPE \u003d \"location\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public ListCommand(String arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parameter \u003d arguments;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (parameter.equals(LOCATION_TYPE)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            if (homeLocationsList.getLocations().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                System.out.println(\"There is currently no locations in the list\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            System.out.println(\"Here are the location you have entered.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            for (String location : homeLocationsList.getLocations()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                System.out.println(index + \": \" + location);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } else if (parameter.equals(APPLIANCE_TYPE)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            if (appliances.getAllAppliance().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                System.out.println(\"There is currently no appliances in the list\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            System.out.println(\"Here are the appliances in your list.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            for (Appliance a : appliances.getAllAppliance()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                System.out.println(index + \": \" + a.getName() + \" | Location: \" + a.getLocation() + \" | Status: \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                        + a.getStatus() + \" | Watt: \" + a.getPower() + \" | Type: \" + a.getType());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 20,
      "zongxian-ctrl": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/OffCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.EmptyParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class OffCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"off\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \": Turns off specified appliance by its indicated name \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Parameters: n/NAME\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \" n/Fan 1\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public OffCommand(String name) throws EmptyParameterException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            throw new EmptyParameterException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        for (Appliance i : appliances.getAllAppliance()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            if (i.getName().equals((this.name))) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                i.switchOff();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                System.out.println(this.name + \": OFF\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        System.out.println(name + \" does not exist.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 28,
      "zongxian-ctrl": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/OnCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.EmptyParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class OnCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"on\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \": Turns on the specified appliance, user might have to input  additional \""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"parameter in accordance to the type of appliance\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Parameters: n/NAME t/TYPE_OF_APPLIANCE [p/ANY_PARAMETER_REQUIRED]\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \" n/Aircon 1 t/Air Conditioner p/25\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public OnCommand(String name) throws EmptyParameterException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            throw new EmptyParameterException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        for (Appliance i : appliances.getAllAppliance()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            if (i.getName().equals((this.name))) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                i.switchOn();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                System.out.println(this.name + \": ON\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        System.out.println(name + \" does not exist.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 29,
      "zongxian-ctrl": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/RemoveCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.EmptyParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class RemoveCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"remove\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \": Remove the location and all the appliances in that location.\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Parameters: l/LOCATION\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \" l/Bedroom 1\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String usersEnteredLocation;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public RemoveCommand(String location) throws EmptyParameterException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (location.isEmpty()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            throw new EmptyParameterException();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.usersEnteredLocation \u003d location;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        for (int x \u003d appliances.getAllAppliance().size() - 1; x \u003e\u003d 0; x--) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            if (appliances.getAppliance(x).getLocation().equals(usersEnteredLocation)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                appliances.removeAppliance(x);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        homeLocationsList.removeLocation(usersEnteredLocation);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 5,
      "zongxian-ctrl": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/UsageCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class UsageCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"usage\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        double totalUsage \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        for (int i \u003d 0; i \u003c appliances.getAllAppliance().size(); i++) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            String applianceName \u003d appliances.getAppliance(i).getName();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            double appliancePower \u003d appliances.getAppliance(i).measureConsumption();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            System.out.format(applianceName + \" Consumed Power: %.2f kWh \\n\", appliancePower);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            totalUsage +\u003d appliancePower;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            System.out.println(\"--------------------------------------------------------------\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        System.out.format(\"Total power consumption: %.2f kWh \\n\", totalUsage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/ApplianceList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class ApplianceList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static ArrayList\u003cAppliance\u003e appliances;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public ApplianceList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        appliances \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void addAppliance(Appliance appliance) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        appliances.add(appliance);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void removeAppliance(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        appliances.remove(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Appliance getAppliance(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return appliances.get(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public ArrayList\u003cAppliance\u003e getAllAppliance() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return appliances;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void setAppliance(int index, Appliance appliance) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        appliances.set(index, appliance);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/HomeLocations.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class HomeLocations {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private ArrayList\u003cString\u003e locations \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Creating new location if is not existed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param location used to be added into the location list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void addLocation(String location) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        // create location from Appliance"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (!isLocationCreated(location)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            this.locations.add(location);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            // Will be replaced with throwing an exception"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            System.out.println(\"Existing Location has been added\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Removing selected location with user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param location used to be removed from the location list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void removeLocation(String location) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        int removeIndex \u003d -1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        int locationIndex \u003d 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        for (String l : locations) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (l.equals(location)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                removeIndex \u003d locationIndex;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                locationIndex++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        locations.remove(removeIndex);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public ArrayList\u003cString\u003e getLocations() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return locations;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        for (String l : locations) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            sb.append(l);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Returns true if location string is not found."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param location used to identify the display index"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return isValid true if location is not found in list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public boolean isLocationCreated(String location) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        boolean isValid \u003d false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        for (String l : locations) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (l.equals(location)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                isValid \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return isValid;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zongxian-ctrl": 2,
      "fanceso": 73
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/framework/Appliance.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.duke.data.framework;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public abstract class Appliance {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String location;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    protected String power;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private String status;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private Power appliancePower;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Appliance(String name, String location, String power) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.status \u003d \"Off\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.power \u003d power;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        appliancePower \u003d new Power(power);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void switchOn() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        appliancePower.onAppliance();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void switchOff() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        appliancePower.offAppliance();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (appliancePower.getStatus()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            this.status \u003d \"On\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            this.status \u003d \"Off\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return this.status;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String getStringPower() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return power;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public double measureConsumption() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return appliancePower.getPower();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String getPowerConsumption() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return appliancePower.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void updatePowerConsumption(String powerConsumption) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        appliancePower.computeFromFile(Double.parseDouble(powerConsumption));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public String getPower() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return this.power;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getLocation() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.location;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return this.name + \": \" + getStatus();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 32,
      "Ang-Cheng-Jun": 3,
      "TanLeeWei": 12,
      "fanceso": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/framework/Power.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.duke.data.framework;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class Power {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private final int power;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy | HH:mm:ss\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    LocalDateTime currentTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private String offTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private String onTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private double powerUsed;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private double totalHours;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private Boolean status;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private double totalPowerConsumption;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Power(String power) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.power \u003d Integer.parseInt(power);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.status \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        totalPowerConsumption \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        totalHours \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Appliance only can be switched on if it was \u0027off\u0027 previously."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void onAppliance() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (!status) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            status \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            onTime \u003d getCurrentTime();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            //Testing"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            System.out.println(\"On at : \" + onTime);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            System.out.println(\"The appliance remains its status. \" + status);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void offAppliance() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (status) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            status \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            offTime \u003d getCurrentTime();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            //Testing"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            System.out.println(\"Off at : \" + offTime);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                calculateTimeUsed();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            System.out.println(\"The appliance remains its status. \" + status);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Gets the system current time."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return currentTime in string with the format defined"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private String getCurrentTime() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        currentTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return dateTimeFormatter.format(currentTime);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private void calculateTimeUsed() throws ParseException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        SimpleDateFormat timeFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy | HH:mm:ss\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Date onTimeValue;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Date offTimeValue;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        double timeUsed;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (onTime !\u003d null) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            onTimeValue \u003d timeFormat.parse(onTime);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (!this.status) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                offTimeValue \u003d timeFormat.parse(offTime);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                timeUsed \u003d offTimeValue.getTime() - onTimeValue.getTime();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                onTime \u003d offTime;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                Date currentUsedTime \u003d timeFormat.parse(getCurrentTime());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                timeUsed \u003d currentUsedTime.getTime() - onTimeValue.getTime();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                onTime \u003d getCurrentTime();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            timeUsed \u003d 0;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        // For simulation purpose, 1 second in System equals to 1 hour in SmartHomeBot"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        // Convert back to hours timeDifference/(1000 * 60 * 60)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        totalHours \u003d timeUsed / (1000 * 6);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        System.out.format(\"Hours used: %.2f \\n\", totalHours);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private void calculatePowerConsumed() throws ParseException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        calculateTimeUsed();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        powerUsed \u003d totalHours * power / 1000.00;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        totalPowerConsumption +\u003d powerUsed;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        System.out.format(\"Power used: %.2f kWh at that instance.\\n\", powerUsed);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Boolean getStatus() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return this.status;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public double getPower() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            calculatePowerConsumed();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return this.totalPowerConsumption;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void computeFromFile(double powerComsumption) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        powerUsed \u003d powerComsumption;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        totalPowerConsumption +\u003d powerUsed;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return String.valueOf(this.totalPowerConsumption);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 9,
      "fanceso": 116
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/type/AirConditioner.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.duke.data.type;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class AirConditioner extends Appliance {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String TYPE_WORD \u003d \"airconditioner\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String temperature;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public AirConditioner(String name, String location, String power) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(name, location, power);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.temperature \u003d \"25\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String getTemperature() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.temperature;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void setTemperature(String temperature) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.temperature \u003d temperature;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"AirConditioner\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 28,
      "zongxian-ctrl": 1,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/type/Fan.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.duke.data.type;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Fan extends Appliance {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String speed;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String TYPE_WORD \u003d \"fan\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Fan(String name, String location, String power) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(name, location, power);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        speed \u003d \"1\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"Fan\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private void setSpeed(String speed) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        Fan.speed \u003d speed;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 21,
      "zongxian-ctrl": 1,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/type/Lights.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.duke.data.type;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Lights extends Appliance {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String TYPE_WORD \u003d \"light\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Lights(String name, String location, String power) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(name, location, power);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"Light\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 18,
      "zongxian-ctrl": 2,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/type/WaterHeater.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.duke.data.type;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class WaterHeater extends Appliance {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String TYPE_WORD \u003d \"waterheater\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String temperature;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public WaterHeater(String name, String location, String power) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(name, location, power);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.temperature \u003d \"40\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private void setTemperature(String temperature) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.temperature \u003d temperature;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"WaterHeater\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private void setTimer(String duration) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 24,
      "zongxian-ctrl": 2,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/type/actuators/Actuators.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.duke.data.type.actuators;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "abstract class Actuators extends Appliance {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Actuators(String name, String location, String power) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(name, location, power);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 13,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/type/actuators/Curtains.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.duke.data.type.actuators;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Curtains extends Actuators {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Curtains(String name, String location, String power) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(name, location, power);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"Curtain\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 11,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/type/actuators/Doors.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.duke.data.type.actuators;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Doors extends Actuators {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Doors(String name, String location, String power) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(name, location, power);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"Doors\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 12,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/StorageFile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.EmptyParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.duke.commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.duke.commands.CreateCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.duke.data.ApplianceList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.duke.data.HomeLocations;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.duke.data.framework.Power;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class StorageFile {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private static String filePath \u003d \"data/SmartHomeBot.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private static ApplianceList appliances;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private static HomeLocations homeLocations;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public StorageFile(ApplianceList appliances, HomeLocations homeLocations) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.homeLocations \u003d homeLocations;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.appliances \u003d appliances;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static void writeToFile() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            createFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            clearFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            myWriter.write(homeLocations.getLocations().toString() + \"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            for (int i \u003d 0; i \u003c appliances.getAllAppliance().size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                myWriter.write(appliances.getAppliance(i).getLocation()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                        + \"|\" + appliances.getAppliance(i).getName()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                        + \"|\" + appliances.getAppliance(i).getStringPower()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                        + \"|\" + appliances.getAppliance(i).getType()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                        + \"|\" + appliances.getAppliance(i).getStatus()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                        + \"|\" + appliances.getAppliance(i).getPowerConsumption() + \"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"An error occur\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static void readFile() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            int i \u003d 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            File myFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            Scanner myReader \u003d new Scanner(myFile);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            String file \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            int start \u003d file.indexOf(\"[\") + 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            int end \u003d file.indexOf(\"]\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            String when \u003d file.substring(start, end);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            String[] stringSplit \u003d when.split(\",\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            for (int j \u003d 0; j \u003c stringSplit.length; j++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                Command newLocation \u003d new CreateCommand(stringSplit[j].trim());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                newLocation.setData(appliances, homeLocations);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                newLocation.execute();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                file \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                String[] splitString \u003d file.split(\"\\\\|\", 7);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                Command abc \u003d new AddCommand(splitString[1], splitString[0], splitString[2], splitString[3]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                abc.setData(appliances, homeLocations);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                abc.execute();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                appliances.getAppliance(i).updatePowerConsumption(splitString[5]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                if (splitString[4].toLowerCase().equals(\"on\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    appliances.getAppliance(i).switchOn();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            myReader.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"Load File Does not Exist. No contents will be loaded.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (EmptyParameterException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            System.out.println(\"Null location found in save file.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static void createFile() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            File myObj \u003d new File(filePath);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            if (!myObj.getParentFile().exists()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                myObj.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            if (myObj.exists()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                myObj.createNewFile();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"An error occured\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static void clearFile() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            PrintWriter writer \u003d new PrintWriter(filePath);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            writer.print(\"\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"File is empty\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 108,
      "zongxian-ctrl": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/TextUi.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String MESSAGE_WELCOME \u003d \"Welcome to your SmartHomeBot V1.0!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String MESSAGE_GOODBYE \u003d \"Good bye!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /** Format of a comment input line. Comment lines are silently consumed when reading user input. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String COMMENT_LINE_FORMAT_REGEX \u003d \"#.*\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static Scanner in;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static PrintStream out;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public TextUi(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Returns true if the user input line should be ignored."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Input should be ignored if it is parsed as a comment, is only whitespace, or is empty."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @param rawInputLine full raw user input line."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @return true if the entire user input line should be ignored."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private boolean shouldIgnore(String rawInputLine) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return rawInputLine.trim().isEmpty() || isCommentLine(rawInputLine);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Returns true if the user input line is a comment line."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @param rawInputLine full raw user input line."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @return true if input line is a comment."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private boolean isCommentLine(String rawInputLine) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return rawInputLine.trim().matches(COMMENT_LINE_FORMAT_REGEX);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Prompts for the command and reads the text entered by the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @return command (full line) entered by the user"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        out.print(\"Enter command: \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        String fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        while (shouldIgnore(fullInputLine)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return fullInputLine.trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        showToUser(MESSAGE_WELCOME);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Generates and prints the Goodbye message upon the end of the application."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void showGoodByeMessage() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        showToUser(MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Shows message(s) to the user."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static void showToUser(String message) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        out.println(message);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Print a divider."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static void printDivider() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        showToUser(DIVIDER);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 93
    }
  },
  {
    "path": "src/test/java/seedu/duke/SmartHomeBotTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "class SmartHomeBotTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "-": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "##########################################################"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "# test exit command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "##########################################################"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  # exits properly"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  exit"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 5
    }
  }
]
