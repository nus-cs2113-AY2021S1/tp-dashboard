[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "# \u003cimg src\u003d\"docs/images/smarthomebot-logo.png\" width\u003d\"50\"\u003e SmartHomeBot "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "SmartHomeBot is a desktop application that consolidates all home appliances control into a centralized system via a Command Line Interface (CLI). Users can switch on or off appliances using this application and record electricity usage; having a clearer picture of their electrical usage patterns. SmartHomeBot has an auto-save feature that will automatically save all the appliances\u0027 data and export it to a text file. Upon the start of the [application](https://github.com/AY2021S1-CS2113-T14-1/tp/releases/latest), it will import the data from the text file and loads the appliances\u0027 data back."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "[\u003cimg src\u003d\"docs/images/findoutmore.png\"\u003e](https://ay2021s1-cs2113-t14-1.github.io/tp/)"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "zongxian-ctrl": 1,
      "fanceso": 2
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    compile group: \u0027org.apache.commons\u0027, name: \u0027commons-lang3\u0027, version: \u00273.11\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    mainClassName \u003d \"seedu.smarthomebot.Main\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    archiveBaseName \u003d \"SmartHomeBot\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "-": 43,
      "zongxian-ctrl": 1,
      "fanceso": 2
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* [RepoSense](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dAY2021S1-CS2113-T14-1%2Ftp%5Bmaster%5D\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003dfunctional-code~test-code~other~docs)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "\u003cimg src\u003d\"https://avatars0.githubusercontent.com/u/69335512?s\u003d460\u0026v\u003d4\" width\u003d\"150\"\u003e  | Ang Cheng Jun | [Github](https://github.com/Ang-Cheng-Jun) | [Portfolio](https://ay2021s1-cs2113-t14-1.github.io/tp/team/ang-cheng-jun.html)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/69446308?s\u003d460\u0026v\u003d4\" width\u003d\"150\"\u003e  | Leon Low | [Github](https://github.com/leonlowzd) | [Portfolio](team/leonlowzd.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/60400567?s\u003d460\u0026u\u003de15ac87ec16b6f64d93cd7624a2f5c519436f259\u0026v\u003d4\" width\u003d\"150\"\u003e | Ong Zong Xian | [Github](https://github.com/zongxian-ctrl) | [Portfolio](team/zongxian-ctrl.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "\u003cimg src\u003d\"https://avatars0.githubusercontent.com/u/69335512?s\u003d460\u0026v\u003d4\" width\u003d\"150\"\u003e | Tan Lee Wei | [Github](https://github.com/TanLeeWei) | [Portfolio](team/tanleewei.md)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/20167103?s\u003d460\u0026u\u003db903579ff2842a203c2d4f21e2eefe9b58f83c4f\u0026v\u003d4\" width\u003d\"150\"\u003e | Yang Fan | [Github](https://github.com/fanceso) | [Portfolio](team/fanceso.md)"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 3,
      "Ang-Cheng-Jun": 1,
      "-": 4,
      "zongxian-ctrl": 1,
      "fanceso": 2
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "# \u003cimg src\u003d\"images/smarthomebot-logo.png\" width\u003d\"50\"\u003e Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* [Setting up](#setting-up)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  * [Prerequisites](#prerequisites)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  * [Get Started](#get-started)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* [Design](#design) "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  * [Architecture](#architecture) "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  * [UI Component](#ui-component)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  * [Logic Component](#logic-component)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* [Implementation](#implementation)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "  * [Detailed Data Component](#detailed-data-component)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "  * [Command Component](#command-component)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  * [Storage Component](#storage-component)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "  * [Parser Component](#parser-component)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* [Appendix A: Product scope](#appendix-a-product-scope)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "  * [Target user profile](#target-user-profile)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "  * [Value proposition](#value-proposition) "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* [Appendix B: User Stories](#appendix-b-user-stories)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* [Appendix C: Non Functional Requirements](#appendix-c-non-functional-requirements)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* [Appendix D: Glossary](#appendix-d-glossary)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* [Appendix E: Instructions for manual testing](#appendix-e-instructions-for-manual-testing)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "## **Introduction**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "SmartHomeBot is a desktop application tailored for users who are comfortable using a Command Line Interface (CLI), it "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "allows users to control their smart devices at home and record all appliance power usage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "## **Setting up**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "### Prerequisites"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "+ *JDK `11`* or above"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "+ Permission rights to create a file and folder in machine"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "+ At least 10Mb of free space on disk"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "### **Get Started**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Fork this repo and clone it into your computer."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Intellij IDEA User (highly recommended):"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "1. Configure the JDK to JDK 11."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "2. Make sure you have enabled Grade extension, if disable please re-enable it back by going to `File`\u003e`Settings`\u003e`Plugins`."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "3. Import the project as a Gradle project by selecting *build.gradle*"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "4. Verify the setup:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    Run the seedu.smarthomebot.Main and try a few commands."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    Run the Tests to ensure they all pass."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- - -"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": "## Design"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "### Project overview"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "SmartHomeBot is built using java. SmartHomeBot can be built on any platform including Windows, MAC-OS and Linux. When "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "running locally on these systems, SmartHomeBot has the ability to keep track of all the appliances registered into the "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "program and control their operating systems through the program. SmartHomeBot also has a storage file that allows the "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "saving and loading of data. This allows the SmartHomeBot to keep the information of the appliance and its parameters "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "even after the program is turned off. "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fanceso"
        },
        "content": "### Architecture"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fanceso"
        },
        "content": "![Architecture](images/diagrams/Architecture.png)  \u003cbr\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": "The *Architecture Diagram* shown above explains the high-level design of SmortHomeBot Application. Given below is a brief overview of each component."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fanceso"
        },
        "content": "`Main` is responsible for initializing other components in correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fanceso"
        },
        "content": "`Commons` represents a collection of classes used by multiple components. "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fanceso"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `Ui`: The user interface where user can enter instructions and view output."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `Logic` The command executor which consists of,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   * `Paser`: Extract the keyword from user input"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   * `Commands`: Execute the specific command according to the keyword"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `Data` Holds the data in-app-memory while the program is running. "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* `Storage` Reads and writes data from and to a text file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fanceso"
        },
        "content": "How the architecture components interact with each other"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fanceso"
        },
        "content": "The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `create br1`."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fanceso"
        },
        "content": "![UI Class](images/diagrams/Sequence_overview.png)  \u003cbr\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fanceso"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fanceso"
        },
        "content": "### Ui Component"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fanceso"
        },
        "content": "The class diagram of `TextUi` is shown below together with `Main`:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fanceso"
        },
        "content": "![UI Class](images/diagrams/ClassDiagram_UI.png)  \u003cbr\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fanceso"
        },
        "content": "The sequence diagram of `TextUi` is shown below:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fanceso"
        },
        "content": "![UI Sequence](images/diagrams/Sequence_TextUi.png)  \u003cbr\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fanceso"
        },
        "content": "**API** : [TextUI.java](https://github.com/AY2021S1-CS2113-T14-1/tp/blob/master/src/main/java/seedu/smarthomebot/ui/TextUi.java)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fanceso"
        },
        "content": "The UI component which consists of TextUi,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* Prompt commands from the user."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* Execute user commands using the *Logic component*."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* Displays information based on changes to *Data*."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* Prints the SmartHomeBot appliance in a well-formatted form."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fanceso"
        },
        "content": "### Logic Component"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fanceso"
        },
        "content": "The class diagram of `Logic Component` is shown below together with an example:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fanceso"
        },
        "content": "![Logic Component](images/diagrams/Sequence_LogicComponent.png)  \u003cbr\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fanceso"
        },
        "content": "**API** : [Logic](https://github.com/AY2021S1-CS2113-T14-1/tp/tree/master/src/main/java/seedu/smarthomebot/logic)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fanceso"
        },
        "content": "1. Logic uses the **Parser class** to parse the user command."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fanceso"
        },
        "content": "2. This results in a **Command object**."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fanceso"
        },
        "content": "3. The command execution can affect the *Data* (e.g. adding a new location “br1” into its **LocationList**)."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fanceso"
        },
        "content": "4. The result of the command execution is encapsulated as a **CommandResult object** which is passed back to the Ui."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fanceso"
        },
        "content": "5. In addition, the **CommandResult object** can also instruct the *Ui* to perform certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fanceso"
        },
        "content": "6. Shown above is the Sequence Diagram for interactions within the *Logic component* for the when user enter \"create br1\" and how the API call."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "### Data Component"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fanceso"
        },
        "content": "The class diagram of `Data Component` is shown below:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fanceso"
        },
        "content": "![Data Component](images/diagrams/ClassDiagram_DataOverview.png)  \u003cbr\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fanceso"
        },
        "content": "**API** : [Data](https://github.com/AY2021S1-CS2113-T14-1/tp/blob/master/src/main/java/seedu/smarthomebot/data)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fanceso"
        },
        "content": "The *Data Component Diagram* shown above explains the high-level design of the Data which consists of `LocationList` which stores all the locations created by user, `ApplianceList` stores all the appliance which can be created from one of the types - `Fan`, `AirConditioner`,`Light`, or `SmartPlug`. Each appliance creates `Power` which used for computation of power usage. "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fanceso"
        },
        "content": "---"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fanceso"
        },
        "content": "## Implementation"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "### Detailed Data Component "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "The *Detailed Data Component* shown above explains the summarised data of SmartHomeBot. The four appliances classes are extended"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "from the abstract appliance class. "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fanceso"
        },
        "content": "![Detailed Data Component](images/diagrams/ClassDiagram_DetailedData.png)  \u003cbr\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "To create an Appliance, we pass the name, location, wattage, power and the entire locationList. We first check from the "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "locationList if the name of the appliance is inside the locationList, and the location exists within the locationList. "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "If all these conditions are met, the Appliance will be created. It will be appended into the ApplianceList with the "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "`addAppliance()` method. "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "The Power class is responsible for computing the appliance’s power consumption."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "The public methods in the Appliances accessible via the ApplianceList are used to manipulate the appliances such as"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "turning `ON` and `OFF`. From the appliance class, the program will be able to retrieving the name, location, statuses of"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "the appliances. "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "### Parser Component"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "This section will describe how the Parser feature is implemented as well as the design consideration and rational. "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "The main purpose of the Parser Class is to interpret the user inputs so that the correct command can be executed.  "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "Sequence Diagram when `parseCommand(userCommandText)` is initially called. \u003cbr\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "![Parser Model Component](images/diagrams/Sequence_MainParser.png)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "The `userCommandText` is first capture by TextUi and then passed into parseCommand(userCommandText) method in Parser."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "As shown in the Sequence Diagram above, different userCommandText will result in different paths being taken. "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "Below is the list of commands available. "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* Help: `help`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* Create a location: `create`"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* Remove a location: `remove`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* Add an appliance: `add`"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* Delete an appliance: `delete`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* Switch ON an appliance: `on`"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* Switch OFF an appliance: `off`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* Listing appliance/location: `list`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* Displaying usage of appliance: `usage`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* Resetting usage of appliance: `p_reset`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* Exiting the application: `exit`"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " \t"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Sequence Diagram for `create`"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "![Parser Model Component](images/diagrams/Sequence_Parser_Create.png)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "When the user enters the `create` command, the `prepareCreateCommand(argument)` is called. "
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "It will reject the input provided by the user if the `argument` is empty or contain characters such as `/` or `|` or if the argument contains `spaces` in between. "
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "If the argument is not rejected, it will return and construct a new CreateCommand object with argument as the parameter to be created.  "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Sequence Diagram for `remove`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "![Parser Model Component](images/diagrams/Sequence_Parser_Remove.png)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "When the user enters the `remove` command, the `prepareRemoveCommand(argument)` is called. "
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "It will reject the input provided by the user if the `argument` is empty. "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "If the argument is not rejected, it will return a new RemoveCommand object with argument as the parameter to be used to remove a location in the LocationList. "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Sequence Diagram for `add`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "![Parser Model Component](images/diagrams/Sequence_Parser_Add.png)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "When the user enters the `add` command, the `prepareAddCommand(argument)` is called. "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "It will reject the input provided by the user if the l/[LOCATION_NAME] w/[WATTAGE] t/[APPLIANCE_TYPE] is not in this particular order. "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "If the `argument` entered are in the right order, it will split and reject if any of the parameters entered by the user is empty. "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Next, it will check to ensure that the [APPLIANCE_NAME] parameter does not contain characters such as `/` or `|` or `spaces` in between and [WATTAGE] is a valid int number from 1-9999. "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "If all these conditions are fulfilled, it will return and construct a new AddCommand object with name, location, wattage and type as the parameters to be used to add an appliance to the ApplianceList. "
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Sequence Diagram for `delete`"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "![Parser Model Component](images/diagrams/Sequence_Parser_Delete.png)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "When the user enters the `delete` command, the `prepareDeleteCommand(argument)` is called. "
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "It will reject the input provided by the user if the `argument` is empty. If the argument is not rejected, it will return a new DeleteCommand object with arguments as the parameter to be used to delete an appliance from the ApplianceList. "
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Sequence Diagram for `on`"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "![Parser Model Component](images/diagrams/Sequence_Parser_On.png)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "When the user enters the ‘on’ command, the "
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "`prepareOnCommand(argument)` is called. It will check if the user inputs a p/ for the argument. "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "The name can either be a Location, or an Appliance name. If there is a parameter, the program will then check if the command is an integer,"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "if it isn’t an error is thrown. If there is no parameter inputted, an empty string. Finally, a new OnCommand(name,parameter) will be returned."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Sequence Diagram for `off`"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "![Parser Model Component](images/diagrams/Sequence_Parser_Off.png) "
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "When the user enters the ‘on’ command, the "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "`prepareOffCommand(argument)` is called. The name can be an Appliance or a Location. A new OffCommand is created: OffCommand(name) and returned."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Sequence Diagram for `list`"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "![Parser Model Component](images/diagrams/Sequence_Parser_List.png)\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "When the user enters the `list` command, the "
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "`prepareListCommand(argument)` is called. It will check if the argument contains “appliance’ or ‘location”."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "1. If the argument contains “location”,  a new `ListCommand(LOCATION_TYPE, ““)` will be returned. "
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "2. If the argument contains “appliance”, it will check if it contains a “l/” parameter. If it exist, it "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "means there is a filteredLocation, thus a new `ListCommand(APPLIANCE_TYPE, filteredLocation)` will be returned."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "Else, a new `ListCommand(APPLIANCE_TYPE, ““)` will be returned."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "3. Any argument that do not contain “location” and “appliance” or contains “appliance” with a wrong "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "format will return a `InvalidCommand` class with their respective error messages. "
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Sequence Diagram for `commandword`"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "![Parser Model Component](images/diagrams/Sequence_Parser_Commandword.png)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "`commandword` refers to the following commands `help`, `usage`, `p_reset`, `exit`."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "As these 4 commands does not require any additional parsing. The sequence diagram referred above will return their"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "respective CommandObject to execute the command. "
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Sequence Diagram for `default`"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "![Parser Model Component](images/diagrams/Sequence_Parser_Default.png)"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "When input provided by the User is not any of the commands available, it will return a new `InvalidCommand(MESSAGE_INVALID_COMMAND_FORMAT)`"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "that will be executed to inform the user that it is a ‘Invalid Command Format’.  "
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "### Command Component"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "#### Help Command"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "To see the help usage for the commands in SmartHomeBot, the `HelpCommand` class is used. This class\u0027 object is "
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "first created by the `Parser` class, where it is then returned to the `Main` class to have its `execute()` "
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "function called. When the `Main` class calls the `execute()` function, the `HelpCommand` "
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "will then return a new `CommandResult` class (which stores the Help message)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The sequence diagram for `HelpCommand` is shown below:"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "![Sequence of Help Command](images/diagrams/Sequence_HelpCommand.png) \u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Create Command"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "To create a new location, the `CreateCommand` class is used. "
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "This class object is first created by the `Parser` class, where it is then returned to the `Main` class to have its `execute()` function called. "
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "The userEnteredLocation which was the argument parsed by the `Parser` will be used in LocationList’s addLocation(userEnteredLocation) function to create the location in the LocationList. "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "After the location is created, it will then return a new CommandResult class to indicate the result of this process. "
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "If the userEnteredLocation already exists in the LocationList, it will return a new CommandResult class to indicate that the location already exists and could not be created."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Likewise, if the userEnterLocation already exists in the ApplianceList, it will return a new CommandResult class to indicate that as such."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "This is to prevent duplicates name in both the ApplianceList and LocationList."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The sequence diagram for `CreateCommand` is shown below:"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "![Sequence of Create Command](images/diagrams/Sequence_CreateCommand.png) \u003cbr\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Remove Command "
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "To remove a location, the `RemoveCommand` class is used. The class object is first created by the `Parser` class, where "
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "it is then returned to the `Main` class to have its `execute()` method called. The name of the location to be removed "
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "will be parsed into the `RemoveCommand` class. The `RemoveCommand` class will call the `removeLocation` method in "
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "`LocationList`, which will loop until the name of the location to be removed is found in the `LocationList`. "
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Next, the `RemoveCommand` class will call the `deleteByLocation` method in `ApplianceList`, which will loop to look for all the appliance in the location to be removed and delete the appliance. "
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "If the name of the location to be removed is not found, the `RemoveCommand` will return the “Location does not exist.” message."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The sequence diagram for `RemoveCommand` is shown below:"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "![Sequence of Remove Command](images/diagrams/Sequence_RemoveCommand.png) \u003cbr\u003e"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "#### Add Command"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "To add a new appliance, the `AddCommand` class is used. This class object is first created by the `Parser` class, where "
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "it is then returned to the `Main` class to have its `execute()` method called. The name,location,wattage, and type of "
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "the appliance will be parsed into the AddCommand class. The `AddCommand` class will perform the `execute()` method to "
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "convert the appliance into static (`Fan`, `AirConditioner`, `Lights`, `SmartPlug`) depending on their type. Then the "
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "appliance will be added into the ApplianceList. The name of the appliance has to be unique. "
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The sequence diagram for `AddCommand` is shown below:"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "![Sequence of Add Command](images/diagrams/Sequence_AddCommand.png) \u003cbr\u003e"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "#### Delete Command"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "To delete an appliance, the `DeleteCommand` class is used. This class object is first created by the `Parser` class "
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "where it is then returned to the `Main` class to have its `execute()` method called. The name of the appliance to be "
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "deleted will be parsed into the `DeleteCommand` class. The `DeleteCommand` class will call the deleteAppliance method "
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "in the `ApplianceList` class, which will loop until the name of the appliance to be deleted is found in the "
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "`ApplianceList` and remove the appliance from the `ApplianceList`. If the name of the appliance to be deleted is not "
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "found, the `DeleteCommand` will return “appliance does not exist” message."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The sequence diagram for `DeleteCommand` is shown below:"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "![Sequence of Delete Command](images/diagrams/Sequence_DeleteCommand.png) \u003cbr\u003e"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "#### On Command"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The `OnCommand` shown below explains the Sequence Diagram of the OnCommand. When the Main class calls the execute() function there will be are 2 cases for on command to flow:"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "1. `onByLocation`"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "2. `onByAppliance`"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The sequence diagram for `OnCommand` is shown below:"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "![Sequence of On Command](images/diagrams/Sequence_OnCommand.png) \u003cbr\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The program will determine if the user inputted: key is a name of an appliance, or a location.This is done by checking "
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "the key in the `LocationList`, if it exists, the program will deem it as `OnByLocation` vice versa."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "1. `onByLocation` \u003cbr\u003e"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "The first condition checks if the user types in any parameter into the command, if so, the program will be unable to turn on"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "the appliances in the location. This is done as not all parameters are accepted by every appliance, for example,"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "`setTemperature` is only accepted for Air Conditioner. Thus, the parameter option is only opened to the `OnByAppliance` method."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Then, `onByApplianceLoop` will be called to turn on all appliances in the location."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "2. `onByAppliance` \u003cbr\u003e"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "The first condition checks the index of the tagged appliance in the applianceList. If the index is negative, this signifies"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "that that key does not exist in the location or appliance list. Else, we will call the `onAppliance` method."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "#### Off Command"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "When the Main class calls the `execute()` function there are 2 cases for off command:"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "1. `offByLocation`"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "2. `offByAppliance`"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The sequence diagram for `OffCommand` is shown below: "
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "![Sequence of Off Command](images/diagrams/Sequence_OffCommand.png) \u003cbr\u003e"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "The program will determine if the user inputted: key is a name of an appliance or a location. This is done by checking "
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "the key in the LocationList, if it exists, the program will deem it as `OffByLocation` vice versa. "
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "1. `offByLocation` \u003cbr\u003e"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "This method will call offByApplianceLoop which turns off every appliance in that location."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "2. `offByAppliance` \u003cbr\u003e"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The first condition checks the index of the tagged appliance in the applianceList. If the index is negative, this "
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "signifies that that key does not exist in the location or appliance list. Else, we will call the `offAppliance` method."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "#### List Command "
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "To list appliances or locations, the `ListCommand` class is used. This class\u0027 object is first created by the `Parser` class, "
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "where it is then returned to the `Main` class to have its `execute()` function be called.When the Main class calls the `execute()` "
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "function, ListCommand will call upon the function “list appliance” or  “list location”  in `ListCommand` class to "
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "determine whether to list the appliances or location, then return a new `CommandResult` class (which stores the list)"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The sequence diagram for `ListCommand` is shown below:"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "fanceso"
        },
        "content": "![Sequence of List Command](images/diagrams/Sequence_ListCommand.png) "
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "As depicted from the diagram, there are 2 cases for `ListCommand`:"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "1) `listAppliance` \u003cbr\u003e"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "This method checks for the user\u0027s key in a filteredLocation together with the “list appliance”. If there is no filteredLocation, "
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "it will just create a list of all the appliances in all the locations. Vice versa, if it exists a filteredLocation,it will "
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "just create a list of all the appliances in filteredLocation. "
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "2) `listLocation` \u003cbr\u003e"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "This method creates a list of all the locations that stores in the locationList."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "#### Usage Command"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "fanceso"
        },
        "content": "To find out the power consumption of each appliance and total power usage. This class object is first created by the `Parser` class, where it is then returned to the `Main` class to have its `execute()` method called. "
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "fanceso"
        },
        "content": "When the `Main` class calls the `execute()` function, `UsageCommand` will get the appliance’s details such as name, location, status and power usage as shown in the sequence diagram. Power consumption will be computed based on the appliance usage time with respect to the system time. If the appliance status is **on** it will get its time used with respect to the current system time. Thus, the power consumption will be calculated and displayed auto-formatted content to the user which returns a new `CommandResults` class."
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "fanceso"
        },
        "content": "The sequence diagram of `UsageCommand` is shown below when user enters *usage*:"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "![Sequence of Usage Command](images/diagrams/Sequence_UsageCommand.png) \u003cbr\u003e"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "#### Reset Command "
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "fanceso"
        },
        "content": "To reset the power consumption of each appliance and total power usage of SmartHomeBot back to zero. This class object is first created by the `Parser` class, where it is then returned to the `Main` class to have its `execute()` "
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "method called. When the `Main` class calls the `execute()` function, `ResetCommand` will then access the power class "
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "and reset the appliance power. A new `CommandResult` class will be returned to the main with a feedback message."
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "fanceso"
        },
        "content": "The sequence diagram of `ResetCommand` is shown below when user enters *p_reset*:"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "![Sequence of Reset Command](images/diagrams/Sequence_ResetCommand.png) \u003cbr\u003e"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "#### Invalid Command"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "If users key in the wrong command, the `InvalidCommand` class is used.This class\u0027 object is "
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "first created by the `Parser` class, where it is then returned to the `Main` class to have its `execute()`  "
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "function be called. When the `Main` class calls the `execute()` function, `InvalidCommand` will "
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "return a new `CommandResult` class (which stores the Invalid message)"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The sequence diagram for `InvalidCommand` is shown below:"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "![Sequence of Invalid Command](images/diagrams/Sequence_InvalidCommand.png) \u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "#### Exit Command"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "To exit SmartHomeBot, the `ExitCommand` class is used. For this `ExitCommand`  class. This class\u0027 object "
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "is first created by the `Parser` class, where it is then returned to the Main class to have its `execute()` "
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "function be called. When the `Main` class calls the `execute()` function, the `ExitCommand` will off all the "
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "appliance and ,then return a new `CommandResult` class (which stores the Exit message)"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The sequence diagram for `ExitCommand` is shown below:"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "![Sequence of Exit Command](images/diagrams/Sequence_ExitCommand.png) \u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "#### CommandResult Command"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "The `CommandResult` class is used to store feedback to users and will interact with `UI` in the `Main`."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "fanceso"
        },
        "content": "### Storage Component"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "#### Storage Module"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The Storage module manages the load and save operations of the SmartHomeBot. It consist of two different classes, "
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "the `ReadStorageFile` class, and the `WriteToFile` class. As of the name stated, the function of `WriteStorageFile` class "
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "is to store the data into a .txt file for future usage. The `ReadStorageFile` class is to load the previously stored data "
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "from the .txt file back into the SmartHomeBot when it start up. "
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The class diagram for storage module is shown below:"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "![StorageFile Model Component](images/diagrams/ClassDiagram_Storage.png)"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "##### Process of writing data into Storage File"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "After each command input by the user, SmartHomeBot will perform the `execute()` method in SaveStorageFile. This allows"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "the program to continuously save the changes made by the user into the .txt file and prevent the lost of updates made "
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "by the user."
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Within the `execute()` method, the `createFile()` method will be performed to create a new .txt file if there is no .txt "
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "file exist. Then the `clearFile()` method will be performed to empty .txt file. After that all the data updated by the "
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "user will be written into the .txt file. This process will be carried out each time the user input a command. The first"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "line in the .txt file will always be the LocationList and subsequent lines will be all the appliances, each occupying "
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "one line each. The appliances will be written together with their parameters in each line. "
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The sequence diagram for `WriteStorageFile` is shown below:"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "![StorageFile Model Component](images/diagrams/Sequence_WriteStorageFile.png)"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "##### Process of retrieving data back into the program"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "On startup, SmartHomeBot will perform the `execute()` method in ReadStorageFile. This allows the program to retrieve all "
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "stored data saved previously from the .txt file back into the program to be used again."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Within the `execute()` method, a Scanner object will be created to parse individual lines in the .txt file back into the "
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "program and converting them into String. The first line parsed into the program will be the locationlist, which will "
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "then be parse into the `readToLocationList(locations)` method. In the `readToLocationList(locations)` method, the "
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "locations will be added back into the `LocationList` one by one. Then the program will return back to execute(). "
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The second line onwards in the .txt file will be the appliances. These appliances will be converted into String and "
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "parse into the `readToApplianceList` method. In the `readToApplianceList(appliance)` method, each line will be split up "
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "into their specific parameters(name,location, power, type, powerConsumption and parameter). Then the appliance will be "
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "converted into static (`Fan`, `AirConditioner`, `Lights`, `SmartPlug`) depending on their types. Then the appliance will "
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "be added back to the `ApplianceList`. The powerConsumption of each appliance will also be updated to keep track of the "
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "powerUsage of each appliance."
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "The sequence diagram for `ReadStorageFile` is shown below:"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "![StorageFile Model Component](images/diagrams/Sequence_ReadStorageFile.png)"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "fanceso"
        },
        "content": "## Appendix A: Product scope"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Disabled individuals with mobility issues to perform tasks like switching On/Off Appliances at home. "
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "While allowing them to automate/monitor their home with smart home devices."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "This program consolidates all the home appliance’s control into a centralised system. Users with mobility difficulties can easily ON/OFF appliances. "
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "They can also review and monitor electricity usage; having a clearer picture of their electrical usage patterns. A backlog of the usage can also be recorded."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "fanceso"
        },
        "content": "## Appendix B: User Stories"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|Version| As a(n) ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|v1.0|Inexperienced user|list all the functions of the app |To see what he can do. |"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|v1.0|New user |add new locations into SmartHomeBot|Tag these locations into appliances |"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|v1.0|New user |add new appliances|Manipulate and view his appliances usage|"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|v1.0|disabled user |On/Off appliances|Turn on and off appliances without moving much|"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|v1.0|Lazy user|list all the appliances in SmartHomeBot|Remove unnecessary locations and appliances|"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|v1.0|Calculative user |View usage of his appliances|View all the appliances and see their status|"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|v2.0|Lazy user|Change the temperature of the air-conditioner and the speed of the fan from SmartHomeBot|Monitor his smart home appliances|"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|v2.0|Experienced SmartHomeBot user|On/OFF appliances by location and list appliances by location|Easily view and manipulate appliances by location|"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "fanceso"
        },
        "content": "## Appendix C: Non-Functional Requirements"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "fanceso"
        },
        "content": "1. Should work on any mainstream OS as long as it has Java 11 or above installed."
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "2. Should be able to hold up to 1000 appliances without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "fanceso"
        },
        "content": "3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "fanceso"
        },
        "content": "## Appendix D: Glossary"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "fanceso"
        },
        "content": "*Mainstream OS*"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  **Windows, Linux, Unix, OS-X**"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "fanceso"
        },
        "content": "*Home appliance details*"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  **House appliance that meant to be recorded and use with SmartHomeBot**"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "fanceso"
        },
        "content": "## Appendix E: Instructions for Manual Testing"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Given below are instructions to test the application manually."
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "**Starting the program:**"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    i. Download the jar file from the latest release and copy into an empty folder"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    ii. Run the jar file with java -jar SmartHomeBot.jar"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        Expected: Shows the GUI with some welcome messages."
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "### Creating new location:"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Prerequisites: List all appliances and locations using the `list location` and `list appliance` command. "
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Making sure the name of the new location is not found in both the list."
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "1. Test case: `create Bedroom1` \u003cbr\u003e"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: Creating Location \"Bedroom1\".....CREATED!"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "2. Test case: `create Bedroom|2` \u003cbr\u003e"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: Illegal Character space or /  or | detected in [LOCATION_NAME]."
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "3. Test case: `create` \u003cbr\u003e"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: Empty Parameter detected! Please follow format and enter required parameters."
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "### Removing existing location:"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Prerequisites: List all locations using the `list location` command. "
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Making sure the name of the location is found in the list."
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "1. Test case: `remove Bedroom1` \u003cbr\u003e"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: Removing LOCATION \"Bedroom1\"......REMOVED!"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "2. Test case: `remove` \u003cbr\u003e"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: Empty Parameter detected! Please follow format and enter required parameters."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "3. Test case: `remove Balcony` , assume `Balcony` was not created.\u003cbr\u003e"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: Location does not exist. Nothing will be deleted."
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "### Adding new Appliance:"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Prerequisites: List all appliances and locations using the `list location` and `list appliance` command. "
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Making sure the name of the new appliance is not found in both the list."
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "1. Test case: `add Light l/Bedroom1 w/10 t/light` \u003cbr\u003e"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: ADDING Light(10W), located at Bedroom1 ......ADDED!"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "2. Test case: `add Light 2 l/Bedroom1 w/10 t/light` \u003cbr\u003e"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: Illegal Character space or /  or | detected in [APPLIANCE_NAME]."
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "3. Test case: `add Light_2 w/10 l/Bedroom1 t/light` \u003cbr\u003e"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: Please follow this order, add NAME l/[LOCATION_NAME] w/[WATTS] t/[TYPE_OF_APPLIANCE]"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "4. Test case: `add Light_2 l/Bedroom2 w/10 t/light`, as Bedroom2 was not created as a location. \u003cbr\u003e"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    Expected-printout: Location does not exist."
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "5. Test case: `add Light_2 l/Bedroom1 w/10000 t/light` \u003cbr\u003e"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: Appliance wattage is not supported. Please enter between 1 to 9999."
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "6. Test case: `add Light_2 l/Bedroom1 w/5000 t/yellowbulbs` \u003cbr\u003e"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "       Expected-printout: Invalid appliance type is detected. Only aircon, fan, light and smartplug are accepted as type."
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "### Deleting existing appliance:"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Prerequisites: List all appliances using the `list appliance` command. "
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Making sure the name of the appliance is found in the list."
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "1. Test case: `delete Light` \u003cbr\u003e"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: Deleting Light(10W), located at Bedroom1 .......DELETED."
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "2. Test case: `delete` \u003cbr\u003e"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: Empty Parameter detected! Please follow format and enter required parameters."
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "3. Test case: `delete Light2` , assume `Light2` was not added.\u003cbr\u003e"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: Light2 does not exist."
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "### Switching On Appliance:"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Prerequisites: "
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Ensure that Bedroom1 is created: `create Bedroom1` and ac Appliance is added: `add ac l/Bedroom1 w/5000 t/aircon`."
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "1. Test case: `on ac` \u003cbr\u003e"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: Switching ac(5000W), located at Bedroom1 @ 25 Degrees.....ON"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "2. Test case: `on ac2` \u003cbr\u003e"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    Expected-printout: Appliance or Location does not exist in the list."
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "3. Test case: `on ac p/` \u003cbr\u003e "
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    Expected-printout: Empty Parameter detected! Please follow format and enter required parameters."
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "4. Test case: `on ac p/21` , assume `ac` was not on.\u003cbr\u003e"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "   Expected-printout: Switching ac(5000W), located at Bedroom1 @ 21 Degrees.....ON"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "5. Test case: `on Bedroom1` , assume `ac` was on.\u003cbr\u003e"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "   Expected-printout: All Appliances in \"Bedroom1\" are turned on "
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "6. Test case: `on ac p/hundred`\u003cbr\u003e"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "   Expected-printout: Please enter a valid numerical value."
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "   "
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "### Switching Off Appliance:"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Prerequisites: "
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Ensure that Bedroom1 is created: `create Bedroom1` and ac Appliance is added: `add ac l/Bedroom1 w/5000 t/aircon`. Lastly, ensure that ac is turned on for every test: `on ac`"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "1. Test case: `off ac` \u003cbr\u003e"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: Switching: ac(5000W), located at Bedroom1 ......OFF"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "2. Test case: `off ac2` \u003cbr\u003e"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    Expected-printout: Appliance or Location does not exist in the list."
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "3. Test case: `off ac p/21` \u003cbr\u003e "
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    Expected-printout: There should be no parameter for this command, please refer to \u0027help\u0027 command."
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "4. Test case: `off Bedroom1` \u003cbr\u003e"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: All Appliances in \"Bedroom1\" are turned off "
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "### Listing Appliances or Locations"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "1. Test case: `list location`, assume no location is created.\u003cbr\u003e"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    Expected-printout: There is currently no Location in the list."
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "2. Test case: `list appliance`, assume no appliance is added.\u003cbr\u003e"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    Expected-printout: There is currently no Appliance in the list."
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "3. Test case: `list Bedroom1`, only `list appliance` or `list location` or `list appliance l/[LOCATION_NAME]` is valid for command.\u003cbr\u003e"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    Expected-printout: Please enter either \u0027list appliance\u0027 or \u0027list location\u0027 or \u0027list appliance l/[LOCATION_NAME]\u0027"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "4. Test case: `list appliance l/Bedroom1`, assume that `Bedroom1` is not created \u003cbr\u003e"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    Expected-printout: Location: \"Bedroom1\" does not exist.   "
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "5. Test case: `list appliance l/Bedroom1`, assume that `Bedroom1` is created but no Appliance is added to `Bedroom1`.   "
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "   Expected-printout: There is no Appliance in \"Bedroom1\". "
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "### Saving data to disk"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "#### Dealing with missing data files:"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "When the program is started for the first time, the directory \"data\" and the text file \"data/SmartHomeBot.txt\" should be "
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "automatically created to store all the data when the user start entering commands into the application. "
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "There are two ways that will cause missing data files:"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "1. When the \"data\" directory folder is missing."
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "2. When the text file \"data/SmartHomeBot.txt\" is missing from the \"data\" directory folder."
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "These can be stimulated by deleting either the \"data\" directory folder or the text file \"data/SmartHomeBot.txt\".\u003cbr\u003e"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Expected-printout: Load File does not exist. No contents will be loaded. "
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "#### Dealing with corrupted data files:"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Corrupted data files usually happen when some of the appliance parameters are missing from the .txt storage file. "
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "When corrupted data files error occurred, some of the data will not be loaded back into the program when the program "
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "start up the next time."
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "This can be stimulated by removing one of the appliance parameters(Example: the power of the appliance) from the "
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "text file \"data/SmartHomeBot.txt\". \u003cbr\u003e"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Expected-printout: Data file is corrupted, some data entry will not be entered."
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 84,
      "Ang-Cheng-Jun": 121,
      "TanLeeWei": 135,
      "-": 30,
      "zongxian-ctrl": 153,
      "fanceso": 138
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "# \u003cimg src\u003d\"images/smarthomebot-logo.png\" width\u003d\"50\"\u003e SmartHomeBot "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "SmartHomeBot is a desktop application that consolidates all the home appliance\u0027s control into a centralized system via Command Line Interface (CLI)."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": " \u003cimg src\u003d\"images/smarthomebot.jpg\" style\u003d\"width:50%;\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": " "
      }
    ],
    "authorContributionMap": {
      "-": 6,
      "fanceso": 5
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "# \u003cimg src\u003d\"images/smarthomebot-logo.png\" width\u003d\"50\"\u003e SmartHomeBot User Guide "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "SmartHomeBot is a **desktop application that consolidates all home appliance’s control into a "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "centralized system via a Command Line Interface (CLI)**. It is designed to assist disabled individuals with "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "difficulties to perform tasks like switching On/Off Appliances at home.  Users can also "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "review and monitor electricity usage; having a clearer picture of their electrical usage patterns."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "SmartHomeBot has an auto-save feature that will automatically save all the appliances\u0027 data"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "and export it to a text file. Upon the start of the application, it will import the data "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "from the text file and loads the appliances\u0027 data back."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "##### Disclaimer: SmartHomeBot V2.1 does not interface with actual Appliances. Instead, Appliances are simulated in this program. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* [Quick start](#quick-start)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* [Features](#features) "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "  * [Viewing help: `help`](#viewing-help-help) "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  * [Creating a location: `create`](#creating-a-location-create)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  * [Removing a location: `remove`](#removing-a-location-remove)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  * [Adding an appliance : `add`](#adding-an-appliance-add)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  * [Deleting an appliance: `delete`](#deleting-an-appliance-delete)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  * [Switching on an appliance: `on`](#switching-on-an-appliance-on)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  * [Switching off an appliance: `off`](#switching-off-an-appliance-off)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  * [Listing all the locations/appliances: `list`](#listing-all-the-locations-or-appliances-list)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "  * [Displaying the recorded usage of appliance: `usage`](#displaying-the-recorded-usage-of-appliance-usage)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  * [Resetting all power usage in application: `p_reset`](#resetting-all-power-usage-in-application-p_reset)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  * [Exiting the application: `exit`](#exiting-the-application-exit)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  * [Saving the data](#saving-the-data)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* [Command summary](#command-summary)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "## Quick start"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "1.  Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "2.  Download the latest `SmartHomeBot.jar` from [here](https://github.com/AY2021S1-CS2113-T14-1/tp/releases/latest). "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "3.  Copy the file to the folder you want to use as the home folder for your SmartHomeBot."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "4.  Open your Command Prompt/Terminal. Navigate to the folder which you place the SmartHomeBot.jar. Then input `java -jar SmartHomeBot.jar` and "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "press ENTER. The display similar to the below should appear in a few seconds."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    ![](images/user_guide/startMessage.png)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "5.  Type the command in the command box and press Enter to execute it. "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "e.g. typing `exit` and pressing Enter, it will exit the program."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "Some example commands you can try:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    *   `create Bedroom1`: "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "         Creates a \u0027location\u0027 named \"Bedroom1\" in SmartHomeBot. "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "         "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    *   `remove Bedroom1`: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "         Remove a \u0027location\u0027 named \"Bedroom1\" in SmartHomeBot."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    *   `list location`: "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "         Lists all the location."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "             "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "6.  Refer to the Features below for details of each command."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "   **Notes about the command format**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "   * Words in **[UPPER_CASE]** are the parameters to be supplied by the user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    \u003cbr\u003ee.g. `create [LOCATION_NAME]`, LOCATION_NAME is a parameter which can be used as "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "   `create Bedroom1`."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "   * Words in **[UPPER_CASE]** are case-sensitive."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "   * Words in **[LOCATION_NAME]** and **[APPLIANCE_NAME]** has to be unique and not duplicate of each other. "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "   * Words in **[LOCATION_NAME]** and **[APPLIANCE_NAME]** cannot contain `space` or `/` or `|` when `create` or `add`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "   * Caution: Please do not type `Ctrl-C or Ctrl-Z` as it may cause the application to terminate due the in-build function "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "   on command prompt  "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "   "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "### Viewing help: `help`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Shows all available commands to the user"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "Example: `help`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "   ![](images/user_guide/helpCommand.png)   "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "### Creating a location: `create`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Adds a new location with a name. "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Format: `create [LOCATION_NAME]` "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "* `LOCATION_NAME` must be a unique name. "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "* `Space` cannot be included in `LOCATION_NAME`. However `_` can be used to replace `space` if you want to create a "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "`LOCATION_NAME` with more than one word."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Example: `create Bedroom1`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "   ![](images/user_guide/createCommand.png) "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "### Removing a location: `remove`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Removes an added location with its name in the list. "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Format: `remove [LOCATION_NAME]`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Example: `remove Bedroom1`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "   ![](images/user_guide/removeCommand.png) "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "\u003e Note: If there are appliances in the Location of \u0027LOCATION_NAME\u0027 when removing, it will be deleted as well. "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "### Adding an appliance: `add`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Adds an appliance to the location created previously. "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Format: `add [APPLIANCE_NAME] l/[LOCATION_NAME] w/[WATTAGE] t/[TYPE_OF_APPLIANCE]`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* `[APPLIANCE_NAME]` must be a unique name."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* `[LOCATION_NAME]` must be an existing location created by `create` command."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* `[WATTAGE]` must be an `int` value between 1-9999."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* `[TYPE_OF_APPLIANCE]` must be one of the type in the following list. "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "List of `TYPE_OF_APPLIANCE` "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "1. `fan`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "2. `light`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "2. `aircon`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "3. `smartplug`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Example: `add AIRCON1 l/Bedroom1 w/3500 t/aircon`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "  ![](images/user_guide/addCommand.png) "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "### Deleting an appliance: `delete`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Deletes an appliance base on its name in the list. "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Format: `delete [APPLIANCE_NAME]`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Example: `delete AIRCON1`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "  ![](images/user_guide/deleteCommand.png) "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "   "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "### Switching on an appliance: `on` "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Switches ON an appliance base on its name in the list. "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Format: `on [APPLIANCE_NAME]` or `on [APPLIANCE_NAME] p/[PARAMETER]` or `on [LOCATION_NAME]`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "1. `on [APPLIANCE_NAME]`: Switch ON the appliance by its name."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "2. `on [APPLIANCE_NAME] p/[TEMPERATURE]`: Switch ON the appliance by its name with parameter for air-conditioner."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "3. `on [APPLIANCE_NAME] p/[SPEED]`: Switch ON the appliance by its name with parameter for fan."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "4. `on [LOCATION]`: Switch ON every appliance in the location. "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* Range for `TEMPERATURE`: 16 - 30"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* Range for `SPEED`: 1-3"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "* If no `PARAMETER` is provided, the appliance will turn on with their default parameter, which are: 25 for `TEMPERATURE` and 1 for `SPEED`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Example: `on AIRCON1`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "   "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "   ![](images/user_guide/onCommand1.png) "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Example: `on AIRCON1 p/27`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "   "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "   ![](images/user_guide/onCommand2.png) "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "When Appliance is already ON, we can still change the Appliance\u0027s parameter:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Example: `on AIRCON1 p/16`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "   ![](images/user_guide/onCommand6.png) "
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "   "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Example: `on FAN1 p/3`"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "   "
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "   ![](images/user_guide/onCommand3.png) "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Example: `on Bedroom1`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "   "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "   ![](images/user_guide/onCommand4.png) "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "### Switching off an appliance: `off`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Switches OFF an appliance base on its name in the list. "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Format: `off [APPLIANCE_NAME]` or `off [LOCATION]`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Example: `off AIRCON1`"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   ![](images/user_guide/offCommand1.png) "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Example: `off Bedroom1`"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   ![](images/user_guide/offCommand2.png) "
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "### Listing all the locations OR appliances: `list`"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "List out all the appliances or all the location currently stored."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Format: `list appliance` or `list location` or `list appliance l/[LOCATION_NAME]`"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* `list appliance` will list all the appliances entered by the user."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* `list location` will list all the locations entered by the user."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* `list appliance l/[LOCATION_NAME]` will list all the appliances in the location entered by the user."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Example: `list location`"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   "
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   ![](images/user_guide/listCommand1.png) "
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Example: `list appliance`"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   "
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   ![](images/user_guide/listCommand2.png) "
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Example: `list appliance l/Bedroom1`"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   "
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   ![](images/user_guide/listCommand3.png) "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "fanceso"
        },
        "content": "### Displaying the recorded usage of appliance: `usage`"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Display the current power usage of all appliances and total power consumption monitored within SmartHomeBot. "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Format: `usage`"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   "
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   ![](images/user_guide/usageCommand.png) "
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "fanceso"
        },
        "content": "### Resetting all power usage in application: `p_reset`"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Reset the previous recorded power usage of all appliances and total power consumption to zero. Note that if appliance remains **ON**, its usage will be reset to zero, monitoring process continues, as the appliance remains running."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Format: `p_reset`"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   "
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   ![](images/user_guide/p_resetCommand.png) "
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "### Exiting the application: `exit`"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Exits the application and switch off all appliances within SmartHomeBot. The monitoring of all appliances will be stop."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "   ![](images/user_guide/ExitMessage.png) "
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "fanceso"
        },
        "content": "   "
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "fanceso"
        },
        "content": "## Saving the data"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "SmartHomeBot will auto-save the task list data in the hard disk after "
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "any command that changes the data. There is no need to save manually."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "fanceso"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "**Q**: How do I transfer my data to another Computer?"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "**A**: Install the app in the other computer and overwrite the empty data file it creates with the file "
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "fanceso"
        },
        "content": "that contains the data of your previous SmartHomeBot folder."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "**Q**: Does the program interface with the appliance? "
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "**A**: Current SmartHomeBot v2.1 does not interface with actual Appliances. Instead the Appliances are simulated "
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "as a proof of concept for future implementation."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "## Command summary"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Function | Format | Example "
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "-------- |--------|-------- "
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Help|`help`"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Create location|`create [LOCATION_NAME]`|`create Bedroom1`"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Remove location|`remove [LOCATION_NAME]`|`remove Bedroom1`"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Add appliance|`add [APPLIANCE_NAME] l/[LOCATION_NAME] w/[WATTAGE] t/[TYPE_OF_APPLIANCE]`|`add AIRCON1 l/Bedroom1 w/3500 t/aircon`"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Delete appliance|`delete [APPLIANCE_NAME]`|`delete AIRCON1`"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Switch On|`on [APPLIANCE_NAME]` or `on [APPLIANCE_NAME] p/[PARAMETER]` or `on [LOCATION_NAME]`|`on AIRCON1`  or `on AIRCON1 p/27` or `on Bedroom1`"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Switch Off|`off [APPLIANCE_NAME]` or `off [LOCATION]`|`off AIRCON1` or `off Bedroom1`"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "List|`list appliance` or `list location` or `list appliance l/[LOCATION_NAME]`|`list appliance l/Bedroom1`"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Usage|`usage`"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Reset|`p_reset`"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Exit|`exit`"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 36,
      "Ang-Cheng-Jun": 63,
      "TanLeeWei": 8,
      "-": 32,
      "zongxian-ctrl": 122,
      "fanceso": 43
    }
  },
  {
    "path": "docs/team/ang-cheng-jun.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "# Ang Cheng Jun - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "SmartHomeBot is a **desktop application that consolidates all home appliance’s control into a "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "centralized system via a Command Line Interface (CLI)**. Users can switch on or off appliances by using this application"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "and review and monitor electricity usage; having a clearer picture of their electrical usage patterns. They will need to "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "create a location and add appliances into the particular location to enable the on/off feature. There is "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "a AutoSave feature which will save all your location, appliances and appliances\u0027 electrical usage into a text file. All the "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "appliances will be switch off when the user exit the application. Upon the start of the application, the data of the text file"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "will be imported to the application. "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "#### Code Contributed"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "Below is the link to view all the codes that I contributed to SmartHomeBot Project. Click on RepoSense to direct you to the page"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* [RepoSense](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dang-cheng-jun\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "#### Enhancements implemented"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "1. I created a ListCommand filter which allows the users to list all the appliances in that particular location. "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "   * Implementation of ListCommand filter"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "      * I used stream method to store all the Appliance Class which stores the filtered location into a new ArrayList and display the list to user. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "2. In addition, to add ease to the typing of command, I design a logic function in OnCommand which allows users to key you `on [APPLIANCE_NAME]` or "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "`on [APPLIANCE_NAME]` which allows user to switch on an appliance or a group of appliance in the location.This logic function is"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "also implement in the OffCommand.  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "   * Implementation of logic function which ease the typing of command for OnCommand and OffCommand "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * For the logic function, I assume that argument that the user typed is an appliance initially. In the function, it will check if any of the Appliance Class in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     the ApplianceList has the location similar to the argument that user typed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * If there is similar location in the Appliance Class, then we know that the argument is a location. All Appliance Class with the similar location will store in a new ArrayList "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     and turn on/off all the appliance in the ArrayList. Then, it will display the corresponding message to user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * If there is no Appliance Class\u0027 location is similar to the argument, then we check if the location exists in the LocationList or not. If "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     it exists, then we know that the argument is a location. This means that there is no appliance in that location, and it will display the corresponding message to user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * If both check failed, then we can assume that the argument is an appliance. Then the function will look for the Appliance Class\u0027 name which is similar to the argument"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     and turn on/off the appliance and display the corresponding message to the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * If argument cannot be found in both LocationList and ApplianceList, we can conclude that the argument is invalid and display the corresponding message to the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "#### Contributions to the UserGuide"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "Initially, I did the overall layout of the UserGuide which allowing all the team member including me to know where to input their content of the function that they have implemented."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "In addition, I have added images to the UserGuide for better illustration to the users."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "When all the team members have completed their subsection, I reviewed their content to check for any wrong information in the content. "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "Refer to the link below to view the UserGuide."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* [UserGuide](https://ay2021s1-cs2113-t14-1.github.io/tp/UserGuide.html)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "#### Contributions to the DeveloperGuide"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "Initially, the whole group including me brainstormed to decide on the user stories which is used in the DeveloperGuide. You can refer to the link below on Trello to see the contribution,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "in the user stories."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* [Trello](https://trello.com/b/s32JQHmK/cs2113-storyboard)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "I also write and design the Sequence Diagram for ListCommand, HelpCommand, InvalidCommand and ExitCommand. All the information and design "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "follow the textbook standard provided to us. And also, I did the Test Cases for list command which is in the Appendix E. You can refer"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "the link below on DeveloperGuide to view the contribution."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* [DeveloperGuide](https://ay2021s1-cs2113-t14-1.github.io/tp/DeveloperGuide.html)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "#### Review/mentoring contributions:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "Provided feedbacks to team members on their code through pull request and also private messaging. Refer the links below on some of my feedback "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "to the team members through pull request."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* [Pull Request 1](https://github.com/AY2021S1-CS2113-T14-1/tp/pull/201)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* [Pull Request 2](https://github.com/AY2021S1-CS2113-T14-1/tp/pull/208)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "In addition, I always get involved in discussion on a better implementation of method in the function. Most of our discussion is on Zoom. "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "#### Contributions beyond the project team:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "Provided post feedbacks to other project teams on the bug i encountered during the PE Dry Run. Refer the links below on some of my post feedback "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "to other project team through the issue tracker."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* [Bug Issue 1](https://github.com/Ang-Cheng-Jun/ped/issues/9)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "* [Bug Issue 2](https://github.com/AY2021S1-CS2113-T13-2/tp/issues/220)"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 67,
      "-": 4,
      "fanceso": 1
    }
  },
  {
    "path": "docs/team/fanceso.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "# Yang Fan - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "SmartHomeBot is a **desktop application that consolidates all home appliance’s control into a "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "centralized system via a Command Line Interface (CLI)**. SmartHomeBot is a National University of Singapore team project, *JAVA* is the main language used, under module   "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "**CS2113: Software Engineering \u0026 Object Oriented Programming**. This application is a simulation of control panel for home appliances. Smart Home gadgets like Smart Switch, Smart WiFi LED, Fan and Air Conditional can be integrated in the future. This appliance allows user to control four main types of appliances such as Fan, Light, Air Conditional and SmartPlug. User able to add the appliances as their own configuration of their house and data will be saved locally. Control on and off of the appliances allows user to monitor the power usage of the smart devices.  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### Code Contributed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Click on [RepoSense](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dfanceso\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003dfunctional-code~test-code~other~docs) to find out more about  my contribution to the project on Github."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "##### Main Functions Implemented"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "I am mainly responsible for the monitoring of power usage of all Appliances within SmartHomeBot. Which consists of: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "###### *Data*"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- `Power`: Data which stores as appliance\u0027s status and its power consumption usage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  ![Power Class](../images/diagrams/ClassDiagram_Power.png)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "The class diagram above shows how power is been stored and computed. The calculation of kWh requires time and here the system time from the machine is used. Whenever user is using the appliance, the monitor of the power consumption will be always calculating with the appliance\u0027s respective `ON/OFF` status and its wattage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "###### *Logic*"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- `Usage` : Command to compute and display total power consumption usage. "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "- `Reset` : Command to reset all previous recorded power consumption usage.     "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "The functionalities and manipulation of above mentioned are under my responsibilities, I will have to seek feedbacks from my fellow teammates for bugs and functionalities requests. "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### Enhancements implemented"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "I implemented the Usage command which will record and monitor the actual usage according to the Local System Time from the Machine, this will give an accurate usage from real life. Upon user leaving the program, all appliances will be turn off asn stop its monitoring as program was terminated. In order to have a good user experience, I have implemented *Auto-Formatting* for the printing out result. Every new appliance and location is added or delete to the application, the longest length of these string will be found out as the required printing index. The format of printing is showing in the screenshot below."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "  ![Power Class](../images/user_guide/autoformatting_screenshot.JPG)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### Contributions to the DeveloperGuide: "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "Write up about the introduction and appendix of SmartHomeBot, in charge of overall styling and alignments of the contents and diagrams. Provided Sequence Diagrams for the Architecture, Overview with example, UI, Usage Command and Reset Command. Also, provide class diagram for TextUi.  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### Review/mentoring contributions:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "I also actively take part in reviewing my teammates code through GitHub:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* [Pull Request 1](https://github.com/AY2021S1-CS2113-T14-1/tp/pull/31)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* [Pull Request 2](https://github.com/AY2021S1-CS2113-T14-1/tp/pull/223)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "In addition, we often meet up on Zoom and other communication channels. I will be the one who takes care of admin issues and note down the to do list for the team."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "#### Contributions beyond the project team:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "I also actively take part in other group\u0027s project development by reviewing their program for tutorials and PE dry runs. "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* [Bug Issue 1](https://github.com/fanceso/ped/issues)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* [Comments 1](https://github.com/nus-cs2113-AY2021S1/tp/pull/19)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* [Comments 2](https://github.com/nus-cs2113-AY2021S1/tp/pull/3)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "* [Comments 3](https://github.com/nus-cs2113-AY2021S1/tp/pull/15)"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "fanceso": 48
    }
  },
  {
    "path": "docs/team/leonlowzd.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "# Leon Low - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "SmartHomeBot is a **desktop application that consolidates all home appliance’s control into a "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "centralized system via a Command Line Interface (CLI)**. SmartHomeBot is our team project submission for "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "**CS2113: Software Engineering \u0026 Object Oriented Programming** Module. "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "#### Code Contributed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Below is the link to view all the codes that I contributed to SmartHomeBot Project. Click on RepoSense to direct you to "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "the page:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "* [RepoSense](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dleonlowzd\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "##### Main Functions Implemented"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "I am mainly responsible for the data package of SmartHomeBot. Which consists of: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "1. ApplianceList: Data Structure storing the Appliances."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "2. LocationList: List of stored locations. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "3. Types of Appliances:    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    1. Air-Conditioner "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    2. Fan "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    3. Lights"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    4. Smart Plug "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "The functionalities and manipulation of data are under my responsibilities, I will have to seek feedbacks from my fellow"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "teammates for bugs and functionalities requests. "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "#### Enhancements implemented"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "I implemented the ON/OFF by parameters function for SmartHomeBot which enabled the program to change temperature and speed"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "for Air-Conditioner and Fan type appliances. "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "#### Contributions to the DeveloperGuide: "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Provided Class Diagrams for the data package and Sequence Diagrams ON/OFF Commands. "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "#### Review/mentoring contributions:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "I also actively take part in reviewing my teammates code through GitHub:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "* [Pull Request 1](https://github.com/AY2021S1-CS2113-T14-1/tp/pull/193)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "* [Pull Request 2](https://github.com/AY2021S1-CS2113-T14-1/tp/pull/203)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "In addition, we meetup and discuss regularly on the developments of SmartHomeBot through Zoom and other messaging platforms like WhatsApp and Telegram.  "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "#### Contributions beyond the project team:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "I also actively take part in other group\u0027s project development by reviewing their program for tutorials and PE dry runs. "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "* [Bug Issue 1](https://github.com/leonlowzd/ped/issues/1)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "* [Bug Issue 2](https://github.com/nus-cs2113-AY2021S1/tp/pull/28)"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 49
    }
  },
  {
    "path": "docs/team/tanleewei.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "# Tan Lee Wei - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "SmartHomeBot is a **desktop application that consolidates all home appliance’s control into a "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "centralized system via a Command Line Interface (CLI)**. Even though the main target of the "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "SmartHomeBot is disabled home users with mobility issues, it can be used by anyone that wants to have"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "a bot to help in controlling household appliances but prefer typing than speaking to the bot. The main goal"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "of this application is to help to make the life of the user easier and more convenient by allowing the user to add "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "their household appliances into the SmartHomeBot, allowing the user to switch on and off their appliances through the "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "application and also monitor their electrical power usage."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "## Code Contributed"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Below is the link to view all the codes that I contributed to SmartHomeBot Project. Click on "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "RepoSense to direct you to the page:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "* [RepoSense](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dTanLeeWei\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "#### Main Function implemented"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "I am mainly responsible for the storage package and some of the data package for SmartHomeBot."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "1. LocationList: list of stored locations."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "2. StorageFile"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    1. ReadStorageFile: Read the data is the .txt storage file back into the program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    2. WriteStorageFile: Write the data in the program into the .txt storage file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "##### Enhancement implemented"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "I implemented the WriteStorageFile in such a way that each time the user entered a command, the program "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "will automatically save the updates and overwrites all the data in the storage file with the new contents, so that "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "this will prevent any lost of data even if the program crashes halfway."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "#### Contributions to UserGuide"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "I have provided explanations and examples for some of the SmartHomeBot functions. I have also added some images as "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "examples on how to use the application to give a better illustration on how to use the application to the users. After"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "my team members and I have complete our parts of the UserGuide, we will come together to review the UserGuide "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "to find out any mistakes we have made and parts we are lacking in the UserGuide."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "* [UserGuide](https://ay2021s1-cs2113-t14-1.github.io/tp/UserGuide.html)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "#### Contributions to DeveloperGuide"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "I have done explanations and designs for the sequence and class diagrams of storage components. I have also done "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "explanations and designs for the sequence diagrams of AddCommand and DeleteCommand. Refer to the link below to view "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "the DeveloperGuide."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "* [DeveloperGuide](https://ay2021s1-cs2113-t14-1.github.io/tp/DeveloperGuide.html)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "#### Contributions to team-based tasks"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "* Help to review teammates pull requests for any errors before their merge."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "* Provided feedbacks to UserGuide and DeveloperGuide when my teammates done their sections."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "* Meet up regularly in project discussion through zoom sessions and telegram group to update on our progress."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "* Provided suggestions and questions to improve the project during project meetings."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "#### Contributions beyond the project team"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "I have also provided in other group\u0027s project development by reviewing the products during tutorials and PE dry runs."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "* [Bug Issue 1](https://github.com/TanLeeWei/ped/issues/4)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "* [Bug Issue 2](https://github.com/TanLeeWei/ped/issues/1)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 56,
      "-": 4,
      "fanceso": 1
    }
  },
  {
    "path": "docs/team/zongxian-ctrl.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "# Ong Zong Xian - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "SmartHomeBot is a **desktop application that consolidates all home appliance’s control into a "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "centralized system via a Command Line Interface (CLI)**. SmartHomeBot is our team project submission for "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "**CS2113: Software Engineering \u0026 Object Oriented Programming** Module. "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Code contributed:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Below is the link to my code contribution for this project: "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* Code Contribution: [RepoSense](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dzongxian-ctrl\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Main Function implemented:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "I am mainly responsible for the Parser class and some Commands the following commands for SmartHomeBot. "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "**Logic**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* `Parser`: Responsible for ensuring that all User input are parser correctly as well as acting "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "as the first filter to detect any error in the user input to prevent further error in the program. "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* `CreateCommand`: Command to add new Location to SmartHomeBot."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* `RemoveCommand`: Command to remove specified Location from SmartHomeBot."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* `AddCommand`: Command to add a new Appliance to a certain location in SmartHomeBot."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* `DeleteCommand`: Command to delete specified Appliance from SmartHomeBot."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Enhancements implemented:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Implemented the `Parser` to ensure that User entered the correct format for Commands into SmartHomeBot."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Functions include:  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "1. Ensuring that User enter the correct format as stated in User Guide."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "2. Ensuring that User does not give empty parameter or illegal parameter if the command requires it. "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "3. Detecting any Illegal character such as `spaces` or `|` or `/` which might ensure in error of the CLI program. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "4. Implemented `StringUtils.replaceOnce` to prevent special character from ending the program, as Java String Library .replaceFirst "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "only supports regex."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* Implementation of Parser involved frequent updates from v1.0 to v2.1 as any changes to the implementation and functions"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "of SmartHomeBot normally involve needing to parse the command differently to prevent bugs and error."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Implemented the `CreateCommand` to make sure User does not create duplicate Location of the same name with existing Locations"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "as well as Appliance name. "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Implemented the `RemoveCommand` to make sure User does not remove a Location that does not exist. "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "As well as deleting appliances in the Location that is being removed as well. "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Implemented the `AddCommand` to make sure User add an Appliance with the type available specified in the UserGuide. "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Furthermore, making sure it is added to a Location that is available in SmartHomeBot with the name specified not being a duplicate."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Implemented the `DeleteCommand` to make sure User does not delete an Appliance that does not exist."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Minor enhancement: Wrote the logger setup to allow teammates to perform logging in their respective sections. "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Contribution to User Guide:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "1. I have written the documentation explaining on how to use the Commands available as well as the Format to ensure standardisation."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "2. I am also responsible for updating table for Command Summary in UserGuide and making sure the content in UserGuide are in order."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Contribution to Developer Guide:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "1. Added UML Sequence Diagrams for Parser, CreateCommand and RemoveCommand."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "2. Wrote documentation for Parser, CreateCommand and RemoveCommand. "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Contributions to team-based tasks: "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* Set up Team repo\u0027s issue tracker and milestones for `v1.0`, `v2.0` and `v2.1`. "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* Some examples of providing feedback to team member\u0027s pull requests: e.g [#208](https://github.com/AY2021S1-CS2113-T14-1/tp/pull/208), [#210](https://github.com/AY2021S1-CS2113-T14-1/tp/pull/210) "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "* In addition, meets up regularly with my team to update and discuss the developments of SmartHomeBot"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "through Zoom, and our group personal Telegram group. "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "#### Contributions beyond the project team: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Provided feedback to other CS2113 project teams on the bug encounterd during the semester. "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "Links below are some feedback to other project teams."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "1. [PE Dry Run](https://github.com/zongxian-ctrl/ped/issues)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "2. [Review DG of Peer Team #1](https://github.com/nus-cs2113-AY2021S1/tp/pull/131)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "3. [Review DG of Peer Team #1](https://github.com/nus-cs2113-AY2021S1/tp/pull/4)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "4. [Review Peer IP PRs #1](https://github.com/nus-cs2113-AY2021S1/ip/pull/28)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "5. [Review Peer IP PRs #2](https://github.com/nus-cs2113-AY2021S1/ip/pull/151)"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "zongxian-ctrl": 68,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/Main.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.storage.ReadStorageFile;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.storage.WriteStorageFile;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.ui.TextUi;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "//@@author Ang-Cheng-Jun"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "//Solution below adapted from https://github.com/nus-cs2113-AY2021S1/personbook"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " * Entry point of the SmartHome application."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/SmartHomeBot.txt\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private final ApplianceList applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private final LocationList locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private final Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private WriteStorageFile writeFile \u003d new WriteStorageFile(FILE_PATH, applianceList, locationList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private ReadStorageFile readFile \u003d new ReadStorageFile(FILE_PATH, applianceList, locationList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private final Logger logger \u003d Logger.getLogger(\"SmartHomeBotLogger\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        new Main().run();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Runs the program until termination."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Initialises the import of data from the text file,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * and prints the Welcome message."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.ui \u003d new TextUi();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        setupLogger();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        readFile.execute();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Prints the Goodbye message and exits."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        ui.showGoodByeMessage();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Reads the user command and executes it, until the user issues the bye command."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            String userCommandText \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            command \u003d parser.parseCommand(userCommandText);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            CommandResult result \u003d executeCommand(command);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            writeFile.execute();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            if (result !\u003d null) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                ui.printResultToUser(result);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        } while (!ExitCommand.isExit(command));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Executes the user command and prints the result."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private CommandResult executeCommand(Command command) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            command.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            CommandResult result \u003d command.execute();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            ui.printToUser(e.getMessage());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            throw new RuntimeException(e);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    //@@author zongxian-ctrl"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Creates the default logger with level and initialise log file."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private void setupLogger() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        File myObj \u003d new File(\"./log\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        logger.setLevel(Level.INFO);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            if (!myObj.exists()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                myObj.mkdir();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            FileHandler fileHandler \u003d new FileHandler(\"log/SmartHomeBotLog.txt\", false);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            fileHandler.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            logger.addHandler(fileHandler);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 3,
      "Ang-Cheng-Jun": 83,
      "TanLeeWei": 2,
      "zongxian-ctrl": 28,
      "fanceso": 4
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/commons/Messages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Class for all the user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String LINE \u003d \"-\".repeat(Math.max(0, 52)) + \"\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String DIVIDER \u003d \"\u003d\".repeat(Math.max(0, 52));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"Welcome to your SmartHomeBot V2.1!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"Good bye!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_IMPORT \u003d \"Importing data........Completed!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_EXPORT \u003d \"Exporting data........Completed!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static final String MESSAGE_APPLIANCE_TYPE_NOT_EXIST \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"Invalid appliance type is detected. Only aircon, fan, light and smartplug are accepted as type.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_APPLIANCE_EXIST \u003d \"Appliance name already exists.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_LOCATION_NOT_EXIST \u003d \"Location does not exist.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_APPLIANCE_LOCATION_CONFLICT \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"Appliance name already exist in the location list.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_TOTAL_POWER_USAGE \u003d \"\\n\\nTotal power consumption: \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_LIST_LOCATIONS \u003d \"Here are the Location in your list:\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_LIST_APPLIANCES \u003d \"Here are the Appliances in your list:\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_POWER_USAGE \u003d \"Here are the recorded power usage consumption:\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_LIST_NO_LOCATIONS \u003d \"There is currently no Location in the list.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_LIST_NO_APPLIANCES \u003d \"There is currently no Appliance in the list.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_USAGE_RESET \u003d \"Previous recorded power usage has been reset!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid Command Format\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String MESSAGE_INVALID_ADD_COMMAND \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            \"Please follow this order, add NAME l/[LOCATION_NAME] w/[WATTS] t/[TYPE_OF_APPLIANCE]\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_INVALID_LIST_COMMAND \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            \"Please enter either \u0027list appliance\u0027 or \u0027list location\u0027 or \u0027list appliance l/LOCATION_NAME\u0027\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_VALUE_NOT_NUMBER \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"Please enter a valid numerical value ranging from 1-9999 for the wattage.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_PARAMETER_INVALID \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"Please enter a valid numerical value.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_POWER_EXCEEDED \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"Appliance wattage is not supported. Please enter between 1 to 9999.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_TIME_FORMAT_ERROR \u003d \"Time format is wrong.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_APPLIANCE_PREVIOUSLY_ON \u003d \" is already ON. \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_APPLIANCE_PREVIOUSLY_OFF \u003d \" is already OFF. \";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_NO_PARAMETER_IN_ON_BY_LOCATION \u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"There should be no parameter for this command, please refer to \u0027help\u0027 command.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_FILE_CORRUPTED \u003d \"Data file is corrupted, some data entry will not be entered.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_APPLIANCE_OR_LOCATION_NOT_EXIST \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"Appliance or Location does not exist in the list.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_INVALID_TEMPERATURE_AC \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"Invalid Temperature is detected, ensure that it is within 16-30 degrees.\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    + \"Previous set temperature will be set. \";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_INVALID_FAN_SPEED \u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"Invalid speed is detected, ensure that it is within 1-3 speed.\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    + \"Previous set speed will be set.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String MESSAGE_ILLEGAL_CHARACTER \u003d \"Illegal Character space or /  or | detected in\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String MESSAGE_EMPTY_PARAMETER \u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"Empty Parameter detected! Please follow format and enter required parameters.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_LOCATION_EXIST \u003d \"Location already exist\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            \"Exiting SmartHomeBot as requested, all Appliances are switched off.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static final String MESSAGE_FILE_DOES_NOT_EXIST \u003d \"Load File does not exist. No contents will be loaded.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static final String MESSAGE_WRITE_FILE_ERROR \u003d \"An error occurred while writing storage file.\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static final String MESSAGE_FILE_CREATION_ERROR \u003d \"Something went wrong. Unable to create file.\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static final String MESSAGE_CLEAR_FILE_ERROR \u003d \"Storage file does not exist\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static final String MESSAGE_EMPTY_FILE \u003d \"The storage file is empty. No contents will be loaded.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 26,
      "Ang-Cheng-Jun": 11,
      "TanLeeWei": 12,
      "zongxian-ctrl": 5,
      "fanceso": 10
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/commons/exceptions/ApplianceNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Signals an error when the user entered a appliance that does not exist in the ApplianceList."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class ApplianceNotFoundException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 3,
      "TanLeeWei": 3,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/commons/exceptions/DuplicateDataException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Signals an error when the user enter a duplicate data."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class DuplicateDataException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 3,
      "zongxian-ctrl": 3,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/commons/exceptions/InvalidLocationException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Signals an error when the user enter a location that does not exist or wrong format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class InvalidLocationException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 4,
      "TanLeeWei": 3
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/commons/exceptions/InvalidNumericalValueException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Signals an error when the user entered an non-numerical value as power input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class InvalidNumericalValueException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 3,
      "fanceso": 4
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/commons/exceptions/NoApplianceInLocationException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.smarthomebot.commons.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Signals an error when the user calls list appliance command in a location with no appliance."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class NoApplianceInLocationException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 4,
      "TanLeeWei": 3
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/data/appliance/Appliance.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.data.appliance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.InvalidNumericalValueException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "//@@author leonlowzd"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Abstract Class representing the appliances for SmartHomeBot."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public abstract class Appliance {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final String ON \u003d \"ON\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final String OFF \u003d \"OFF\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static LocationList locationList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String location;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String wattage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected Power appliancePower;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Constructor for Appliance."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param name         name of appliance."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param location     location of appliance."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param wattage      wattage of appliance."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param locationList locations available in SmartHomeBot, appliance will only be created:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *                     Appliance will only be created when:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *                     1. location inputted is present in the locationList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *                     2. User inputted name does not exist in locationList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws InvalidApplianceNameException When name already exists in LocationList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws LocationNotFoundException     When Location does not exist in LocationList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Appliance(String name, String location, String wattage, LocationList locationList)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throws LocationNotFoundException, InvalidApplianceNameException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.locationList \u003d locationList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (locationList.isLocationCreated(location) \u0026\u0026 (!locationList.isLocationCreated(name))) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            this.location \u003d location;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            this.wattage \u003d wattage;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            appliancePower \u003d new Power(wattage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (locationList.isLocationCreated(name)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                throw new InvalidApplianceNameException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                throw new LocationNotFoundException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Converts String value into integer."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the parameter in integer."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static int convertParameterToInt(String parameter) throws InvalidNumericalValueException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return Integer.parseInt(parameter);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new InvalidNumericalValueException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the status of Appliance to on."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the outcome of the operation."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public boolean switchOn() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return appliancePower.onAppliance();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the status of Appliance to off."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the outcome of the operation."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public boolean switchOff() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return appliancePower.offAppliance();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void resetPowerUsage() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        appliancePower.resetPower();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Gets the status of the appliance."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the status of the appliance."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return (appliancePower.getStatus() ? ON : OFF);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Compute the power consumption of the appliance."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the power consumption of the appliance in double."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public double getPowerInDouble() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return appliancePower.getPower();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Gets the power consumption of the appliance in String."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the power consumption of the appliance in String."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getPowerInString() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return appliancePower.toString();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Recomputes the power consumption of the appliance."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void loadDataFromFile(String powerConsumption) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        appliancePower.loadDataFromFile(Double.parseDouble(powerConsumption));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Gets the power rating of the appliance in String."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the power rating of the appliance in String."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getWattage() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return wattage;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to gets the name of appliance."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the type of the appliance in String."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to gets the location of appliance."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the location of the appliance in String."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getLocation() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return location;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Abstract method to gets the type of appliance."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the type of the appliance in String."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Abstract method to gets the parameter of appliance."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the type of the appliance in String."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public abstract String getParameter(boolean isList);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to gets the printout for the appliance."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the printout for appliance."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return getName() + \"(\" + getWattage() + \"W)\" + \", located at \" + getLocation() + \" \";"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to save the printout for the appliance to text file."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the printout for appliance."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String writeFileFormat() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return location + \"|\" + name + \"|\" + wattage + \"|\" + getType()"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                + \"|\" + getPowerInString() + \"|\" + getParameter(false);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to check validity of inputted parameter."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param lowerBound parameter must be larger than lowerBound."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param upperBound parameter must be smaller than upperBound."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return true if parameter is valid."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected boolean isParameterValid(String parameter, int lowerBound, int upperBound) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            int parameterValue \u003d convertParameterToInt(parameter);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if ((parameterValue \u003c upperBound) \u0026\u0026 (parameterValue \u003e lowerBound)) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (InvalidNumericalValueException e) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 201,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/data/appliance/ApplianceList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.data.appliance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.ApplianceNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "//@@author leonlowzd"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Represents the Appliances of SmartHomeBot."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class ApplianceList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static ArrayList\u003cAppliance\u003e applianceList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Constructor of ApplianceList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public ApplianceList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        applianceList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to add a new Appliance to the ApplianceList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param appliance Appliance to add."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws DuplicateDataException Appliance name is already in the List."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void addAppliance(Appliance appliance) throws DuplicateDataException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (!isApplianceExist(appliance.getName())) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            applianceList.add(appliance);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new DuplicateDataException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to delete a Appliance from the ApplianceList."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param userEnteredName Appliance to remove."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws ApplianceNotFoundException When keyed name is not found in ApplianceList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Appliance deleteAppliance(String userEnteredName) throws ApplianceNotFoundException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (Appliance appliance : getAllAppliance()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (appliance.getName().equals(userEnteredName)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                applianceList.remove(appliance);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                return appliance;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        throw new ApplianceNotFoundException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to retrieve the Appliance from the ApplianceList."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param index Appliance to retrieve."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Appliance getAppliance(int index) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return applianceList.get(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to retrieve all of the Appliances from the ApplianceList."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the full list of the Appliances."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public ArrayList\u003cAppliance\u003e getAllAppliance() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return applianceList;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to check if the Appliance exists in the ApplianceList."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param toAddApplianceName Appliance to check."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Boolean isApplianceExist(String toAddApplianceName) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        boolean isExist \u003d false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (Appliance a : applianceList) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (a.getName().equals(toAddApplianceName)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                isExist \u003d true;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return isExist;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to remove Appliances located in the user selected location in the ApplianceList."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param usersEnteredLocation Appliance to check."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws ApplianceNotFoundException When keyed name is not found in ApplianceList."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void deleteByLocation(String usersEnteredLocation) throws ApplianceNotFoundException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (int x \u003d getAllAppliance().size() - 1; x \u003e\u003d 0; x--) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (getAppliance(x).getLocation().equals(usersEnteredLocation)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                deleteAppliance((getAppliance(x).getName()));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to return the index of the Appliance from the input argument."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param argument Name of Appliance to find in the List."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws ApplianceNotFoundException When keyed name is not found in ApplianceList."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public int getApplianceIndex(String argument)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throws ApplianceNotFoundException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (Appliance appliance : applianceList) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (appliance.getName().equals((argument))) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                return applianceList.indexOf(appliance);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        throw new ApplianceNotFoundException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 115,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/data/appliance/Power.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.data.appliance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.ui.TextUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.LINE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_TIME_FORMAT_ERROR;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "//@@author fanceso"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": " * Class representing the power consumption of appliances."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class Power {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static final String DATE_TIME_FORMAT \u003d \"dd/MM/yyyy-HH:mm:ss\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private final int wattage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private String offTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private String onTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private Boolean status;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private double powerUsed;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private double totalPowerConsumption;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Constructor for Power Class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param wattage Wattage of appliance."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Power(String wattage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.wattage \u003d Integer.parseInt(wattage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.status \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.totalPowerConsumption \u003d 0.00;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Gets the status of the appliance."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return the status of the appliance in Boolean."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Boolean getStatus() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Appliance only can be switched on if it was \u0027off\u0027 previously."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return true if appliance has not been turned on before."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public boolean onAppliance() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (!status) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            status \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            onTime \u003d getCurrentTime();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            assert !onTime.isEmpty() : \"onTime must not accept empty value\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            // Appliance has been turned ON previously"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Appliance only can be switched off if it was \u0027on\u0027 previously."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Compute the total power consumption once appliance is off."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return true if appliance has not been turned off before."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public boolean offAppliance() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (status) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            status \u003d false;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            offTime \u003d getCurrentTime();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            computeTotalPower();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Reset all the appliance power usage and the total power consumption."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void resetPower() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        powerUsed \u003d 0.00;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        totalPowerConsumption \u003d 0.00;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Gets the power consumption of appliance."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return the power consumption in double."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public double getPower() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        computeTotalPower();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (totalPowerConsumption \u003c 0) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return totalPowerConsumption;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Gets the current system time from local machine."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return formatted current time with given format \"dd/MM/yyyy-HH:mm:ss\"."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private String getCurrentTime() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        LocalDateTime currentTime;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT, Locale.ENGLISH);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        currentTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return dateTimeFormatter.format(currentTime);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Computes power consumption from loaded file."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param powerConsumption of each appliance used within a day"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void loadDataFromFile(double powerConsumption) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        powerUsed \u003d powerConsumption;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        totalPowerConsumption +\u003d powerUsed;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Calculate time used while is appliance on."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private double calculateTimeUsed() throws ParseException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        double totalHours;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        SimpleDateFormat timeFormat \u003d new SimpleDateFormat(DATE_TIME_FORMAT, Locale.ENGLISH);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Date onTimeValue;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Date offTimeValue;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        double timeUsed \u003d 0;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (onTime !\u003d null) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            assert !onTime.isEmpty() : \"onTime must not accept empty value\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            onTimeValue \u003d timeFormat.parse(onTime);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (!status) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                offTimeValue \u003d timeFormat.parse(offTime);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                timeUsed \u003d offTimeValue.getTime() - onTimeValue.getTime();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                assert timeUsed \u003e\u003d 0 : \"System Time is not correct! \" + timeUsed;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                onTime \u003d offTime;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                Date currentUsedTime \u003d timeFormat.parse(getCurrentTime());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                timeUsed \u003d currentUsedTime.getTime() - onTimeValue.getTime();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                onTime \u003d getCurrentTime();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        totalHours \u003d timeUsed / (1000 * 60 * 60);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return totalHours;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Computes power of Appliance to latest instance of duration where Appliance is on."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private void computePower() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            double totalTimeUsed \u003d calculateTimeUsed();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            // Convert power unit to kWh"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            powerUsed \u003d totalTimeUsed * wattage / 1000.00;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            ui.printToUser(LINE + MESSAGE_TIME_FORMAT_ERROR);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assert powerUsed \u003e\u003d 0 : \"Power usage cannot be negative! \" + powerUsed;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Increment the total Power consumption of the Appliance."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private void computeTotalPower() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        computePower();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        totalPowerConsumption +\u003d Math.round(powerUsed * 100.0) / 100.0;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assert totalPowerConsumption \u003e\u003d 0 : \"totalPowerConsumption cannot be negative\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Gets the power consumption in String."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return the power consumption with only 2 decimal places in String."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return String.format(\"%.2f\", totalPowerConsumption);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "Ang-Cheng-Jun": 3,
      "fanceso": 185
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/data/appliance/type/AirConditioner.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.data.appliance.type;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "//@@author leonlowzd"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Represents Air Conditioner type extended from Appliance."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class AirConditioner extends Appliance {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String TYPE_WORD \u003d \"aircon\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final int LOWER_BOUND \u003d 15;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final int UPPER_BOUND \u003d 31;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String temperature;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Constructor for Air Conditioner type."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param name         name of appliance."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param location     location of appliance."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param wattage      wattage of appliance."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param locationList locations available in SmartHomeBot, appliance will only be created:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *                     Appliance will only be created when:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *                     1. location inputted is present in the locationList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *                     2. User inputted name does not exist in locationList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws InvalidApplianceNameException When name already exists in LocationList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws LocationNotFoundException     When Location does not exist in LocationList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public AirConditioner(String name, String location, String wattage, LocationList locationList)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throws InvalidApplianceNameException, LocationNotFoundException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        super(name, location, wattage, locationList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.temperature \u003d \"25\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to return the set temperature of the Air conditioner."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the set set temperature of the appliance in String."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getParameter(boolean isList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (isList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return String.format(\"%s Degrees\", getParameter(false));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return temperature;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to set the temperature of appliance from user text file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param loadedTemperature temperature to set."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void getTemperatureFromLoadFile(String loadedTemperature) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        setTemperature(loadedTemperature);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to set the temperature of appliance from user input."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param temperature temperature to set."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the corresponding printout message after setting temperature in String."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public boolean setTemperature(String temperature) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        boolean isSuccess \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (temperature.isEmpty()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            // default temperature will be set."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else if (isParameterValid(temperature, LOWER_BOUND, UPPER_BOUND)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            // user input speed will be set."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            this.temperature \u003d temperature;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            // user inputs an invalid temperature."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            isSuccess \u003d false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return isSuccess;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to return the type of appliance."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the type of appliance in String."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return TYPE_WORD;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to return the full details of the appliance."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the full details of the appliance in String."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String temperatureStatement;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (appliancePower.getStatus()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            temperatureStatement \u003d \"@ \" + getParameter(true);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            temperatureStatement \u003d \"\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return super.toString() + temperatureStatement;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 108
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/data/appliance/type/Fan.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.data.appliance.type;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "//@@author leonlowzd"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Represents Fan type extended from Appliance."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Fan extends Appliance {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String TYPE_WORD \u003d \"fan\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final int LOWER_BOUND \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final int UPPER_BOUND \u003d 4;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String speed;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Constructor for Fan type."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param name         name of appliance."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param location     location of appliance."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param wattage      wattage of appliance."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param locationList locations available in SmartHomeBot, appliance will only be created:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *                     Appliance will only be created when:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *                     1. location inputted is present in the locationList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *                     2. User inputted name does not exist in locationList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws InvalidApplianceNameException When name already exists in LocationList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws LocationNotFoundException     When Location does not exist in LocationList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Fan(String name, String location, String wattage, LocationList locationList)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throws InvalidApplianceNameException, LocationNotFoundException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        super(name, location, wattage, locationList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.speed \u003d \"1\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to return the set speed of the Fan."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the set set speed of the appliance in String."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getParameter(boolean isList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (isList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return \"Speed \" + getParameter(false);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return speed;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to set the speed of appliance from user text file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param loadedSpeed speed to set."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void getSpeedFromLoadFile(String loadedSpeed) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        setSpeed(loadedSpeed);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to set the temperature of appliance from user input."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param speed speed to set."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the corresponding printout message after setting speed in String."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public boolean setSpeed(String speed) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        boolean isSuccess \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (speed.isEmpty()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            // default speed will be set."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else if (isParameterValid(speed, LOWER_BOUND, UPPER_BOUND)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            // user input speed will be set."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            this.speed \u003d speed;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            // user inputs an invalid speed."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            isSuccess \u003d false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return isSuccess;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to return the type of appliance."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the type of appliance in String."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return TYPE_WORD;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to return the full details of the appliance."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the full details of the appliance in String."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String speedStatement;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (appliancePower.getStatus()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            speedStatement \u003d \"@ \" + getParameter(true);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            speedStatement \u003d \"\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return super.toString() + speedStatement;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 107
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/data/appliance/type/Lights.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.data.appliance.type;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "//@@author leonlowzd"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Represents Lights type extended from Appliance."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Lights extends Appliance {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String TYPE_WORD \u003d \"light\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Constructor for light type."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param name         name of appliance."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param location     location of appliance."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param wattage      wattage of appliance."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param locationList locations available in SmartHomeBot, appliance will only be created:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *                     Appliance will only be created when:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *                     1. location inputted is present in the locationList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *                     2. User inputted name does not exist in locationList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws InvalidApplianceNameException When name already exists in LocationList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws LocationNotFoundException     When Location does not exist in LocationList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Lights(String name, String location, String wattage, LocationList locationList)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throws InvalidApplianceNameException, LocationNotFoundException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        super(name, location, wattage, locationList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to return the type of appliance."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the type of appliance in String."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return TYPE_WORD;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to return the set temperature of the Air conditioner."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the set set temperature of the appliance in String."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getParameter(boolean isList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"None\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 54
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/data/appliance/type/SmartPlug.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.data.appliance.type;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "//@@author leonlowzd"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Represents SmartPlug type extended from Appliance."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class SmartPlug extends Appliance {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String TYPE_WORD \u003d \"smartplug\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Constructor for SmartPlug type."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param name         name of appliance."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param location     location of appliance."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param wattage      wattage of appliance."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param locationList locations available in SmartHomeBot, appliance will only be created:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *                     Appliance will only be created when:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *                     1. location inputted is present in the locationList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *                     2. User inputted name does not exist in locationList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws InvalidApplianceNameException When name already exists in LocationList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws LocationNotFoundException     When Location does not exist in LocationList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public SmartPlug(String name, String location, String wattage, LocationList locationList)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throws InvalidApplianceNameException, LocationNotFoundException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        super(name, location, wattage, locationList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Returns the type of appliance."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the type of appliance in String."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return TYPE_WORD;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Returns the set temperature of the Air conditioner."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the set set temperature of the appliance in String."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getParameter(boolean isList) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"None\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 55
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/data/location/LocationList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.data.location;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.InvalidLocationException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "//@@author TanLeeWei"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Represents the locations in SmartHomeBot."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class LocationList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private static ArrayList\u003cString\u003e locationList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public LocationList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        locationList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Creating new location if is not existed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @param location used to be added into the location list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void addLocation(String location) throws DuplicateDataException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        // create location from Appliance"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        if (!isLocationCreated(location)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            locationList.add(location);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            throw new DuplicateDataException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Removing selected location with user input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @param location used to be removed from the location list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void removeLocation(String location) throws InvalidLocationException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        if (!(isLocationCreated(location))) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            throw new InvalidLocationException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            int removeIndex \u003d getRemoveLocationIndex(location);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            locationList.remove(removeIndex);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Returns true if location string is not found."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @param toCheckLocation used to identify the display index."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @return isValid true if location is not found in list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public boolean isLocationCreated(String toCheckLocation) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        boolean isValid \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        for (String location : locationList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            if (location.equals(toCheckLocation)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                isValid \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return isValid;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Returns list of Location stored SmartHomeBot."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @return list of Location in SmartHomeBot in ArrayList String."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public ArrayList\u003cString\u003e getAllLocations() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return locationList;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Returns true if location string is not found."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @return list of Location in SmartHomeBot."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        for (String location : locationList) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            sb.append(location);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Returns the index of selected Location to remove."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @param toRemoveLocation name of Location to remove."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @return the index of selected location in integer, if integer is not found, method will return -1."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private int getRemoveLocationIndex(String toRemoveLocation) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        int removeIndex \u003d -1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        int locationIndex \u003d 0;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        for (String location : locationList) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            if (location.equals(toRemoveLocation)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                removeIndex \u003d locationIndex;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                locationIndex++;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return removeIndex;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 2,
      "TanLeeWei": 103,
      "zongxian-ctrl": 1,
      "fanceso": 4
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.AirConditioner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.Fan;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.Lights;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.SmartPlug;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_APPLIANCE_EXIST;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_APPLIANCE_TYPE_NOT_EXIST;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LOCATION_NOT_EXIST;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_APPLIANCE_LOCATION_CONFLICT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "//@@author zongxian-ctrl"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " * Represent the command for adding an appliance to the ApplianceList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Add Appliance: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \" [APPLIANCE_NAME] l/[LOCATION_NAME] w/[WATTAGE] t/[TYPE_OF_APPLIANCE]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String location;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String wattage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Constructor for AddCommand."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param name name of Appliance to create."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param location location the Appliance will be placed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param wattage wattage power rating of Appliance."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param type type of Appliance."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public AddCommand(String name, String location, String wattage, String type) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assert !name.isEmpty() : \"AddCommand must not accept empty name\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assert !location.isEmpty() : \"AddCommand must not accept empty location\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assert !wattage.isEmpty() : \"AddCommand must not accept empty wattage\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assert !type.isEmpty() : \"AddCommand must not accept empty type\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.wattage \u003d wattage;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.type \u003d type.toLowerCase();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Executing the AddCommand."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            switch (this.type) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case Fan.TYPE_WORD:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                Fan fan \u003d new Fan(name, location, wattage, locationList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                applianceList.addAppliance(fan);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                commandLogger.log(Level.INFO, \"ADDING\" + fan.toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return new CommandResult(\"ADDING \" + fan.toString() + \"......ADDED!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case AirConditioner.TYPE_WORD:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                AirConditioner ac \u003d new AirConditioner(name, location, wattage, locationList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                applianceList.addAppliance(ac);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                commandLogger.log(Level.INFO, \"ADDING\" + ac.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return new CommandResult(\"ADDING \" + ac.toString() + \"......ADDED!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case Lights.TYPE_WORD:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                Lights light \u003d new Lights(name, location, wattage, locationList);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                applianceList.addAppliance(light);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                commandLogger.log(Level.INFO, \"ADDING\" + light.toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return new CommandResult(\"ADDING \" + light.toString() + \"......ADDED!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case SmartPlug.TYPE_WORD:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                SmartPlug smartPlug \u003d new SmartPlug(name, location, wattage, locationList);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                applianceList.addAppliance(smartPlug);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                commandLogger.log(Level.INFO, \"ADDING\" + smartPlug.toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return new CommandResult(\"ADDING \" + smartPlug.toString() + \"......ADDED!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                commandLogger.log(Level.WARNING, MESSAGE_APPLIANCE_TYPE_NOT_EXIST);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return new CommandResult(MESSAGE_APPLIANCE_TYPE_NOT_EXIST);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (DuplicateDataException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            commandLogger.log(Level.WARNING, MESSAGE_APPLIANCE_EXIST);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new CommandResult(MESSAGE_APPLIANCE_EXIST);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (LocationNotFoundException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            commandLogger.log(Level.WARNING, MESSAGE_LOCATION_NOT_EXIST);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new CommandResult(MESSAGE_LOCATION_NOT_EXIST);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (InvalidApplianceNameException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            commandLogger.log(Level.WARNING, MESSAGE_APPLIANCE_LOCATION_CONFLICT);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new CommandResult(MESSAGE_APPLIANCE_LOCATION_CONFLICT);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 5,
      "zongxian-ctrl": 82,
      "fanceso": 8
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.data.appliance.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "//@@author zongxian-ctrl"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " * Represent the parent of all command types."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    protected ApplianceList applianceList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    protected LocationList locationList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    protected int maxNameLength \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    protected int maxLocationLength \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static Logger commandLogger \u003d Logger.getLogger(\"SmartHomeBotLogger\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Passes the ApplianceList and LocationList to allow Command classes to use."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param applianceList stores the appliances in SmartHomeBot"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param locationList  stores the locations in SmartHomeBot"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void setData(ApplianceList applianceList, LocationList locationList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.applianceList \u003d applianceList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.locationList \u003d locationList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    //@@author fanceso"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Computing the longest length of name and location in the appliance class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    protected void autoFormattingStringIndex() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        for (Appliance a : applianceList.getAllAppliance()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (a.getName().length() \u003e maxNameLength) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                maxNameLength \u003d a.getName().length();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (a.getLocation().length() \u003e maxLocationLength) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                maxLocationLength \u003d a.getLocation().length();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Abstract Method for executing Command."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public abstract CommandResult execute();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 2,
      "zongxian-ctrl": 31,
      "fanceso": 24
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/CommandResult.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author Ang_Cheng_Jun"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the result of a command execution."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructor for Command Result."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param feedbackToUser Message to print to user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        assert !feedbackToUser.isEmpty() : \"CommandResult must not accept empty feedbackToUser\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 1,
      "-": 20,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/CreateCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.InvalidLocationException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LOCATION_EXIST;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "//@@author zongxian-ctrl"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " * Represent the command for creating a location in the LocationList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class CreateCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"create\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Create location: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \" [LOCATION_NAME]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String userEnteredLocation;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Constructor for CreateCommand."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param location Name of Location to be created."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public CreateCommand(String location) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assert !location.isEmpty() : \"CreateCommand must not accept empty location\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.userEnteredLocation \u003d location;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Executing the CreateCommand."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            if (!applianceList.isApplianceExist(userEnteredLocation)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                locationList.addLocation(userEnteredLocation);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                throw new InvalidLocationException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            commandLogger.log(Level.INFO, \"Created new Location \" + userEnteredLocation);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new CommandResult(\"Creating Location \\\"\" + userEnteredLocation + \"\\\".....CREATED!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (DuplicateDataException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            commandLogger.log(Level.WARNING, MESSAGE_LOCATION_EXIST);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new CommandResult(MESSAGE_LOCATION_EXIST);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (InvalidLocationException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            commandLogger.log(Level.WARNING, \"Duplicate name found in ApplianceList\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new CommandResult(MESSAGE_LOCATION_EXIST"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                    + \" as an Appliance, please choose another name.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 3,
      "Ang-Cheng-Jun": 1,
      "zongxian-ctrl": 48,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.ApplianceNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.LINE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "//@@author zongxian-ctrl"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " * Represent the command for deleting an appliance in the ApplianceList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Delete Appliance: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \" [APPLIANCE_NAME]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String userEnteredName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Constructor for DeleteCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param name Appliance name to be deleted."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public DeleteCommand(String name) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assert !name.isEmpty() : \"DeleteCommand must not accept empty name\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.userEnteredName \u003d name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Executing the DeleteCommand."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            Appliance toDeleteAppliance \u003d applianceList.deleteAppliance(userEnteredName);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            autoFormattingStringIndex();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            commandLogger.log(Level.INFO, \"Deleted Appliance \" + toDeleteAppliance);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new CommandResult(\"Deleting \" + toDeleteAppliance + \".......DELETED.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (ApplianceNotFoundException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            commandLogger.log(Level.WARNING, userEnteredName + \" does not exist.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new CommandResult(userEnteredName + \" does not exist.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 3,
      "zongxian-ctrl": 42,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_EXIT_ACKNOWLEDGEMENT;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "//@@author Ang-Cheng-Jun"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " * Represent the command to terminate the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Exiting the application: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Method to check if ExitCommand class is created."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @param command check for ExitCommand class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @return true if ExitCommand class is created"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return command instanceof ExitCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Executing the ExitCommand."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        for (Appliance a : applianceList.getAllAppliance()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            a.switchOff();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        commandLogger.log(Level.INFO, MESSAGE_EXIT_ACKNOWLEDGEMENT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "Ang-Cheng-Jun": 35,
      "TanLeeWei": 3,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.LINE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "//@@author zongxian-ctrl"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " * Represent the command for showing help instructions."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Help: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String MESSAGE_HELP \u003d \"Here is the list of commands available:\\n\" + LINE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \"\\t1. \" + HelpCommand.MESSAGE_USAGE + \"\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \"\\t2. \" + CreateCommand.MESSAGE_USAGE + \"\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \"\\t3. \" + RemoveCommand.MESSAGE_USAGE + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \"\\t4. \" + AddCommand.MESSAGE_USAGE + \"\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \"\\t5. \" + DeleteCommand.MESSAGE_USAGE + \"\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \"\\t6. \" + OnCommand.MESSAGE_USAGE + \"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \"\\t7. \" + OffCommand.MESSAGE_USAGE + \"\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \"\\t8. \" + ListCommand.MESSAGE_USAGE + \"\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \"\\t9. \" + UsageCommand.MESSAGE_USAGE + \"\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \"\\t10. \" + ResetCommand.MESSAGE_USAGE + \"\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \"\\t11. \" + ExitCommand.MESSAGE_USAGE + \"\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Executing the HelpCommand."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        return new CommandResult(MESSAGE_HELP);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "Ang-Cheng-Jun": 1,
      "zongxian-ctrl": 32,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/InvalidCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "//@@author Ang-Cheng-Jun"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " * Represent the command to print error notifications to user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Constructor for InvalidCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @param feedbackToUser Error message to be printed to user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public InvalidCommand(String feedbackToUser) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assert feedbackToUser.isEmpty() !\u003d true  : \"InvalidCommand must not accept empty feedbackToUser\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Executing the InvalidCommand."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        commandLogger.log(Level.WARNING, feedbackToUser);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return new CommandResult(feedbackToUser);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 32,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.EmptyApplianceListException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.EmptyLocationListException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.NoApplianceInLocationException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LIST_APPLIANCES;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LIST_LOCATIONS;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LIST_NO_APPLIANCES;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LIST_NO_LOCATIONS;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "//@@author Ang-Cheng-Jun"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " * Represent the command to list LocationList or ApplianceList to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"List: \\n\\t\\t a. \" + COMMAND_WORD"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \" appliance \\n\\t\\t b. \" + COMMAND_WORD + \" location \\n\\t\\t c. \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + COMMAND_WORD + \" appliance l/[LOCATION_NAME]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String APPLIANCE_TYPE \u003d \"appliance\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String LOCATION_TYPE \u003d \"location\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String DISPLAY_LOCATION \u003d \" | Location: \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String DISPLAY_STATUS \u003d \" | Status: \";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String DISPLAY_WATT \u003d \" | Watt: \";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String DISPLAY_TYPE \u003d \" | Type: \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String DISPLAY_PARAMETER \u003d \" | Parameter: \";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private final String filteredLocation;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Constructor for List Command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @param argument         to determine ListLocation or ListAppliance."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @param filteredLocation input location filter for ListAppliance."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public ListCommand(String argument, String filteredLocation) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assert argument.isEmpty() !\u003d true : \"ListCommand must not accept empty argument\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.filteredLocation \u003d filteredLocation;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Executing the ListCommand."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            switch (argument) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            case LOCATION_TYPE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return listLocation();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            case APPLIANCE_TYPE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return listAppliance();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                commandLogger.log(Level.WARNING, \"Invalid Format\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return new CommandResult(\"Invalid Format\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        } catch (EmptyApplianceListException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            commandLogger.log(Level.WARNING, \"Unable to list: Empty Appliance List\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            return new CommandResult(MESSAGE_LIST_NO_APPLIANCES);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        } catch (LocationNotFoundException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            commandLogger.log(Level.WARNING, \"Location: \\\"\" + filteredLocation + \"\\\" does not exist.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            return new CommandResult(\"Location: \\\"\" + filteredLocation + \"\\\" does not exist.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        } catch (NoApplianceInLocationException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            commandLogger.log(Level.WARNING, \"There is no Appliance in \\\"\" + filteredLocation + \"\\\".\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            return new CommandResult(\"There is no Appliance in \\\"\" + filteredLocation + \"\\\".\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        } catch (EmptyLocationListException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            commandLogger.log(Level.WARNING, MESSAGE_LIST_NO_LOCATIONS);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            return new CommandResult(MESSAGE_LIST_NO_LOCATIONS);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Method to list all the appliances or appliances in filteredLocation."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @return the Appliance List in String."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private CommandResult listAppliance() throws LocationNotFoundException, EmptyApplianceListException,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            NoApplianceInLocationException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        String outputResult;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        ArrayList\u003cAppliance\u003e outputApplianceList \u003d applianceList.getAllAppliance();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        if (filteredLocation.equals(\"\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            outputResult \u003d listAllAppliances(outputApplianceList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            outputResult \u003d listApplianceByLocation(outputApplianceList);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        commandLogger.log(Level.INFO, outputResult);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return new CommandResult(outputResult);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private String listAllAppliances(ArrayList\u003cAppliance\u003e outputApplianceList) throws EmptyApplianceListException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        if (outputApplianceList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            throw new EmptyApplianceListException();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        String outputResult \u003d displayOutput(MESSAGE_LIST_APPLIANCES, outputApplianceList);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        commandLogger.log(Level.INFO, outputResult);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return outputResult;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private String listApplianceByLocation(ArrayList\u003cAppliance\u003e outputApplianceList)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            throws LocationNotFoundException, NoApplianceInLocationException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        ArrayList\u003cAppliance\u003e filterApplianceList \u003d"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                (ArrayList\u003cAppliance\u003e) outputApplianceList.stream()"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                        .filter((s) -\u003e s.getLocation().equals(filteredLocation))"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                        .collect(toList());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        if (filterApplianceList.isEmpty()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            if (locationList.isLocationCreated(filteredLocation)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                throw new NoApplianceInLocationException();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            throw new LocationNotFoundException();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        String header \u003d (\"Here are the Appliances in \\\"\" + filteredLocation + \"\\\"\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        String outputResult \u003d displayOutput(header, filterApplianceList);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        commandLogger.log(Level.INFO, outputResult);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return outputResult;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Method to list all the locations."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @return the Location List in String."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private CommandResult listLocation() throws EmptyLocationListException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        ArrayList\u003cString\u003e outputLocationList \u003d locationList.getAllLocations();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        if (outputLocationList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            throw new EmptyLocationListException();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        String outputResult \u003d MESSAGE_LIST_LOCATIONS;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        for (String location : outputLocationList) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            outputResult \u003d outputResult.concat(System.lineSeparator() + index + \": \" + location);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        commandLogger.log(Level.INFO, outputResult);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return new CommandResult(outputResult);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Method to format the displayList."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @param displayList Appliance List to display."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @return the formatted Appliance List in String."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private String displayOutput(String header, ArrayList\u003cAppliance\u003e displayList) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        autoFormattingStringIndex();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        String outputResult \u003d header;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        String format \u003d \"%-2d. %-\" + maxNameLength + \"s\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                + DISPLAY_LOCATION + \"%-\" + maxLocationLength + \"s\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                + DISPLAY_STATUS + \"%-3s\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                + DISPLAY_WATT + \"%-4sW\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                + DISPLAY_TYPE + \"%-9s\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                + DISPLAY_PARAMETER + \"%s\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        for (Appliance a : displayList) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            outputResult \u003d outputResult.concat(System.lineSeparator() + String.format(format, index,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                    a.getName(), a.getLocation(), a.getStatus(), a.getWattage(), a.getType(), a.getParameter(true)));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        commandLogger.log(Level.INFO, outputResult);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return outputResult;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "Ang-Cheng-Jun": 173,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/OffCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.ApplianceNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.Appliance;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_APPLIANCE_OR_LOCATION_NOT_EXIST;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_APPLIANCE_PREVIOUSLY_OFF;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "//@@author Ang-Cheng-Jun"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " * Represent the Command to turn off Appliance(s)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class OffCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"off\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Switch OFF Appliance: \\n\\t\\t a. \" + COMMAND_WORD"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \" [APPLIANCE_NAME] \\n\\t\\t b. \" + COMMAND_WORD + \" [LOCATION_NAME]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String APPLIANCE_TYPE \u003d \"appliance\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String LOCATION_TYPE \u003d \"location\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Constructor for OffCommand."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @param argument Appliance or Location \u0027s name to be off."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public OffCommand(String argument) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assert argument.isEmpty() !\u003d true : \"OffCommand must not accept empty argument\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Executing the OffCommand."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            String type \u003d APPLIANCE_TYPE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            ArrayList\u003cAppliance\u003e filterApplianceList \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                    (ArrayList\u003cAppliance\u003e) applianceList.getAllAppliance().stream()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                            .filter((s) -\u003e s.getLocation().equals(argument))"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                            .collect(toList());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            if (!filterApplianceList.isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                type \u003d LOCATION_TYPE;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            case (APPLIANCE_TYPE):"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return offByApplianceName();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            case (LOCATION_TYPE):"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return offByLocation(filterApplianceList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return new CommandResult(\"Invalid Format\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        } catch (ApplianceNotFoundException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            if (locationList.isLocationCreated(argument)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                commandLogger.log(Level.WARNING, \"There are no Appliances in \\\"\" + argument + \"\\\".\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return new CommandResult(\"There are no Appliances in \\\"\" + argument + \"\\\".\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                commandLogger.log(Level.WARNING, MESSAGE_APPLIANCE_OR_LOCATION_NOT_EXIST);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return new CommandResult(MESSAGE_APPLIANCE_OR_LOCATION_NOT_EXIST);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Method to off Appliance by the name."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @throws ApplianceNotFoundException when keyed Appliance is not found in ApplianceList."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private CommandResult offByApplianceName() throws ApplianceNotFoundException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        int toOffApplianceIndex \u003d applianceList.getApplianceIndex(argument);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Appliance toOffAppliance \u003d applianceList.getAppliance(toOffApplianceIndex);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        String outputResult \u003d offAppliance(toOffAppliance, true);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assert !outputResult.isEmpty() : \"outputResult must contains String\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        commandLogger.log(Level.INFO, outputResult);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return new CommandResult(outputResult);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Method to off Appliance by the Location."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private CommandResult offByLocation(ArrayList\u003cAppliance\u003e toOffAppliance) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        offApplianceByLoop(toOffAppliance);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        String outputResult \u003d \"All Appliances in \\\"\" + argument + \"\\\" are turned off \";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        commandLogger.log(Level.INFO, outputResult);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return new CommandResult(outputResult);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Method to iterate through the list and filter out the location to turn off."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private void offApplianceByLoop(ArrayList\u003cAppliance\u003e toOffAppliance) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        for (Appliance appliance : toOffAppliance) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            offAppliance(appliance, false);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Method to switch off Appliance."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @param toOffAppliance Appliance to switch off in Appliance."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @param isList         flag to return its corresponding output message."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @return the corresponding output Message in String if isList is true."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private String offAppliance(Appliance toOffAppliance, boolean isList) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        boolean offResult \u003d toOffAppliance.switchOff();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        String outputResult \u003d \"\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assert toOffAppliance.getStatus().equals(\"OFF\") : \"Appliance should be already OFF\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        if (isList) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            if (offResult) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                outputResult \u003d \"Switching: \" + toOffAppliance + \"......OFF\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                outputResult \u003d toOffAppliance.getName() + MESSAGE_APPLIANCE_PREVIOUSLY_OFF;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return outputResult;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 3,
      "Ang-Cheng-Jun": 120,
      "fanceso": 3
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/OnCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.ApplianceNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.AirConditioner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.Fan;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.Appliance;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.ParameterFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_APPLIANCE_OR_LOCATION_NOT_EXIST;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_APPLIANCE_PREVIOUSLY_ON;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_NO_PARAMETER_IN_ON_BY_LOCATION;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_INVALID_TEMPERATURE_AC;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_INVALID_FAN_SPEED;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "//@@author leonlowzd"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Represent the Command to turn on Appliance(s)."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class OnCommand extends Command {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"on\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Switch ON Appliance: \\n\\t\\t a. \" + COMMAND_WORD"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            + \" [APPLIANCE_NAME] \\n\\t\\t b. \" + COMMAND_WORD + \" [APPLIANCE_NAME] p/[PARAMETER] \\n\\t\\t c. \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            + COMMAND_WORD + \" [LOCATION_NAME]\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final String APPLIANCE_TYPE \u003d \"appliance\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final String LOCATION_TYPE \u003d \"location\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final String parameter;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Constructor for OnCommand."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param argument  Appliance or Location \u0027s name to be on."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param parameter To set Appliance\u0027s parameter: only valid for fan and aircon."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public OnCommand(String argument, String parameter) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assert !argument.isEmpty() : \"OnCommand must not accept empty argument\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.parameter \u003d parameter;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Executing the OnCommand."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String onByType \u003d APPLIANCE_TYPE;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            // To filter out Appliances with location corresponding to the argument."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            ArrayList\u003cAppliance\u003e filterApplianceList \u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    (ArrayList\u003cAppliance\u003e) applianceList.getAllAppliance().stream()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                            .filter((s) -\u003e s.getLocation().equals(argument))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                            .collect(toList());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            // If the list is not empty; it means that user wants to onByLocation."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (!filterApplianceList.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                onByType \u003d LOCATION_TYPE;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            switch (onByType) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            case (APPLIANCE_TYPE):"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                return onByApplianceName();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            case (LOCATION_TYPE):"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                return onByLocation(filterApplianceList);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                return new CommandResult(\"Invalid Format\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (ApplianceNotFoundException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (locationList.isLocationCreated(argument)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                commandLogger.log(Level.WARNING, \"There are no Appliances in \\\"\" + argument + \"\\\".\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                return new CommandResult(\"There are no Appliances in \\\"\" + argument + \"\\\".\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                commandLogger.log(Level.WARNING, MESSAGE_APPLIANCE_OR_LOCATION_NOT_EXIST);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                return new CommandResult(MESSAGE_APPLIANCE_OR_LOCATION_NOT_EXIST);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (ParameterFoundException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            commandLogger.log(Level.WARNING, MESSAGE_NO_PARAMETER_IN_ON_BY_LOCATION);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return new CommandResult(MESSAGE_NO_PARAMETER_IN_ON_BY_LOCATION);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to on Appliance by the name."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws ApplianceNotFoundException when keyed Appliance is not found in ApplianceList."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private CommandResult onByApplianceName() throws ApplianceNotFoundException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        int toOnApplianceIndex \u003d applianceList.getApplianceIndex(argument);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        Appliance toOnAppliance \u003d applianceList.getAppliance(toOnApplianceIndex);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String outputResult \u003d onAppliance(toOnAppliance, true);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        commandLogger.log(Level.INFO, outputResult);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return new CommandResult(outputResult);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to set Appliance\u0027s parameter."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return error message if there is an error setting the parameter."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String setParameter(String parameter, Appliance appliance) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String setParameterStatement \u003d \"\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        switch (appliance.getType().toLowerCase()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        case AirConditioner.TYPE_WORD:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            AirConditioner ac \u003d (AirConditioner) appliance;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (!ac.setTemperature(parameter)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                setParameterStatement \u003d MESSAGE_INVALID_TEMPERATURE_AC;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        case Fan.TYPE_WORD:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            Fan fan \u003d (Fan) appliance;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (!fan.setSpeed(parameter)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                setParameterStatement \u003d MESSAGE_INVALID_FAN_SPEED;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return setParameterStatement;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to On Appliance by the Location."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @throws ParameterFoundException When entered Parameter is Invalid."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private CommandResult onByLocation(ArrayList\u003cAppliance\u003e toOnAppliance) throws ParameterFoundException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (!parameter.isEmpty()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new ParameterFoundException();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            onApplianceByLoop(toOnAppliance);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String outputResult \u003d \"All Appliances in \\\"\" + argument + \"\\\" are turned on \";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            commandLogger.log(Level.INFO, outputResult);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return new CommandResult(outputResult);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to iterate through the toOnAppliance List and turn on the Appliance."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private void onApplianceByLoop(ArrayList\u003cAppliance\u003e toOnAppliance) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (Appliance appliance : toOnAppliance) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            onAppliance(appliance, false);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Method to switch on Appliance."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param toOnAppliance Appliance to switch on in Appliance."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param isList        flag to return its corresponding output message."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the corresponding output Message in String if isList is true."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String onAppliance(Appliance toOnAppliance, boolean isList) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String outputResult \u003d \"\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        boolean onResult \u003d toOnAppliance.switchOn();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assert toOnAppliance.getStatus().equals(\"ON\") : \"Appliance should be already ON\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String setParameterStatement \u003d setParameter(parameter, toOnAppliance);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (isList) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (onResult) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                outputResult \u003d setParameterStatement + \"Switching \" + toOnAppliance.toString() + \".....ON\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                outputResult \u003d setParameterStatement"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        + toOnAppliance.getName() + MESSAGE_APPLIANCE_PREVIOUSLY_ON + toOnAppliance.toString();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return outputResult;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 167,
      "Ang-Cheng-Jun": 6,
      "fanceso": 3
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/RemoveCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.ApplianceNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.InvalidLocationException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.LINE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_APPLIANCE_OR_LOCATION_NOT_EXIST;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LOCATION_NOT_EXIST;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "//@@author zongxian-ctrl"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " * Represent the command for removing a location in the LocationList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class RemoveCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"remove\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Remove location: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \" [LOCATION_NAME]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String userEnteredLocation;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Constructor for OnCommand."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param location name of Location to be removed from LocationList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public RemoveCommand(String location) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assert !location.isEmpty() : \"RemoveCommand must not accept empty location\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.userEnteredLocation \u003d location;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Executing the RemoveCommand."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            locationList.removeLocation(userEnteredLocation);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            applianceList.deleteByLocation(userEnteredLocation);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            commandLogger.log(Level.INFO, \"Removed location \" + userEnteredLocation);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new CommandResult(\"Removing LOCATION \\\"\" + userEnteredLocation + \"\\\"......REMOVED!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (InvalidLocationException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            commandLogger.log(Level.WARNING, MESSAGE_LOCATION_NOT_EXIST);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new CommandResult(MESSAGE_LOCATION_NOT_EXIST + \" Nothing will be deleted.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (ApplianceNotFoundException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            commandLogger.log(Level.WARNING, MESSAGE_APPLIANCE_OR_LOCATION_NOT_EXIST);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new CommandResult(MESSAGE_APPLIANCE_OR_LOCATION_NOT_EXIST + \" Nothing will be deleted.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 2,
      "zongxian-ctrl": 46,
      "fanceso": 4
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/ResetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.EmptyApplianceListException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LIST_NO_APPLIANCES;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_USAGE_RESET;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "//@@author fanceso"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": " * Represent the command to reset the power monitored."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class ResetCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"p_reset\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Resetting previous recorded usage: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Executing the ResetCommand."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            ArrayList\u003cAppliance\u003e resetApplianceList \u003d applianceList.getAllAppliance();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (resetApplianceList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                commandLogger.log(Level.WARNING, MESSAGE_LIST_NO_APPLIANCES);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                throw new EmptyApplianceListException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                assert !resetApplianceList.isEmpty() : \"resetApplianceList must not be empty\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                for (Appliance a : resetApplianceList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    a.resetPowerUsage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    assert a.getPowerInString().equals(\"0.00\") : \"Power usage needs to be reset to 0.00\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                commandLogger.log(Level.INFO, MESSAGE_USAGE_RESET);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                return new CommandResult(MESSAGE_USAGE_RESET);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (EmptyApplianceListException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return new CommandResult(MESSAGE_LIST_NO_APPLIANCES);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "Ang-Cheng-Jun": 2,
      "fanceso": 43
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/UsageCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.EmptyApplianceListException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LIST_NO_APPLIANCES;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_POWER_USAGE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_TOTAL_POWER_USAGE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "//@@author fanceso"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": " * Represent the command to display power usage of the application to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class UsageCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"usage\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Usage of Appliance: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static final String DISPLAY_LOCATION \u003d \" | Location: \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static final String DISPLAY_STATUS \u003d \" | Status: \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static final String DISPLAY_USAGE \u003d \" | Usage: \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Executing the UsageCommand."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        String outputResult;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            ArrayList\u003cAppliance\u003e outputApplianceList \u003d applianceList.getAllAppliance();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            assert !outputApplianceList.equals(null) : \"outputApplianceList must not be null\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (outputApplianceList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                commandLogger.log(Level.WARNING, MESSAGE_LIST_NO_APPLIANCES);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                throw new EmptyApplianceListException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                outputResult \u003d displayOutput(outputApplianceList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                assert !outputApplianceList.isEmpty() : \"outputApplianceList must not be empty\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                return new CommandResult(outputResult);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (EmptyApplianceListException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return new CommandResult(MESSAGE_LIST_NO_APPLIANCES);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Method to display output result of usage command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param outputApplianceList is the list that to switch off in Appliance."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return the Appliance List in String with auto formatted result."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private String displayOutput(ArrayList\u003cAppliance\u003e outputApplianceList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        double totalUsage \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        String outputResult \u003d MESSAGE_POWER_USAGE;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        autoFormattingStringIndex();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        String formatInString \u003d \"%-2d. %-\" + maxNameLength + \"s\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                + DISPLAY_LOCATION + \"%-\" + maxLocationLength + \"s\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                + DISPLAY_STATUS + \"%-3s\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                + DISPLAY_USAGE + \"%.2f kWh\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        for (Appliance a : outputApplianceList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            outputResult \u003d outputResult.concat(System.lineSeparator() + String.format(formatInString,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    index, a.getName(), a.getLocation(), a.getStatus(), a.getPowerInDouble()));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            totalUsage +\u003d a.getPowerInDouble();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        outputResult \u003d outputResult.concat(MESSAGE_TOTAL_POWER_USAGE + String.format(\"%.2f kWh\", totalUsage));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assert !outputResult.isEmpty() : \"outputResult must contains String\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        commandLogger.log(Level.INFO, \"Power usage computed with output message.\\n\" + outputResult);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return outputResult;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "Ang-Cheng-Jun": 2,
      "fanceso": 73
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/exceptions/EmptyApplianceListException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.smarthomebot.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class EmptyApplianceListException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 4
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/exceptions/EmptyLocationListException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.smarthomebot.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class EmptyLocationListException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 4
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/exceptions/InvalidApplianceNameException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class InvalidApplianceNameException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 4
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/exceptions/LocationNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class LocationNotFoundException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 3,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/commands/exceptions/ParameterFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.smarthomebot.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class ParameterFoundException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "Ang-Cheng-Jun": 4
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import org.apache.commons.lang3.StringUtils;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.CreateCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.HelpCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.InvalidCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.OffCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.OnCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.RemoveCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.ResetCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.UsageCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.ParameterFoundException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.parser.exceptions.EmptyParameterException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.parser.exceptions.IllegalCharacterException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.parser.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.InvalidNumericalValueException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.parser.exceptions.WattageExceedException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_EMPTY_PARAMETER;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_ILLEGAL_CHARACTER;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_INVALID_ADD_COMMAND;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_INVALID_LIST_COMMAND;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_POWER_EXCEEDED;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_VALUE_NOT_NUMBER;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_PARAMETER_INVALID;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_NO_PARAMETER_IN_ON_BY_LOCATION;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String APPLIANCE_TYPE \u003d \"appliance\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String LOCATION_TYPE \u003d \"location\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    //@@author zongxian-ctrl"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param userInput full user input string."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @return command based on the user input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public Command parseCommand(String userInput) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String[] words \u003d userInput.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String commandWord \u003d words[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String argument \u003d StringUtils.replaceOnce(userInput, commandWord, \"\").trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        case CreateCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return prepareCreateCommand(argument);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        case RemoveCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return prepareRemoveCommand(argument);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return prepareAddCommand(argument);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return prepareDeleteCommand(argument);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        case OnCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return prepareOnCommand(argument);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        case OffCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return prepareOffCommand(argument);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return prepareListCommand(argument);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        case UsageCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new UsageCommand();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        case ResetCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new ResetCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new InvalidCommand(MESSAGE_INVALID_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Parses arguments for CreateCommand by checking if arguments is valid."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param argument parameter of CreateCommand."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @return the prepared CreateCommand."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private Command prepareCreateCommand(String argument) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            if (isEmptyInput(argument)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                throw new EmptyParameterException();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            if (hasIllegalCharacter(argument)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                throw new IllegalCharacterException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new CreateCommand(argument);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (EmptyParameterException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new InvalidCommand(MESSAGE_EMPTY_PARAMETER);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (IllegalCharacterException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new InvalidCommand(MESSAGE_ILLEGAL_CHARACTER + \" [LOCATION_NAME].\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Parses arguments for RemoveCommand by checking if arguments is valid."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param argument parameter of RemoveCommand."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @return the prepared RemoveCommand."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private Command prepareRemoveCommand(String argument) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            if (isEmptyInput(argument)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                throw new EmptyParameterException();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new RemoveCommand(argument);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (EmptyParameterException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new InvalidCommand(MESSAGE_EMPTY_PARAMETER);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Parses arguments into AddCommand format."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param argument parameters of AddComand."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @return the prepared AddCommand."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private static Command prepareAddCommand(String argument) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        int indexLocation \u003d argument.indexOf(\"l/\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        int indexPower \u003d argument.indexOf(\"w/\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        int indexType \u003d argument.indexOf(\"t/\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String location;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String wattage;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            if (indexLocation \u003c indexPower \u0026\u0026 indexPower \u003c indexType) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                name \u003d argument.substring(0, indexLocation).trim();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                location \u003d argument.substring(indexLocation + 2, indexPower).trim();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                wattage \u003d argument.substring(indexPower + 2, indexType).trim();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                type \u003d argument.substring(indexType + 2).toLowerCase().trim();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                if (isEmptyInput(name) | isEmptyInput(location)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                        | isEmptyInput(wattage) | isEmptyInput(type)) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                    throw new EmptyParameterException();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                if (hasIllegalCharacter(name)) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                    throw new IllegalCharacterException();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                testWattageValidity(wattage);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new AddCommand(name, location, wattage, type);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (InvalidCommandException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new InvalidCommand(MESSAGE_INVALID_ADD_COMMAND);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (InvalidNumericalValueException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new InvalidCommand(MESSAGE_VALUE_NOT_NUMBER);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (WattageExceedException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new InvalidCommand(MESSAGE_POWER_EXCEEDED);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (EmptyParameterException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new InvalidCommand(MESSAGE_EMPTY_PARAMETER);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (IllegalCharacterException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new InvalidCommand(MESSAGE_ILLEGAL_CHARACTER + \" [APPLIANCE_NAME].\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Parses arguments for DeleteCommand by checking if arguments is valid."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param argument parameter of DeleteCommand."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @return the prepared DeleteCommand."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private Command prepareDeleteCommand(String argument) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            if (isEmptyInput(argument)) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                throw new EmptyParameterException();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new DeleteCommand(argument);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (EmptyParameterException e) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new InvalidCommand(MESSAGE_EMPTY_PARAMETER);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    //@@author leonlowzd"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Parses arguments into OnCommand format."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param argument parameters of OnCommand"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the prepared OnCommand"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static Command prepareOnCommand(String argument) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        int indexParameter \u003d argument.indexOf(\"p/\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String parameter;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (indexParameter \u003c 1) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                name \u003d argument;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                if (isEmptyInput(name)) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    throw new EmptyParameterException();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                parameter \u003d \"\";"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                name \u003d argument.substring(0, indexParameter).trim();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                parameter \u003d argument.substring(indexParameter + 2).toLowerCase().trim();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                if (isEmptyInput(name) || isEmptyInput(parameter)) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    throw new EmptyParameterException();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                checkIfParameterIsInt(parameter);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return new OnCommand(name, parameter);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (EmptyParameterException e) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return new InvalidCommand(MESSAGE_EMPTY_PARAMETER);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (InvalidNumericalValueException e) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return new InvalidCommand(MESSAGE_PARAMETER_INVALID);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    //@@author Ang-Cheng-Jun"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Parses arguments into OffCommand format."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @param argument parameters of OffCommand"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @return the prepared OffCommand"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static Command prepareOffCommand(String argument) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            int indexParameter \u003d argument.indexOf(\"p/\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            if (!(indexParameter \u003c 0)) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                throw new ParameterFoundException();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            if (isEmptyInput(argument)) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                throw new EmptyParameterException();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            return new OffCommand(argument);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        } catch (EmptyParameterException e) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            return new InvalidCommand(MESSAGE_EMPTY_PARAMETER);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        } catch (ParameterFoundException e) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            return new InvalidCommand(MESSAGE_NO_PARAMETER_IN_ON_BY_LOCATION);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    //@@author Ang-Cheng-Jun"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Parses arguments into ListCommand format."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @param argument parameters of ListCommand"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @return the prepared ListCommand"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static Command prepareListCommand(String argument) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        String[] str \u003d argument.split(\" \");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        if (str[0].equals(LOCATION_TYPE)) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            return new ListCommand(LOCATION_TYPE, \"\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        } else if (str[0].equals(APPLIANCE_TYPE)) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            if (argument.equals(APPLIANCE_TYPE)) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return new ListCommand(APPLIANCE_TYPE, \"\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            } else if (str[1].trim().startsWith(\"l/\")) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return new ListCommand(APPLIANCE_TYPE, str[1].trim().substring(2));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return new InvalidCommand(MESSAGE_INVALID_LIST_COMMAND);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            return new InvalidCommand(MESSAGE_INVALID_LIST_COMMAND);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    //@@author fanceso"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Checks if the parameter is numerical value."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param parameter parameter entered by user"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @throws InvalidNumericalValueException if the parameter is not numerical value"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static void checkIfParameterIsInt(String parameter) throws InvalidNumericalValueException {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            Integer.parseInt(parameter);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            throw new InvalidNumericalValueException();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Checks if the wattage entered by the user is valid."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param wattage parameter entered by user."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @throws WattageExceedException         if the wattage is less 1 or more than 9999."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @throws InvalidNumericalValueException if the wattage is not an numerical value."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static void testWattageValidity(String wattage) throws WattageExceedException,"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            InvalidNumericalValueException {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            int wattageValue \u003d Integer.parseInt(wattage);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            // Common appliance is between 1 to 9999 watts"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if ((wattageValue \u003c 1) || (wattageValue \u003e 9999)) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                throw new WattageExceedException();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            throw new InvalidNumericalValueException();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    //@@author zongxian-ctrl"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Checks if the input is empty."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param input parameter entered by the user."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @return true if input is empty."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private static boolean isEmptyInput(String input) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        return (input.isEmpty());"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Check if the input contains illegal character."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @param input parameter entered by the user."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * @return true if any illegal character is found."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private static boolean hasIllegalCharacter(String input) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        return (input.contains(\" \") || input.contains(\"/\") || input.contains(\"|\"));"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 39,
      "Ang-Cheng-Jun": 54,
      "zongxian-ctrl": 182,
      "fanceso": 63
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/parser/exceptions/EmptyParameterException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.parser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " * Signals an empty parameter is found."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class EmptyParameterException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zongxian-ctrl": 6,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/parser/exceptions/IllegalCharacterException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.parser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " * Signals that illegal character is found."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class IllegalCharacterException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zongxian-ctrl": 6,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/parser/exceptions/InvalidCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.parser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Signal that an invalid command is entered."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class InvalidCommandException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 2,
      "TanLeeWei": 3,
      "zongxian-ctrl": 1,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/logic/parser/exceptions/WattageExceedException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.parser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Signal an error when the user enter power wattage which is not within the range."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class WattageExceedException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 3,
      "fanceso": 4
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/storage/ReadStorageFile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package seedu.smarthomebot.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.commons.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.AirConditioner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.Fan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.Lights;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.SmartPlug;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.storage.exceptions.FileCorruptedException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.ui.TextUi;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_APPLIANCE_TYPE_NOT_EXIST;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_EMPTY_FILE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_FILE_CORRUPTED;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_FILE_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "//@@author TanLeeWei"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Represent reading of storage file back into the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class ReadStorageFile extends StorageFile {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private static String FILE_PATH;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private final TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public ReadStorageFile(String filePath, ApplianceList applianceList, LocationList locationList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        super(applianceList, locationList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        FILE_PATH \u003d filePath;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     *  Executing the reading of storage file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            int i \u003d 0;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            assert FILE_PATH.equals(\"data/SmartHomeBot.txt\") : \"FILE_PATH should be data/SmartHome.txt\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            File myFile \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            Scanner myReader \u003d new Scanner(myFile);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            String locationList \u003d  myReader.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                readToLocationList(locationList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                readToApplianceList(i, myReader);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                if (locationList.equals(\"[]\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    ui.printToUser(MESSAGE_EMPTY_FILE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    ui.printToUser(Messages.MESSAGE_IMPORT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            } catch (FileCorruptedException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                storageLogger.log(Level.WARNING, MESSAGE_FILE_CORRUPTED);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                ui.printToUser(Messages.MESSAGE_FILE_CORRUPTED);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            storageLogger.log(Level.INFO, \"Successfully loaded Save File\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            myReader.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            storageLogger.log(Level.WARNING, MESSAGE_FILE_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            ui.printToUser(MESSAGE_FILE_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            storageLogger.log(Level.WARNING, MESSAGE_FILE_CORRUPTED);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            ui.printToUser(Messages.MESSAGE_FILE_CORRUPTED);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Method to read appliance from the storage file into ApplianceList."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @param numberOfAppliance Keep track of the number of appliance."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @param myReader Read each line in the .txt storage file into the program."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private void readToApplianceList(int numberOfAppliance, Scanner myReader) throws FileCorruptedException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                String appliance \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                String[] splitString \u003d appliance.split(\"\\\\|\", 9);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                if (splitString[1].isEmpty() || splitString[0].isEmpty()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                        || splitString[2].isEmpty() || splitString[3].isEmpty()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    throw new FileCorruptedException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                String name \u003d splitString[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                String location \u003d splitString[0];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                String power \u003d splitString[2];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                String type \u003d splitString[3];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                String powerConsumption \u003d splitString[4];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                String parameter \u003d splitString[5];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                switch (type.toLowerCase()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                case Fan.TYPE_WORD:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    Fan fan \u003d new Fan(name, location, power, locationList);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    applianceList.addAppliance(fan);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    fan.getSpeedFromLoadFile(parameter);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                case AirConditioner.TYPE_WORD:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    AirConditioner ac \u003d new AirConditioner(name, location, power, locationList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    applianceList.addAppliance(ac);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    ac.getTemperatureFromLoadFile(parameter);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                case Lights.TYPE_WORD:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    Lights light \u003d new Lights(name, location, power, locationList);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    applianceList.addAppliance(light);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                case SmartPlug.TYPE_WORD:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    SmartPlug smartPlug \u003d new SmartPlug(name, location, power, locationList);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    applianceList.addAppliance(smartPlug);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    ui.printToUser(MESSAGE_APPLIANCE_TYPE_NOT_EXIST);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                applianceList.getAppliance(numberOfAppliance).loadDataFromFile(powerConsumption);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                numberOfAppliance++;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                storageLogger.log(Level.INFO, \"Successfully read appliance into appliancelist\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                throw new FileCorruptedException();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Method to read location from the storage file into LocationList."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @param location appliance location read from the .txt storage file."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private void readToLocationList(String location) throws FileCorruptedException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            int openBracesIndex \u003d location.indexOf(\"[\") + 1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            int closeBracesIndex \u003d location.lastIndexOf(\"]\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            String locations \u003d location.substring(openBracesIndex, closeBracesIndex);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            String[] stringSplit \u003d locations.split(\",\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            for (String locationName : stringSplit) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                if (!locationName.isEmpty() \u0026\u0026 !applianceList.isApplianceExist(locationName.trim())) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    locationList.addLocation(locationName.trim());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            storageLogger.log(Level.INFO, \"Successfully read location into locationList\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (IndexOutOfBoundsException | DuplicateDataException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            throw new FileCorruptedException();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 147,
      "zongxian-ctrl": 1,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/storage/StorageFile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "//@@author TanLeeWei"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Represent the parent class of ReadStorageFile and WriteStorageFile."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public abstract class StorageFile {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    protected static ApplianceList applianceList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    protected static LocationList locationList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static Logger storageLogger \u003d Logger.getLogger(\"SmartHomeBotLogger\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Passes the ApplianceList and LocationList to allow ReadStorageFile and WriteStorageFile to use."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @param applianceList stores the appliances in SmartHomeBot"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @param locationList stores the locations in SmartHomeBot"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public StorageFile(ApplianceList applianceList, LocationList locationList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        StorageFile.locationList \u003d locationList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        StorageFile.applianceList \u003d applianceList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public abstract void execute();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 4,
      "TanLeeWei": 26,
      "zongxian-ctrl": 2
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/storage/WriteStorageFile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package seedu.smarthomebot.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_CLEAR_FILE_ERROR;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_FILE_CREATION_ERROR;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_WRITE_FILE_ERROR;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "//@@author TanLeeWei"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Represent the writing of data into the storage file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class WriteStorageFile extends StorageFile {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private static String FILE_PATH;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private final TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public WriteStorageFile(String filePath, ApplianceList applianceList, LocationList locationList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        super(applianceList, locationList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.FILE_PATH \u003d filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Execute the writing of data into storage file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            assert FILE_PATH.equals(\"data/SmartHomeBot.txt\") : \"FILE_PATH should be data/SmartHome.txt\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            createFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            clearFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            myWriter.write(locationList.getAllLocations().toString() + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            for (int i \u003d 0; i \u003c applianceList.getAllAppliance().size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                myWriter.write(applianceList.getAppliance(i).writeFileFormat() + System.lineSeparator());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            storageLogger.log(Level.INFO, \"Successfully written data into Storage File\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            storageLogger.log(Level.WARNING, MESSAGE_WRITE_FILE_ERROR);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            ui.printToUser(MESSAGE_WRITE_FILE_ERROR);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Method to create the .txt storage file and the storage file directory."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private void createFile() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            assert FILE_PATH.equals(\"data/SmartHomeBot.txt\") : \"FILE_PATH should be data/SmartHome.txt\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            File myObj \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            if (!myObj.getParentFile().exists()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                myObj.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            if (!myObj.exists()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                myObj.createNewFile();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            storageLogger.log(Level.INFO, \"Successfully created Storage File\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            storageLogger.log(Level.WARNING, MESSAGE_FILE_CREATION_ERROR);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            ui.printToUser(MESSAGE_FILE_CREATION_ERROR);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Method to clear the contents of the .txt storage file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private void clearFile() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            assert FILE_PATH.equals(\"data/SmartHomeBot.txt\") : \"FILE_PATH should be data/SmartHome.txt\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            PrintWriter writer \u003d new PrintWriter(FILE_PATH);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            writer.print(\"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            storageLogger.log(Level.INFO, \"Successfully cleared Storage File\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            storageLogger.log(Level.WARNING, MESSAGE_CLEAR_FILE_ERROR);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            ui.printToUser(MESSAGE_CLEAR_FILE_ERROR);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 90
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/storage/exceptions/FileCorruptedException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.storage.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class FileCorruptedException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 2,
      "zongxian-ctrl": 1,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/smarthomebot/ui/TextUi.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.DIVIDER;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.LINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_EXPORT;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_GOODBYE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_WELCOME;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "//@@author Ang-Cheng-Jun"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "//Solution below adapted from https://github.com/nus-cs2113-AY2021S1/personbook"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String ENTER_COMMAND \u003d \"Enter command: \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public TextUi(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Prints message(s) to the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void printToUser(String message) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assert !message.isEmpty() : \"Message must not be empty\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        out.println(message);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Prints result(s) of the command to the user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void printResultToUser(CommandResult result) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assert !result.feedbackToUser.isEmpty() : \"The feedback for result cannot be empty\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        printToUser(LINE + result.feedbackToUser);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Prints a divider."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private void printDivider() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        printToUser(DIVIDER);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Prompts for the command and reads the text entered by the user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @return command (full line) entered by the user."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        out.print(ENTER_COMMAND);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        String fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return fullInputLine.trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Generates and prints the Welcome message upon the end of the application."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        printToUser(MESSAGE_WELCOME);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Generates and prints the Goodbye message upon the end of the application."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void showGoodByeMessage() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        printToUser(MESSAGE_EXPORT);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        printToUser(MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "Ang-Cheng-Jun": 80,
      "fanceso": 5
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/data/appliance/ApplianceListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.data.appliance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.ApplianceNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.Fan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class ApplianceListTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private LocationList myHome;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private ArrayList\u003cString\u003e expectedOutput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private ApplianceList applianceList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private ArrayList\u003cString\u003e emptyList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void setUp() throws Exception {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        emptyList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        expectedOutput \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        myHome \u003d new LocationList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        myHome.addLocation(\"MasterRoom\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        Fan newFan \u003d new Fan(\"Fan\", \"MasterRoom\", \"150\", myHome);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        applianceList.addAppliance(newFan);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        expectedOutput.add(newFan.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    void addAppliance_ApplianceNotInList_ApplianceAddedNormally() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (int i \u003d 0; i \u003c applianceList.getAllAppliance().size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            assertEquals(applianceList.getAppliance(i).toString(), expectedOutput.get(i));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    void addAppliance_ApplianceNotInList_LocationNotInLocationList() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertThrows(LocationNotFoundException.class, () -\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                new Fan(\"Fan\", \"Bedroom1\", \"150\", myHome));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    void deleteAppliance_ApplianceInList_ApplianceDeleteNormally() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertDoesNotThrow(() -\u003e applianceList.deleteAppliance(\"Fan\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    void deleteAppliance_ApplianceInList_ExceptionThrown() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertThrows(ApplianceNotFoundException.class, () -\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                applianceList.deleteAppliance(\"Fan3\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    void isApplianceExist_ApplianceInList_IsTrue() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertTrue(() -\u003e applianceList.isApplianceExist(\"Fan\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    void isApplianceExist_ApplianceInList_IsFalse() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertFalse(() -\u003e applianceList.isApplianceExist(\"Fan3\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    void getApplianceIndex_ApplianceInList_GetNormally() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertDoesNotThrow(() -\u003e applianceList.getApplianceIndex(\"Fan\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    void getApplianceIndex_ApplianceNotInList_exceptionThrown() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertThrows(ApplianceNotFoundException.class, () -\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                applianceList.getApplianceIndex(\"Fan3\"));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    void deleteByLocation_LocationInList_DeleteNormally() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertDoesNotThrow(() -\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                applianceList.deleteByLocation(\"MasterRoom\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    void getAppliance_ApplianceInList_GetNormally() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertDoesNotThrow(() -\u003e applianceList.getAppliance(0));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 99
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/data/appliance/PowerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.data.appliance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.Fan;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "//@@author fanceso"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "class PowerTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private Appliance coolingFan;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private LocationList locationList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void setUp() throws InvalidApplianceNameException, LocationNotFoundException, DuplicateDataException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        String bedroom \u003d \"bedroom\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        locationList.addLocation(bedroom);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        coolingFan \u003d new Fan(\"PowerfulSpeedy\", bedroom, \"9000\", locationList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void onAppliance_applianceOffPreviously_onNormally() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        coolingFan.switchOff();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertTrue(coolingFan.switchOn());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void onAppliance_applianceAlreadyOn_returnFalse() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        coolingFan.switchOn();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertFalse(coolingFan.switchOn());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void offAppliance_applianceOnPreviously_onNormally() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        coolingFan.switchOn();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertTrue(coolingFan.switchOff());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void offAppliance_applianceAlreadyOff_returnFalse() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        coolingFan.switchOff();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertFalse(coolingFan.switchOff());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void resetPower_fanOnForThreeSeconds_powerResetToZero() throws InterruptedException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        useFanForThreeSeconds();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        coolingFan.resetPowerUsage();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertEquals(\"0.00\", coolingFan.getPowerInString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void getPower_fanOnForThreeSeconds_returnPowerValue() throws InterruptedException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        useFanForThreeSeconds();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertEquals(0.01, coolingFan.getPowerInDouble());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void testToString() throws InterruptedException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        useFanForThreeSeconds();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertEquals(\"0.01\", coolingFan.getPowerInString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private void useFanForThreeSeconds() throws InterruptedException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        coolingFan.switchOn();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        // Appliance will be on for 3000ms which equals to 30 minutes in SmartHomeBot"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Thread.sleep(3000);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        coolingFan.switchOff();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 5,
      "fanceso": 75
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/data/appliance/type/AirConditionerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package seedu.smarthomebot.data.appliance.type;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "class AirConditionerTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private AirConditioner ac;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void setUp() throws InvalidApplianceNameException, LocationNotFoundException, DuplicateDataException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        String bedroom \u003d \"bedroom\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        LocationList locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        locationList.addLocation(bedroom);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        ac \u003d new AirConditioner(\"ac1\", bedroom, \"2000\", locationList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void getParameterTest_returnsTemperature() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        assertEquals(\"25 Degrees\", ac.getParameter(true));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void setSpeedTest_returnTrue() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        assertEquals(true, ac.setTemperature(\"25\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void getTypeTest_returnsAircon() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        assertEquals(\"aircon\", ac.getType());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void testToString_returnsNameLocationPower() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        assertEquals(\"ac1(2000W), located at bedroom \", ac.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 43
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/data/appliance/type/FanTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.data.appliance.type;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "class FanTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private Fan fan;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void setUp() throws InvalidApplianceNameException, LocationNotFoundException, DuplicateDataException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String bedroom \u003d \"bedroom\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        LocationList locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        locationList.addLocation(bedroom);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        fan \u003d new Fan(\"fanny\", bedroom, \"150\", locationList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void getParameterTest_returnsSpeed() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        assertEquals(\"Speed 1\", fan.getParameter(true));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void setSpeedTest_returnTrue() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        assertEquals(true, fan.setSpeed(\"2\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void getTypeTest_returnsfan() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertEquals(\"fan\", fan.getType());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void testToString_returnsNameLocationPower() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        assertEquals(\"fanny(150W), located at bedroom \", fan.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 24,
      "TanLeeWei": 20
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/data/appliance/type/LightsTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.data.appliance.type;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.Appliance;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "class LightsTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private Appliance light;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void setUp() throws InvalidApplianceNameException, LocationNotFoundException, DuplicateDataException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String bedroom \u003d \"bedroom\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        LocationList locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        locationList.addLocation(bedroom);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        light \u003d new Lights(\"pluggy\", bedroom, \"150\", locationList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void getTypeTest_returnsLight() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertEquals(\"light\", light.getType());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void getParameterTest_returnsNone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        assertEquals(\"None\", light.getParameter(true));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 26,
      "TanLeeWei": 8
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/data/appliance/type/SmartPlugTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package seedu.smarthomebot.data.appliance.type;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.data.appliance.Appliance;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "class SmartPlugTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private Appliance smartPlug;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void setUp() throws InvalidApplianceNameException, LocationNotFoundException, DuplicateDataException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        String bedroom \u003d \"bedroom\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        LocationList locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        locationList.addLocation(bedroom);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        smartPlug \u003d new SmartPlug(\"pluggy\", bedroom, \"150\", locationList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void getTypeTest_returnsSmartPlug() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        assertEquals(\"smartplug\", smartPlug.getType());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void getParameterTest_returnsNone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        assertEquals(\"None\", smartPlug.getParameter(true));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 34
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/data/location/LocationListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.data.location;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.InvalidLocationException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "class LocationListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private LocationList myHome;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private ArrayList\u003cString\u003e expectedOutput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private ArrayList\u003cString\u003e emptyList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void setUp() throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        myHome \u003d new LocationList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        myHome.addLocation(\"LivingRoom\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        expectedOutput \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        expectedOutput.add(\"LivingRoom\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        emptyList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void addLocation_locationNotInList_locationAddedNormally() throws DuplicateDataException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        myHome.addLocation(\"MasterRoom\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        expectedOutput.add(\"MasterRoom\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertEquals(expectedOutput, myHome.getAllLocations());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void addLocation_locationAlreadyInList_throwsDuplicateDataException() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertThrows(DuplicateDataException.class, () -\u003e myHome.addLocation(\"LivingRoom\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    void removeLocation_locationInList_locationRemovedNormally() throws InvalidLocationException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        myHome.removeLocation(\"LivingRoom\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertEquals(emptyList, myHome.getAllLocations());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void removeLocation_locationNotExist_throws_InvalidRemovalLocationException() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertThrows(InvalidLocationException.class, () -\u003e myHome.removeLocation(\"Other Places\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void getLocations() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertEquals(expectedOutput, myHome.getAllLocations());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertEquals(\"LivingRoom\\n\", myHome.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void isLocationCreated_locationInList_returnTrue() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertTrue(myHome.isLocationCreated(\"LivingRoom\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 7,
      "fanceso": 60
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/logic/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.CreateCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.HelpCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.InvalidCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.OffCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.OnCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.RemoveCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.UsageCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.parser.Parser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_EMPTY_PARAMETER;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_INVALID_ADD_COMMAND;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_INVALID_LIST_COMMAND;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_emptyInput_returnsInvalid() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String[] emptyInputs \u003d {\"\", \" \", \"\\n  \\n\"};"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String resultMessage \u003d (MESSAGE_INVALID_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertIncorrectWithMessage(resultMessage, emptyInputs);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_helpCommand_parsedCorrectly() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"help\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertCommand(input, HelpCommand.class);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_createCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"create Bedroom1\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertCommand(input, CreateCommand.class);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_addCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"add Lightbulb l/Kitchen w/ 100 t/Light\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertCommand(input, AddCommand.class);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_exitCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"exit\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertCommand(input, ExitCommand.class);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_invalidCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"SmartHomeBot\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertCommand(input, InvalidCommand.class);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_deleteCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"delete Lightbulb\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertCommand(input, DeleteCommand.class);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_removeCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"remove Bedroom1\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertCommand(input, RemoveCommand.class);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_usageCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"usage\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertCommand(input, UsageCommand.class);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_onCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        final String input \u003d \"on Lightbulb\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertCommand(input, OnCommand.class);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_offCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        final String input \u003d \"off Lightbulb\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertCommand(input, OffCommand.class);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_listCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"list appliance\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertCommand(input, ListCommand.class);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_CommandsWithNoParameter_errorMessage() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String[] inputs \u003d {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            \"create\", \"create \", \"delete\", \"delete \","
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            \"on\", \"on \", \"off\", \"off \", \"remove\", \"remove \""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        };"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String resultMessage \u003d MESSAGE_EMPTY_PARAMETER;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertIncorrectWithMessage(resultMessage, inputs);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_listCommandNoParameter_errorMessage() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String[] inputs \u003d {\"list\", \"list \", \"list appliance b/\"};"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String resultMessage \u003d MESSAGE_INVALID_LIST_COMMAND;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertIncorrectWithMessage(resultMessage, inputs);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_addCommandInvalidParameter_errorMessage() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String[] inputs \u003d {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            \"add Light t/100 l/BR1 w/fan\", \"add  \", \"add appliance b/\","
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            \"add Light l/BR1 w/fan\", \"add Light\", \"add Light 1234\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        };"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String resultMessage \u003d MESSAGE_INVALID_ADD_COMMAND;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertIncorrectWithMessage(resultMessage, inputs);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void parse_addCommandEmptyParameter_errorMessage() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String[] inputs \u003d {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            \"add Light l/ w/100 t/fan\", \"add Light l/BR1 w/ t/fan\","
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            \"add Light l/BR1 w/100 t/\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        };"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String resultMessage \u003d MESSAGE_EMPTY_PARAMETER;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parseAndAssertIncorrectWithMessage(resultMessage, inputs);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Asserts that parsing the given inputs will return InvalidCommand with the given feedback."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private void parseAndAssertIncorrectWithMessage(String feedback, String... inputs) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        for (String input : inputs) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            final InvalidCommand result \u003d parseAndAssertCommand(input, InvalidCommand.class);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            assertEquals(result.feedbackToUser, feedback);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     * Parses input and assert it is the correct class command object."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private \u003cT extends Command\u003e T parseAndAssertCommand(String input, Class\u003cT\u003e expectedCommandClass) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final Command result \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        return (T) result;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 2,
      "zongxian-ctrl": 149,
      "fanceso": 14
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/logic/commands/AddCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.Lights;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_APPLIANCE_EXIST;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_APPLIANCE_LOCATION_CONFLICT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_APPLIANCE_TYPE_NOT_EXIST;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LOCATION_NOT_EXIST;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private LocationList locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private ApplianceList applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void setup() throws DuplicateDataException, InvalidApplianceNameException, LocationNotFoundException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        locationList.addLocation(\"BedRoom1\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Lights l1 \u003d new Lights(\"l1\", \"BedRoom1\", \"50\", locationList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        applianceList.addAppliance(l1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void addApplianceTest_Fan_addFanSuccess() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command addAppliance \u003d new AddCommand(\"Fan1\", \"BedRoom1\", \"50\", \"Fan\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        addAppliance.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d addAppliance.execute();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(\"ADDING Fan1(50W), located at BedRoom1 ......ADDED!\", actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void addApplianceTest_Light_addLightSuccess() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command addAppliance \u003d new AddCommand(\"l2\", \"BedRoom1\", \"50\", \"light\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        addAppliance.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d addAppliance.execute();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(\"ADDING l2(50W), located at BedRoom1 ......ADDED!\", actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void addApplianceTest_AirConditioner_addAirConditionerSuccess() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command addAppliance \u003d new AddCommand(\"AC1\", \"BedRoom1\", \"500\", \"aircon\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        addAppliance.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d addAppliance.execute();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(\"ADDING AC1(500W), located at BedRoom1 ......ADDED!\", actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void addApplianceTest_SmartPlug_addSmartPlugSuccess() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command addAppliance \u003d new AddCommand(\"Plug1\", \"BedRoom1\", \"500\", \"smartplug\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        addAppliance.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d addAppliance.execute();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(\"ADDING Plug1(500W), located at BedRoom1 ......ADDED!\", actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void addApplianceTest_TypeNotFound_addApplianceFailed() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command addAppliance \u003d new AddCommand(\"Plug1\", \"BedRoom1\", \"500\", \"plug\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        addAppliance.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d addAppliance.execute();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(MESSAGE_APPLIANCE_TYPE_NOT_EXIST, actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void addApplianceTest_DuplicateAppliance_DuplicateDataException() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command addAppliance \u003d new AddCommand(\"l1\", \"BedRoom1\", \"500\", \"light\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        addAppliance.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d addAppliance.execute();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(MESSAGE_APPLIANCE_EXIST, actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void addApplianceTest_LocationNotCreated_LocationNotFoundException() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command addAppliance \u003d new AddCommand(\"l1\", \"BedRoom2\", \"500\", \"light\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        addAppliance.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d addAppliance.execute();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(MESSAGE_LOCATION_NOT_EXIST, actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void addApplianceTest_DuplicateNameAsLocation_InvalidApplianceNameException() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command addAppliance \u003d new AddCommand(\"BedRoom1\", \"BedRoom1\", \"500\", \"light\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        addAppliance.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d addAppliance.execute();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(MESSAGE_APPLIANCE_LOCATION_CONFLICT, actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 93
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/logic/commands/CommandResultTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "class CommandResultTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        CommandResult commandResult \u003d new CommandResult(\"feedback\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        // test if same value -\u003e returns true"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertTrue(commandResult.feedbackToUser.equals(\"feedback\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        // test if not same value -\u003e return false"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertFalse(commandResult.feedbackToUser.equals(\"False\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zongxian-ctrl": 21
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/logic/commands/CreateCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.Lights;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LOCATION_EXIST;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class CreateCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private LocationList locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private ApplianceList applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void setup() throws DuplicateDataException, InvalidApplianceNameException, LocationNotFoundException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        locationList.addLocation(\"BedRoom1\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Lights l1 \u003d new Lights(\"l1\", \"BedRoom1\", \"50\", locationList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        applianceList.addAppliance(l1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void createLocationTest_createLocationSuccess() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command createLocation \u003d new CreateCommand(\"BedRoom3\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        createLocation.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d createLocation.execute();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(\"Creating Location \\\"BedRoom3\\\".....CREATED!\", actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void createLocationTest_DuplicateLocation_DuplicateDataException() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command createLocation \u003d new CreateCommand(\"BedRoom1\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        createLocation.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d createLocation.execute();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(MESSAGE_LOCATION_EXIST, actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void createLocationTest_DuplicateNameAsAppliance_InvalidLocationException() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command createLocation \u003d new CreateCommand(\"l1\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        createLocation.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d createLocation.execute();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(MESSAGE_LOCATION_EXIST + \" as an Appliance, please choose another name.\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 52
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/logic/commands/DeleteCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.Lights;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private LocationList locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private ApplianceList applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void setup() throws DuplicateDataException,InvalidApplianceNameException, LocationNotFoundException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        locationList.addLocation(\"BedRoom1\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Lights l1 \u003d new Lights(\"l1\", \"BedRoom1\", \"50\", locationList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Lights l2 \u003d new Lights(\"l2\", \"BedRoom1\", \"50\", locationList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        applianceList.addAppliance(l1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        applianceList.addAppliance(l2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void deleteApplianceTest_deleteApplianceSuccess() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command deleteAppliance \u003d new DeleteCommand(\"l2\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        deleteAppliance.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d deleteAppliance.execute();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(\"Deleting l2(50W), located at BedRoom1 .......DELETED.\", actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void deleteApplianceTest_ApplianceNotIsList_ApplianceNotFoundException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command deleteAppliance \u003d new DeleteCommand(\"l3\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        deleteAppliance.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d deleteAppliance.execute();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(\"l3 does not exist.\", actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 42,
      "fanceso": 3
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/logic/commands/ExitCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.logic.commands.ExitCommand.isExit;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "class ExitCommandTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void isExit_returnTrue() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(true, isExit(c));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void isExit_returnFalse() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command c \u003d new ListCommand(\"appliance\", \"\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(false, isExit(c));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 22
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/logic/commands/HelpCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "class HelpCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void execute_help_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        HelpCommand helpCommand \u003d new HelpCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        CommandResult expectedCommandResult \u003d helpCommand.execute();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertEquals(expectedCommandResult.feedbackToUser, HelpCommand.MESSAGE_HELP);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zongxian-ctrl": 15
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/logic/commands/InvalidCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_EMPTY_PARAMETER;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "class InvalidCommandTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void execute_invalid_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        InvalidCommand invalidCommand \u003d new InvalidCommand(MESSAGE_EMPTY_PARAMETER);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        CommandResult expectedCommandResult \u003d invalidCommand.execute();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertEquals(expectedCommandResult.feedbackToUser, MESSAGE_EMPTY_PARAMETER);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zongxian-ctrl": 16
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/logic/commands/ListCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LIST_NO_APPLIANCES;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LIST_NO_LOCATIONS;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void listLocation_EmptyLocationList_EmptyLocationListException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        LocationList locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        ApplianceList applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command listLocation \u003d new ListCommand(\"location\", \"\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        listLocation.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d listLocation.execute();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(MESSAGE_LIST_NO_LOCATIONS, actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void listAppliance_EmptyApplianceList_EmptyApplianceListException() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        LocationList locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        ApplianceList applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command listAppliance \u003d new ListCommand(\"appliance\", \"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        listAppliance.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d listAppliance.execute();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(MESSAGE_LIST_NO_APPLIANCES, actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void listApplianceByFilteredLocation_NoApplianceInFilteredLocation_NoApplianceInLocationException() throws"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            DuplicateDataException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        LocationList locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        ApplianceList applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        locationList.addLocation(\"BedRoom1\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command listFilteredAppliance \u003d new ListCommand(\"appliance\", \"BedRoom1\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        listFilteredAppliance.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d listFilteredAppliance.execute();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(\"There is no Appliance in \\\"BedRoom1\\\".\",actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void listApplianceByFilteredLocation_FilteredLocationNotFound_LocationNotFoundException() throws"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            DuplicateDataException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        LocationList locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        ApplianceList applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        locationList.addLocation(\"BedRoom1\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command listFilteredAppliance \u003d new ListCommand(\"appliance\", \"BedRoom2\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        listFilteredAppliance.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d listFilteredAppliance.execute();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(\"Location: \\\"BedRoom2\\\" does not exist.\", actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 58
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/logic/commands/OffCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.Fan;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_APPLIANCE_OR_LOCATION_NOT_EXIST;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class OffCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private LocationList myHome;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private ArrayList\u003cString\u003e expectedOutput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private ApplianceList applianceList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void setUp() throws Exception {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        expectedOutput \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        myHome \u003d new LocationList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        myHome.addLocation(\"MasterRoom\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        Fan newFan \u003d new Fan(\"Fan\", \"MasterRoom\", \"150\", myHome);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        applianceList.addAppliance(newFan);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        expectedOutput.add(newFan.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    void offCommandTest_OffNormally() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        applianceList.getAppliance(0).switchOn();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        Command offCommand \u003d new OffCommand(\"Fan\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        offCommand.setData(applianceList, myHome);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertDoesNotThrow(() -\u003e offCommand.execute());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    void offCommandTest_ApplianceNotFoundException() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        Command offCommand \u003d new OffCommand(\"Fan1\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        offCommand.setData(applianceList, myHome);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        CommandResult actualCommandResult \u003d offCommand.execute();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertEquals(MESSAGE_APPLIANCE_OR_LOCATION_NOT_EXIST, actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 51
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/logic/commands/OnCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.Fan;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class OnCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private LocationList myHome;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private ApplianceList applianceList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void setUp() throws Exception {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        myHome \u003d new LocationList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        myHome.addLocation(\"MasterRoom\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        Fan newFan \u003d new Fan(\"Fan\", \"MasterRoom\", \"150\", myHome);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        applianceList.addAppliance(newFan);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    void onCommandTest_OnNormally() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        Command onCommand \u003d new OnCommand(\"Fan\", \"\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        onCommand.setData(applianceList, myHome);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertDoesNotThrow(() -\u003e onCommand.execute());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    void onCommandTest_ParameterFoundException() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        Command onCommand \u003d new OnCommand(\"Fan\", \"-2\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        onCommand.setData(applianceList, myHome);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String expectedOutput \u003d \"Invalid speed is detected, \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                + \"ensure that it is within 1-3 speed.\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                + \"Previous set speed will be set.Switching Fan(150W), located at MasterRoom @ Speed 1.....ON\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        CommandResult actualCommandResult \u003d onCommand.execute();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        assertEquals(expectedOutput, actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 48
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/logic/commands/RemoveCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LOCATION_NOT_EXIST;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class RemoveCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private LocationList locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private ApplianceList applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void setup() throws DuplicateDataException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        locationList.addLocation(\"BedRoom1\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        locationList.addLocation(\"BedRoom2\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void removeLocationTest_removeLocationSuccess() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command removeLocation \u003d new RemoveCommand(\"BedRoom1\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        removeLocation.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d removeLocation.execute();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(\"Removing LOCATION \\\"BedRoom1\\\"......REMOVED!\", actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    void removeLocationTest_LocationNotInList_catch_InvalidLocationException() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command removeLocation \u003d new RemoveCommand(\"BedRoom3\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        removeLocation.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        CommandResult actualCommandResult \u003d removeLocation.execute();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        assertEquals(MESSAGE_LOCATION_NOT_EXIST + \" Nothing will be deleted.\", actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "Ang-Cheng-Jun": 39,
      "fanceso": 2
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/logic/commands/ResetCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.Fan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.Lights;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LIST_NO_APPLIANCES;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_USAGE_RESET;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "class ResetCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private final ApplianceList emptyApplianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private LocationList locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private ApplianceList applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void resetTest_EmptyApplianceList_EmptyApplianceListException() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Command resetPower \u003d new ResetCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        resetPower.setData(emptyApplianceList, locationList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        CommandResult actualCommandResult \u003d resetPower.execute();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertEquals(MESSAGE_LIST_NO_APPLIANCES, actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void resetTest_resetPowerUsageSuccess() throws DuplicateDataException,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            InvalidApplianceNameException, LocationNotFoundException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        locationList.addLocation(\"BedRoom\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Lights light \u003d new Lights(\"BrightLight\", \"BedRoom\", \"100\", locationList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Fan fan \u003d new Fan(\"SpeedyFan\", \"BedRoom\", \"50\", locationList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        applianceList.addAppliance(light);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        applianceList.addAppliance(fan);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Command resetPower \u003d new ResetCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        resetPower.setData(emptyApplianceList, locationList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        CommandResult actualCommandResult \u003d resetPower.execute();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertEquals(MESSAGE_USAGE_RESET, actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 46
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/logic/commands/UsageCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.smarthomebot.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.commons.exceptions.DuplicateDataException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.data.appliance.type.Lights;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.InvalidApplianceNameException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.smarthomebot.logic.commands.exceptions.LocationNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.smarthomebot.commons.Messages.MESSAGE_LIST_NO_APPLIANCES;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "class UsageCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private final ApplianceList emptyApplianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private LocationList locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private ApplianceList applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void usageTest_EmptyApplianceList_EmptyApplianceListException() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Command computeUsage \u003d new UsageCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        computeUsage.setData(emptyApplianceList, locationList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        CommandResult actualCommandResult \u003d computeUsage.execute();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertEquals(MESSAGE_LIST_NO_APPLIANCES, actualCommandResult.feedbackToUser);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void usageTest_computePowerUsageSuccess() throws DuplicateDataException,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            InvalidApplianceNameException, LocationNotFoundException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        locationList.addLocation(\"BedRoom\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Lights light \u003d new Lights(\"BrightLight\", \"BedRoom\", \"100\", locationList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        applianceList.addAppliance(light);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Command computeUsage \u003d new UsageCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        computeUsage.setData(applianceList, locationList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        computeUsage.execute();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertEquals(applianceList.getAppliance(0).getPowerInString(), \"0.00\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 44
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/storage/ReadStorageFileTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package seedu.smarthomebot.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "class ReadStorageFileTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private LocationList locationList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private ApplianceList applianceList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void readStorageFileTest_doesNotThrowException() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        ReadStorageFile test \u003d new ReadStorageFile(\"data/SmartHomeBot.txt\", applianceList, locationList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        assertDoesNotThrow(() -\u003e test.execute());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 25
    }
  },
  {
    "path": "src/test/java/seedu/smarthomebot/storage/WriteStorageFileTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package seedu.smarthomebot.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.data.appliance.ApplianceList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.smarthomebot.data.location.LocationList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "class WriteStorageFileTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private LocationList locationList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private ApplianceList applianceList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        locationList \u003d new LocationList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    void writeStorageFileTest_doesNotThrowException() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        WriteStorageFile test \u003d new WriteStorageFile(\"data/SmartHomeBot.txt\", applianceList, locationList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        assertDoesNotThrow(() -\u003e test.execute());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "##########################################################"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "# test exit command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "##########################################################"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  # exits properly"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  exit"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 5
    }
  }
]
