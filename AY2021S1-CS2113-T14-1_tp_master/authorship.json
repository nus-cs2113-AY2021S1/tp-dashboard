[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    mainClassName \u003d \"seedu.duke.SmartHomeBot\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "-": 45
    }
  },
  {
    "path": "data/SmartHomeBot.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "[bedroom 2]"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": "bedroom 2|ac2|1000|AirConditioner|Off|6.5"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "fanceso": 1
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ang Cheng Jun | [Github](https://github.com/Ang-Cheng-Jun) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Leon Low | [Github](https://github.com/leonlowzd) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ong Zong Xian | [Github](https://github.com/zongxian-ctrl) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Lee Wei | [Github](https://github.com/TanLeeWei) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "![](https://avatars2.githubusercontent.com/u/20167103?s\u003d460\u0026u\u003db903579ff2842a203c2d4f21e2eefe9b58f83c4f\u0026v\u003d4) | Yang Fan | [Github](https://github.com/fanceso) | [Portfolio](docs/team/yangfan.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "-": 4,
      "zongxian-ctrl": 4,
      "fanceso": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.CreateCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.commands.HelpCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.InvalidCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.commands.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.commands.OffCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.commands.OnCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.RemoveCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.duke.commands.UsageCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.common.Messages;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.exceptions.EmptyParameterException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.ui.TextUi;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String APPLIANCE_TYPE \u003d \"appliance\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String LOCATION_TYPE \u003d \"location\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static Command parseCommand(String userInput) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String[] words \u003d userInput.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String commandWord \u003d words[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String arguments \u003d userInput.replaceFirst(commandWord, \"\").trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            switch (commandWord) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case CreateCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return new CreateCommand(arguments);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case RemoveCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return new RemoveCommand(arguments);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return prepareAddCommand(arguments);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return new DeleteCommand(arguments);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            case OnCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return new OnCommand(arguments);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            case OffCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return new OffCommand(arguments);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return prepareListCommand(arguments);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            case UsageCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                return new UsageCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                return new InvalidCommand(Messages.MESSAGE_INVALID_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } catch (EmptyParameterException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new InvalidCommand(\"The parameter of \" + commandWord + \" cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private static Command prepareAddCommand(String arguments) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        int indexLocation \u003d arguments.indexOf(\"l/\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        int indexPower \u003d arguments.indexOf(\"w/\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        int indexType \u003d arguments.indexOf(\"t/\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String location;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String power;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (indexLocation \u003c indexPower \u0026\u0026 indexPower \u003c indexType) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            name \u003d arguments.substring(0, indexLocation).trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            location \u003d arguments.substring(indexLocation + 2, indexPower).trim();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            power \u003d arguments.substring(indexPower + 2, indexType).trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            type \u003d arguments.substring(indexType + 2).toLowerCase().trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            return new InvalidCommand(Messages.MESSAGE_INVALID_ADD_COMMAND);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (powerIsNumeric(power)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return new AddCommand(name, location, power, type);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            return new InvalidCommand(Messages.MESSAGE_POWER_NOT_NUMBER);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private static Command prepareListCommand(String arguments) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        if (arguments.equals(APPLIANCE_TYPE) || arguments.equals(LOCATION_TYPE)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            return new ListCommand(arguments);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            return new InvalidCommand(Messages.MESSAGE_INVALID_LIST_COMMAND);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private static boolean powerIsNumeric(String power) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            Double.parseDouble(power);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            ui.showToUser(Messages.MESSAGE_POWER_NOT_NUMBER);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "Ang-Cheng-Jun": 27,
      "zongxian-ctrl": 59,
      "fanceso": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/SmartHomeBot.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.duke.data.ApplianceList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.duke.data.HomeLocations;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.duke.storage.StorageFile;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " * Entry point of the SmartHome application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class SmartHomeBot {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private ApplianceList appliances \u003d new ApplianceList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private HomeLocations homeLocations \u003d new HomeLocations();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private StorageFile storage \u003d new StorageFile(appliances, homeLocations);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        new SmartHomeBot().run();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /** Runs the program until termination. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Initialise the import of data from the text file,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * and prints the welcome message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.ui \u003d new TextUi();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        storage.readFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /** Prints the Goodbye message and exits. */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        ui.showGoodByeMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /** Reads the user command and executes it, until the user issues the bye command. */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            String userCommandText \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            command \u003d new Parser().parseCommand(userCommandText);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            command.setData(appliances, homeLocations);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            storage.writeToFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        } while (!ExitCommand.isExit(command));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 53,
      "TanLeeWei": 4,
      "fanceso": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.data.AirConditioner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.data.Fan;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.data.Lights;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.data.WaterHeater;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.exceptions.InvalidAdditionOfAppliance;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.duke.common.Messages.MESSAGE_APPLIANCE_EXIST;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.duke.common.Messages.MESSAGE_APPLIANCE_TYPE_NOT_EXIST;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            + \": Adds a new appliance to the particular location to the SmartHomeBot. \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + \"Parameters: add NAME l/LOCATION w/WATTS t/TYPE_OF_APPLIANCE \\n\" + \"Example: \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            + COMMAND_WORD + \" Fan1 l/Bedroom 1 w/50 t/Fan\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String location;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private final String power;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public AddCommand(String name, String location, String power, String type) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.power \u003d power;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        sortIntoType();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void sortIntoType() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (homeLocationsList.isLocationCreated(location)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                switch (type.toLowerCase()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                case Fan.TYPE_WORD:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    Fan fan \u003d new Fan(name, location, power);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                    appliances.addAppliance(fan);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                case AirConditioner.TYPE_WORD:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    AirConditioner ac \u003d new AirConditioner(name, location, power);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                    appliances.addAppliance(ac);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                case Lights.TYPE_WORD:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    Lights light \u003d new Lights(name, location, power);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                    appliances.addAppliance(light);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                case WaterHeater.TYPE_WORD:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    WaterHeater waterheater \u003d new WaterHeater(name, location, power);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                    appliances.addAppliance(waterheater);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    ui.showToUser(MESSAGE_APPLIANCE_TYPE_NOT_EXIST);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            } catch (InvalidAdditionOfAppliance e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                ui.showToUser(MESSAGE_APPLIANCE_EXIST);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            ui.showToUser(Messages.MESSAGE_LOCATION_NOT_EXIST);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 11,
      "Ang-Cheng-Jun": 3,
      "TanLeeWei": 4,
      "zongxian-ctrl": 44,
      "fanceso": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.data.ApplianceList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.data.HomeLocations;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    protected ApplianceList appliances;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    protected HomeLocations homeLocationsList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    protected static TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void setData(ApplianceList appliances, HomeLocations homeLocations) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.appliances \u003d appliances;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.homeLocationsList \u003d homeLocations;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 2,
      "zongxian-ctrl": 23
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/CreateCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.exceptions.EmptyParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.exceptions.InvalidAddtionOfLocation;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.duke.common.Messages.MESSAGE_LOCATION_EXIST;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class CreateCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"create\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \": Creates a new location in SmartHomeBot\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Parameters: LOCATION\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \" Bedroom 1\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String usersEnteredLocation;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public CreateCommand(String location) throws EmptyParameterException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (location.isEmpty()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            throw new EmptyParameterException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.usersEnteredLocation \u003d location;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        insertLocation();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void insertLocation() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            homeLocationsList.addLocation(usersEnteredLocation);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (InvalidAddtionOfLocation e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            ui.showToUser(MESSAGE_LOCATION_EXIST);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 7,
      "Ang-Cheng-Jun": 6,
      "TanLeeWei": 4,
      "zongxian-ctrl": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.exceptions.EmptyParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \": Delete the existing appliance by its indicated NAME that has been added to SmartHomeBot\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Parameters: NAME\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \" Fan 1\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String userEnteredName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public DeleteCommand(String name) throws EmptyParameterException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            throw new EmptyParameterException();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.userEnteredName \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        Boolean isApplianceExist \u003d appliances.isAppliance(this.userEnteredName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (isApplianceExist) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            appliances.removeAppliance(this.userEnteredName);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            ui.showToUser(userEnteredName + \" does not exist.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 9,
      "Ang-Cheng-Jun": 5,
      "zongxian-ctrl": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        // instanceof returns false if it is null"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return command instanceof ExitCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 2,
      "Ang-Cheng-Jun": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.duke.common.Messages.LINE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \": Shows program usage instructions.\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        ui.showToUser("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                LINE  + HelpCommand.MESSAGE_USAGE + \"\\n\" + LINE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                      + CreateCommand.MESSAGE_USAGE + \"\\n\" + LINE"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                      + RemoveCommand.MESSAGE_USAGE + \"\\n\"  + LINE"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                      + AddCommand.MESSAGE_USAGE + \"\\n\" + LINE"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                      + DeleteCommand.MESSAGE_USAGE + \"\\n\" + LINE"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                      + OnCommand.MESSAGE_USAGE + \"\\n\" + LINE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                      + OffCommand.MESSAGE_USAGE + \"\\n\" + LINE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                      + ListCommand.MESSAGE_USAGE + \"\\n\" + LINE"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                      + ExitCommand.MESSAGE_USAGE + \"\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 14,
      "fanceso": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/InvalidCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.duke.common.Messages.LINE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public InvalidCommand(String feedbackToUser) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        ui.showToUser(LINE + this.feedbackToUser);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 16,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.duke.common.Messages.LINE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                                             + \": Display all the appliances that have been added to SmartHomeBot \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                                             + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private static final String APPLIANCE_TYPE \u003d \"appliance\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private static final String LOCATION_TYPE \u003d \"location\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private final String parameter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public ListCommand(String arguments) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parameter \u003d arguments;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (parameter.equals(LOCATION_TYPE)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            if (homeLocationsList.getLocations().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                ui.showToUser(LINE + Messages.MESSAGE_LIST_NO_LOCATIONS);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            System.out.println(LINE + Messages.MESSAGE_LIST_LOCATIONS);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            for (String location : homeLocationsList.getLocations()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                ui.showToUser(index + \": \" + location);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } else if (parameter.equals(APPLIANCE_TYPE)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            if (appliances.getAllAppliance().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                ui.showToUser(LINE + Messages.MESSAGE_LIST_NO_APPLIANCES);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            System.out.println(LINE + Messages.MESSAGE_LIST_APPLIANCES);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            for (Appliance a : appliances.getAllAppliance()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                ui.showToUser(index + \": \" + a.getName()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                        + Messages.MESSAGE_DISPLAY_LOCATION + a.getLocation()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                        + Messages.MESSAGE_DISPLAY_STATUS  + a.getStatus()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                        + Messages.MESSAGE_DISPLAY_WATT  + a.getPower()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                        + Messages.MESSAGE_DISPLAY_TYPE  + a.getType());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 31,
      "zongxian-ctrl": 18,
      "fanceso": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/OffCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.exceptions.EmptyParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.duke.common.Messages.LINE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class OffCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"off\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \": Turns off specified appliance by its indicated NAME \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Parameters: NAME\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \" Fan 1\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public OffCommand(String name) throws EmptyParameterException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            throw new EmptyParameterException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        for (Appliance i : appliances.getAllAppliance()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            String location \u003d i.getLocation();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            if (i.getName().equals((this.name))) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                System.out.printf(LINE + \"Switching off %s in %s ......OFF!\\n\", name, location);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                i.switchOff();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        ui.showToUser(name + \" does not exist.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 2,
      "Ang-Cheng-Jun": 27,
      "zongxian-ctrl": 5,
      "fanceso": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/OnCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.exceptions.EmptyParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.duke.common.Messages.LINE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class OnCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"on\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                                    + \": Turns on specified appliance by its indicated NAME \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                                    + \"Parameters: NAME \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                                    + \"Example: \" + COMMAND_WORD + \" Aircon 1 \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public OnCommand(String name) throws EmptyParameterException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            throw new EmptyParameterException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        for (Appliance i : appliances.getAllAppliance()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            String location \u003d i.getLocation();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            if (i.getName().equals((this.name))) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                System.out.printf(LINE + \"Switching on %s in %s ......ON!\\n\", name, location);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                i.switchOn();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        ui.showToUser(LINE + name + \" does not exist.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 2,
      "Ang-Cheng-Jun": 26,
      "zongxian-ctrl": 5,
      "fanceso": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/RemoveCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.exceptions.EmptyParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.duke.common.Messages.MESSAGE_LOCATION_NOT_EXIST;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class RemoveCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"remove\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \": Remove the indicated LOCATION and all the appliances in that LOCATION.\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Parameters: LOCATION \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            + \" Bedroom 1\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private final String usersEnteredLocation;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public RemoveCommand(String location) throws EmptyParameterException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (location.isEmpty()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            throw new EmptyParameterException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        this.usersEnteredLocation \u003d location;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        Boolean isLocationExist \u003d homeLocationsList.isLocationCreated(this.usersEnteredLocation);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (isLocationExist) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            for (int x \u003d appliances.getAllAppliance().size() - 1; x \u003e\u003d 0; x--) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                if (appliances.getAppliance(x).getLocation().equals(this.usersEnteredLocation)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    appliances.removeAppliance((appliances.getAppliance(x).getName()));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            homeLocationsList.removeLocation(this.usersEnteredLocation);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            ui.showToUser(MESSAGE_LOCATION_NOT_EXIST + \" Nothing will be deleted.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 11,
      "Ang-Cheng-Jun": 5,
      "zongxian-ctrl": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/UsageCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.duke.common.Messages.LINE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class UsageCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"usage\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        double totalUsage \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        System.out.print(LINE);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        int maxLengthName \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        int maxLengthLocation \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        boolean maxNameValue \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        boolean maxLocationValue \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        String applianceName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        String location;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        String status;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        /** Find length of longest appliance name and location for formatting. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        for (Appliance a : appliances.getAllAppliance()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            applianceName \u003d a.getName();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            location \u003d a.getLocation();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            maxLengthName \u003d (maxNameValue) ? applianceName.length() : Math.max(maxLengthName, applianceName.length());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            maxNameValue \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            maxLengthLocation \u003d (maxLocationValue) ? location.length() : Math.max(maxLengthLocation, location.length());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            maxLocationValue \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        for (int i \u003d 0; i \u003c appliances.getAllAppliance().size(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            status \u003d appliances.getAppliance(i).getStatus();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            applianceName \u003d appliances.getAppliance(i).getName();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            location \u003d appliances.getAppliance(i).getLocation();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            double appliancePower \u003d appliances.getAppliance(i).measureConsumption();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            totalUsage +\u003d appliancePower;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            String format \u003d \"%d. %-\" + maxLengthName"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    + \"s | Location: %-\" + maxLengthLocation"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                    + \"s | Status: %s | Usage: %.2f kWh \\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            System.out.printf(format, i + 1, applianceName, location, status, appliancePower);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        System.out.format(\"\\nTotal power consumption: %.2f kWh \\n\", totalUsage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 47
    }
  },
  {
    "path": "src/main/java/seedu/duke/common/Messages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String LINE \u003d \"-\".repeat(Math.max(0, 54)) + \"\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String DIVIDER \u003d \"\u003d\".repeat(Math.max(0, 50));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"Welcome to your SmartHomeBot V1.0!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"Good bye!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_IMPORT \u003d \"Importing data........Completed!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_EXPORT \u003d \"Exporting data........Completed!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_APPLIANCE_TYPE_NOT_EXIST \u003d \"Type Entered does not exist.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_APPLIANCE_EXIST \u003d \"Appliance name already exists.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_LOCATION_NOT_EXIST \u003d \"Location does not exist.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_LOCATION_EXIST \u003d \"Location already exist\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_DISPLAY_LOCATION \u003d \" | Location: \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_DISPLAY_STATUS \u003d \" | Status: \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_DISPLAY_WATT \u003d \" | Watt: \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_DISPLAY_TYPE \u003d \" | Type: \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_LIST_LOCATIONS \u003d \"Here are the location you have entered.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_LIST_APPLIANCES \u003d \"Here are the appliances in your list.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_LIST_NO_LOCATIONS \u003d \"There is currently no locations in the list\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_LIST_NO_APPLIANCES \u003d \"There is currently no appliances in the list\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d  \"Invalid Command Format\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_INVALID_ADD_COMMAND \u003d  \"Please follow order of AddCommand\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_INVALID_LIST_COMMAND \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            \"Please enter either \u0027list appliance\u0027 or \u0027list location\u0027\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public static final String MESSAGE_POWER_NOT_NUMBER \u003d  \"Please enter a numerical value for power.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_TIME_FORMAT_ERROR \u003d \"Time format is wrong.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_APPLIANCE_PREVIOUSLY_ON \u003d \"The appliance is already ON previously.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static final String MESSAGE_APPLIANCE_PREVIOUSLY_OFF \u003d \"The appliance is already OFF previously.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_FILE_CORRUPTED \u003d \"Data file is corrupted, some data will not be entered\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 4,
      "Ang-Cheng-Jun": 23,
      "fanceso": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/AirConditioner.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class AirConditioner extends Appliance {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String TYPE_WORD \u003d \"airconditioner\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String temperature;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public AirConditioner(String name, String location, String power) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(name, location, power);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.temperature \u003d \"25\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String getTemperature() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.temperature;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void setTemperature(String temperature) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.temperature \u003d temperature;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"AirConditioner\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 27,
      "zongxian-ctrl": 2,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/ApplianceList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.exceptions.InvalidAdditionOfAppliance;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class ApplianceList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static ArrayList\u003cAppliance\u003e appliances;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public ApplianceList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        appliances \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void addAppliance(Appliance appliance) throws InvalidAdditionOfAppliance {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (!isAppliance(appliance.getName())) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            appliances.add(appliance);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new InvalidAdditionOfAppliance();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void removeAppliance(String userEnteredName) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (int i \u003d 0; i \u003c getAllAppliance().size(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (getAppliance(i).getName().equals(userEnteredName)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                appliances.remove(i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Appliance getAppliance(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return appliances.get(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public ArrayList\u003cAppliance\u003e getAllAppliance() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return appliances;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void setAppliance(int index, Appliance appliance) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        appliances.set(index, appliance);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Boolean isAppliance(String toAddApplianceName) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        boolean isExist \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (Appliance a : appliances) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (a.getName().equals(toAddApplianceName)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                isExist \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return isExist;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 56
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/Fan.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Fan extends Appliance {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String speed;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String TYPE_WORD \u003d \"fan\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Fan(String name, String location, String power) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(name, location, power);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        speed \u003d \"1\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"Fan\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private void setSpeed(String speed) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        Fan.speed \u003d speed;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 20,
      "zongxian-ctrl": 2,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/HomeLocations.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.exceptions.InvalidAddtionOfLocation;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class HomeLocations {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private ArrayList\u003cString\u003e locations \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Creating new location if is not existed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param location used to be added into the location list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void addLocation(String location) throws InvalidAddtionOfLocation {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        // create location from Appliance"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (!isLocationCreated(location)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            this.locations.add(location);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            // Will be replaced with throwing an exception"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new InvalidAddtionOfLocation();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Removing selected location with user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param location used to be removed from the location list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void removeLocation(String location) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        int removeIndex \u003d -1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        int locationIndex \u003d 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        for (String l : locations) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (l.equals(location)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                removeIndex \u003d locationIndex;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                locationIndex++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        locations.remove(removeIndex);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public ArrayList\u003cString\u003e getLocations() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return locations;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        for (String l : locations) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            sb.append(l);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Returns true if location string is not found."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @param location used to identify the display index"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return isValid true if location is not found in list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public boolean isLocationCreated(String location) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        boolean isValid \u003d false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        for (String l : locations) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (l.equals(location)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                isValid \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return isValid;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 3,
      "zongxian-ctrl": 1,
      "fanceso": 71
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/Lights.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Lights extends Appliance {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String TYPE_WORD \u003d \"light\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Lights(String name, String location, String power) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(name, location, power);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"Light\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 17,
      "zongxian-ctrl": 3,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/WaterHeater.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class WaterHeater extends Appliance {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public static final String TYPE_WORD \u003d \"waterheater\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String temperature;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public WaterHeater(String name, String location, String power) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(name, location, power);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.temperature \u003d \"40\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private void setTemperature(String temperature) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.temperature \u003d temperature;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"WaterHeater\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private void setTimer(String duration) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 23,
      "zongxian-ctrl": 3,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/actuators/Actuators.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.data.actuators;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.data.framework.Appliance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "abstract class Actuators extends Appliance {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Actuators(String name, String location, String power) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(name, location, power);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 12,
      "zongxian-ctrl": 1,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/actuators/Curtains.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.data.actuators;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Curtains extends Actuators {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Curtains(String name, String location, String power) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(name, location, power);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"Curtain\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 10,
      "zongxian-ctrl": 1,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/actuators/Doors.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.data.actuators;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Doors extends Actuators {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Doors(String name, String location, String power) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        super(name, location, power);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"Doors\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 11,
      "zongxian-ctrl": 1,
      "fanceso": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/framework/Appliance.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.duke.data.framework;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public abstract class Appliance {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String location;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    protected String power;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private String status;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private Power appliancePower;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String ON \u003d \"On\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String OFF \u003d \"Off\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Appliance(String name, String location, String power) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.status \u003d OFF;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.power \u003d power;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        appliancePower \u003d new Power(power);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void switchOn() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        appliancePower.onAppliance();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void switchOff() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        appliancePower.offAppliance();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (appliancePower.getStatus()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            this.status \u003d ON;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            this.status \u003d OFF;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return this.status;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String getStringPower() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return power;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public double measureConsumption() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return appliancePower.getPower();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String getPowerConsumption() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return appliancePower.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void updatePowerConsumption(String powerConsumption) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        appliancePower.computeFromFile(Double.parseDouble(powerConsumption));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public String getPower() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return this.power;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getLocation() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.location;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return this.name + \": \" + getStatus();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 32,
      "Ang-Cheng-Jun": 8,
      "TanLeeWei": 12,
      "fanceso": 19
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/framework/Power.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.duke.data.framework;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static seedu.duke.common.Messages.LINE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "public class Power {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private final int power;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String TIME_DATE_FORMAT \u003d \"dd/MM/yyyy | HH:mm:ss\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(TIME_DATE_FORMAT);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    LocalDateTime currentTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private String offTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private String onTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private double powerUsed;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private double totalHours;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private Boolean isOn;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private double totalPowerConsumption;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Power(String power) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.power \u003d Integer.parseInt(power);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        this.isOn \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        totalPowerConsumption \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        totalHours \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Appliance only can be switched on if it was \u0027off\u0027 previously."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void onAppliance() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (!isOn) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            this.isOn \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            onTime \u003d getCurrentTime();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            ui.showToUser(Messages.MESSAGE_APPLIANCE_PREVIOUSLY_ON);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public void offAppliance() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (isOn) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            this.isOn \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            offTime \u003d getCurrentTime();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                calculatePowerConsumed();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "                ui.showToUser(LINE + Messages.MESSAGE_TIME_FORMAT_ERROR);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            ui.showToUser(Messages.MESSAGE_APPLIANCE_PREVIOUSLY_OFF);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * Gets the system current time."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     * @return currentTime in string with the format defined"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fanceso"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private String getCurrentTime() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        currentTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return dateTimeFormatter.format(currentTime);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private void calculateTimeUsed() throws ParseException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        SimpleDateFormat timeFormat \u003d new SimpleDateFormat(TIME_DATE_FORMAT);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Date onTimeValue;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Date offTimeValue;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        double timeUsed;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        boolean isOnOnce;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (onTime !\u003d null) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            isOnOnce \u003d true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            isOnOnce \u003d false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        if (isOnOnce) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            onTimeValue \u003d timeFormat.parse(onTime);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            if (!this.isOn) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                offTimeValue \u003d timeFormat.parse(offTime);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                timeUsed \u003d offTimeValue.getTime() - onTimeValue.getTime();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                onTime \u003d offTime;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                Date currentUsedTime \u003d timeFormat.parse(getCurrentTime());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                timeUsed \u003d currentUsedTime.getTime() - onTimeValue.getTime();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fanceso"
        },
        "content": "                onTime \u003d getCurrentTime();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            timeUsed \u003d 0;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        // For simulation purpose, 1 second in System equals to 1 hour in SmartHomeBot"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        // Convert back to hours timeDifference/(1000 * 60 * 60)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        totalHours \u003d timeUsed / (1000);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    private void calculatePowerConsumed() throws ParseException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        calculateTimeUsed();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        // convert to kWh"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        powerUsed \u003d totalHours * power / 1000.00;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        totalPowerConsumption +\u003d powerUsed;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public Boolean getStatus() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return this.isOn;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    public double getPower() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fanceso"
        },
        "content": "            calculatePowerConsumed();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            System.out.println(LINE + Messages.MESSAGE_TIME_FORMAT_ERROR);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        return this.totalPowerConsumption;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void computeFromFile(double powerComsumption) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        powerUsed \u003d powerComsumption;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        totalPowerConsumption +\u003d powerUsed;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return String.valueOf(this.totalPowerConsumption);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 11,
      "TanLeeWei": 9,
      "fanceso": 114
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/EmptyParameterException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "public class EmptyParameterException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "zongxian-ctrl": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/FileCorrupted.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class FileCorrupted extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidAdditionOfAppliance.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class InvalidAdditionOfAppliance extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidAddtionOfLocation.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class InvalidAddtionOfLocation extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/StorageFile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.exceptions.EmptyParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.duke.commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.duke.commands.CreateCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.duke.data.ApplianceList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import seedu.duke.data.HomeLocations;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import seedu.duke.exceptions.FileCorrupted;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.ui.TextUi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.duke.common.Messages.MESSAGE_FILE_CORRUPTED;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static seedu.duke.common.Messages.MESSAGE_IMPORT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class StorageFile {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private static String filePath \u003d \"data/SmartHomeBot.txt\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private static ApplianceList appliances;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private static HomeLocations homeLocations;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public StorageFile(ApplianceList appliances, HomeLocations homeLocations) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.homeLocations \u003d homeLocations;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.appliances \u003d appliances;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static void writeToFile() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            createFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            clearFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            myWriter.write(homeLocations.getLocations().toString() + \"\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            for (int i \u003d 0; i \u003c appliances.getAllAppliance().size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                myWriter.write(appliances.getAppliance(i).getLocation()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                        + \"|\" + appliances.getAppliance(i).getName()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                        + \"|\" + appliances.getAppliance(i).getStringPower()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                        + \"|\" + appliances.getAppliance(i).getType()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                        + \"|\" + appliances.getAppliance(i).getStatus()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                        + \"|\" + appliances.getAppliance(i).getPowerConsumption() + \"\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"An error occur\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static void readFile() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            int i \u003d 0;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            File myFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            Scanner myReader \u003d new Scanner(myFile);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String locationList \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                convertTextToLocationList(locationList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                convertTextToApplianceList(i, myReader);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            } catch (FileCorrupted e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                ui.showToUser(MESSAGE_FILE_CORRUPTED);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            myReader.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            ui.showToUser(MESSAGE_IMPORT);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (FileNotFoundException | EmptyParameterException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            System.out.println(\"Load File Does not Exist. No contents will be loaded.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static void convertTextToApplianceList(int i, Scanner myReader) throws FileCorrupted {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                String applianceList \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                String[] splitString \u003d applianceList.split(\"\\\\|\", 7);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                if (splitString[1].isEmpty() || splitString[0].isEmpty()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        || splitString[2].isEmpty() || splitString[3].isEmpty()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    throw new FileCorrupted();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                AddCommand add \u003d new AddCommand(splitString[1], splitString[0], splitString[2], splitString[3]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                add.setData(appliances, homeLocations);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                add.sortIntoType();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                appliances.getAppliance(i).updatePowerConsumption(splitString[5]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                if (splitString[4].toLowerCase().equals(\"on\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    appliances.getAppliance(i).switchOn();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                throw new FileCorrupted();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static void convertTextToLocationList(String locationList) throws EmptyParameterException, FileCorrupted {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            int start \u003d locationList.indexOf(\"[\") + 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            int end \u003d locationList.indexOf(\"]\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String when \u003d locationList.substring(start, end);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String[] stringSplit \u003d when.split(\",\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            for (int j \u003d 0; j \u003c stringSplit.length; j++) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                CreateCommand newLocation \u003d new CreateCommand(stringSplit[j].trim());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                newLocation.setData(appliances, homeLocations);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                newLocation.insertLocation();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new FileCorrupted();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static void createFile() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            File myObj \u003d new File(filePath);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            if (!myObj.getParentFile().exists()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                myObj.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            if (myObj.exists()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                myObj.createNewFile();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            System.out.println(\"An error occurred\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static void clearFile() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            PrintWriter writer \u003d new PrintWriter(filePath);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            writer.print(\"\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"File is empty\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 46,
      "Ang-Cheng-Jun": 2,
      "TanLeeWei": 93
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/TextUi.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import seedu.duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /** Format of a comment input line. Comment lines are silently consumed when reading user input. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String COMMENT_LINE_FORMAT_REGEX \u003d \"#.*\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static final String ENTER_COMMAND \u003d \"Enter command: \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static Scanner in;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static PrintStream out;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public TextUi(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Returns true if the user input line should be ignored."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Input should be ignored if it is parsed as a comment, is only whitespace, or is empty."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @param rawInputLine full raw user input line."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @return true if the entire user input line should be ignored."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private boolean shouldIgnore(String rawInputLine) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return rawInputLine.trim().isEmpty() || isCommentLine(rawInputLine);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Returns true if the user input line is a comment line."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @param rawInputLine full raw user input line."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @return true if input line is a comment."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private boolean isCommentLine(String rawInputLine) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return rawInputLine.trim().matches(COMMENT_LINE_FORMAT_REGEX);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Prompts for the command and reads the text entered by the user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * @return command (full line) entered by the user"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        out.print(ENTER_COMMAND);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        String fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        while (shouldIgnore(fullInputLine)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "            fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        return fullInputLine.trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        showToUser(Messages.MESSAGE_WELCOME);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Generates and prints the Goodbye message upon the end of the application."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public void showGoodByeMessage() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        showToUser(Messages.MESSAGE_EXPORT);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        showToUser(Messages.MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Shows message(s) to the user."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    public static void showToUser(String message) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        out.println(message);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     * Print a divider."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    private static void printDivider() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "        showToUser(Messages.DIVIDER);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 92
    }
  },
  {
    "path": "src/test/java/seedu/duke/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.CreateCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.HelpCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.InvalidCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.OffCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.OnCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.RemoveCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.UsageCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    void parse_helpCommand_parsedCorrectly() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"help\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final Command result \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(HelpCommand.class));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    void parse_createCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"create Bedroom1\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final Command result \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(CreateCommand.class));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    void parse_addCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"add Lightbulb l/Kitchen w/ 100 t/Light\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final Command result \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(AddCommand.class));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    void parse_exitCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"exit\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final Command result \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(ExitCommand.class));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    void parse_invalidCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"SmartHomeBot\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final Command result \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(InvalidCommand.class));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    void parse_deleteCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"delete Lightbulb\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final Command result \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(DeleteCommand.class));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    void parse_removeCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"remove Bedroom1\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final Command result \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(RemoveCommand.class));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    void parse_usageCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"usage\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final Command result \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(UsageCommand.class));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    void parse_onCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"on Lightbulb\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final Command result \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(OnCommand.class));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    void parse_offCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"off Lightbulb\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final Command result \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(OffCommand.class));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    void parse_listCommand_parserCorrectly() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final String input \u003d \"list appliance\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final Command result \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(ListCommand.class));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zongxian-ctrl": 106
    }
  },
  {
    "path": "src/test/java/seedu/duke/PowerUsageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fanceso"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.duke.commands.InvalidCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.duke.data.Fan;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.duke.data.Lights;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fanceso"
        },
        "content": "class PowerUsageTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void getPowerTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Assertions.assertEquals(\"45\", new Lights(\"Xiao Mi Light\", \"BedRoom 1\", \"45\").getPower());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void invalidPowerTest() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        final String input \u003d \"add Xiao Mi Light l/Bedroom w/ABCerror t/Light\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        final Command result \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        // Non numerical value is used for power, return InvalidCommand"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(InvalidCommand.class));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void initialPowerUsageTest() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Lights brLight \u003d new Lights(\"Main Light\", \"BedRoom 1\", \"100\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        // New appliance wil not have power consumption until user switch on"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertEquals(\"0.0\", brLight.getPowerConsumption());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void powerUsageTest() throws InterruptedException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Fan fan \u003d new Fan(\"Cooling Fan\", \"Kitchen\", \"100\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        fan.switchOn();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        // Appliance wil be on for 5000ms which equals to 5hours in SmartHomeBot"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        Thread.sleep(5000);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        fan.switchOff();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertEquals(\"0.5\", fan.getPowerConsumption());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fanceso"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fanceso": 47
    }
  },
  {
    "path": "src/test/java/seedu/duke/data/SmartHomeBotTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.commands.RemoveCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.data.ApplianceList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.data.HomeLocations;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fanceso"
        },
        "content": "import seedu.duke.common.Messages;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.exceptions.EmptyParameterException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.exceptions.InvalidAdditionOfAppliance;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import seedu.duke.exceptions.InvalidAddtionOfLocation;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "class SmartHomeBotTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void getNameTest() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertEquals(\"Xiao Mi Light\", new Lights(\"Xiao Mi Light\", \"BedRoom 1\", \"45\").getName());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void getLocationTest() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertEquals(\"BedRoom1\", new Lights(\"Xiao Mi Light\", \"BedRoom1\", \"45\").getLocation());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    void getStatusTest() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        //New appliance added should be always remain Off until User switch it On"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fanceso"
        },
        "content": "        assertEquals(\"Off\", new Lights(\"Xiao Mi Light\", \"BedRoom 1\", \"45\").getStatus());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fanceso"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void addLocationTest() throws InvalidAddtionOfLocation {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String br1 \u003d \"BedRoom 1\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String br2 \u003d \"BedRoom 2\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        HomeLocations homeLocations \u003d new HomeLocations();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        homeLocations.addLocation(br1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        homeLocations.addLocation(br2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertEquals(\"[BedRoom 1, BedRoom 2]\", homeLocations.getLocations().toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertThrows(InvalidAddtionOfLocation.class, () -\u003e homeLocations.addLocation(br1));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void addApplianceTest() throws InvalidAdditionOfAppliance {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        ApplianceList applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        Lights l1 \u003d new Lights(\"l1\", \"BedRoom1\", \"50\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        Lights l2 \u003d new Lights(\"l2\", \"BedRoom1\", \"50\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        applianceList.addAppliance(l1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        applianceList.addAppliance(l2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertThrows(InvalidAdditionOfAppliance.class, () -\u003e applianceList.addAppliance(l1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    void getTypeTest() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertEquals(\"AirConditioner\", new AirConditioner(\"aircon1\", \"br1\", \"25\").getType());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    void onOffTest() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        AirConditioner aircon \u003d new AirConditioner(\"aircon\", \"br1\", \"200\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        if (aircon.getStatus().equals(\"On\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            assertEquals(\"aircon: On\", aircon.toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "            assertEquals(\"aircon: Off\", aircon.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    public void removeLocationTest() throws InvalidAddtionOfLocation, EmptyParameterException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        //Create Sample Locations and empty appliance list"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        HomeLocations homeLocations \u003d new HomeLocations();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        homeLocations.addLocation(\"BedRoom1\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        homeLocations.addLocation(\"BedRoom3\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        // Prepare to read output of command"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        ApplianceList applianceList \u003d new ApplianceList();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        // Remove Invalid location"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        Command removeLocation \u003d new RemoveCommand(\"Bedroom2\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        removeLocation.setData(applianceList, homeLocations);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        removeLocation.execute();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        //Process ui output"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        String outputString \u003d outContent.toString().replace(System.getProperty(\"line.separator\"), \"\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        //compare outputs"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "        assertEquals(Messages.MESSAGE_LOCATION_NOT_EXIST + \" Nothing will be deleted.\", outputString);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fanceso"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zongxian-ctrl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zongxian-ctrl": 79,
      "fanceso": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "##########################################################"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "# test exit command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "##########################################################"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  # exits properly"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ang-Cheng-Jun"
        },
        "content": "  exit"
      }
    ],
    "authorContributionMap": {
      "Ang-Cheng-Jun": 5
    }
  }
]
