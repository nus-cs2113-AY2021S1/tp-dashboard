[
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jia Ern | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhu Zeyu | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jane Ng | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jiayi Zhang | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Darticune"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Yan An | [Github](https://github.com/Darticune) | [Portfolio](docs/team/yanAn.md)"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 1,
      "gua-guargia": 1,
      "-": 7,
      "neojiaern": 1,
      "Jane-Ng": 1,
      "Darticune": 1
    }
  },
  {
    "path": "src/main/java/Kaji.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import exception.IncorrectAccessLevelException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import exception.InvalidInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import exception.InvalidFileFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.admin.Admin;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "public class Kaji {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private CardList cards;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    private Access access;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public Kaji(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        cards \u003d new CardList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            Admin admin \u003d new Admin(storage.loadModule());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            access \u003d new Access(admin);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            storage.createAdmin();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            access \u003d new Access();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        ui.showHelpList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                ui.showLevel(access);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand, access);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                c.execute(cards, ui, access, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                ui.printEmptyLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } catch (InvalidInputException | IncorrectAccessLevelException | IOException "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                     | IndexOutOfBoundsException | InvalidFileFormatException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        new Kaji(\"data/admin\").run();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 4,
      "gua-guargia": 18,
      "neojiaern": 4,
      "Jane-Ng": 31
    }
  },
  {
    "path": "src/main/java/access/Access.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "package access;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.admin.Admin;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.chapter.Chapter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.module.Module;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "public class Access {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected String level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected String adminLevel;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected String moduleLevel;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected String chapterLevel;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected Chapter chapter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected Module module;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected Admin admin;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected boolean isAdminLevel;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected boolean isModuleLevel;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected boolean isChapterLevel;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public Access(Admin admin) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.admin \u003d admin;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.module \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.chapter \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.level \u003d \"admin\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.adminLevel \u003d \"admin\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.moduleLevel \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.chapterLevel \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.isAdminLevel \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.isModuleLevel \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.isChapterLevel \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public Access() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.level \u003d \"admin\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.adminLevel \u003d \"admin\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.moduleLevel \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.chapterLevel \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.module \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.chapter \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.admin \u003d new Admin();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.isAdminLevel \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.isModuleLevel \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.isChapterLevel \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public String getModuleLevel() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return moduleLevel;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public String getLevel() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return level;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public String getChapterLevel() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return chapterLevel;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public Module getModule() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public Chapter getChapter() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return chapter;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public Admin getAdmin() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return admin;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void setAdmin(Admin admin) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.admin \u003d admin;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void setModule(Module module) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.module \u003d module;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void setChapter(Chapter chapter) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.chapter \u003d chapter;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public boolean isAdminLevel() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return isAdminLevel;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public boolean isModuleLevel() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return isModuleLevel;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public boolean isChapterLevel() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return isChapterLevel;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void setModuleLevel(String moduleLevel) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (isChapterLevel) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(\"Sorry, you currently are in the chapter level.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (isModuleLevel) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            if (!(moduleLevel.equals(\"\"))) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                System.out.println(\"Sorry, you are already in the module level, \""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                        + \"please go back to admin level first.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            String replacement \u003d \"/\" + this.moduleLevel;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.level \u003d level.replace(replacement, \"\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.moduleLevel \u003d moduleLevel;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.module \u003d null;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.isModuleLevel \u003d false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.isAdminLevel \u003d true;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (isAdminLevel) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            if (moduleLevel.equals(\"\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                System.out.println(\"Sorry, you are already in the admin level.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.moduleLevel \u003d moduleLevel;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.level \u003d level + \"/\" + moduleLevel;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.module \u003d new Module(moduleLevel);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.isModuleLevel \u003d true;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.isAdminLevel \u003d false;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void setChapterLevel(String chapterLevel) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (isAdminLevel) { //wrong level"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(\"Sorry, you currently are in the admin level.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (isChapterLevel) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            if (!(chapterLevel.equals(\"\"))) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                System.out.println(\"Sorry, you are already in the chapter level, \""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                        + \"please go back to module level first.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            String replacement \u003d \"/\" + this.chapterLevel;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.level \u003d level.replace(replacement, \"\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.chapterLevel \u003d chapterLevel;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.chapter \u003d null;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.isChapterLevel \u003d false;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.isModuleLevel \u003d true;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (isModuleLevel) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            if (chapterLevel.equals(\"\")) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                System.out.println(\"Sorry, you are already in the module level.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.chapterLevel \u003d chapterLevel;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.level \u003d level + \"/\" + chapterLevel;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.chapter \u003d new Chapter(chapterLevel);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.isChapterLevel \u003d true;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            this.isModuleLevel \u003d false;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gua-guargia": 161
    }
  },
  {
    "path": "src/main/java/commands/AddChapterCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.chapter.Chapter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.module.ChapterList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.module.Module;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "public class AddChapterCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"addchapter\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    private final Chapter chapter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a chapter to the module. \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            + \"Parameters: CHAPTER_NAME\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" Chapter 1\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public AddChapterCommand(String chapterCode) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.chapter \u003d new Chapter(chapterCode);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void execute(CardList cards, Ui ui, Access access, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (access.isAdminLevel() || access.isChapterLevel()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(\"Sorry, you currently are in the admin/chapter level, \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                    + \"please go to module level first.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        Module newModule \u003d access.getModule();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        ChapterList chapters \u003d newModule.getChapters();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        chapters.addChapter(chapter);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        int chapterCount \u003d chapters.getChapterCount();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        ui.showChapterAdded(chapter, chapterCount);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        access.setModule(newModule);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        storage.createChapter(chapter.getChapterName(), access.getModuleLevel());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 5,
      "gua-guargia": 40
    }
  },
  {
    "path": "src/main/java/commands/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import manager.card.Card;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public static final String MODULE_PARAMETERS \u003d \" MODULE_NAME\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public static final String CHAPTER_PARAMETERS \u003d \" CHAPTER_NAME\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final String CARD_PARAMETERS \u003d \" q:QUESTION | a:ANSWER\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add a module / chapter / flashcard.\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            + \"Parameters:\" + MODULE_PARAMETERS + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            + \"           \" + CHAPTER_PARAMETERS + \"\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            + \"           \" + CARD_PARAMETERS + \"\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" CS2113T\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            + \"         \" + COMMAND_WORD + \" Chapter 1\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            + \"         \" + COMMAND_WORD + \" q:What is the result of one plus one | a:two\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private final Card card;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public AddCommand(String question, String answer) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.card \u003d new Card(question, answer);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void execute(CardList cards, Ui ui, Access access, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (access.getChapterLevel().equals(\"\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(\"Sorry, you currently are in the wrong level, please enter chapter level first.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        cards.addCard(card);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        int cardCount \u003d cards.getCardCount();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        ui.showCardAdded(cards.getCard(cardCount - 1), cardCount);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 7,
      "gua-guargia": 8,
      "Jane-Ng": 30
    }
  },
  {
    "path": "src/main/java/commands/AddModuleCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.admin.Admin;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.admin.ModuleList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.module.Module;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "public class AddModuleCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"addmodule\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    private final Module module;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a new module. \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            + \"Parameters: MODULE_NAME\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" CS2113T\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public AddModuleCommand(String moduleCode) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.module \u003d new Module(moduleCode);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void execute(CardList cards, Ui ui, Access access, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (access.isModuleLevel() || access.isChapterLevel()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(\"Sorry, you currently are in the module/chapter level, \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                    + \"please go to admin level first.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        Admin newAdmin \u003d access.getAdmin();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        ModuleList modules \u003d newAdmin.getModules();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        modules.addModule(module);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        int moduleCount \u003d modules.getModuleCount();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        ui.showModuleAdded(module, moduleCount);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        access.setAdmin(newAdmin);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        storage.createModule(module.getModuleName());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 5,
      "gua-guargia": 39
    }
  },
  {
    "path": "src/main/java/commands/BackChapterCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import manager.chapter.Chapter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import manager.module.ChapterList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "public class BackChapterCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"backchapter\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Back to chapter level. \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public void execute(CardList cards, Ui ui, Access access, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        access.setChapterLevel(\"\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 11,
      "gua-guargia": 17
    }
  },
  {
    "path": "src/main/java/commands/BackModuleCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "public class BackModuleCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"backmodule\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Back to module level. \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \"\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void execute(CardList cards, Ui ui, Access access, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        access.setModuleLevel(\"\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 4,
      "gua-guargia": 19
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import exception.IncorrectAccessLevelException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import exception.InvalidFileFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import exception.InvalidInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public abstract void execute(CardList cards, Ui ui, Access access, Storage storage)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throws InvalidInputException, IncorrectAccessLevelException, "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            IOException, InvalidFileFormatException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 1,
      "gua-guargia": 3,
      "neojiaern": 5,
      "Jane-Ng": 12
    }
  },
  {
    "path": "src/main/java/commands/EditCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import exception.IncorrectAccessLevelException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import exception.InvalidInputException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import manager.card.Card;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public static final String MODULE_PARAMETERS \u003d \" MODULE_NUMBER MODULE_NAME\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public static final String CHAPTER_PARAMETERS \u003d \" CHAPTER_NUMBER CHAPTER_NAME\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public static final String CARD_PARAMETERS \u003d \" FLASHCARD_NUMBER q:QUESTION | a:ANSWER\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            + \": Edit the module name / chapter name / flashcard content.\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            + \"Parameters:\" + MODULE_PARAMETERS + \"\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            + \"           \" + CHAPTER_PARAMETERS + \"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            + \"           \" + CARD_PARAMETERS + \"\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1 CS2113T\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            + \"         \" + COMMAND_WORD + \" 2 Chapter 2\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            + \"         \" + COMMAND_WORD + \" 3 q:What is the result of one plus one | a:two\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private final int editIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private final String question;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private final String answer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private final String accessLevel;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public EditCommand(int editIndex, String question, String answer, String accessLevel) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        this.editIndex \u003d editIndex;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        this.accessLevel \u003d accessLevel;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void execute(CardList cards, Ui ui, Access access, Storage storage)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            throws InvalidInputException, IncorrectAccessLevelException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        if (access.isChapterLevel()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            editCard(ui, access);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            throw new IncorrectAccessLevelException(\"Sorry, you are currently at \" + access.getLevel()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                    + \", please go to \" + accessLevel + \" level first.\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private void editCard(Ui ui, Access access) throws InvalidInputException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        CardList cards \u003d access.getChapter().getCards();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            Card card \u003d cards.getCard(editIndex);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            ui.showCardUnedited(card);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            if (!(question.isEmpty())) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                card.setQuestion(question);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            if (!(answer.isEmpty())) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                card.setAnswer(answer);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            ui.showCardEdited(card);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        } catch (IndexOutOfBoundsException | NullPointerException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            throw new InvalidInputException(\"The flashcard number needs to be within the range \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                    + \" of the total number of flashcards\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                    + MESSAGE_USAGE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jane-Ng": 72
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program. \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \"\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void execute(CardList cards, Ui ui, Access access, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 3,
      "gua-guargia": 3,
      "Jane-Ng": 17
    }
  },
  {
    "path": "src/main/java/commands/GoChapterCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import exception.InvalidFileFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.card.Card;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.chapter.Chapter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.module.ChapterList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "public class GoChapterCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"gochapter\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    String chapterCode;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Goes to chapter level. \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \"\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public GoChapterCommand(String chapterCode) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.chapterCode \u003d chapterCode;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void execute(CardList cards, Ui ui, Access access, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        boolean isLevelExist \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        ChapterList chapters \u003d access.getModule().getChapters();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        ArrayList\u003cChapter\u003e allChapters \u003d chapters.getAllChapters();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        for (Chapter chapter : allChapters) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            if (chapterCode.equalsIgnoreCase(chapter.getChapterName())) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                access.setChapterLevel(chapterCode);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                isLevelExist \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                    ArrayList\u003cCard\u003e allCards \u003d storage.loadCard(access.getModuleLevel(), chapter.getChapterName());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                    if (allCards.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                        System.out.println(\"This is a new chapter, you can try to add flashcards inside!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                    chapter.setCards(allCards);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                    access.setChapter(chapter);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                    System.out.println(\"The chapter file cannot be found.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                } catch (InvalidFileFormatException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                    System.out.println(\"The format of some commands in the file is invalid\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        if (!isLevelExist) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(\"Sorry, I cannot find this chapter, please add this chapter first\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 8,
      "gua-guargia": 52
    }
  },
  {
    "path": "src/main/java/commands/GoModuleCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.admin.ModuleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.chapter.Chapter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.module.Module;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "public class GoModuleCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"gomodule\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    String moduleCode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Goes to module level. \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \"\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public GoModuleCommand(String moduleCode) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void execute(CardList cards, Ui ui, Access access, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        boolean isLevelExist \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        ModuleList modules \u003d access.getAdmin().getModules();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        ArrayList\u003cModule\u003e allModules \u003d modules.getAllModules();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        for (Module module : allModules) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            if (moduleCode.equalsIgnoreCase(module.getModuleName())) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                access.setModuleLevel(moduleCode);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                isLevelExist \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                    ArrayList\u003cChapter\u003e chapters \u003d storage.loadChapter(module.getModuleName());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                    if (chapters.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                        System.out.println(\"This is a new module, you can try to add chapters inside!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                    module.setChapters(chapters);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                    access.setModule(module);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                    System.out.println(\"The module folder cannot be found.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        if (!isLevelExist) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(\"Sorry, I cannot find this module, please add this module first\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 5,
      "gua-guargia": 51
    }
  },
  {
    "path": "src/main/java/commands/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows a list of commands available. \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \"\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void execute(CardList cards, Ui ui, Access access, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        ui.showHelpList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 19,
      "gua-guargia": 3,
      "neojiaern": 1
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import exception.IncorrectAccessLevelException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import manager.admin.ModuleList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import manager.card.Card;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import manager.chapter.Chapter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import manager.module.ChapterList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import manager.module.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            + \": Shows a list of modules / chapters / flashcards available. \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void execute(CardList cards, Ui ui, Access access, Storage storage) throws IncorrectAccessLevelException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        if (access.isChapterLevel()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            listCards(ui, access);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (access.isModuleLevel()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            listChapters(ui, access);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (access.isAdminLevel()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            listModules(ui, access);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            throw new IncorrectAccessLevelException(\"List command can only be called at admin, \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                    + \"module and chapter level.\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private void listCards(Ui ui, Access access) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        CardList cards \u003d access.getChapter().getCards();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        ArrayList\u003cCard\u003e allCards \u003d cards.getAllCards();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        int cardCount \u003d cards.getCardCount();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        ui.showCardList(allCards, cardCount);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private void listModules(Ui ui, Access access) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        ModuleList modules \u003d access.getAdmin().getModules();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        ArrayList\u003cModule\u003e allModules \u003d modules.getAllModules();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        int chapterCount \u003d modules.getModuleCount();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        ui.showModuleList(allModules, chapterCount);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private void listChapters(Ui ui, Access access) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        ChapterList chapters \u003d access.getModule().getChapters();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        ArrayList\u003cChapter\u003e allChapters \u003d chapters.getAllChapters();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        int chapterCount \u003d chapters.getChapterCount();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        ui.showChapterList(allChapters, chapterCount);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 26,
      "gua-guargia": 2,
      "Jane-Ng": 35
    }
  },
  {
    "path": "src/main/java/commands/RemoveCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import manager.card.Card;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class RemoveCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"remove\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + \": Removes flashcard based on a specified index in the list. \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + \"Parameters: INDEX\\n\" + \"Example: \" + COMMAND_WORD + \" 2\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"The following flashcard has been removed:\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String MESSAGE_INVALID_INDEX \u003d \"The flashcard is not found, please try again.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private final int removeIndex;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public RemoveCommand(int removeIndex) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.removeIndex \u003d removeIndex;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void execute(CardList cards, Ui ui, Access access, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            Card card \u003d cards.getCard(removeIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            ui.showToUser(MESSAGE_SUCCESS + card.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            cards.removeCard(removeIndex);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            ui.showToUser(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 40
    }
  },
  {
    "path": "src/main/java/commands/ReviseCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import exception.InvalidFileFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import manager.card.Card;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import manager.chapter.Chapter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import scheduler.Scheduler;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " * Starts revision for a particular chapter."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class ReviseCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"revise\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Starts revision based on a particular chapter. \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + \"Parameters: INDEX_OF_CHAPTER\\n\" + \"Example: \" + COMMAND_WORD + \" 2\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"You have completed revision for %1$s.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String MESSAGE_NO_CARDS_IN_CHAPTER \u003d \"You currently have no cards in %1$s.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String MESSAGE_NO_CARDS_DUE \u003d \"You have no cards due for revision in %1$s today.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String MESSAGE_SHOW_ANSWER_PROMPT \u003d \"\\n[enter s to show answer]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String MESSAGE_SHOW_RATING_PROMPT \u003d \"How well did you do for this card?\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + \"[enter e(easy), m(medium), h(hard), c(cannot answer)]\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String EASY \u003d \"e\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String MEDIUM \u003d \"m\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String HARD \u003d \"h\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String CANNOT_ANSWER \u003d \"c\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private final int reviseIndex;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public ReviseCommand(int reviseIndex) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.reviseIndex \u003d reviseIndex;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Chapter getChapter(int reviseIndex, Access access, Ui ui) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Chapter chapter;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            chapter \u003d access.getModule().getChapters().getChapter(reviseIndex);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return chapter;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throw new IndexOutOfBoundsException(\"The chapter is not found.\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private ArrayList\u003cCard\u003e getCards(Ui ui, Access access, Storage storage, Chapter toRevise)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throws FileNotFoundException, InvalidFileFormatException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        ArrayList\u003cCard\u003e allCards;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            allCards \u003d storage.loadCard(access.getModuleLevel(), toRevise.getChapterName());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            toRevise.setCards(allCards);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throw new FileNotFoundException(\"File is not found.\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (InvalidFileFormatException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throw new InvalidFileFormatException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return allCards;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void execute(CardList cards, Ui ui, Access access, Storage storage) "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        throws FileNotFoundException, InvalidFileFormatException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Chapter toRevise \u003d getChapter(reviseIndex, access, ui);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        ArrayList\u003cCard\u003e allCards \u003d getCards(ui, access, storage, toRevise);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        ArrayList\u003cCard\u003e repeatCards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        int cardCount \u003d cards.getCardCount();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (cardCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            ui.showToUser(String.format(MESSAGE_NO_CARDS_IN_CHAPTER, toRevise));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        for (Card c : allCards) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if (Scheduler.isDeadlineDue(c.getDueBy())) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    ui.showToUser(\"The revision for \" + toRevise + \" will start now:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                ui.showToUser(\"\\nQuestion \" + count + \":\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                ui.showCardRevision(c);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                String input \u003d ui.getRating();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                repeatCards \u003d rateCard(ui, repeatCards, c, input);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            ui.showToUser(String.format(MESSAGE_NO_CARDS_DUE, toRevise));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        repeatRevision(ui, repeatCards, count);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        ui.showToUser(String.format(MESSAGE_SUCCESS, toRevise));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static ArrayList\u003cCard\u003e rateCard(Ui ui, ArrayList\u003cCard\u003e repeatCards, Card c, String input) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        boolean isInvalid \u003d true;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        while (isInvalid) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            switch (input.trim().toLowerCase()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case EASY:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                c.setDueBy(Scheduler.computeEasyDeadline(c, c.getPreviousInterval()));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                isInvalid \u003d false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case MEDIUM:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                c.setDueBy(Scheduler.computeMediumDeadline(c, c.getPreviousInterval()));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                isInvalid \u003d false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case HARD:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                c.setDueBy(Scheduler.computeHardDeadline(c, c.getPreviousInterval()));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                isInvalid \u003d false;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case CANNOT_ANSWER:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                repeatCards.add(c);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                isInvalid \u003d false;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                ui.showToUser(\"You have entered an invalid input, please try again.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                input \u003d ui.getRating();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return repeatCards;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private void repeatRevision(Ui ui, ArrayList\u003cCard\u003e cards, int count) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        while (cards.size() !\u003d 0) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            ArrayList\u003cCard\u003e repeatCards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            for (Card c : cards) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                ui.showToUser(\"\\nQuestion \" + count + \":\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                ui.showCardRevision(c);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                String input \u003d ui.getRating();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                repeatCards \u003d rateCard(ui, repeatCards, c, input);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            cards \u003d new ArrayList\u003c\u003e(repeatCards);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gua-guargia": 2,
      "neojiaern": 143,
      "Darticune": 1
    }
  },
  {
    "path": "src/main/java/exception/IncorrectAccessLevelException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "public class IncorrectAccessLevelException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public IncorrectAccessLevelException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public IncorrectAccessLevelException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jane-Ng": 10
    }
  },
  {
    "path": "src/main/java/exception/InvalidFileFormatException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class InvalidFileFormatException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 4
    }
  },
  {
    "path": "src/main/java/exception/InvalidInputException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "public class InvalidInputException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public InvalidInputException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jane-Ng": 10
    }
  },
  {
    "path": "src/main/java/manager/admin/Admin.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "package manager.admin;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.module.Module;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "public class Admin {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected ModuleList modules;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    //if there is no storage"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public Admin() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        modules \u003d new ModuleList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    //if there is storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public Admin(ArrayList\u003cModule\u003e modules) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.modules \u003d new ModuleList(modules);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public ModuleList getModules() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return modules;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gua-guargia": 23
    }
  },
  {
    "path": "src/main/java/manager/admin/ModuleList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "package manager.admin;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.module.Module;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "public class ModuleList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    private final ArrayList\u003cModule\u003e modules;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public ModuleList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        modules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public ModuleList(ArrayList\u003cModule\u003e modules) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.modules \u003d modules;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void addModule(Module module) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        modules.add(module);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public ArrayList\u003cModule\u003e getAllModules() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return modules;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public int getModuleCount() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return modules.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gua-guargia": 29
    }
  },
  {
    "path": "src/main/java/manager/card/Card.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "package manager.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "public class Card {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private String question;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private String answer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private int previousInterval;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    private LocalDate dueBy;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public Card(String question, String answer) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.dueBy \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.previousInterval \u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Card(String question, String answer, LocalDate dueBy, int previousInterval) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.dueBy \u003d dueBy;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.previousInterval \u003d previousInterval;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void setQuestion(String question) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void setAnswer(String answer) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String getQuestion() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        return \"[Q] \" + question;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String getAnswer() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return \"[A] \" + answer;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public LocalDate getDueBy() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return dueBy;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public int getPreviousInterval() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return previousInterval;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public void setDueBy(LocalDate newDueBy) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        dueBy \u003d newDueBy;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return \"[Q] \" + question + \" | [A] \" + answer;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 2,
      "neojiaern": 23,
      "Jane-Ng": 26,
      "Darticune": 7
    }
  },
  {
    "path": "src/main/java/manager/chapter/CardList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "package manager.chapter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import manager.card.Card;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "public class CardList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private final ArrayList\u003cCard\u003e cards;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public CardList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.cards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public CardList(ArrayList\u003cCard\u003e cards) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.cards \u003d new ArrayList\u003c\u003e(cards);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void addCard(Card card) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        cards.add(card);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void removeCard(int removeIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        cards.remove(removeIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public int getCardCount() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        return cards.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public Card getCard(int cardIndex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        return cards.get(cardIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public ArrayList\u003cCard\u003e getAllCards() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        return cards;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gua-guargia": 5,
      "neojiaern": 4,
      "Jane-Ng": 28
    }
  },
  {
    "path": "src/main/java/manager/chapter/Chapter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package manager.chapter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.card.Card;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import manager.module.ChapterList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class Chapter {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected String chapterName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected CardList cards;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Chapter(String chapterName) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.chapterName \u003d chapterName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.cards \u003d new CardList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public String getChapterName() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return chapterName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public CardList getCards() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        return cards;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void setCards(ArrayList\u003cCard\u003e cards) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.cards \u003d new CardList(cards);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return chapterName;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gua-guargia": 19,
      "neojiaern": 9,
      "Jane-Ng": 5
    }
  },
  {
    "path": "src/main/java/manager/module/ChapterList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "package manager.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.chapter.Chapter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "public class ChapterList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    private final ArrayList\u003cChapter\u003e chapters;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public ChapterList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        chapters \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public ChapterList(ArrayList\u003cChapter\u003e chapters) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.chapters \u003d chapters;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void addChapter(Chapter chapter) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        chapters.add(chapter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public ArrayList\u003cChapter\u003e getAllChapters() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return chapters;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public int getChapterCount() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return chapters.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Chapter getChapter(int chapterIndex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return chapters.get(chapterIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gua-guargia": 29,
      "neojiaern": 4
    }
  },
  {
    "path": "src/main/java/manager/module/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "package manager.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.chapter.Chapter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected ChapterList chapters;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected String moduleName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public Module(String moduleName) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.moduleName \u003d moduleName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        chapters \u003d new ChapterList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public String getModuleName() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return moduleName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public ChapterList getChapters() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return chapters;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void setChapters(ArrayList\u003cChapter\u003e chapters) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.chapters \u003d new ChapterList(chapters);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return moduleName;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gua-guargia": 31
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import commands.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import commands.AddChapterCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import commands.AddCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import commands.AddModuleCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import commands.BackChapterCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import commands.GoChapterCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import commands.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import commands.RemoveCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import commands.ReviseCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import commands.ExitCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import commands.GoModuleCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import commands.BackModuleCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import commands.EditCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import exception.IncorrectAccessLevelException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import exception.InvalidFileFormatException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import exception.InvalidInputException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import manager.chapter.Chapter;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import manager.module.ChapterList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private static final String QUESTION_ANSWER_PREFIX \u003d \" \\\\| \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private static final String QUESTION_PREFIX \u003d \"q:\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private static final String ANSWER_PREFIX \u003d \"a:\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private static final String ADMIN_LEVEL \u003d \"admin\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private static final String MODULE_LEVEL \u003d \"module\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private static final String CHAPTER_LEVEL \u003d \"chapter\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public static Command parse(String fullCommand, Access access)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            throws InvalidInputException, IncorrectAccessLevelException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        String[] commandTypeAndArgs \u003d splitCommandTypeAndArgs(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        String commandType \u003d commandTypeAndArgs[0].trim().toLowerCase();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        String commandArgs \u003d commandTypeAndArgs[1].trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            return prepareList(commandArgs);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            return prepareAdd(commandArgs);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case RemoveCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return prepareRemove(commandArgs);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case ReviseCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return prepareRevise(commandArgs, access);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            return prepareExit(commandArgs);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            return prepareHelp(commandArgs);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        case AddModuleCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            return prepareAddModule(commandArgs);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        case AddChapterCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            return prepareAddChapter(commandArgs);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        case BackModuleCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            return prepareBackModule(commandArgs);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        case BackChapterCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            return prepareBackChapter(commandArgs);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        case GoModuleCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            return prepareGoModule(commandArgs);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        case GoChapterCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            return prepareGoChapter(commandArgs);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        case EditCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            return prepareEdit(commandArgs, access);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    private static Command prepareGoChapter(String commandArgs) throws InvalidInputException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return new GoChapterCommand(commandArgs);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    private static Command prepareGoModule(String commandArgs) throws InvalidInputException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return new GoModuleCommand(commandArgs);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    private static Command prepareBackChapter(String commandArgs) throws InvalidInputException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (!commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return new BackChapterCommand();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    private static Command prepareBackModule(String commandArgs) throws InvalidInputException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (!commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return new BackModuleCommand();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    private static Command prepareAddChapter(String commandArgs) throws InvalidInputException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return new AddChapterCommand(commandArgs);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    private static Command prepareAddModule(String commandArgs) throws InvalidInputException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return new AddModuleCommand(commandArgs);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private static String[] splitCommandTypeAndArgs(String userCommand) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        String[] commandTypeAndParams \u003d userCommand.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        if (commandTypeAndParams.length !\u003d 2) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            commandTypeAndParams \u003d new String[]{commandTypeAndParams[0], \"\"};"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        return commandTypeAndParams;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private static Command prepareList(String commandArgs) throws InvalidInputException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        if (!commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            throw new InvalidInputException(\"There should not be any arguments for list.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private static Command prepareAdd(String commandArgs) throws InvalidInputException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            String[] args \u003d commandArgs.split(QUESTION_ANSWER_PREFIX, 2);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            String question \u003d parseQuestion(args[0]);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            String answer \u003d parseAnswer(args[1]);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            if (question.isEmpty() || answer.isEmpty()) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                throw new InvalidInputException();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            return new AddCommand(question, answer);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        } catch (IndexOutOfBoundsException | InvalidInputException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private static Command prepareRemove(String commandArgs) throws InvalidInputException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        int removeIndex;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            removeIndex \u003d Integer.parseInt(commandArgs) - 1;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return new RemoveCommand(removeIndex);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private static Command prepareEdit(String commandArgs, Access access)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            throws InvalidInputException, IncorrectAccessLevelException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        if (access.isChapterLevel()) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            return prepareEditCard(commandArgs);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            throw new IncorrectAccessLevelException(\"Edit command can only be called at admin, \""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                    + \"module and chapter level.\\n\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private static Command prepareEditCard(String commandArgs) throws InvalidInputException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            String[] args \u003d commandArgs.split(\" \", 2);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            if (args[0].trim().isEmpty()) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                throw new InvalidInputException(\"The flashcard number is missing.\\n\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                        + EditCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            int editIndex \u003d Integer.parseInt(args[0].trim()) - 1;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            String[] questionAndAnswer \u003d args[1].trim().split(QUESTION_ANSWER_PREFIX, 2);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            String question \u003d parseQuestion(questionAndAnswer[0]);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            String answer \u003d parseAnswer(questionAndAnswer[1]);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            if (question.isEmpty() \u0026\u0026 answer.isEmpty()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                throw new InvalidInputException(\"The content for question and answer are both empty.\\n\""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                        + EditCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            return new EditCommand(editIndex, question, answer, CHAPTER_LEVEL);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            throw new InvalidInputException(\"The flashcard number needs to be an integer.\\n\""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                    + EditCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            throw new InvalidInputException(\"The format for the edit command is incorrect.\\n\""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                    + EditCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private static String parseQuestion(String arg) throws InvalidInputException {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        if (!(arg.trim().toLowerCase().startsWith(QUESTION_PREFIX))) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            throw new InvalidInputException(\"There needs to be a \\\"q:\\\" prefix before the question.\\n\""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                    + \"Example: \" + AddCommand.COMMAND_WORD + AddCommand.CARD_PARAMETERS + \"\\n\""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                    + \"         \" + EditCommand.COMMAND_WORD + EditCommand.CARD_PARAMETERS);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        return arg.substring(2).trim();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private static String parseAnswer(String arg) throws InvalidInputException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        if (!(arg.trim().toLowerCase().startsWith(ANSWER_PREFIX))) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            throw new InvalidInputException(\"There needs to be a \\\"a:\\\" prefix before the answer.\\n\""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                    + \"Example: \" + AddCommand.COMMAND_WORD + AddCommand.CARD_PARAMETERS + \"\\n\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "                    + \"         \" + EditCommand.COMMAND_WORD + EditCommand.CARD_PARAMETERS);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        return arg.substring(2).trim();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private static Command prepareRevise(String commandArgs, Access access)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throws InvalidInputException, IncorrectAccessLevelException {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (access.isAdminLevel() || access.isChapterLevel()) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throw new IncorrectAccessLevelException(\"Revise command can only be called at module level.\\n\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } else if (commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throw new InvalidInputException(\"The index for chapter to revise should be provided.\\n\""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + ReviseCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        int chapterIndex;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            chapterIndex \u003d Integer.parseInt(commandArgs) - 1;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throw new IncorrectAccessLevelException(\"The index for chapter should be an integer.\\n\""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + ReviseCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return new ReviseCommand(chapterIndex);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private static Command prepareExit(String commandArgs) throws InvalidInputException {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        if (!commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private static Command prepareHelp(String commandArgs) throws InvalidInputException {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        if (!commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return new HelpCommand();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static String parseQuestioninFile(String arg) throws InvalidFileFormatException {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        if (!(arg.trim().startsWith(Storage.QUESTION_PREFIX))) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            throw new InvalidFileFormatException();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        String question \u003d arg.substring(3).trim();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        if (question.isEmpty()) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            throw new InvalidFileFormatException();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static String parseAnswerinFile(String arg) throws InvalidFileFormatException {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        if (!(arg.trim().startsWith(Storage.ANSWER_PREFIX))) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            throw new InvalidFileFormatException();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        String answer \u003d arg.substring(3).trim();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        if (answer.isEmpty()) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            throw new InvalidFileFormatException();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 38,
      "gua-guargia": 67,
      "neojiaern": 39,
      "Jane-Ng": 132
    }
  },
  {
    "path": "src/main/java/scheduler/Scheduler.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Darticune"
        },
        "content": "package scheduler;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import manager.card.Card;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import java.lang.Math;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Darticune"
        },
        "content": "public class Scheduler {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final double EASY_MULTIPLIER \u003d 1.1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final double MEDIUM_MULTIPLIER \u003d 2.2;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final double HARD_MULTIPLIER \u003d 4.4;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static final int MAX_INTERVAL \u003d 365;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static boolean isDeadlineDue(LocalDate dueBy) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (dueBy \u003d\u003d null) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return dueBy.isBefore(getCurrentDate()) || dueBy.isEqual(getCurrentDate());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static LocalDate getCurrentDate() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return LocalDate.now();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static int computeEasyInterval(int previousInterval) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        int newInterval \u003d (int) Math.round(previousInterval * EASY_MULTIPLIER);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        if (newInterval \u003e MAX_INTERVAL) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return previousInterval;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return newInterval;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static LocalDate computeEasyDeadline(Card c, int previousInterval) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        int interval \u003d computeEasyInterval(previousInterval);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (c.getDueBy() \u003d\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return getCurrentDate().plusDays(interval);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return c.getDueBy().plusDays(interval);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static int computeMediumInterval(int previousInterval) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        int newInterval \u003d (int) Math.round(previousInterval * MEDIUM_MULTIPLIER);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        if (newInterval \u003e MAX_INTERVAL) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return previousInterval;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return newInterval;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static LocalDate computeMediumDeadline(Card c, int previousInterval) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        int interval \u003d computeMediumInterval(previousInterval);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (c.getDueBy() \u003d\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return getCurrentDate().plusDays(interval);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return c.getDueBy().plusDays(interval);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static int computeHardInterval(int previousInterval) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        int newInterval \u003d (int) Math.round(previousInterval * HARD_MULTIPLIER);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        if (newInterval \u003e MAX_INTERVAL) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return previousInterval;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return newInterval;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static LocalDate computeHardDeadline(Card c, int previousInterval) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        int interval \u003d computeHardInterval(previousInterval);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (c.getDueBy() \u003d\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return getCurrentDate().plusDays(interval);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return c.getDueBy().plusDays(interval);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static int computeDeckInterval(double totalMultiplier, int cardCount, int previousInterval) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        double averageMultiplier \u003d (totalMultiplier / cardCount);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        int newInterval \u003d (int) Math.round(averageMultiplier * previousInterval);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        if (newInterval \u003e MAX_INTERVAL) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return previousInterval;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Darticune"
        },
        "content": "            return newInterval;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    public static LocalDate computeDeckDeadline(double totalMultiplier, int cardCount, int previousInterval) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        int interval \u003d computeDeckInterval(totalMultiplier, cardCount, previousInterval);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        return getCurrentDate().plusDays(interval);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Darticune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 17,
      "Darticune": 73
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"What is your name?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello \" + in.nextLine());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gua-guargia": 1,
      "-": 20
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import exception.InvalidFileFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import manager.card.Card;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import manager.chapter.CardList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.chapter.Chapter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.module.Module;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final String FILE_PATHWAY \u003d \"questions.txt\";   // file pathway"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final String QUESTION_ANSWER_PREFIX \u003d \" \\\\| \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final String QUESTION_PREFIX \u003d \"[Q]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final String ANSWER_PREFIX \u003d \"[A]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    //create the folder --\u003e \u0027data/admin\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void createAdmin() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        System.out.println(\"Filepath: \" + filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        boolean dataDirExists \u003d f.getParentFile().exists();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        boolean dataDirCreated \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (!dataDirExists) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            dataDirCreated \u003d f.getParentFile().mkdir();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(\"Directory \" + f.getParentFile().getName() + \" already exists\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (dataDirCreated) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(\"Successfully created new directory \" + f.getParentFile().getName());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        boolean adminDirExists \u003d f.exists();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        boolean adminDirCreated \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (!adminDirExists) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            adminDirCreated \u003d f.mkdir();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(\"Directory \" + f + \" already exists\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (adminDirCreated) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(\"Successfully created new directory \" + f);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void createModule(String moduleName) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        File f \u003d new File(filePath + \"/\" + moduleName);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        boolean moduleDirExists \u003d f.exists();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        boolean moduleDirCreated \u003d false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (!moduleDirExists) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            moduleDirCreated \u003d f.mkdir();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(\"    Directory \" + f + \" already exists\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (moduleDirCreated) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(\"    Successfully created new directory \" + f);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void createChapter(String chapterName, String moduleName) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            File f \u003d new File(filePath + \"/\" + moduleName + \"/\" + chapterName + \".txt\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            boolean chapterFileExists \u003d f.exists();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            boolean chapterFileCreated \u003d false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            if (!chapterFileExists) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                chapterFileCreated \u003d f.createNewFile();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                System.out.println(\"    File \" + f + \" already exists\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            if (chapterFileCreated) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "                System.out.println(\"    Successfully created new file \" + chapterName + \".txt\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(\"Error creating the file.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public ArrayList\u003cModule\u003e loadModule() throws FileNotFoundException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        boolean dirExists \u003d f.exists();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (!dirExists) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            throw new FileNotFoundException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        ArrayList\u003cModule\u003e modules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        String[] contents \u003d f.list();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        System.out.println(\"List of files and directories in the specified directory:\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        for (int i \u003d 0; i \u003c contents.length; i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(contents[i]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            modules.add(new Module(contents[i]));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return modules;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public ArrayList\u003cChapter\u003e loadChapter(String module) throws FileNotFoundException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        File f \u003d new File(filePath + \"/\" + module);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        boolean dirExists \u003d f.exists();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (!dirExists) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            throw new FileNotFoundException();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        ArrayList\u003cChapter\u003e chapters \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        String[] contents \u003d f.list();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (contents.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            return chapters;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        System.out.println(\"List of files and directories in the specified directory:\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        for (int i \u003d 0; i \u003c contents.length; i++) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            String target \u003d contents[i].replace(\".txt\", \"\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            System.out.println(contents[i]);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            chapters.add(new Chapter(target));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        return chapters;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public ArrayList\u003cCard\u003e loadCard(String module, String chapter)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            throws FileNotFoundException, InvalidFileFormatException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        File f \u003d new File(filePath + \"/\" + module + \"/\" + chapter + \".txt\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        boolean fileExists \u003d f.exists();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        if (!fileExists) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            throw new FileNotFoundException();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        ArrayList\u003cCard\u003e cards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "            //to read the card"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            String fileCommand \u003d s.nextLine();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            String[] args \u003d fileCommand.split(QUESTION_ANSWER_PREFIX, 2);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            String question \u003d Parser.parseQuestioninFile(args[0]);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            String answer \u003d Parser.parseAnswerinFile(args[1]);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            Card card \u003d new Card(question, answer);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            cards.add(card);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return cards;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public void saveCards(CardList cards, String module, String chapter) throws IOException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath + \"/\" + module + \"/\" + chapter + \".txt\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        for (int i \u003d 0; i \u003c cards.getCardCount(); i++) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            fw.write(cards.getCard(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 41,
      "gua-guargia": 118
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import commands.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import commands.HelpCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import commands.ReviseCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import commands.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import commands.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import commands.EditCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import commands.RemoveCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import commands.ReviseCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import manager.card.Card;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.chapter.Chapter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "import manager.module.Module;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import static commands.ReviseCommand.MESSAGE_SHOW_ANSWER_PROMPT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import static commands.ReviseCommand.MESSAGE_SHOW_RATING_PROMPT;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    private static final String lineSplit \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        String userCommand \u003d in.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        while (userCommand.trim().isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            userCommand \u003d in.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        return userCommand;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        out.println(\"Welcome to Kaji!\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void showLevel(Access access) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        out.println(access.getLevel());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void printEmptyLine() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        out.println();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void showCardAdded(Card card, int cardCount) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        out.println(\"Got it. I\u0027ve added this card:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        out.println(card);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        if (cardCount \u003d\u003d 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            out.println(\"Now you have \" + cardCount + \" card in the list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        out.println(\"Now you have \" + cardCount + \" cards in the list.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void showCardList(ArrayList\u003cCard\u003e cards, int cardCount) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        if (cardCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            out.println(\"There are no cards in your list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        out.println(\"Here are the cards in your list:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        for (Card c : cards) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            out.println((cards.indexOf(c) + 1) + \".\" + c);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void showToUser(String message) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        out.println(message);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void showCardRevision(Card c) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        out.println(c.getQuestion() + MESSAGE_SHOW_ANSWER_PROMPT);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        getAnswerInput(c);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void getAnswerInput(Card c) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        while (!input.trim().equalsIgnoreCase(\"s\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            out.println(\"You have entered an invalid input, please try again.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            input \u003d in.nextLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        out.println(c.getAnswer());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String getRating() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        out.println(MESSAGE_SHOW_RATING_PROMPT);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        out.println(\"Exiting the program...\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public void showHelpList() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        out.println(\"Here is a list of commands available:\" + \"\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        out.println(\"1. \" + ListCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        out.println(\"2. \" + ReviseCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        out.println(\"3. \" + HelpCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        out.println(\"4. \" + AddCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        out.println(\"5. \" + ExitCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        out.println(\"6. \" + EditCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        out.println(\"7. \" + RemoveCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void showCardUnedited(Card card) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        out.println(\"The following card will be edited:\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        out.println(card);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void showCardEdited(Card card) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        out.println(\"Edited card:\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        out.println(card);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void showModuleAdded(Module module, int moduleCount) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        out.println(\"    Got it. I\u0027ve added this module:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        out.println(\"    \" + module);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        out.println(\"    Now you have \" + moduleCount + \" modules in the list.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    public void showChapterAdded(Chapter chapter, int chapterCount) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        out.println(\"    Got it. I\u0027ve added this chapter:\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        out.println(\"    \" + chapter);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "        out.println(\"    Now you have \" + chapterCount + \" chapters in the list.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gua-guargia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public void showModuleList(ArrayList\u003cModule\u003e modules, int moduleCount) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        if (moduleCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            out.println(\"There are no modules in your list.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        out.println(\"Here are the modules in your list:\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        for (Module m : modules) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            out.println((modules.indexOf(m) + 1) + \".\" + m);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public void showChapterList(ArrayList\u003cChapter\u003e chapters, int chapterCount) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        if (chapterCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            out.println(\"There are no chapters in your list.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        out.println(\"Here are the chapters in your list:\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        for (Chapter c : chapters) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            out.println((chapters.indexOf(c) + 1) + \".\" + c);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        out.println(error);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 37,
      "gua-guargia": 20,
      "neojiaern": 33,
      "Jane-Ng": 77
    }
  },
  {
    "path": "src/test/java/commands/ReviseCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import manager.card.Card;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class ReviseCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void rateCard_cannotAnswer_returnsSizeOne() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String question \u003d \"1+1?\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String answer \u003d \"2\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        ArrayList\u003cCard\u003e cards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Card card \u003d new Card(question, answer);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        assertEquals(ReviseCommand.rateCard(ui, cards, card, \"c\").size(), 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void rateCard_easy_returnsSizeZero() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String question \u003d \"1+1?\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String answer \u003d \"2\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        ArrayList\u003cCard\u003e cards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Card card \u003d new Card(question, answer);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        assertEquals(ReviseCommand.rateCard(ui, cards, card, \"e\").size(), 0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 31
    }
  },
  {
    "path": "src/test/java/parser/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import access.Access;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import exception.InvalidInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void parse_addCommandInvalidArgs_expectException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        Access access \u003d new Access();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        final String[] inputs \u003d {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            \"add\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            \"add \","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            \"add wrong args format\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            // no question and answer separator prefix"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            \"add q:When is v1.0 due? a:15 Oct 2020\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            // no question prefix"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            \"add When is v1.0 due? | a:15 Oct 2020\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            // no answer prefix"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            \"add q:When is v1.0 due? | 15 Oct 2020\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        };"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        for (String input : inputs) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            assertThrows(InvalidInputException.class, () -\u003e parser.parse(input, access));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void parse_listCommandWithArgs_expectException() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        Access access \u003d new Access();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        final String input \u003d \"list args\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        assertThrows(InvalidInputException.class, () -\u003e parser.parse(input, access));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    public void parse_exitCommandWithArgs_expectException() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        Access access \u003d new Access();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        final String input \u003d \"exit args\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        assertThrows(InvalidInputException.class, () -\u003e parser.parse(input, access));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void parse_removeCommandEmptyArgs_exception() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        Access access \u003d new Access();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        final String[] inputs \u003d {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            \"remove\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            \"remove \","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        };"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        for (String input : inputs) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "            assertThrows(InvalidInputException.class, () -\u003e parser.parse(input, access));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void parse_removeCommandNonIntegerArgs_exception() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        Access access \u003d new Access();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String input \u003d \"remove two\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "        assertThrows(InvalidInputException.class, () -\u003e parser.parse(input, access));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jane-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 17,
      "Jane-Ng": 49
    }
  },
  {
    "path": "src/test/java/scheduler/SchedulerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Darticune"
        },
        "content": "package scheduler;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import manager.card.Card;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Darticune"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Darticune"
        },
        "content": "class SchedulerTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    void computeEasyDeadline_newIntervalOverLimit_intervalUnchanged() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Card c \u003d new Card(\"1+1\", \"2\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        assertEquals(LocalDate.now().plusDays(333), Scheduler.computeEasyDeadline(c, 333));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    void computeEasyDeadline_newIntervalWithinLimit_increasedInterval() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Card c \u003d new Card(\"1+1\", \"2\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        assertEquals(LocalDate.now().plusDays(1), Scheduler.computeEasyDeadline(c, 1));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    void computeMediumDeadline_newIntervalOverLimit_intervalUnchanged() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Card c \u003d new Card(\"1+1\", \"2\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        assertEquals(LocalDate.now().plusDays(333), Scheduler.computeMediumDeadline(c, 333));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    void computeMediumDeadline_newIntervalWithinLimit_increasedInterval() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Card c \u003d new Card(\"1+1\", \"2\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        assertEquals(LocalDate.now().plusDays(2), Scheduler.computeMediumDeadline(c,1));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    void computeHardDeadline_newIntervalOverLimit_intervalUnchanged() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Card c \u003d new Card(\"1+1\", \"2\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        assertEquals(LocalDate.now().plusDays(333), Scheduler.computeHardDeadline(c, 333));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    void computeHardDeadline_newIntervalWithinLimit_increasedInterval() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Card c \u003d new Card(\"1+1\", \"2\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        assertEquals(LocalDate.now().plusDays(4), Scheduler.computeHardDeadline(c,1));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    void computeDeckDeadline_newIntervalOverLimit_intervalUnchanged() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        assertEquals(LocalDate.now().plusDays(333), Scheduler.computeDeckDeadline(20, 1, 333));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    void computeDeckDeadline_newIntervalWithinLimit_increasedInterval() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        assertEquals(LocalDate.now().plusDays(20), Scheduler.computeDeckDeadline(20, 1, 1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    void isDeadlineDue_deadlineIsDue_true() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        assertTrue(Scheduler.isDeadlineDue(Scheduler.getCurrentDate().minusDays(1)));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    void isDeadlineDue_deadlineNotDue_false() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Darticune"
        },
        "content": "        assertFalse(Scheduler.isDeadlineDue(Scheduler.getCurrentDate().plusDays(1)));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Darticune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Darticune"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Darticune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 13,
      "Darticune": 56
    }
  }
]
