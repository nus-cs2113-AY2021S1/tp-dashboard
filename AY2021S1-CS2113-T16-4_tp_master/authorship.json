[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "# Hospitalsaurus ReX project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "This is a project template for a greenfield Java project. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/rex/Rex.java` file, right-click it, and choose `Run Rex.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "   \u003e Task :compileJava UP-TO-DATE"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :processResources NO-SOURCE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "   \u003e Task :classes UP-TO-DATE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "   \u003e Task :Rex.main()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     _    _                 _ _        _                                  _____     __   __"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    | |  | |               (_| |      | |                                |  __ \\    \\ \\ / /"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    | |__| | ___  ___ _ __  _| |_ __ _| |___  __ _ _   _ _ __ _   _ ___  | |__) |___ \\ V /"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    |  __  |/ _ \\/ __| \u0027_ \\| | __/ _` | / __|/ _` | | | | \u0027__| | | / __| |  _  // _ \\ \u003e \u003c  "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    | |  | | (_) \\__ | |_) | | || (_| | \\__ | (_| | |_| | |  | |_| \\__ \\ | | \\ |  __// . \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    |_|  |_|\\___/|___| .__/|_|\\__\\__,_|_|___/\\__,_|\\__,_|_|   \\__,_|___/ |_|  \\_\\___/_/ \\_\\"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                     | |                                                                   "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                     |_|"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   What is your name?"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   Type some word and press enter to let the execution proceed to the end."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "## Build automation using Gradle"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "## Testing"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "### I/O redirection tests"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit tests"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "* A skeleton JUnit test (`src/test/java/seedu/rex/RexTest.java`) is provided with this project template. "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "## Checkstyle"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* A sample CheckStyle rule configuration is provided in this project."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "## CI using GitHub Actions"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "## Documentation"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "`/docs` folder contains a skeleton version of the project documentation."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "Steps for publishing documentation to the public: "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   If you are using this project template for a team project, go to the team fork on GitHub."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click on the `settings` tab."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "1. Scroll down to the `GitHub Pages` section."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set the `source` as `master branch /docs folder`."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "1. Optionally, use the `choose a theme` button to choose a theme for your documentation."
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 15,
      "-": 51
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    mainClassName \u003d \"seedu.rex.Rex\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    archiveBaseName \u003d \"rex\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 3,
      "-": 44
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Jun Hong | [Github](https://github.com/TanJunHong) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GoldenCorgi"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Liew You Sheng | [Github](https://github.com/GoldenCorgi) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "randynyl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Randy Ng | [Github](https://github.com/randynyl/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ychong032"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chong Yow Lim | [Github](https://github.com/ychong032) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Kiat Hwe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 1,
      "kiathwe97": 2,
      "ychong032": 1,
      "randynyl": 1,
      "-": 4,
      "GoldenCorgi": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "# Hospitalsaurus ReX"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "{Give product intro here}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 1,
      "-": 7
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "{Give a product intro}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{Give steps to get started quickly}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "1. Down the latest version of `Hospitalsaurus ReX` from [here](https://github.com/AY2021S1-CS2113-T16-4/tp)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "{Give detailed description of each feature}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "### Adding a todo: `todo`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a new item to the list of todo items."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `todo n/TODO_NAME d/DEADLINE`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "* The `DEADLINE` can be in a natural language format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "* The `TODO_NAME` cannot contain punctuation.  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Write the rest of the User Guide d/next week`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: {your answer here}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "{Give a \u0027cheat sheet\u0027 of commands here}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* Add todo `todo n/TODO_NAME d/DEADLINE`"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 1,
      "-": 41
    }
  },
  {
    "path": "src/main/java/seedu/rex/Rex.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.PatientList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.exception.RexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " * Main class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class Rex {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private PatientList patients;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Initializes Rex."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param filePath Path to store and load patients."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public Rex(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            patients \u003d new PatientList(storage.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        } catch (RexException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            patients \u003d new PatientList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Starts Rex."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param args Command line argument."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        new Rex(\"data/patients.txt\").run();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Runs Rex."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                c.execute(patients, ui, storage);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            } catch (RexException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 64
    }
  },
  {
    "path": "src/main/java/seedu/rex/commands/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ychong032"
        },
        "content": "package seedu.rex.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ychong032"
        },
        "content": "import seedu.rex.data.PatientList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ychong032"
        },
        "content": "import seedu.rex.data.exception.RexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ychong032"
        },
        "content": "import seedu.rex.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ychong032"
        },
        "content": "import seedu.rex.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ychong032"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ychong032"
        },
        "content": " * Adds a patient to the list of patients."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ychong032"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ychong032"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String trimmedCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public AddCommand(String trimmedCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        this.trimmedCommand \u003d trimmedCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * Adds a new patient to the patient list using details inputted by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * @param patients List of patients."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * @param ui       Ui object of the program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * @param storage  Storage object used for saving data to files."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * @throws RexException If there is an error in the NRIC inputted by the user, the data fails"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     *                      to save successfully, or the NRIC already exists in the patient list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public void execute(PatientList patients, Ui ui, Storage storage) throws RexException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        String nric \u003d extractNric(trimmedCommand, COMMAND_WORD);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        if (patients.isExistingPatient(nric)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ychong032"
        },
        "content": "            throw new RexException(\"A patient with this NRIC is already registered!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        patients.addNewPatient(ui.getPatientName(), nric, ui.getPatientDateOfBirth());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        ui.showPatientAdded(patients.getPatientUsingIndex(patients.getSize() - 1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        storage.save(patients);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ychong032"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 6,
      "ychong032": 36
    }
  },
  {
    "path": "src/main/java/seedu/rex/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.PatientList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.exception.RexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ychong032"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " * Parent Command class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public static final String MESSAGE \u003d Ui.LOGO + \"\\n How may i assist you?\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            .replace(\"\\n\", System.lineSeparator() + \"\\t\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public static final String COMMAND_ERROR \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public static final int LEGAL_NRIC_LENGTH \u003d 9;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public static final Set\u003cCharacter\u003e LEGAL_NRIC_STATUSES \u003d Set.of(\u0027S\u0027, \u0027T\u0027, \u0027F\u0027, \u0027G\u0027);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    boolean isExit;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Initializes command to execute and set exit status to false."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Executes command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param patients PatientList object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param ui       Ui object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param storage  Storage object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @throws RexException If there is issue executing command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public abstract void execute(PatientList patients, Ui ui, Storage storage) throws RexException;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Returns Rex\u0027s exit status."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @return Exit status."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Checks if a given \u003ccode\u003eString\u003c/code\u003e consists of only integer characters."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * @param string The \u003ccode\u003eString\u003c/code\u003e to be checked."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if the string contains only integer characters; \u003ccode\u003efalse\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public boolean isInteger(String string) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        if (string \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ychong032"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            int stringAsInteger \u003d Integer.parseInt(string);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ychong032"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Extracts the NRIC from command inputted by the user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param trimmedCommand Command that was trimmed."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param commandWord    Command that was called."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @return Patient\u0027s NRIC as a String."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @throws RexException If the NRIC inputted by the user is invalid."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public String extractNric(String trimmedCommand, String commandWord) throws RexException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        String nric \u003d trimmedCommand.replaceFirst(\"(?i)\" + commandWord, \"\").trim().toUpperCase();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        if (nric.isBlank()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            throw new RexException(\"Please enter a valid NRIC after \u0027\" + commandWord + \"\u0027.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        } else if (nric.length() !\u003d LEGAL_NRIC_LENGTH) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            throw new RexException(\"Invalid NRIC length!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        } else if (!LEGAL_NRIC_STATUSES.contains(nric.charAt(0))) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            throw new RexException(\"Beginning character of NRIC must be \u0027S\u0027, \u0027T\u0027, \u0027F\u0027, or \u0027G\u0027!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        } else if (!isInteger(nric.substring(1, LEGAL_NRIC_LENGTH - 1))) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            throw new RexException(\"Number sequence of NRIC is invalid!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        } else if (!Character.isLetter(nric.charAt(nric.length() - 1))) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            throw new RexException(\"Final character of NRIC must be an English alphabet!\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            return nric;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 73,
      "ychong032": 18
    }
  },
  {
    "path": "src/main/java/seedu/rex/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.PatientList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " * Exits program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public static final String MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Says goodbye to user and exits Rex."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param patients PatientList object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param ui       Ui object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param storage  Storage object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void execute(PatientList patients, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 27
    }
  },
  {
    "path": "src/main/java/seedu/rex/commands/RetrieveCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.PatientList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.exception.RexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " * Retrieves patient details."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class RetrieveCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"retrieve\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String trimmedCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public RetrieveCommand(String trimmedCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.trimmedCommand \u003d trimmedCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Retrieves patient from patient list using details inputted by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param patients PatientList object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param ui       Ui object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param storage  Storage object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @throws RexException If there is issue executing command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void execute(PatientList patients, Ui ui, Storage storage) throws RexException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        String nric \u003d extractNric(trimmedCommand, COMMAND_WORD);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        int index \u003d patients.getExistingPatient(nric);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        if (index \u003c 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            throw new RexException(\"No such patient!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        ui.showPatient(patients.getPatientUsingIndex(index));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 37
    }
  },
  {
    "path": "src/main/java/seedu/rex/data/DoctorList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.hospital.Doctor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class DoctorList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final ArrayList\u003cDoctor\u003e doctors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Initializes doctors ArrayList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public DoctorList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        doctors \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Initializes doctors ArrayList using parameter."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param doctors Doctors list to use."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public DoctorList(ArrayList\u003cDoctor\u003e doctors) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.doctors \u003d doctors;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Returns size of doctors."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @return Length of doctors."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return doctors.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Returns doctor using index."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param index Index of doctor."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @return doctor at that index."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public Doctor getDoctorUsingIndex(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return doctors.get(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Adds doctor to doctors ArrayList."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param doctor doctor to add."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void addDoctor(Doctor doctor) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        doctors.add(doctor);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 54
    }
  },
  {
    "path": "src/main/java/seedu/rex/data/PatientList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.hospital.Patient;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ychong032"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " * Contains ArrayList of patients."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class PatientList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final ArrayList\u003cPatient\u003e patients;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Initializes patients ArrayList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public PatientList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        patients \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Initializes patients ArrayList using parameter."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param patients Patients list to use."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public PatientList(ArrayList\u003cPatient\u003e patients) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.patients \u003d patients;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Returns size of patients."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @return Length of patients."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return patients.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Returns patient using index."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param index Index of patient."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @return patient at that index."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public Patient getPatientUsingIndex(int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return patients.get(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Adds patient to patients ArrayList."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param patient patient to add."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void addPatient(Patient patient) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        patients.add(patient);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * Adds a new patient with given details to \u003ccode\u003epatients\u003c/code\u003e ArrayList."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * @param name        Name of the patient."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * @param nric        NRIC of the patient."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * @param dateOfBirth Patient\u0027s date of birth."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public void addNewPatient(String name, String nric, LocalDate dateOfBirth) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        addPatient(new Patient(name, nric, dateOfBirth));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Checks if the NRIC entered by the user already exists in the patient list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param nric The NRIC entered by the user."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if NRIC already exists; \u003ccode\u003efalse\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public boolean isExistingPatient(String nric) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return getExistingPatient(nric) \u003e -1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Finds NRIC entered by the user from the patient list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Returns -1 if not found."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param nric The NRIC entered by the user."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @return index of the patient with the NRIC; -1 otherwise."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public int getExistingPatient(String nric) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        for (int i \u003d 0; i \u003c getSize(); i++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            if (getPatientUsingIndex(i).getNric().equals(nric)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 84,
      "ychong032": 11
    }
  },
  {
    "path": "src/main/java/seedu/rex/data/exception/RexException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.data.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " * Throws exceptions relating to Rex."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class RexException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private static final String OOPS \u003d \"☹ OOPS!!! \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Initializes message to throw."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param message Exception message to show."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public RexException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        super(OOPS + message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 18
    }
  },
  {
    "path": "src/main/java/seedu/rex/data/hospital/Appointment.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.data.hospital;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ychong032"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class Appointment {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private Patient patient;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private Doctor doctor;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private String notes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private Prescription prescription;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void setTime(String time) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public Patient getPatient() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return patient;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void setPatient(Patient patient) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.patient \u003d patient;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public Doctor getDoctor() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return doctor;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void setDoctor(Doctor doctor) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.doctor \u003d doctor;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public String getNotes() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return notes;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void setNotes(String notes) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.notes \u003d notes;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public Prescription getPrescription() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return prescription;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void setPrescription(Prescription prescription) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.prescription \u003d prescription;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 57,
      "ychong032": 5
    }
  },
  {
    "path": "src/main/java/seedu/rex/data/hospital/Doctor.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.data.hospital;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class Doctor {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private enum Departments {}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 16
    }
  },
  {
    "path": "src/main/java/seedu/rex/data/hospital/Hospital.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.data.hospital;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.DoctorList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.PatientList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class Hospital {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private PatientList patients;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private DoctorList doctors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public PatientList getPatients() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return patients;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void setPatients(PatientList patients) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.patients \u003d patients;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public DoctorList getDoctors() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return doctors;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void setDoctors(DoctorList doctors) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.doctors \u003d doctors;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 35
    }
  },
  {
    "path": "src/main/java/seedu/rex/data/hospital/Patient.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.data.hospital;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ychong032"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ychong032"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.util.Vector;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " * Patient class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class Patient {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final Vector\u003cAppointment\u003e appointmentHistory;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private String nric;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    private LocalDate dateOfBirth;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public Patient(String name, String nric, LocalDate dateOfBirth) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        setName(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        setNric(nric);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        setDateOfBirth(dateOfBirth);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.appointmentHistory \u003d new Vector\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        // will create an empty appointment history"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public LocalDate getDateOfBirth() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return dateOfBirth;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public void setDateOfBirth(LocalDate dateOfBirth) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.dateOfBirth \u003d dateOfBirth;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public String getNric() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return nric;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void setNric(String nric) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.nric \u003d nric;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public Vector\u003cAppointment\u003e getAppointmentHistory() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return appointmentHistory;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * Returns the \u003ccode\u003ePatient\u003c/code\u003e object as a String for printing or writing to a file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * @return Patient\u0027s details as a String in a particular format."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        return name + \", \" + nric + \", \" + dateOfBirth.format(DateTimeFormatter.ISO_DATE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private enum Gender {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        MALE, FEMALE"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 52,
      "ychong032": 15
    }
  },
  {
    "path": "src/main/java/seedu/rex/data/hospital/Prescription.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.data.hospital;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class Prescription {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private String dosage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private String frequency;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public String getDosage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return dosage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void setDosage(String dosage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.dosage \u003d dosage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public String getFrequency() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return frequency;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void setFrequency(String frequency) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        this.frequency \u003d frequency;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 22
    }
  },
  {
    "path": "src/main/java/seedu/rex/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ychong032"
        },
        "content": "import seedu.rex.commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.commands.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.commands.RetrieveCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.exception.RexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.hospital.Patient;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ychong032"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " * Makes sense of user command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Reads inputted patient details and return the patient."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param line Input line to parse to patient details."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @return Patient object with patient details."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public static Patient readPatient(String line) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        StringBuilder record \u003d new StringBuilder(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        String name \u003d record.substring(0, record.indexOf(\", \"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        // Deletes first comma separator."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        record.delete(0, record.indexOf(\", \") + 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        String nric \u003d record.substring(0, record.indexOf(\", \"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        // Deletes second comma separator."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        record.delete(0, record.indexOf(\", \") + 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        LocalDate dateOfBirth \u003d LocalDate.parse(record.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        return new Patient(name, nric, dateOfBirth);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Reads and parse command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param fullCommand Input string."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @return Command to be ran."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @throws RexException if command does not exist."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public static Command parse(String fullCommand) throws RexException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        String trimmedCommand \u003d fullCommand.trim().toLowerCase();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        if (trimmedCommand.equals(ExitCommand.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        } else if (trimmedCommand.contains(AddCommand.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ychong032"
        },
        "content": "            command \u003d new AddCommand(trimmedCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        } else if (trimmedCommand.contains(RetrieveCommand.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            command \u003d new RetrieveCommand(trimmedCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            throw new RexException(Command.COMMAND_ERROR);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 39,
      "ychong032": 19
    }
  },
  {
    "path": "src/main/java/seedu/rex/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.PatientList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.exception.RexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.hospital.Patient;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " * Loads and saves data to file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public static final String LOAD_ERROR \u003d \"Error loading file.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private static final String READ_ERROR \u003d \"Error reading file.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private static final String DIRECTORY_ERROR \u003d \"Error creating directory.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private static final String WRITE_ERROR \u003d \"Error writing file.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String folder;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final String file;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Initializes path of folder and file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param filePath Full file path."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        int index \u003d filePath.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        folder \u003d filePath.substring(0, index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        file \u003d filePath.substring(index + 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Loads patients, stores them into ArrayList and returns the ArrayList."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @return ArrayList of patients."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @throws RexException If there is problem reading file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public ArrayList\u003cPatient\u003e load() throws RexException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        Path path \u003d Paths.get(folder, file);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        ArrayList\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        if (Files.exists(path)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                BufferedReader bufferedReader \u003d Files.newBufferedReader(path);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                while (true) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    String line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    if (line \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    Patient patient \u003d Parser.readPatient(line);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    patients.add(patient);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                throw new RexException(READ_ERROR);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return patients;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Saves patients into file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param patients ArrayList of patients to save."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @throws RexException If there is problem writing or saving file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void save(PatientList patients) throws RexException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        StringBuilder fileContent \u003d new StringBuilder();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        for (int i \u003d 0; i \u003c patients.getSize(); i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            // Need to format tasks"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            fileContent.append(patients.getPatientUsingIndex(i));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ychong032"
        },
        "content": "            fileContent.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        Path folderPath \u003d Paths.get(folder);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        if (!Files.exists(folderPath) \u0026\u0026 !new File(folder).mkdir()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            throw new RexException(DIRECTORY_ERROR);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        Path filePath \u003d Paths.get(folder, file);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            BufferedWriter bufferedWriter \u003d Files.newBufferedWriter(filePath);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            bufferedWriter.write(fileContent.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            throw new RexException(WRITE_ERROR);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 99,
      "ychong032": 1
    }
  },
  {
    "path": "src/main/java/seedu/rex/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.commands.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ychong032"
        },
        "content": "import seedu.rex.data.hospital.Patient;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ychong032"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " * Interacts with user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public static final String LOGO \u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            \" _    _                 _ _        _                                  _____     __   __\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    + \"\\t | |  | |               (_| |      | |                                |  __ \\\\    \\\\ \\\\ / /\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    + \"\\t | |__| | ___  ___ _ __  _| |_ __ _| |___  __ _ _   _ _ __ _   _ ___  | |__) |___ \\\\ V / \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    + \"\\t |  __  |/ _ \\\\/ __| \u0027_ \\\\| | __/ _` | / __|/ _` | | | | \u0027__| | | / __| |  _  // _ \\\\ \u003e \u003c  \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    + \"\\t | |  | | (_) \\\\__ | |_) | | || (_| | \\\\__ | (_| | |_| | |  | |_| \\\\__ \\\\ | | \\\\ |  __// . \\\\\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    + \" \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    + \"\\t |_|  |_|\\\\___/|___| .__/|_|\\\\__\\\\__,_|_|___/\\\\__,_|\\\\__,_|_|   \\\\__,_|___/ |_|  \\\\_\\\\___/_/ \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    + \"\\\\_\\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    + \"\\t                  | |                                                                   \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    + \"\\t                  |_|                                                                   \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "                    .replaceAll(\"\\n\", System.lineSeparator());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private static final String DOTTED_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    private static final String DATE_ERROR \u003d \"Error in date format.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private final Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Prints string with indent."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param string String to print."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    private void printWithIndent(String string) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        System.out.println(\"\\t \" + string);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Prints dotted line."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        System.out.println(\"\\t\" + DOTTED_LINE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Prints error message."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param message Error message to print."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(message);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Prints welcome message."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(Command.MESSAGE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Prints loading error message."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        showError(Storage.LOAD_ERROR);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Prints exit message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(ExitCommand.MESSAGE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public void showDateInputError() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        showError(DATE_ERROR);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * Prints a message to indicate successful addition of a patient."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * @param patient The newly added \u003ccode\u003ePatient\u003c/code\u003e."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public void showPatientAdded(Patient patient) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        printWithIndent(\"Patient successfully added: \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        printWithIndent(patient.toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Reads command from user."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @return String command from user."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * Reads the name of a new patient from the user."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * @return The name of the patient to be added."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public String getPatientName() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        printWithIndent(\"Enter patient name: \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ychong032"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * Reads the date of birth of a new patient from the user."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     * @return The date of birth of the patient."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ychong032"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    public LocalDate getPatientDateOfBirth() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ychong032"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ychong032"
        },
        "content": "                printWithIndent(\"Enter patient date of birth (YYYY-MM-DD) including the dashes: \");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ychong032"
        },
        "content": "                return LocalDate.parse(in.nextLine().trim());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ychong032"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ychong032"
        },
        "content": "                showLine();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ychong032"
        },
        "content": "                showDateInputError();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ychong032"
        },
        "content": "                showLine();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ychong032"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ychong032"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ychong032"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * Shows patient details."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     * @param patient Patient to show."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    public void showPatient(Patient patient) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(\"Patient Details: \");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        printWithIndent(patient.toString());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 100,
      "ychong032": 43
    }
  },
  {
    "path": "src/test/java/seedu/rex/RexTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "class RexTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 4,
      "-": 8
    }
  },
  {
    "path": "src/test/java/seedu/rex/commands/CommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.exception.RexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "class CommandTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    void isInteger_456456_returnsTrue() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        RetrieveCommand retrieveCommand \u003d new RetrieveCommand(\"\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        assertTrue(retrieveCommand.isInteger(\"456456\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    void extractNric_retrieveS9123456D_returnsS9123456DString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        RetrieveCommand retrieveCommand \u003d new RetrieveCommand(\"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            assertEquals(retrieveCommand.extractNric(\"retrieve S9123456D\", \"retrieve\"), \"S9123456D\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        } catch (RexException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    void extractNric_retrieveS91D_expectException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        RetrieveCommand retrieveCommand \u003d new RetrieveCommand(\"\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        assertThrows(RexException.class, () -\u003e retrieveCommand.extractNric(\"retrieve S91D\", \"retrieve\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 33
    }
  },
  {
    "path": "src/test/java/seedu/rex/parser/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.commands.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import seedu.rex.data.exception.RexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    void parse_bye_returnsExitCommand() throws RexException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    void parse_invalidInput_expectException() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        assertThrows(RexException.class, () -\u003e Parser.parse(\"exit\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 20
    }
  },
  {
    "path": "src/test/java/seedu/rex/ui/UiTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "package seedu.rex.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "class UiTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    void readCommand_hello_returnsHelloString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        String input \u003d \"hello\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "        assertEquals(\"hello\", new Ui().readCommand());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "James Gosling"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "add"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "add S9Z"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "add B1234422B"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "add S123B422Z"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "add S123B4222"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "add S9123456Z"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "Trump"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "06-06-1960"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "1960-06-14"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "retrieve S9993222A"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "retrieve S9123456Z"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanJunHong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "TanJunHong": 12,
      "-": 1
    }
  }
]
