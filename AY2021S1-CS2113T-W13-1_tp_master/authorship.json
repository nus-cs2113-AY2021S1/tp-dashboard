[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.7.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.7.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    implementation group: \u0027com.google.code.gson\u0027, name: \u0027gson\u0027, version: \u00272.8.6\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    mainClassName \u003d \"seedu.revised.Revised\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    archiveBaseName \u003d \"revised\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 4,
      "-": 42,
      "jialerk": 2
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "syncode98"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | I MUTHUKUMAR | [Github](https://github.com/syncode98) | [Portfolio](docs/team/johndoe.md)  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Herman Thong | [Github](https://https://github.com/rashien3) | [Portfolio](docs/team/johndoe.md)  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Sugandha Tuteja | [Github](https://github.com/sugandha929) | [Portfolio](docs/team/johndoe.md)  "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chin Hang | [Github](https://github.com/CookieHoodie/) | [Portfolio](docs/team/chinhang.md)  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jialerk | [Github](https://github.com/jialerk) | [Portfolio](docs/team/johndoe.md)  "
      }
    ],
    "authorContributionMap": {
      "syncode98": 1,
      "sugandha929": 1,
      "CookieHoodie": 1,
      "-": 4,
      "jialerk": 1,
      "rashien3": 2
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "##Table of contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* \u003ca href \u003d\"#intro\"\u003eIntroduction\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* \u003ca href \u003d\"#design\"\u003eDesign \u0026 Implementation\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* \u003ca href \u003d\"#card\"\u003eCard Package\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * \u003ca href \u003d\"#quiz\"\u003eQuiz Package\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        * \u003ca href \u003d\"#Qclass\"\u003eQuiz Class\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        * \u003ca href \u003d\"#Qsubject\"\u003eSubjectQuiz Class\u003c/a\u003e \u003cbr\u003e "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        * \u003ca href \u003d\"#Qtopic\"\u003eTopicQuiz Class\u003c/a\u003e \u003cbr\u003e "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        * \u003ca href \u003d\"#Qresult\"\u003eResult Class\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    * \u003ca href \u003d\"#task\"\u003eTask Package\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        * \u003ca href \u003d\"#Ttask\"\u003eTask Class\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        * \u003ca href \u003d\"#Ttodo\"\u003eTodo Class\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        * \u003ca href \u003d\"#Tdeadline\"\u003eDeadline Class\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        * \u003ca href \u003d\"#Tevent\"\u003eEvent Class\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    * \u003ca href \u003d\"#flashcard\"\u003eFlashcard Class\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    * \u003ca href \u003d\"#subject\"\u003eSubject Class\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    * \u003ca href \u003d\"#topic\"\u003eTopic Class\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* \u003ca href \u003d\"#command\"\u003eCommand Package\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* \u003ca href \u003d\"#list\"\u003eList Package\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* \u003ca href \u003d\"#parser\"\u003eParser Package\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* \u003ca href \u003d\"#ui\"\u003eUi Package\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* \u003ca href \u003d\"#storage\"\u003eStorage Package\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "   - \u003ca href \u003d\"#Sbuilder\"\u003eStorage Builder\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "   - \u003ca href \u003d\"#Sstorage\"\u003eResult\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* \u003ca href \u003d\"#scope\"\u003eProduct Scope\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "   - \u003ca href \u003d\"#Ptarget\"\u003eTarget User Profile\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "   - \u003ca href \u003d\"#Pvalue\"\u003eValue Proposition\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* \u003ca href \u003d\"#user\"\u003eUser Stories\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* \u003ca href \u003d\"#nfr\"\u003eNon functional Requirements\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* \u003ca href \u003d\"#glossary\"\u003eGlossary\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* \u003ca href \u003d\"#manual\"\u003eTesting\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    - \u003ca href \u003d\"#jartest\"\u003eTesting the Jar File\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    - \u003ca href \u003d\"#sourcetest\"\u003eTesting the Source Code\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* \u003ca href \u003d\"#develop\"\u003eDevelopment\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    - \u003ca href \u003d\"#log\"\u003eLogging\u003c/a\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## Introduction \u003ca name\u003d\"intro\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "RevisED is a command line application to help students revise by creating flashcards and taking quizzes, "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "and keeping track of their deadlines, tasks and any other important dates. This application allows users to add subjects, "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "their different topics and create different flashcards in form of question and answers on each topic. Students can also "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "take quizzes which asks them the questions that they added in form of flashcards and prompted to answer them. "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "The student can view results of these quizzes immediately and are stored so that students can view them later. "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Additionally, students can delete, and list subjects, topics, and flashcards and find and enter subjects and topics.   "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This developer guide is for developers who wish to understand and/or develop ReviseED further. "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This guide includes design, implementation, product scope, user stories, non-functional requirements, glossary, "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "testing and development sections to help developers better understand the application."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## Design \u0026 implementation \u003ca name\u003d \"design\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This section describes how RevisED has been designed and implemented so that developers can better understand the "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "designing of the code, with the help of visual aids."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The application has been broken down into different segments so that users would find it easy to navigate from one segment "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "to the next one. There are three segments within the application:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* Main: This segment edits the list of all the subjects present within the application and takes care of relevant commands "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "such as add subject, delete subject or find subject."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Subject: This segment is accessed through the `subject NAMEOFSUBJECT` command. The user would then look at the individual "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "subjects and then would be able to add, delete, list or find either tasks or topics."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* Topic : This segment is accessed through the `topic NAMEOFTOPIC` command. The user can add, delete or list flashcards"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": "in this segment."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The code contains the main class Revised, as well as different packages, which combine classes that perform a similar "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialerk"
        },
        "content": "functionality. Here are the list of packages:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* Card: In charge of classes related to the subject, topic, flashcard and quiz functionalities"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Command: In charge of reading the command and calling the relevant methods. The package itself holds"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "syncode98"
        },
        "content": "the following packages."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Exceptions: Deals with the various exceptions which are thrown in the application."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Parser: Parses the commands and instantiates the relevant command classes."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Storage: Stores the data in an external folder"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* Task: Contains the classes for the different types of tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Ui: In charge of interaction with the user."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jialerk"
        },
        "content": "### Card Package"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The Card package consists of different classes that holds information on the main functionalities of the application,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jialerk"
        },
        "content": "and is split into 2 packages, quiz and task, as well as Subject, Topic and Flashcard classes."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Quiz Package"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    * Quiz class"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    * Result class"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    * TopicQuiz class"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    * SubjectQuiz class"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Task Package"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    * Deadline class"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    * Event class"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    * Task class"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    * Todo class"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Flashcard class"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Subject class"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Topic class"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Each of the classes in the card package contains:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* Getters and Setters of its own attributes"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* methods that alter an instance of its own class"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jialerk"
        },
        "content": "#### Quiz package \u003ca name \u003d \"quiz\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `Quiz` package holds the necessary classes for the quiz functionality of this application. The following are"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jialerk"
        },
        "content": "the classes in the package. An abstract`Quiz` class, a `Result` class, a `SubjectQuiz` class and a `TopicQuiz` class."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### Quiz class \u003ca name \u003d \"Qclass\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "syncode98"
        },
        "content": "`Quiz` class is an abstract class in the `Quiz` package. It is holds the result of a quiz class and the list of flashcards"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "syncode98"
        },
        "content": "from any subject or topic classes which the user calls the quiz for. Furthermore, it contains a checkAnswer() method the"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "syncode98"
        },
        "content": "checks the answer that the user had given with the correct answer of the quiz. If the user enters the correct answer, the "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "syncode98"
        },
        "content": "existing score is incremented by one. Else, the contents of the flashcards and the incorrect answer provided by"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jialerk"
        },
        "content": "the user are transferred to the  `incorrectAnswers` list. Once the user finished the quiz, the application would print the "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "syncode98"
        },
        "content": "questions that the users did not answer correctly, along the the answer that was provided by the user. "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### SubjectQuiz \u003ca name \u003d \"Qsubject\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "syncode98"
        },
        "content": "`SubjectQuiz` class inherits from the `Quiz` class and initiates the quiz. The `startQuiz` method calls for the  `setupQuiz` method checks for the presence"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "syncode98"
        },
        "content": "of topics or flashcards. Else, the application throws the `NoTopicException` for the former, and the "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "syncode98"
        },
        "content": "`NoFlashcardException` for the latter. If the topics have flashcards, then these are transferred to the "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "syncode98"
        },
        "content": "`SubjectQuiz` class, while the maximum score of the quiz is set to be the total number of flashcards in the list of flashcards"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "syncode98"
        },
        "content": "present in the `SubjectQuiz` class . "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The application now returns to the `startQuiz` method and the current score of the quiz is set to zero. Subsequently, the"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "syncode98"
        },
        "content": "application begins printing the questions from the flashcards and checks the answer that you provide. If you want to stop the "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "syncode98"
        },
        "content": "quiz, use the `stop` command. The application will then print out the score that you obtain. If you complete the quiz"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "syncode98"
        },
        "content": "then the application not only prints the score, but it also prints the incorrect answers from the quiz."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The following diagram shows how you can initiate the quiz for a subject."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "syncode98"
        },
        "content": "![first](https://user-images.githubusercontent.com/46095141/97313097-3866e200-18a1-11eb-9525-73e38ceb7cbe.png)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### TopicQuiz \u003ca name \u003d \"Qtopic\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "syncode98"
        },
        "content": "`TopicQuiz` class is similar to the `SubjectQuiz` class, except for the fact that it initiates the quiz"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "syncode98"
        },
        "content": "only for the specific topic. Furthermore, this class only throws the `NoFlashcardException` for when the topic does not "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "syncode98"
        },
        "content": "have any flashcards, which is detected by the `setupQuiz` method. The implementation of the `startQuiz` method is similar"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "syncode98"
        },
        "content": "to that of the SubjectQuiz class."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jialerk"
        },
        "content": "##### Result \u003ca name \u003d \"Qresult\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jialerk"
        },
        "content": "`Result` class  stores the result of a quiz . It has three instance variables, namely the `score` variable"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "syncode98"
        },
        "content": "which tracks the score during the quiz, the  `maxScore` variable which is the maximum score that you can get from doing the "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "syncode98"
        },
        "content": "quiz, while the  `description` variable will be a grade given to you depending on your performance."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The  `UpdateResult` method  updates the score of the quiz during the quiz and changes the grade of the quiz. "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jialerk"
        },
        "content": "#### Task Package \u003ca name \u003d \"task\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `Task` package holds the necessary classes for the Task functionality of this application. The following are"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jialerk"
        },
        "content": "the classes in the package. A `Task` class, a `Todo` class, a `Deadline` class and an `Event` class."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jialerk"
        },
        "content": "##### Task class \u003ca name \u003d \"Ttask\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `Task` class is the superclass of `Todo`, `Deadline` and `Event`. It has attributes such as the description of the task-`String`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jialerk"
        },
        "content": "and an attribute to check if the task is completed-`Boolean`. It holds basic getters for its attributes, getters such as getting the "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jialerk"
        },
        "content": "status icon to check if a Task is done-`String`, and getters for the DateTime features of the Deadline and Event classes. It also has"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jialerk"
        },
        "content": " a toString methods to print the Task."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jialerk"
        },
        "content": " "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jialerk"
        },
        "content": "###### Todo Class \u003ca name \u003d \"Ttodo\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `Todo` class is the class to store information on basic tasks of the user. It contains methods and attributes similar to the"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jialerk"
        },
        "content": "ones found in its superclass `Task`. It has an additional Override toString method, to differentiate between itself and other"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jialerk"
        },
        "content": "tasks, such as Deadline and Event."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jialerk"
        },
        "content": "An example of how a Todo task \"return books\" will look like in the command line for user intepretation is shown below."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jialerk"
        },
        "content": " [T][✘] return books"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jialerk"
        },
        "content": "###### Deadline Class \u003ca name \u003d \"Tdeadline\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `Deadline` class is the class to store information on tasks of the user that has a deadline. It contains methods and attributes similar to the"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jialerk"
        },
        "content": "ones found in its superclass `Task`, and additional attributes to make it a `Deadline` Task, such as an additional dateTime attribute "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jialerk"
        },
        "content": "to keep track of the deadline of the task-`LocalDateTime`, an Override toString method, to differentiate between itself and other tasks, such as Deadline "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jialerk"
        },
        "content": "and Event."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jialerk"
        },
        "content": "An example of how a Deadline task \"return books /by 23:59 10-11-2020\" will look like in the command line for user intepretation is shown "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jialerk"
        },
        "content": "below."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jialerk"
        },
        "content": "  [D][✘] return books (by: 11:59 PM 10 Nov 2020)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jialerk"
        },
        "content": "###### Event Class \u003ca name \u003d \"Tevent\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `Event` class is the class to store information of tasks of the user that is an event with a specific date and time occurrence. "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jialerk"
        },
        "content": "It contains methods and attributes similar to the ones found in its superclass `Task`, and additional attributes to make it a `Deadline`"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Task, such as an additional dateTime attribute to keep track of the date and time of the event-`LocalDateTime`, an Override toString method,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jialerk"
        },
        "content": "to differentiate between itself and other tasks, such as `Todo` and `Deadline`."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jialerk"
        },
        "content": "An example of how an Event task \"event CS2113T meeting /at 12:00 10-11-2020\" will look like in the command line for user intepretation is shown "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jialerk"
        },
        "content": "below."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jialerk"
        },
        "content": "  [E][✘] CS2113T meeting (at: 12:00 PM 10 Nov 2020)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jialerk"
        },
        "content": "#### Flashcard Class \u003ca name \u003d \"flashcard\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `Flashcard` class is a class to store information of flashcards. It has attributes such as the question"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jialerk"
        },
        "content": "and answer of each flashcard, a constructor, as well as getters for both question and answer of the flashcards."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jialerk"
        },
        "content": "#### Subject Class \u003ca name \u003d \"subject\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `Subject` class is a class to store information of subjects. It has various attributes such as the title of the "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jialerk"
        },
        "content": "subject-`String`, a list of various topics in a subject-`TopicList`, a list of various tasks present in a subject-`TaskList`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jialerk"
        },
        "content": "and a list of various results of the quiz of a subject-`ResultList`. It also consists of a constructor, getters to all of the"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jialerk"
        },
        "content": "attributes in the `Subject` class and a toString method to return the title of the subject."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jialerk"
        },
        "content": "####  Topic Class \u003ca name \u003d \"topic\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `Topic` class is a class to store information of topics. It has various attributes such as the title of the subject-`String`,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jialerk"
        },
        "content": "a list of various flashcards in a topic-`List\u003cFlashcard\u003e`, and a list of the results for all topic quizzes-`ResultList`. It also "
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jialerk"
        },
        "content": "contains various constructors, getters for all its attributes, and a toString method that returns the title of the topic."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jialerk"
        },
        "content": "An example of how classes in the card package interact with each other is shown in the figure below. "
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jialerk"
        },
        "content": "In this example, a student has 2 main subjects, mainly Math and Science. Math has topics algebra and calculus, while science has topics speed and light. He also made flashcards the various topics."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jialerk"
        },
        "content": "### Command Package"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The Command package consists of different classes that executes the various commands of the application due to user input,"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jialerk"
        },
        "content": "and is split into 4 packages, flashcard, subject, task and topic, as well as a abstract command class, that is a superclass of the various classes in the different packages."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* Command: In charge of reading the command and calling the relevant methods. The package itself holds"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jialerk"
        },
        "content": "the following packages."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Flashcard"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Subject"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Topic"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Task"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jialerk"
        },
        "content": "### Storage Package \u003ca name \u003d \"storage\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "There are two classes inside this package, both of which are inside `Storage.java`. The following diagram shows the"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "relationship between the two classes."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![StorageClass](https://user-images.githubusercontent.com/15065550/97547893-9cfe6b80-198b-11eb-8475-0992c8274ee3.png)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### StorageBuilder \u003ca name \u003d \"Sbuilder\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "`StorageBuilder` class is a static inner class of the `Storage` class. It follows the builder pattern and its sole purpose"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "is to create `Storage` instances. The [builder pattern](https://en.wikipedia.org/wiki/Builder_pattern) is used to deal "
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "with the decrease in clarity due to the increase of the number parameters. Every instance of the `Storage` class should "
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "be created through `StorageBuilder`, and this is enforced by disabling the public constructor of the `Storage` class."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### Storage \u003ca name \u003d \"Sstorage\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "`Storage` class handles every operation that involves data storage, including saving, loading, and exporting of "
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "application data. "
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "##### Storing data "
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "`Storage` class stores the data following the same logical structure (subject -\u003e topic) of the application to "
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "make the stored data more presentable to the user. `Subject` and `Topic` data are stored as nested directories, while "
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "`Flashcard` and `Result` data are stored in [JSON](https://en.wikipedia.org/wiki/JSON) format so that they are readable "
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "to the users and allows them to change the saved data manually. `Task` data are stored differently as text files due to "
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "legacy reason, but they are also readable and can be changed manually as well. An example of the structure mentioned is "
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "shown in the figure below."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Maths"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "├── Algebra"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "│   ├── subjectResults.json"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "│   └── flashcards.json"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "├── topicResults.json"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "└── tasks.txt"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This class also stores the data in a cascading manner, meaning that when a call to save topics is made, all the data "
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "under the topics will be saved. Similarly, when a call to save subjects is made, all the data under the subjects"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "including topics will be saved. The behavior mentioned is shown in the diagram below."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![StorageSaveSubjects](https://user-images.githubusercontent.com/15065550/97779044-cdcfd380-1b38-11eb-8e5e-a4f258a726e5.png)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![StorageSaveTopics](https://user-images.githubusercontent.com/15065550/97779045-ce686a00-1b38-11eb-821f-1b468dcb996e.png)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "##### Loading data"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The loading of data follows a similar cascading manner as saving, as can be seen in the diagram below."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![StorageLoadSubjects](https://user-images.githubusercontent.com/15065550/97779041-cb6d7980-1b38-11eb-9068-1b54a561dad3.png)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![StorageLoadTopics](https://user-images.githubusercontent.com/15065550/97779042-cc9ea680-1b38-11eb-9e06-f36274dd4286.png)"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Before returning topics and subjects, the methods sort them in alphabetical order to let the users locate their "
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "subjects or topics more easily. "
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## Product scope \u003ca name \u003d \"scope\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This section describes the scope of the application. To be specific, the target audience and "
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "the uses and benefits of this application."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### Target user profile \u003ca name \u003d \"Ptarget\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The targeted audience are university students , aged 18 - 25 who have access to a computer. The students must be familiar"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "syncode98"
        },
        "content": "with applications that run on the command-line interface. Currently, this application is created for students who study in "
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Singaporean universities."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### Value proposition \u003ca name \u003d \"Pvalue\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "syncode98"
        },
        "content": "This application aims to help students to keep track of their revision. Students should be"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "syncode98"
        },
        "content": "able to revise their subjects effectively through this application by adding various questions"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "syncode98"
        },
        "content": "and answers in the form of flashcards. After that, students can refer to the flashcards to"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "syncode98"
        },
        "content": "revise the subjects. Furthermore, they can take quizzes and see if they grasp the topics or subjects well"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "syncode98"
        },
        "content": "enough to attend their school based exams."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Students who find it hard to keep track of their assignments would also find this application"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "syncode98"
        },
        "content": "useful since it lets the students add their tasks. The application then reminds the students"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "syncode98"
        },
        "content": "regarding the upcoming tasks, which would prompt the students to prepare them."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Students who find it difficult to organise would find this app useful since it"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "syncode98"
        },
        "content": "offers a one stop solution to manage both their revision and their upcoming tasks ."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## User Stories \u003ca name \u003d \"user\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This section summarises various user stories of this application. These are summarised in the table below."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "syncode98"
        },
        "content": "|v1.0|new user| add a flash card intuitively|don\u0027t get put off by learning a new program |"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "syncode98"
        },
        "content": "|v1.0|long time user| categorize the flashcards to different categories|I know where to look for which flashcard|"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "syncode98"
        },
        "content": "|v1.0|organised person| i would want a program that looks neat| will want to use the program|"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "syncode98"
        },
        "content": "|v1.0|potential user| default flashcard being shown to me| understand how a flashcard looks in this application|"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "syncode98"
        },
        "content": "|v1.0|language student|type in all my notes|practice the spelling of the words|"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "syncode98"
        },
        "content": "|v1.0|student|revise all my notes for different subjects|do not have to use multiple applications/websites to revise|"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "syncode98"
        },
        "content": "|v1.0|student| to have colour codes for my notes|quickly glance through and know how much I need to study|"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "syncode98"
        },
        "content": "|v1.0|student|to be able to review them at once or print them|use them offline or as cheat sheets|"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "syncode98"
        },
        "content": "|v2.0|forgetful student|be notified of assignments which are due in a week|prepare for them|"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "syncode98"
        },
        "content": "|v2.0|developer|log messages from the application|troubleshoot for errors|"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## Non-Functional Requirements \u003ca name \u003d \"nfr\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The application satisfies the following requirements:"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "syncode98"
        },
        "content": " * Portability: Users can transfer their data from the application since all the data is stored in a txt file."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "syncode98"
        },
        "content": " * Modifiability: Since the code is broken down into different packages and classes, developers would"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "syncode98"
        },
        "content": " be able to modify the application with ease."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "syncode98"
        },
        "content": " * Simplicity: The application comes with a detailed user guide along with the help commands. Hence, users can always "
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "syncode98"
        },
        "content": " refer to these to understand on how to use the application."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "syncode98"
        },
        "content": " * Compatibility: The application runs on various operating systems: Windows, Linux etc"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "syncode98"
        },
        "content": " * Testability: The application is built using Gradle, a tool that offers various testing capabilities. Furthermore,"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "syncode98"
        },
        "content": " developers could also modify the input.txt file to provide a set of inputs and test if the application returns the "
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "syncode98"
        },
        "content": " expected output."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## Glossary \u003ca name \u003d \"glossary\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *Revised* - The main class which initiates the whole application."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *ui* - Package which contains the Ui class, in charge of user interactions."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *task* - Package which contains the task classes."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *Task* - An abstract class which Todo,Deadline and Even classes inherit from."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *Deadline* - A class which refers to a task with a deadline. Inherits from the Task class."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *Event* - A class which refers to an event. Inherits from the Task class."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *TaskList* - A class which initialises an ArrayList of tasks."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *Storage* - A package which holds the Storage class, which is in charge of storing and loading data"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "syncode98"
        },
        "content": "into the application."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *parser* - A package which parses the user commands and initialises the necessary topics,subjects or tasks."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *FlashcardParser* - A class which reads the user commands to call the relevant Flashcard command."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *SubjectParser* - A class which reads the user commands to call the relevant Subject command."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *TaskParser* - A class which reads the user commands to call the relevant task command."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *TopicParser* - A class which reads the user commands to call the relevant topic command."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *card* - Package holds the necessary classes for the quiz, subject,topic and flashcard functionality."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *quiz* - Package holds the classes for the quiz functionality."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *Quiz* - An Abstract class that holds the result, list of flashcards and a list of incorrectAnswers for the "
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "syncode98"
        },
        "content": "SubjectQuiz class and the TopicQuiz class to inherit from."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *SubjectQuiz* - Instantiated when the user calls for a quiz on a subject. "
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *TopicQuiz* - Instantiated when the user calls for a quiz on a topic. "
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *Result* - A class which stores the marks from a quiz and a description which indicates the performance of the user "
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "syncode98"
        },
        "content": "for that quiz."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *ResultList* - A class which holds an ArrayList of results."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *Flashcard* - A class which instantiates the flashcard object.Contains the question and answer feature of the flashcard."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *Subject* - A class which instantiates the subject object. Holds the title of the subject and lists of flashcards, "
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "syncode98"
        },
        "content": "results and topics."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *SubjectList* - A class which holds an ArrayList of Subjects."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *Topic* - A class which is instantiated when the user creates the topic. Holds the title of the topic, an arraylist of"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "syncode98"
        },
        "content": "flashcards and an arraylist of results."
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* *TopicList* - A class which holds an ArrayList of Topics."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## Testing \u003ca name \u003d \"manual\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This section describes how to carry out testing of the application. It focuses on testing the jar file and the source code."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### Testing the Jar File \u003ca name \u003d \"jartest\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. Refer to the [UserGuide](https://ay2021s1-cs2113t-w13-1.github.io/tp/UserGuide.html) on how to download the application."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "syncode98"
        },
        "content": "2. Open the application in command prompt."
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "syncode98"
        },
        "content": "3. Try out various commands in the userguide to check if it works."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "syncode98"
        },
        "content": "4. Try out invalid commands and check if the application responds correspondingly."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "syncode98"
        },
        "content": "5. Exit the application and check the data files to check if all the data has been saved."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "syncode98"
        },
        "content": "6. Open the application again and check if the data has been loaded correctly. Use the `list` command for this step."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### Testing the source code \u003ca name \u003d \"sourcetest\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This section describes how different parts of the source code can be tested, to make sure everything works properly."
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### Setting up the project"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. Download the source code from [here](https://github.com/AY2021S1-CS2113T-W13-1/tp/releases)."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "syncode98"
        },
        "content": "2. The application is optimised for IntelliJ users. Download IntelliJ if you do not have it."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "syncode98"
        },
        "content": "3. Configure the Intellij for JDK 11, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "syncode98"
        },
        "content": "4. Import the project as a Gradle project, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "syncode98"
        },
        "content": "5. After the importing is complete, locate the `src/main/java/seedu.revised/Revised.java` file, right-click it, and choose"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "syncode98"
        },
        "content": "`Run Revised.main()`."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "syncode98"
        },
        "content": "6. If the setup is correct, you should see soemthing like this:"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003cpre\u003e\u003ccode\u003e"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e Task :compileJava"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e Task :processResources UP-TO-DATE"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e Task :classes"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e Task :Revised.main()"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                                    ___________"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                                    |  __ |  _ \\"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "sugandha929"
        },
        "content": " ____  ______      _____   ________ |  |__| | | |"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "|  __|/ __ \\ \\    / /| |  /  _____/ |   __| | | |"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "| |  |  __/ \\ \\__/ / | | /_____  /  |  |__| |_| |"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "| |   \\___|  \\____/  |_|/_______/   |_____|_____/"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "syncode98"
        },
        "content": " Hello! I\u0027m revisED"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Alright, What can I do for you?"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003c/code\u003e\u003c/pre\u003e"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### Build Automation Using Gradle"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* This project uses Gradle for build automation and dependency management."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "syncode98"
        },
        "content": " It includes a basic build script as well (i.e. the build.gradle file)."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### I/O redirection tests"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` folder. Open it in the terminal"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "syncode98"
        },
        "content": "by right-clicking on the folder and click `open in terminal`."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "syncode98"
        },
        "content": "*  Run the `runtest(.bat/.sh)` script."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* If the tests are successful, you would see this:"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003cpre\u003e\u003ccode\u003e"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "syncode98"
        },
        "content": "BUILD SUCCESSFUL in 2s"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "syncode98"
        },
        "content": "4 actionable tasks: 4 executed"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Test passed!"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003c/code\u003e\u003c/pre\u003e"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* If the test fails, you would see this :"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003cpre\u003e\u003ccode\u003e"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "syncode98"
        },
        "content": "BUILD SUCCESSFUL in 2s"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "syncode98"
        },
        "content": "4 actionable tasks: 4 executed"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Test failed!\u003c/code\u003e\u003c/pre\u003e"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Navigate to the `text-ui-test` folder and compare the `ACTUAL.txt` file and the `EXPECTED.txt` file to "
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "syncode98"
        },
        "content": "observe the error."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### JUnit tests"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The project has multiple JUnit tests for different functions."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* A skeleton JUnit test (`src/test/java/seedu/revised/RevisedTest.java`) is provided with this project template. "
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Under the `src/test/java/seedu/revised` folder, you would be able to access the different tests for"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "syncode98"
        },
        "content": "the functionalities. Right click on the folder and click the `Run Tests in ...` option to run the tests"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "syncode98"
        },
        "content": "in the folder.  "
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* The results would be displayed in the terminal.If a test fails, click on the hyperlink provided"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "syncode98"
        },
        "content": "to navigate to the failed test."
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### Checkstyle"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* A sample CheckStyle rule configuration is provided in this project."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Right click on the Gradle bar on the right of the IDE and click `tp/Tasks/other/checkstyleMain` to test the checkstyle in the"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "syncode98"
        },
        "content": "code."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### Documentation"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "syncode98"
        },
        "content": "`/docs` folder contains the project documentation.It contains the following pages:"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Individual contributions under the  `team` folder"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* The .md files for the UserGuide,README,and the DeveloperGuide"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## Development \u003ca name\u003d\"develop\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### Logging \u003c a name \u003d \"log\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Whenever you need to use logging in a class, add this line "
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "`private static final Logger logger \u003d Logger.getLogger(\u003cCurrentClass\u003e.class.getName());` to the start"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "of the class, where \\\u003cCurrentClass\\\u003e is replaced by the class name you are adding the logger to."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The logging configuration can be found under `src/main/resources/logging.properties`. The current configuration directs"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "the logs to a file named `revisED%u.log` in the project root directory. "
      }
    ],
    "authorContributionMap": {
      "syncode98": 185,
      "sugandha929": 62,
      "CookieHoodie": 57,
      "-": 31,
      "jialerk": 141
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "syncode98"
        },
        "content": "# Revised"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "This application aims to help students to revise effectively."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "-": 6
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003ca href \u003d#intro\u003e1. Introduction \u003c/a\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003ca href \u003d#start\u003e2. Quick Start \u003c/a\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003ca href \u003d#init\u003e3. Initialisation \u003c/a\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003ca href \u003d#features\u003e4. Features \u003c/a\u003e      "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "   \u003ca href \u003d#subjects\u003e4.1 Subjects \u003c/a\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "   \u003ca href \u003d#topics\u003e4.2 Topics \u003c/a\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "   \u003ca href \u003d#tasks\u003e4.3 Tasks \u003c/a\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "   \u003ca href \u003d#flashcards\u003e4.4 Flashcards \u003c/a\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "   \u003ca href \u003d#takeQuiz\u003e4.5 Taking Quizzes \u003c/a\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "   \u003ca href \u003d#result\u003e4.6 Viewing quiz results \u003c/a\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "   \u003ca href \u003d#store\u003e4.7 Storing data \u003c/a\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "   \u003ca href \u003d#load\u003e4.8 Loading data \u003c/a\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "   \u003ca href \u003d#export\u003e4.9 Exporting data \u003c/a\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003ca href \u003d#faq\u003e5. FAQ \u003c/a\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003ca href \u003d#summary\u003e6. Command Summary \u003c/a\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## 1. Introduction \u003ca name\u003d\"intro\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "**revisED** aims to help students to revise their subjects through the creation of flashcards or tasks that have"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "to be completed. The user can store the flashcards under different topics, which can be created under different"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "subjects. The tasks can be stored under subjects. This application ensures that students would be"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "able to revise, even if they are doing it at the last minute."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This user guide provides an in-depth documentation on the installation process, the program features, and"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "the program usage to get you started."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Here is a guide on how to use this UserGuide effectively:\u003cbr\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. Use the hyperlinks in the table of contents to navigate about the user guide quickly."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "2. The code is always marked out like `this` to distinguish it from the rest of the text."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "3. The **_NOTE:_** sections point out additional information that you can refer to for"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "additional information regarding the application."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "4. The **_WARNING:_** sections point out things that you should avoid while using "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "the application."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## 2. Quick Start \u003ca name\u003d\"start\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "2. Download the latest version of `revisED` from [here](https://github.com/AY2021S1-CS2113T-W13-1/tp/releases)."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "3. Transfer the jar file to the folder that you prefer to use."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "4. Open command prompt and run the command `java -jar revised.jar` to begin the application."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## 3. Initialisation \u003ca name\u003d\"init\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "You will see the logo of the application, as shown below,  once u begin running it."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                                    ___________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                                    |  __ |  _ \\"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": " ____  ______      _____   ________ |  |__| | | |"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "|  __|/ __ \\ \\    / /| |  /  _____/ |   __| | | |"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "| |  |  __/ \\ \\__/ / | | /_____  /  |  |__| |_| |"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": "| |   \\___|  \\____/  |_|/_______/   |_____|_____/"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "syncode98"
        },
        "content": "After that, the application shows any tasks that are due within a week."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003cpre\u003e\u003ccode\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Here are the tasks that are due by next week"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": "maths"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1:[D][✘] homework (by: 6:00 PM 21 Oct 2020)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "syncode98"
        },
        "content": "2:[E][✘] match (at: 6:00 PM 22 Oct 2020)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "syncode98"
        },
        "content": "science"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1:[E][✘] fund-raising (at: 6:00 PM 22 Oct 2020)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "syncode98"
        },
        "content": "2:[D][✘] assignment (by: 6:00 PM 21 Oct 2020)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003c/code\u003e\u003c/pre\u003e "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Subsequently,you can begin using the application."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## 4. Features \u003ca name\u003d\"features\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Subjects"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Topics"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Flashcards"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Tasks"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Quiz "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Results"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* Storing data"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 4.1 Subjects \u003ca name\u003d\"subjects\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.1.1 `help` - Display all commands "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Displays all the available commands."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Format: `help`  "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jialerk"
        },
        "content": " "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "help"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "________________________________________________________________________________________________________________________"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "help:          shows the list of commands available at the main level"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "add abc:       adds a subject called \u0027abc\u0027"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "find abc:      finds all subjects containing the letters abc"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "list:          shows the list of all subjects"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "list all:      shows the tree of all subjects, topics, tasks and flashcards"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "delete 1:      deletes the 1st subject in the list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "subject abc:   enters the subject called abc, now you can create, find, list, delete and enter the topics of subject abc"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "quiz abc:      starts a quiz for all the flashcards present in all the topics of subject abc,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "               answer the questions of the current flashcards to test your knowledge"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "results abc:   gives you the results of all attempted quizzes for abc subject"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "export:        exports all the data to a JSON file"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "bye:           exits the application"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "________________________________________________________________________________________________________________________"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.1.2 `add` - Add subject"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Add a subject."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Format: `add` `[SUBJECT_NAME]`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jialerk"
        },
        "content": "add CS2101"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Got it. I\u0027ve added this subject:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jialerk"
        },
        "content": "  CS2101"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Now you have 5 subjects in the list."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.1.3 `list` - List all subjects \u003ca name\u003d\"list\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Prints a list of all subjects stored"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jialerk"
        },
        "content": "list"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Here are the subject(s) in your list:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jialerk"
        },
        "content": "1.CS1010"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jialerk"
        },
        "content": "2.CS2040C"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jialerk"
        },
        "content": "3.CG2027"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jialerk"
        },
        "content": "4.CS2113T"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jialerk"
        },
        "content": "5.CS2101"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.1.4 `delete` - Delete a subject"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Deletes the specified subject."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Format: `delete` `[SUBJECT_NUMBER]`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jialerk"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jialerk"
        },
        "content": " Noted. I\u0027ve removed this subject:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jialerk"
        },
        "content": "   CS1010"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jialerk"
        },
        "content": " Now you have 4 subjects in the list."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.1.5 `find` Find subjects"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Searches the list of subjects for all subjects that contains the query"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Format: `find` `[QUERY]`"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jialerk"
        },
        "content": "find CS"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jialerk"
        },
        "content": " Here are the matching subject(s) in your list:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jialerk"
        },
        "content": "CS2040C"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jialerk"
        },
        "content": "CS2113T"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jialerk"
        },
        "content": "CS2101"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "####  4.1.6 `subject` - Enter a subject"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Enters a pre-existing subject"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Format: `subject` `[SUBJECT_NAME]`"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jialerk"
        },
        "content": "subject CS2113T"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jialerk"
        },
        "content": "You are currently looking at the subject: CS2113T"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 4.2 Topics \u003ca name \u003d \"topics\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Topic commands can only be used when looking at a subject."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.2.1 `help` - Display all commands"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Displays all the available commands."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Format: `help` "
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jialerk"
        },
        "content": "  "
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "help"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "________________________________________________________________________________________________________________________"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "help:                            shows the list of commands available at the subject level"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "add abc:                           adds a topic called \u0027abc\u0027 in the current subject"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "todo abc:                          adds a todo type task with the description \u0027abc\u0027"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "deadline abc /by 12:00 13-11-2020: adds a deadline type task with description \u0027abc\u0027 with date/time of deadline"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                                   as 12:00 AM 13 Nov 2020"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "event abc /at 01:00 21-11-2020:    adds an event type task with description \u0027abc\u0027 with date/time of event"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                                   as 1:00 AM 21 Nov 2020"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "find abc:                          finds all topics and tasks containing \u0027abc\u0027 in the current subject"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "list:                              shows the list of all topics and tasks in the current subject"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "list all:                          shows the tree of all subjects, topics, tasks and flashcards"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "delete topic 1:                    deletes the 1st topic in the list of topics."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "delete task 1:                     deletes the 1st task in the list of tasks."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "done 1:                            marks the 1st task in the list of tasks as done"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "topic abc:                         enters the topic abc, now you can add, find, list and delete flashcards of topic abc"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "quiz abc:                          starts a quiz for all the flashcards of the topic abc,"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                                   answer the questions of the prompted flashcards to test your knowledge"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "results abc:                       gives you the results of all attempted quizzes for abc topic"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "exit:                              exits the subject to return to the main screen, where you can work with subjects"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "________________________________________________________________________________________________________________________"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.2.2 `add` - Add topic"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Add a topic."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jialerk"
        },
        "content": "`add` `[TOPIC_NAME]`"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`add speed`"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Got it. I\u0027ve added this topic:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "rashien3"
        },
        "content": "  speed"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Now you have 1 topic in the list."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.2.3 `delete topic` - Delete a topic"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Deletes the specified topic."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "jialerk"
        },
        "content": "`delete topic` `[TOPIC_NUMBER]`"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`delete topic 1`"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "rashien3"
        },
        "content": " Noted. I\u0027ve removed this topic:"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "rashien3"
        },
        "content": "   speed"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "rashien3"
        },
        "content": " Now you have 0 tasks in the list."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.2.4 `list` - List all topics and tasks"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Prints a list of all topics and tasks of the subject you are currently viewing."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "rashien3"
        },
        "content": "  "
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Here are the topic(s) under math: "
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "rashien3"
        },
        "content": "1.speed"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Here are the tasks(s) under math: "
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1.[T][✘] laundry"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "syncode98"
        },
        "content": "2.[E][✘] tutorial (at: 4:00 PM 21 Oct 2020)"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "syncode98"
        },
        "content": "3.[D][✘] assignment (by: 11:59 PM 21 Oct 2020)"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.2.5 `find` - Find topics and tasks"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Searches the current subject for all the topics and tasks that contains the query."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`find [QUERY]`"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`find laund`"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "rashien3"
        },
        "content": " Sorry! I could not find any topics with laund in the list."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "rashien3"
        },
        "content": " Here are the matching task(s) in your list:"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "syncode98"
        },
        "content": "[T][✓] laundry"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.2.6 `topic` - Enter a topic"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Enters a pre-existing topic."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Format: `topic` `[TOPIC_NAME]`"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "rashien3"
        },
        "content": "topic speed"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "rashien3"
        },
        "content": "You are currently looking at the topic: speed"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 4.3 Tasks \u003ca name\u003d\"tasks\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Task commands can only be used when looking at a subject."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.3.1 `todo` - Add todo"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Add a todo task."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`todo` `[DESCRIPTION]`"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`todo laundry`"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\t[T][✘] laundry"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.3.2 `deadline` - Add deadline"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Add a deadline task."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`deadline [DESCRIPTION] /by [TIME]`"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ℹ️ **_NOTE:_** Add the time using the HH:MM DD-MM-YYYY format. "
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`deadline assignment /by 23:59 21-10-2020`"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "syncode98"
        },
        "content": "  [D][✘] assignment (by: 11:59 PM 21 Oct 2020)"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.3.3 `event` - Add event"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Add an event task."
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`event [DESCRIPTION] /at [TIME]`"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`event tutorial /at 16:00 21-10-2020`"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "syncode98"
        },
        "content": "  [E][✘] tutorial (at: 4:00 PM 21 Oct 2020)"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.3.4 `delete` - Delete Task"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Deletes the specified task."
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "jialerk"
        },
        "content": "`delete task [TASK_INDEX]`"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`delete task 2`"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "rashien3"
        },
        "content": " Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "syncode98"
        },
        "content": "   [E][✘] tutorial (at: 4:00 PM 21 Oct 2020)"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "rashien3"
        },
        "content": " Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.3.5 `done` - Mark task as completed"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Marks the specified task as done."
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "jialerk"
        },
        "content": "`done [TASK_INDEX]`"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "rashien3"
        },
        "content": " Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "syncode98"
        },
        "content": "   [D][✓] assignment (by: 11:59 PM 21 Oct 2020)"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 4.4 Flashcards \u003ca name \u003d\"flashcards\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Flashcards can be added to take notes, in the form of questions and answers."
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "These flashcards can also be used to take quizzes, which is described in the next section."
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This section describes the usage of commands that can be used to list all the available commands, "
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "and add, delete and list flashcards. "
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ℹ️ **_NOTE:_** Flashcard commands can only be used when looking at a topic."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### 4.4.1 `help` - Displaying all commands"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "The help command displays all the available commands so that you can refer to them whenever you get confused "
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "or need help to navigate the application.   "
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "   "
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "help"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "________________________________________________________________________________________________________________________"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "help:              shows the list of commands available at the topic level"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "add abc; def:      adds a flashcard with question \u0027abc\u0027 and answer \u0027def\u0027 in the current topic"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "list:              shows the list of all flashcards in the current topic"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "list all:          shows the tree of all subjects, topics, tasks and flashcards"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "delete 1:          deletes the 1st flashcard in the list"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "exit:              exits the topic to return to the subject level, where you can work with tasks and topics"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "________________________________________________________________________________________________________________________"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ℹ️ **_NOTE:_** Do not add extra spaces after or before help."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### 4.4.2 `add` - Adding a flashcard"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "The add command allows you to add a flashcard, under the topic you are currently viewing."
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "These flashcards can be added to take notes. "
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "They are added in the form of questions and answers."
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "`add` `[QUESTION]; [ANSWER]`"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "add How to calculate speed?; Speed\u003ddistance/time."
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Got it. I\u0027ve added this flashcard:"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "  How to calculate speed?; Speed\u003ddistance/time."
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Now you have 3 flashcard in the list."
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ℹ️ **_NOTE:_** Do not forget the semicolon, as it separates the question and the answer."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### 4.4.3 `delete` - Deleting a flashcard"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "The delete command deletes the specified flashcard. "
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This can be used if you make a mistake or no longer need a flashcard."
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "You can check the flashcard number from the list of flashcards, which is described next."
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "`delete` `[FLASHCARD NUMBER]`"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "sugandha929"
        },
        "content": " Noted. I\u0027ve removed this flashcard:"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "   How to calculate speed?; Speed\u003ddistance/time."
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "sugandha929"
        },
        "content": " Now you have 2 flashcards in the list."
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "____________________________________________________________```"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.4.4 `list` - List all flashcards"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "The list command prints a list of all flashcards of the topic you are currently viewing. "
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This will help you to keep track of all the flashcards you have added "
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "and to take note of the number of the flashcard you might want to delete."
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "  "
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Here are the flashcard(s) under speed: "
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "1.What is the formula for time?; Time \u003d Distance/Speed."
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "2.What is the difference between speed and velocity? Speed, being a scalar quantity, is the rate at which an object covers distance. On the other hand, velocity being a vector quantity, is the rate at which the position changes."
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ℹ️ **_NOTE:_** Do not add extra spaces after or before list."
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 4.5 Taking quizzes \u003ca name \u003d \"takeQuiz\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Once you have added the necessary flashcards, you can use the Quiz functionality to test yourself. This would"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "syncode98"
        },
        "content": "let you gauge how much you understand from the material. This will be beneficial if you are running out of time"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "syncode98"
        },
        "content": "to revise your own notes."
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "syncode98"
        },
        "content": " "
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "syncode98"
        },
        "content": "In this feature, the application prints the questions from the flashcards stored in the application. You need to complete the quiz within a"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "syncode98"
        },
        "content": "certain time limit. There are two types of quizzes :"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* SubjectQuiz"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* TopicQuiz"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.5.1 Subject quiz"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "syncode98"
        },
        "content": "This type of quiz helps you prepare for a particular subject.The application prints out the questions from the topics present in a subject."
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "syncode98"
        },
        "content": "You have 2 minutes to complete the quiz."
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Format: `quiz NAMEOFSUBJECT`\u003cbr\u003e"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Example: `quiz Maths`"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Output: `You are about to begin the quiz for maths.You have 2 minutes.`"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.5.2 Topic quiz"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "syncode98"
        },
        "content": "This type of quiz helps you to prepare for a particular topic. The application prints out all the questions that have been saved in the specific topic ."
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "syncode98"
        },
        "content": "You have 1 minute to complete the quiz."
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Format: `quiz NAMEOFTOPIC`\u003cbr\u003e"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Example: `quiz speed`"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Output: `You are about to begin the quiz for speed.You have 1 minute.`"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ℹ️ **_NOTE:_** Ensure that you start a quiz for a subject/topic that has been added to the application "
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e and has a flashcard. Else, the application will not start the quiz."
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Once you have entered the type of quiz you want to begin, the application starts the quiz. You"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "syncode98"
        },
        "content": "are expected to answer these questions."
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Format: `Question NAMEOFQUESTION`\u003cbr\u003e"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Example: `Question: What is distance` \u003cbr\u003e"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Once the quiz has been completed, the application prints out the scores that you obtained."
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "syncode98"
        },
        "content": "You will also be notified about the questions that you did not answer correctly. "
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The score is printed in the following format:\u003cbr\u003e"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* If you get full marks : `Result:4/4 -- Excellent`\u003cbr\u003e"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* If you get enough marks to pass: `Result:2/4 -- Pass`\u003cbr\u003e"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* If you fail: `Result:0/4 -- Fail`\u003cbr\u003e"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The code below shows an example of a result that you can get after attempting a quiz."
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003cpre\u003e\u003ccode\u003e____________________________________________________________"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Result:2/4 -- Pass"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Here are the questions which you got wrong."
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "syncode98"
        },
        "content": "           "
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Question:distance "
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Correct Answer: speed x time "
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Your Answer: speed x time x time"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Question:velocity "
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Correct Answer: displacement / time"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Your Answer: none"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________\u003c/code\u003e\u003c/pre\u003e"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "syncode98"
        },
        "content": "You can stop the quiz by entering `stop`. The application then prints the score.\u003cbr\u003e"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Format: `stop`\u003cbr\u003e"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Output:`The quiz has been stopped!`."
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003cpre\u003e\u003ccode\u003e"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The quiz has been stopped!"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Result:1/2 -- Pass"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003c/code\u003e\u003c/pre\u003e"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 4.6 Viewing quiz results \u003ca name \u003d\"result\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "syncode98"
        },
        "content": "After completing a few number of quizzes, you would want to look at the results of the previous quizzes to see if"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "syncode98"
        },
        "content": "you have improved over the time. You can use the `results` functionality to check your results."
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "syncode98"
        },
        "content": "This can be done for the subjects or for the topics."
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Format: `results NAMEOFTOPIC` or `results NAMEOFSUBJECT`"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Example:`results maths` or `results speed`"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003cpre\u003e\u003ccode\u003e"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Quiz 1: 1/1 -- Excellent"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Quiz 2: 0/1 -- Fail"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003c/code\u003e\u003c/pre\u003e"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e️ ℹ️ **_NOTE:_** Ensure that at least one quiz has been attempted under the subject or topic."
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 4.7 Storing data \u003ca name\u003d\"store\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "When you exit the application, the data you have added to the program is automatically saved to the disk. "
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The data is stored under the `data/` folder in the same folder where you run the application. "
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ⚠️ **_WARNING:_** The data (or any changes to the data) are not saved if the application is closed abnormally "
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e (i.e. not via `bye` command)."
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Instead of storing all data in one file, **revisED** creates a folder hierarchy under `data/` following the logical structure of the"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "subjects and topics added. For example, if you add a `Maths` subject and a `Algebra` topic under it, a"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "`Maths/` folder will be created under the `data/` folder and an `Algebra` folder will be created under the `Maths/`"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "folder, as shown in figure 4.7.1 below. "
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "revised.jar                     \u003cem\u003e--\u003e \u003cb\u003erevisED\u003c/b\u003e Application\u003c/em\u003e"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "data                            \u003cem\u003e--\u003e Data main folder\u003c/em\u003e"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "└── Maths                       \u003cem\u003e--\u003e Maths subject folder\u003c/em\u003e"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    ├── Algebra                 \u003cem\u003e--\u003e Algebra topic folder under Maths subject\u003c/em\u003e"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    │   ├── topicResults.json"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    │   └── flashcards.json"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    ├── subjectResults.json"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    └── tasks.txt"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csup\u003e***Figure 4.7.1*** Sample directory structure created\u003c/sup\u003e"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The details of the files that are created under each subject and topic folder will be explained below."
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ℹ️ **_NOTE:_**  The name of the subject and topic folders can be changed manually, and the changes will be reflected"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e in the application the next time you launch it."
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.7.1 tasks.txt"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "One `tasks.txt` file will be created under each subject folder. This file contains the tasks (Todo, Event, Deadline) you"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "have added to a specific subject. An example of the file content is shown below."
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "T | 1 | someTodoTask                                    \u003cem\u003e--\u003e Todo task\u003c/em\u003e"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "D | 0 | someDeadlineTask | 11:59 PM 20 Dec 2020         \u003cem\u003e--\u003e Deadline task\u003c/em\u003e"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "E | 0 | someEventTask | 1:00 PM 10 Nov 2020             \u003cem\u003e--\u003e Event task\u003c/em\u003e"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csup\u003e***Figure 4.7.2*** Sample tasks.txt content\u003c/sup\u003e"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The first column of data shows the type of task, where T corresponds to `Todo` task, D corresponds to `Deadline` "
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "task, and E corresponds to `Event` task. The second column shows if a task is completed, where 0 means not completed "
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "while 1 means completed. The third column shows the name of a task. Lastly, the fourth column shows the time and date of "
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "a deadline or event task. "
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ⚠️ **_WARNING:_** Although you can change the content of this file manually, "
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e you are not advised to do so because a mismatch in the format will corrupt the data. "
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e **If the data is corrupted, it will not be loaded by the application.**"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e Make a copy of the file before making changes if you have to do so manually."
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.7.2 subjectResults.json / topicResults.json"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "One `subjectResults.json` will be created under each subject folder, and one `topicResults.json` will be created "
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "under each topic folder. `subjectResults.json` stores the quiz results you have obtained from doing quizzes under "
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "a subject, while `topicResults.json` stores the quiz results you have obtained from doing quizzes under a topic. "
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Both of the files have the same content format, and an example of "
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "the file content is shown below."
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "["
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  {                                    \u003cem\u003e--\u003e Result record 1\u003c/em\u003e"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"score\": 1.0,                      \u003cem\u003e--\u003e Score obtained\u003c/em\u003e"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"maxScore\": 1.0,                   \u003cem\u003e--\u003e Maximum score that can be obtained\u003c/em\u003e"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"description\": \"Excellent\"         \u003cem\u003e--\u003e Result description\u003c/em\u003e"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  },"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  {                                    \u003cem\u003e--\u003e Result record 2\u003c/em\u003e"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  },"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  ..."
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "]"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csup\u003e***Figure 4.7.3*** Sample subjectResults.json content\u003c/sup\u003e"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 4.7.3 flashcards.json"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "One `flashcards.json` file will be created under each topic folder. This file stores all the flashcard data you "
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "have added under a specific subject and topic. An example of the file content is shown below."
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "["
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  {                                            \u003cem\u003e--\u003e Flashcard 1\u003c/em\u003e"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"question\": \"x + y \u003d 4. y \u003d ? \","
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"answer\": \"4 - x\""
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  },"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  {                                            \u003cem\u003e--\u003e Flashcard 2\u003c/em\u003e"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  },"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  ..."
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "]"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csup\u003e***Figure 4.7.4*** Sample flashcard.json content\u003c/sup\u003e"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Each entry enclosed with the curly braces ({}) corresponds to one flashcard."
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ⚠️ **_WARNING:_** Although you can change the content of this file manually, "
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e a mismatch in the format will corrupt the data. **If the data is corrupted, it will not be loaded by the application.** "
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e Therefore, make a copy of the file before making changes if you have to do so."
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 4.8 Loading data \u003ca name\u003d\"load\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Similar to \u003ca href \u003d#store\u003estoring data\u003c/a\u003e,"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "when you launch the application, the saved data is automatically loaded from the disk."
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ℹ️ **_NOTE:_** Loaded subjects and topics will be sorted in alphabetical order, which can be seen when running"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e \u003ca href\u003d#list\u003elist\u003c/a\u003e command."
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ⚠️ **_WARNING:_** If you have manually modified the contents of the files stored with wrong syntax, the files affected "
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e will not be loaded (and, instead, empty data will be loaded) when the application launches. "
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 4.9 Exporting data \u003ca name\u003d \"export\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "You can export all the data, including the quiz results and tasks, to a `json` file so that it can be imported into"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "other applications that understand the data. To export the data, run the following command when you are in the main "
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "level of the application."
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Format: `export`"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "export"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Your data has been successfully exported to /path/to/revised/export/data.json."
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "After running the command, the data will be exported to "
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "`export/data.json` under the same folder where **revisED** application resides. An example of the file content is shown "
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "below."
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "["
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  {                                                                  \u003cem\u003e--\u003e Subject 1\u003c/em\u003e"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"title\": \"Maths\",                                                "
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"topics\": {"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "      \"topics\": [                                                    \u003cem\u003e--\u003e Topics under Maths subject\u003c/em\u003e"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        {                                                            \u003cem\u003e--\u003e Topic 1\u003c/em\u003e"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"title\": \"Algebra\",                                        "
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"flashcards\": \u003cem\u003e[same as the content of flashcards.json]\u003c/em\u003e,    \u003cem\u003e--\u003e Flashcards under Algebra topic\u003c/em\u003e"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"results\": {"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            \"resultList\": \u003cem\u003e[same as the content of topicResults.json]\u003c/em\u003e \u003cem\u003e--\u003e Results under Algebra topic\u003c/em\u003e"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          }"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        },"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ..."
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "      ]"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    },"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"tasks\": {                                                       \u003cem\u003e--\u003e Tasks under Maths subject\u003c/em\u003e"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "      \"taskList\": ["
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        {                                                            \u003cem\u003e--\u003e Task 1\u003c/em\u003e"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"description\": \"someTodoTask\","
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"isDone\": false"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        },"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        {                                                            \u003cem\u003e--\u003e Task 2\u003c/em\u003e"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"dateTime\": {"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            \"date\": {"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"year\": 2020,"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"month\": 12,"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"day\": 20"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            },"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            \"time\": {"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"hour\": 23,"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"minute\": 59,"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"second\": 0,"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"nano\": 0"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          },"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"description\": \"someDeadlineTask\","
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"isDone\": false"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        },"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ...                                                       "
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "      ]"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    },                            "
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"results\": {"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "      \"resultList\": \u003cem\u003e[same as the content of subjectResults.json]\u003c/em\u003e    \u003cem\u003e--\u003e Results under Maths subject\u003c/em\u003e"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  },"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  ...                                                               \u003cem\u003e--\u003e More subjects\u003c/em\u003e"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "]"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csup\u003e***Figure 4.9.1*** Sample data.json content\u003c/sup\u003e"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Note that the content of the file follows the same logical structure as that"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "in the `data/` folder."
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ℹ️ **_NOTE:_** **Importing** of the exported file is **currently not supported** as it is meant to be read by other "
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e applications. Nevertheless, the feature may be implemented in the future versions if it is highly requested."
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## 5. FAQ \u003ca name \u003d \"faq\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Commonly asked questions from users."
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Question: I moved the jar file to another location. Will my previous data be erased automatically?\u003cbr\u003e"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Answer: Do not worry. You previous data will still be avaiable in the `data/` folder."
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Question: I accidentally saved a task as an event, when it is a deadline. Is there any method to change the type of the task?\u003cbr\u003e"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Answer: Unfortunately, no. You will have to delete the event using the `delete task [TASK_INDEX]`to delete the task, and then "
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "syncode98"
        },
        "content": "add the task back using the `deadline [DESCRIPTION] /by [TIME]` command."
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Question: I stopped a quiz without completing it. Can I resume it?\u003cbr\u003e"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Answer: No. You will have to start a new quiz."
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Question: Is there any limit to the number of topics/subjects that I can store in my application?\u003cbr\u003e"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Answer: No. You can store unlimited number of topics/subjects.   "
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## 6. Command Summary \u003ca name\u003d\"summary\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Action|Examples"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "syncode98"
        },
        "content": "------|------"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Add subject|`add math` (while in main menu)"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Add topic|`add speed` (while looking at a subject)"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Add todo|`todo revise for test` "
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Add deadline| `deadline assignment /by 23:59 21-10-2020`"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Add an event| `event tutorial /at 16:00 21-10-2020`"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Find tasks| `find math`"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Complete task|`done 4`"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Delete task|`delete task 4`"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Delete topic| `delete topic 4`"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Change to the specific subject |`subject maths`"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Change to the specific topic |`topic speed `"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Start a quiz for a subject| `quiz maths`"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Start a quiz for a topic| `quiz speed`"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "syncode98"
        },
        "content": "View results for a subject | `results maths`"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "syncode98"
        },
        "content": "View results for a topic | `results speed`"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Export data | `export`"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Exit a topic or subject | `exit`"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Exit application|`bye`"
      }
    ],
    "authorContributionMap": {
      "syncode98": 155,
      "sugandha929": 153,
      "CookieHoodie": 235,
      "-": 31,
      "jialerk": 102,
      "rashien3": 205
    }
  },
  {
    "path": "docs/team/chinhang.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "# Ong Chin Hang - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "-": 5
    }
  },
  {
    "path": "docs/team/muthu.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "syncode98"
        },
        "content": "# I MUTHUKUMAR - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "A dedicated individual who is willing to contribute to the team."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "-": 4
    }
  },
  {
    "path": "src/main/java/seedu/revised/Revised.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.SubjectCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.storage.DataLoadingException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.parser.SubjectParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Revised {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String BASE_DIR \u003d \"data\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String EXPORT_DIR \u003d \"export\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String FLASHCARD_FILENAME \u003d \"flashcards.json\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String TASK_FILENAME \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String RESULT_FILENAME \u003d \"results.json\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String EXPORT_FILENAME \u003d \"data.json\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final SubjectList subjects;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(Revised.class.getName());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // configuration for logging, should only be done once"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            InputStream stream \u003d Revised.class.getClassLoader().getResourceAsStream(\"logging.properties\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            LogManager.getLogManager().readConfiguration(stream);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.log(Level.WARNING, \"Failed to read logging configuration file.\", e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Initialises Duke by loading saved data from the disk, if any."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param baseDir           the name of the directory to store the data into"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param exportDir         the name of the directory to export the data to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param flashcardFilename the name of the file to store all the flashcard info"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param taskFilename      the name of the file to store all the tasks under a subject"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param resultFilename    the name of the file to store all the results of quizzes"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param exportFilename    the name of the file that the data will be exported to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Revised(String baseDir, String exportDir, String flashcardFilename, String taskFilename,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                   String resultFilename, String exportFilename) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage \u003d new Storage.StorageBuilder()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setBaseDir(baseDir)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportDir(exportDir)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setFlashcardFilename(flashcardFilename)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setTaskFilename(taskFilename)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setResultFilename(resultFilename)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportFilename(exportFilename)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cSubject\u003e savedSubjects \u003d new ArrayList\u003c\u003e();  // initialize to empty in case data loading fails"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            savedSubjects \u003d storage.loadSubjects();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (DataLoadingException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.log(Level.WARNING, \"Failed to load saved subjects or topics.\", e);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Ui.printError(e);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        subjects \u003d new SubjectList(savedSubjects);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Runs the Duke program until the user exits the program."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printStart(subjects);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                SubjectCommand c \u003d SubjectParser.parse(fullCommand);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                c.execute(subjects, storage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Ui.printErrorMsg(Ui.INDEX_OUT_OF_BOUND_EXCEPTION);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Ui.printErrorMsg(Ui.INDEX_FORMAT_EXCEPTION);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Ui.printError(e);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            storage.saveSubjects(subjects.getList());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Ui.printErrorMsg(Ui.WRITING_EXCEPTION);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.log(Level.SEVERE, Ui.WRITING_EXCEPTION, e);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printBye();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Application starts.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            new Revised(BASE_DIR, EXPORT_DIR, FLASHCARD_FILENAME, TASK_FILENAME, RESULT_FILENAME, EXPORT_FILENAME)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    .run();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.info(\"Application exits.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "CookieHoodie": 76,
      "-": 7,
      "jialerk": 28
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/Flashcard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class Flashcard {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private String question;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private String answer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Flashcard(String question, String answer) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getQuestion() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getAnswer() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 1,
      "sugandha929": 3,
      "CookieHoodie": 21,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/Subject.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.quiz.Result;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.ResultList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TopicList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class Subject {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private TopicList topics;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private ResultList results;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject(String title) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Subject(String title, List\u003cTopic\u003e topics) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, topics, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Subject(String title, List\u003cTopic\u003e topics, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, topics, tasks, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Subject(String title, List\u003cTopic\u003e topics, List\u003cTask\u003e tasks, List\u003cResult\u003e results) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.topics \u003d new TopicList(topics);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.tasks \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.results \u003d new ResultList(results);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public TopicList getTopics() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return topics;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public TaskList getTasks() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public ResultList getResults() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 7,
      "CookieHoodie": 34,
      "jialerk": 10,
      "rashien3": 9
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/Topic.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.quiz.Result;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.ResultList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class Topic {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cFlashcard\u003e flashcards;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private ResultList results;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Topic(String title) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Topic(String title, List\u003cFlashcard\u003e flashcards) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, flashcards, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Topic(String title, List\u003cFlashcard\u003e flashcards, List\u003cResult\u003e results) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.flashcards \u003d flashcards;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.results \u003d new ResultList(results);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public void addFlashcard(Flashcard flashcard) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        flashcards.add(flashcard);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public boolean removeFlashcard(Flashcard flashcard) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return flashcards.remove(flashcard);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Flashcard removeFlashcard(int index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return flashcards.remove(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public List\u003cFlashcard\u003e getFlashcards() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return this.flashcards;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public ResultList getResults() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 6,
      "sugandha929": 2,
      "CookieHoodie": 35,
      "jialerk": 1,
      "rashien3": 13
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/quiz/Quiz.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcard.NoFlashcardException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topic.NoTopicException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.ResultList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public abstract class Quiz {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(Quiz.class.getName());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    protected Result result \u003d new Result(0, 0);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    protected List\u003cFlashcard\u003e flashcards;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    protected List\u003cString\u003e incorrectAnswers \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public abstract void startQuiz() throws NoFlashcardException, NoTopicException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public List\u003cString\u003e getIncorrectAnswers() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return incorrectAnswers;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Checks the given answer for its correctness. If the answer is wrong, the question, the correct answer"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * and the wrong answer given by the user is added to the incorrectAnswers List."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @param answer    The answer given by the user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @param flashcard The flashcard for which the user is currently answering the questions"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void checkAnswer(String answer, Flashcard flashcard) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Checks if the answer that the user gave was correct.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (flashcard.getAnswer().equalsIgnoreCase(answer)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            logger.info(\"The current score of the user is increased by one.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            double updatedResult \u003d this.result.getScore() + 1.0;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.result.updateResult(updatedResult);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            logger.info(\"The current score remains the same while the contents of the flashcard and the user\u0027s \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    + \"answer are added to the incorrectAnswers list\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.incorrectAnswers.add(flashcard.getQuestion());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.incorrectAnswers.add(flashcard.getAnswer());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.incorrectAnswers.add(answer);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Finish checking the accuracy of the answer.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 43,
      "CookieHoodie": 2,
      "jialerk": 4
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/quiz/Result.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class Result {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(Result.class.getName());"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private double score \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private double maxScore;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Result(float score, int maxScore) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.score \u003d score;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.maxScore \u003d maxScore;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.description \u003d \"Fail\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public double getScore() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return score;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public double getMaxScore() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return maxScore;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void setScore(int score) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.score \u003d score;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void setMaxScore(int maxScore) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.maxScore \u003d maxScore;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Updates the current score and sets the description of the result."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @param score The \u003ccode\u003escore\u003c/code\u003e to replace the current score"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void updateResult(double score) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Update the result and description of the result\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.score \u003d score;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (this.score \u003e\u003d this.maxScore / 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.description \u003d \"Pass\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (this.score \u003d\u003d this.maxScore) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.description \u003d \"Excellent\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Finish updating the result of the quiz\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The description of the quiz is %s\",this.description));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.score + \"/\" + this.maxScore + \" -- \" + this.description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 60,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/quiz/SubjectQuiz.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcard.NoFlashcardException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topic.NoTopicException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.ResultList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class SubjectQuiz extends Quiz {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(SubjectQuiz.class.getName());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private Subject subject;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public SubjectQuiz(Subject subject) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.subject \u003d subject;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.flashcards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Transfers the flashcards from the all the topics in a subject to the SubjectQuiz class and"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * sets the maximum score of the quiz."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoFlashcardException If the topic has no flashcards"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @throws NoTopicException     If the subject has no topic"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void setUpQuiz() throws NoFlashcardException, NoTopicException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Start setting up the quiz\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (subject.getTopics().getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoTopicException(Ui.NO_TOPIC_EXCEPTION);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        int maxScore \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.flashcards.addAll(topic.getFlashcards());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            maxScore +\u003d topic.getFlashcards().size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.result.setMaxScore(maxScore);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (this.flashcards.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoFlashcardException(Ui.NO_FLASHCARD_EXCEPTION);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Finished setting up the quiz\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"Max Score of quiz: %d\", maxScore));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Begins the quiz for the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoFlashcardException If the topic has no flashcards"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @throws NoTopicException     If the subject has no topic"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void startQuiz() throws NoFlashcardException, NoTopicException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Start of the quiz\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The subject being tested is  %s\", this.subject));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        setUpQuiz();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.result.setScore(0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printStartSubjectQuiz(this.subject);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Instant end \u003d Instant.now().plusSeconds(120);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String answer \u003d null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Start printing the questions\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Flashcard flashcard : this.flashcards) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (Instant.now().isAfter(end)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                logger.info(\"If the timer ends before the user could finish the quiz.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printQuestion(flashcard.getQuestion());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            answer \u003d Ui.readCommand().strip();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (answer.equals(\"stop\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                logger.info(\"If the user wants to end the quiz.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printStopQuiz();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printScore(this.result);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                checkAnswer(answer, flashcard);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The last answer is : %s\", answer));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assert answer !\u003d null;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (!answer.equals(\"stop\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printEndQuiz();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printScore(this.result);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (this.result.getScore() \u003c this.result.getMaxScore()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printIncorrectAnswers(this.incorrectAnswers);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.subject.getResults().add(this.result);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"End of quiz\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The result for the quiz is %f\",this.result.getScore()));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 91,
      "CookieHoodie": 4,
      "jialerk": 10
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/quiz/TopicQuiz.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcard.NoFlashcardException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.ResultList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class TopicQuiz extends Quiz {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(TopicQuiz.class.getName());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private Topic topic;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public TopicQuiz(Topic topic) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.topic \u003d topic;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.flashcards \u003d topic.getFlashcards();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.result.setMaxScore(this.flashcards.size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Topic getTopic() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return topic;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void setTopic(Topic topic) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.topic \u003d topic;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Checks if the topic has flashcards. Furthermore, this method sets the maximum score for the quiz."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoFlashcardException If there are no flashcards in this topic"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void setUpQuiz() throws NoFlashcardException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Start setting up the quiz for the topic\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (this.flashcards.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoFlashcardException(Ui.NO_FLASHCARD_EXCEPTION);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.result.setMaxScore(this.flashcards.size());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Finished setting up the quiz\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"Max Score of quiz: %d\", this.flashcards.size()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Begins the quiz for the user."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoFlashcardException If the topic has no flashcards"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void startQuiz() throws NoFlashcardException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Start of the quiz\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The topic being tested is  %s\", this.topic));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        setUpQuiz();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.result.setScore(0);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printStartTopicQuiz(this.topic);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Instant end \u003d Instant.now().plusSeconds(60);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String answer \u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Start printing the questions\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Flashcard flashcard : this.flashcards) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (Instant.now().isAfter(end)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                logger.info(\"If the timer ends before the user could finish the quiz.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printQuestion(flashcard.getQuestion());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            answer \u003d Ui.readCommand().strip();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (answer.equals(\"stop\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printStopQuiz();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printScore(this.result);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                checkAnswer(answer, flashcard);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assert answer !\u003d null;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The last answer is : %s\", answer));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (!answer.equals(\"stop\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printEndQuiz();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printScore(this.result);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (this.result.getScore() \u003c this.result.getMaxScore()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printIncorrectAnswers(this.incorrectAnswers);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.topic.getResults().add(this.result);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"End of quiz for this topic\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The result for the quiz is %f\", this.result.getScore()));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 85,
      "CookieHoodie": 3,
      "jialerk": 8
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/task/Deadline.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM yyyy\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String dateTime \u003d this.dateTime.format(formatter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String getDateTimeDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM yyyy\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.dateTime.format(formatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 16,
      "CookieHoodie": 3,
      "jialerk": 13
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/task/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Event(String description, boolean isDone, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM yyyy\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String dateTime \u003d this.dateTime.format(formatter);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String getDateTimeDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM yyyy\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.dateTime.format(formatter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 16,
      "CookieHoodie": 3,
      "jialerk": 12
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether a task is done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return true when a task is done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Prints the String representation of the class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return the String representation of the class"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return LocalDateTime.MAX;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "syncode98": 6,
      "CookieHoodie": 14,
      "jialerk": 33
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/task/Todo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 12
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " * Various commands to use depending on the various inputs given by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 2,
      "jialerk": 6,
      "rashien3": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcard/AddFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.flashcard.InvalidFlashcardException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcard.RepeatedFlashcardException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcard.NoFlashcardException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class AddFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public AddFlashcardCommand(String fullCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Topic topic) throws RepeatedFlashcardException, InvalidFlashcardException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String[] tokens \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String question \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String answer \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            String content \u003d tokens[1].strip();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            String[] contentTokens \u003d content.split(\";\", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            question \u003d contentTokens[0].strip();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            answer \u003d contentTokens[1].strip();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidFlashcardException(Ui.INVALID_FLASHCARD_EXCEPTION);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        if (question.isEmpty() || answer.isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidFlashcardException(Ui.INVALID_FLASHCARD_EXCEPTION);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        for (Flashcard flashcard : topic.getFlashcards()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            if (flashcard.getQuestion().equals(question) \u0026\u0026 flashcard.getAnswer().equals(answer)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                throw new RepeatedFlashcardException(Ui.REPEATED_FLASHCARD_EXCEPTION);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Flashcard t \u003d new Flashcard(question, answer);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        topic.addFlashcard(t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printFlashcard(t, topic.getFlashcards());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 6,
      "sugandha929": 21,
      "CookieHoodie": 19,
      "jialerk": 5
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcard/DeleteFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class DeleteFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public DeleteFlashcardCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Deletes a Flashcard in a \u003ccode\u003eflashcardList\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @param topic the \u003ccode\u003eTopic\u003c/code\u003e instance of the Topic class for the user to delete from"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Topic topic) throws NumberFormatException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        int number \u003d Integer.parseInt(message[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Flashcard flashcard \u003d topic.getFlashcards().get(number - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        topic.getFlashcards().remove(number - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printFlashcardDelete(flashcard, topic.getFlashcards().size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sugandha929": 32,
      "CookieHoodie": 2,
      "jialerk": 3
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcard/ExitFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.flashcard.NoFlashcardException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.flashcard.RepeatedFlashcardException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class ExitFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Topic topic) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 11,
      "CookieHoodie": 11
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcard/FlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.flashcard.InvalidFlashcardException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcard.NoFlashcardException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcard.RepeatedFlashcardException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public abstract class FlashcardCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public abstract void execute(Topic topic) throws NoFlashcardException, RepeatedFlashcardException,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            InvalidFlashcardException, FailedParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 5,
      "jialerk": 11
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcard/HelpFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "package seedu.revised.command.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class HelpFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Topic topic) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printFlashcardHelp();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sugandha929": 14,
      "CookieHoodie": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcard/ListAllFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package seedu.revised.command.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.topic.TopicCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.exception.flashcard.InvalidFlashcardException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.exception.flashcard.NoFlashcardException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.exception.flashcard.RepeatedFlashcardException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class ListAllFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private SubjectList subjectList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(ListAllFlashcardCommand.class.getName());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * List all subjects, topics, tasks, and flashcards."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param topic topic the user is currently looking at"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void execute(Topic topic) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Begin listing all while looking at topic.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printAll(subjectList.getList(), null, topic);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Finished listing all while looking at topic.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void setSubjectList(SubjectList subjectList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.subjectList \u003d subjectList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 41
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcard/ListFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class ListFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Topic topic) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printFlashcardList(topic);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 10,
      "CookieHoodie": 2,
      "jialerk": 2
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcard/SorryFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class SorryFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Topic topic) throws FailedParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        throw new FailedParseException(Ui.FAILED_PARSE_EXCEPTION);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 15,
      "CookieHoodie": 3,
      "jialerk": 3
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/AccessSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.TaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.topic.AccessTopicCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.topic.ListAllTopicCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.TopicCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.NoSubjectException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.parser.TopicParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AccessSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(AccessSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private SubjectList subjectList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AccessSubjectCommand(String fullcommand) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eSubject\u003c/code\u003e class into a \u003ccode\u003eSubjectList\u003c/code\u003e."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList           An instance of the \u003ccode\u003eSubjectList\u003c/code\u003e class for the user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                              to find subjects that matches the user input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage               Does nothing in this case but needed since this method was"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                              implemented from an abstract class"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoSubjectException   If the program does not detect the correct syntax for user input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throws NoSubjectException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.subjectList \u003d subjectList;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Subject gotoSubject \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message[1].isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoSubjectException(Ui.NO_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (subject.getTitle().equals(message[1])) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                gotoSubject \u003d subject;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (gotoSubject \u003d\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoSubjectException(Ui.NO_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        goToSubject(gotoSubject);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eSubject\u003c/code\u003e class into a \u003ccode\u003eSubjectList\u003c/code\u003e."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subject An instance of the \u003ccode\u003eSubject\u003c/code\u003e class for the user to access"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private void goToSubject(Subject subject) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Begin accessing a Subject to get Subject details\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printGoToSubject(subject);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        boolean isSubjectExit \u003d false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        while (!isSubjectExit) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Command c \u003d TopicParser.parse(fullCommand);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                if (c instanceof ListAllTopicCommand) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((ListAllTopicCommand) c).setSubjectList(subjectList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                } else if (c instanceof AccessTopicCommand) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((AccessTopicCommand) c).setSubjectList(subjectList);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                if (c instanceof TopicCommand) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((TopicCommand) c).execute(subject);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                } else if (c instanceof TaskCommand) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    TaskList taskList \u003d subject.getTasks();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((TaskCommand) c).execute(taskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                isSubjectExit \u003d c.isExit();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Ui.printErrorMsg(Ui.INDEX_FORMAT_EXCEPTION);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Ui.printErrorMsg(Ui.INDEX_OUT_OF_BOUND_EXCEPTION);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } catch (IllegalArgumentException | DateTimeParseException d) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Ui.printErrorMsg(Ui.INVALID_DATETIME_EXCEPTION);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Ui.printError(e);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printBackToSubjects();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Finished access into a subject, going back to main.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 12,
      "CookieHoodie": 23,
      "jialerk": 57,
      "rashien3": 16
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/AddSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.subject.InvalidSubjectException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.NoSubjectException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.RepeatedSubjectException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(AddSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddSubjectCommand(String fullCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eSubject\u003c/code\u003e class into a \u003ccode\u003eSubjectList\u003c/code\u003e."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList               An instance of the \u003ccode\u003eSubjectList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage                   Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                                  from an abstract class"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoSubjectException       If the program does not detect the correct syntax to adding a Subject"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws RepeatedSubjectException If the program detects the Subject the user inputs already exists"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                                  in the program"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throws RepeatedSubjectException, InvalidSubjectException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Begin checking string command to get the title of the subject to be added.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 4;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.length();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidSubjectException(Ui.INVALID_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String title \u003d fullCommand.substring(startOfMessage, endOfMessage).strip();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (title.isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidSubjectException(Ui.INVALID_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assert title !\u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if (subject.getTitle().equals(title)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                throw new RepeatedSubjectException(Ui.REPEATED_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Subject temp \u003d new Subject(title);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        subjectList.getList().add(temp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printSubject(temp, subjectList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Finished creating a new subject.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.fine(String.format(\"The subject is %s\", temp.getTitle()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 3,
      "CookieHoodie": 9,
      "jialerk": 52
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/DeleteSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DeleteSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(DeleteSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public DeleteSubjectCommand(String fullCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Deletes an instance of the \u003ccode\u003eSubject\u003c/code\u003e class in a \u003ccode\u003eSubjectList\u003c/code\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList               An instance of the \u003ccode\u003eSubjectList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage                   Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                                  from an abstract class"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NumberFormatException    If the program detects a wrong format for user input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) throws NumberFormatException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Begin checking string command to get the subject to be deleted.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int number \u003d Integer.valueOf(message[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Subject subject \u003d subjectList.getList().get(number - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assert !(number \u003c\u003d 0 \u0026\u0026 number \u003e subjectList.getList().size());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        subjectList.getList().remove(number - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printSubjectDelete(subject, subjectList.getList().size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Finished deleting the subject to be deleted.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.fine(String.format(\"The subject is %s\", subject.getTitle()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 4,
      "jialerk": 42
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/ExitSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ExitSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * from an abstract class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                    from an abstract class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage     Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                    from an abstract class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 4,
      "jialerk": 24
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/ExportSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.NoSubjectException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.RepeatedSubjectException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ExportSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(ExportSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Stores an instance of the \u003ccode\u003eSubjectList\u003c/code\u003e into a file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList  An instance of the \u003ccode\u003eSubjectList\u003c/code\u003e class to be stored"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage      An instance of the \u003ccode\u003eStorage\u003c/code\u003e class to store the"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                     information in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws IOException If there is an error accessing the storage location"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Begin exporting all subjects into a file.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File exportFile \u003d storage.export(subjectList.getList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Ui.printExportSuccessful(exportFile);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Finished exporting all subjects into a file.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 18,
      "jialerk": 21
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/FindSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.subject.InvalidSubjectException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class FindSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(FindSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public FindSubjectCommand(String fullcommand) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Find subjects in an instance of the \u003ccode\u003eSubjectList\u003c/code\u003e that holds a keyword keyed in by the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList   An instance of the \u003ccode\u003eSubjectList\u003c/code\u003e class for the user to conduct the search on"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage       Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                      from an abstract class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) throws InvalidSubjectException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Begin checking string command to get the keyword.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (message.length \u003c\u003d 1 || message[1].isEmpty()) {  // empty argument"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidSubjectException(Ui.INVALID_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Ui.printFindSubject(subjectList, message[1].strip());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Finished searching for subjects matching the keyword.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 10,
      "jialerk": 34
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/HelpSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class HelpSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Prints help function."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                    from an abstract class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage     Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                    from an abstract class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printSubjectHelp();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 13,
      "CookieHoodie": 3,
      "jialerk": 13
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/ListAllSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class ListAllSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(ListAllSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * List all subjects, topics, tasks, and flashcards."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subjectList the \u003ccode\u003eSubjectList\u003c/code\u003e instance of the \u003ccode\u003eSubjectList\u003c/code\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *                    class for the user to list subjects from"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param storage     Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *                    from an abstract class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Begin listing all subjects, topics, tasks, and flashcards.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printAll(subjectList.getList(),null,null);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Finished listing all subjects, topics, tasks, and flashcards.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 34
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/ListSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ListSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(ListSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * List subjects in a \u003ccode\u003eSubjectList\u003c/code\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList the \u003ccode\u003eSubjectList\u003c/code\u003e instance of the \u003ccode\u003eSubjectList\u003c/code\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                    class for the user to list subjects from"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage     Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                    from an abstract class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Begin listing subjects in the SubjectList.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printSubjectList(subjectList.getList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Finished listing the subjects in the SubjectList.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 4,
      "jialerk": 30
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/QuizSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.quiz.SubjectQuiz;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.flashcard.NoFlashcardException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.RepeatedSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.topic.NoTopicException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.InvalidSubjectException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.NoSubjectException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class QuizSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(QuizSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public QuizSubjectCommand(String fullcommand) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String getFullcommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.fullcommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Quiz subjects in a \u003ccode\u003eSubjectList\u003c/code\u003e."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList An instance of the \u003ccode\u003eSubjectList\u003c/code\u003e class for the user to quiz on"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage     Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                    from an abstract class"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) throws NoSubjectException, InvalidSubjectException,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            NoTopicException, NoFlashcardException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Begin finding the subject for which the quiz has to be conducted.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (message.length \u003c\u003d 1 || message[1].isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidSubjectException(Ui.INVALID_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Subject quizSubject \u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (subject.toString().equals(message[1].strip())) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                quizSubject \u003d subject;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (quizSubject \u003d\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoSubjectException(Ui.NO_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Finished reading the command to find the subject for the quiz feature\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The subject is %s\", quizSubject.getTitle()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        startQuiz(quizSubject);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Starts the quiz of the subject specified in the param."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subject               An instance of the \u003ccode\u003eSubject\u003c/code\u003e class for the user to quiz on"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoTopicException     If there are no instances of \u003ccode\u003eTopic\u003c/code\u003e available for the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                              program to quiz from"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoFlashcardException If there are no instances of \u003ccode\u003eFlashcard\u003c/code\u003e available for the"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                              program to quiz from"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private void startQuiz(Subject subject) throws NoTopicException, NoFlashcardException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        SubjectQuiz subjectQuiz \u003d new SubjectQuiz(subject);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        subjectQuiz.startQuiz();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 32,
      "CookieHoodie": 21,
      "jialerk": 27
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/ResultSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.InvalidSubjectException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.NoSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class ResultSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(ResultSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public ResultSubjectCommand(String fullcommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Shows results of the quiz of a \u003ccode\u003eSubject\u003c/code\u003e in a \u003ccode\u003eSubjectList\u003c/code\u003e."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList An instance of the \u003ccode\u003eSubjectList\u003c/code\u003e class to get the results from"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage     Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                    from an abstract class"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) throws"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            NoSubjectException, InvalidSubjectException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Begin finding the subject for which the results feature has to be called.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (message.length \u003d\u003d 1 || message[1].isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidSubjectException(Ui.INVALID_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Subject resultSubject \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (subject.toString().equals(message[1].strip())) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                resultSubject \u003d subject;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (resultSubject \u003d\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoSubjectException(Ui.NO_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assert (resultSubject !\u003d null) : \"No such subject exists!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printSubjectResults(resultSubject);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Finished reading the command to find the subject for the results feature.Now, the \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"application prints the results.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The subject is %s\", resultSubject.getTitle()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 27,
      "CookieHoodie": 9,
      "jialerk": 24
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/SorrySubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SorrySubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Throws an exception to show invalid user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList           Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                              from an abstract class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage               Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                              from an abstract class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws FailedParseException If user input is invalid"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) throws FailedParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        throw new FailedParseException(Ui.FAILED_PARSE_EXCEPTION);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 3,
      "jialerk": 28
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/SubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.flashcard.NoFlashcardException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.InvalidSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.NoSubjectException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.topic.NoTopicException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.RepeatedSubjectException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public abstract class SubjectCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public abstract void execute(SubjectList subjectList, Storage storage) throws NoSubjectException,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            RepeatedSubjectException, InvalidSubjectException, FailedParseException, IOException, NoTopicException,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            NoFlashcardException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 11,
      "jialerk": 15
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/AddDeadlineCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.exception.task.RepeatedDateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.task.TaskDeadlineException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddDeadlineCommand extends TaskCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddDeadlineCommand(String fullCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eDeadline\u003c/code\u003e class into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList An instance of the \u003ccode\u003eTaskList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws TaskDeadlineException If there are no parameters written to initialise the creation of a new Deadline"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *                               class"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void execute(TaskList taskList) throws TaskDeadlineException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 9;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.indexOf(\"/by\") - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfBy \u003d fullCommand.indexOf(\"/by\") + 4;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfBy \u003d fullCommand.length();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new TaskDeadlineException(Ui.DEADLINE_EXCEPTION);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String message \u003d fullCommand.substring(startOfMessage, endOfMessage).strip();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String by \u003d fullCommand.substring(startOfBy, endOfBy);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HH:mm d-MM-yyyy\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(by, format);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message.isEmpty() || by.isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new TaskDeadlineException(Ui.DEADLINE_EXCEPTION);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Task temp \u003d new Deadline(message, false, dateTime);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().add(temp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        taskList.getList().sort(Comparator.comparing(Task::getDateTime));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printTask(temp, taskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 15,
      "CookieHoodie": 11,
      "jialerk": 33
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/AddEventCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.exception.task.RepeatedDateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.task.TaskEventException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddEventCommand extends TaskCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddEventCommand(String fullCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Adds an instance of an \u003ccode\u003eEvent\u003c/code\u003e class into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList An instance of the \u003ccode\u003eTaskList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws TaskEventException If there are no parameters written to initialise the creation of a new Event class"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void execute(TaskList taskList) throws TaskEventException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 6;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.indexOf(\"/at\") - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfAt \u003d fullCommand.indexOf(\"/at\") + 4;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfAt \u003d fullCommand.length();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new TaskEventException(Ui.EVENT_EXCEPTION);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String message \u003d fullCommand.substring(startOfMessage, endOfMessage).strip();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String at \u003d fullCommand.substring(startOfAt, endOfAt);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HH:mm d-MM-yyyy\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(at, format);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message.isEmpty() || at.isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new TaskEventException(Ui.EVENT_EXCEPTION);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Task temp \u003d new Event(message, false, dateTime);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().add(temp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        taskList.getList().sort(Comparator.comparing(Task::getDateTime));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printTask(temp, taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 15,
      "CookieHoodie": 10,
      "jialerk": 35
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/AddTodoCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.task.TaskTodoException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddTodoCommand extends TaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddTodoCommand(String fullCommand) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eTodo\u003c/code\u003e class into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList An instance of the \u003ccode\u003eTaskList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws TaskTodoException If there are no parameters written to initialise the creation of a new Todo class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws TaskTodoException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 5;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.length();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new TaskTodoException(Ui.TODO_EXCEPTION);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String message \u003d fullCommand.substring(startOfMessage, endOfMessage).strip();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message.isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new TaskTodoException(Ui.TODO_EXCEPTION);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Task temp \u003d new Todo(message, false);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            taskList.getList().add(temp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printTask(temp, taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "syncode98": 6,
      "CookieHoodie": 6,
      "jialerk": 37
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/DeleteTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DeleteTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public DeleteTaskCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Deletes a Task in a \u003ccode\u003etaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList the \u003ccode\u003eTaskList\u003c/code\u003e instance of the TaskList class for the user to delete from"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws NumberFormatException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int number \u003d Integer.valueOf(message[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Task task \u003d taskList.getList().get(number - 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().remove(number - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printDelete(task, taskList.getList().size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 6,
      "jialerk": 29
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/DoneTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " * Allows marking a \u003ccode\u003eTask\u003c/code\u003e in a \u003ccode\u003eTaskList\u003c/code\u003e as done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DoneTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public DoneTaskCommand(String fullCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Marks a \u003ccode\u003eTask\u003c/code\u003e in a \u003ccode\u003eTaskList\u003c/code\u003e as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param taskList the \u003ccode\u003eTaskList\u003c/code\u003e instance of the TaskList class for the user to obtain the Task in the"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *                 TaskList specified by the user and set it as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws NumberFormatException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int number \u003d Integer.valueOf(message[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().get(number - 1).markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printDone(taskList.getList().get(number - 1));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 9,
      "jialerk": 28
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/ExitTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ExitTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 1,
      "CookieHoodie": 9,
      "jialerk": 10
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/FindTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class FindTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public FindTaskCommand(String fullcommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printFindTask(taskList,message[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 2,
      "jialerk": 23
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/ListTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": " * A class that allows the user to list down the tasks they input into the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ListTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void execute(Subject subject) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printTaskList(subject);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 16,
      "rashien3": 2
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/SorryTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SorryTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute() throws FailedParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        throw new FailedParseException(Ui.FAILED_PARSE_EXCEPTION);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 2,
      "jialerk": 18
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/TaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.exception.task.RepeatedDateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.task.TaskDeadlineException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.task.TaskEventException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.task.TaskTodoException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws TaskEventException,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            TaskTodoException, TaskDeadlineException, FailedParseException, RepeatedDateTimeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "CookieHoodie": 2,
      "jialerk": 16
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/AccessTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.flashcard.FlashcardCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.flashcard.ListAllFlashcardCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.topic.NoTopicException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.parser.FlashcardParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AccessTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private SubjectList subjectList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AccessTopicCommand(String fullcommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) throws NoTopicException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Topic gotoTopic \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (message[1].isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoTopicException(Ui.TOPIC_NOT_FOUND_EXCEPTION);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (topic.getTitle().equals(message[1].strip())) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                gotoTopic \u003d topic;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (gotoTopic \u003d\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoTopicException(Ui.TOPIC_NOT_FOUND_EXCEPTION);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        goToTopic(gotoTopic);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private void goToTopic(Topic topic) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printGoToTopic(topic);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        boolean isTopicExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        while (!isTopicExit) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                FlashcardCommand c \u003d FlashcardParser.parse(fullCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                isTopicExit \u003d c.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                if (c instanceof ListAllFlashcardCommand) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((ListAllFlashcardCommand) c).setSubjectList(subjectList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                c.execute(topic);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Ui.printErrorMsg(Ui.INDEX_FORMAT_EXCEPTION);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Ui.printErrorMsg(Ui.INDEX_OUT_OF_BOUND_EXCEPTION);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Ui.printError(e);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printBackToTopicsAndTasks();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void setSubjectList(SubjectList subjectList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.subjectList \u003d subjectList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 4,
      "sugandha929": 4,
      "CookieHoodie": 20,
      "jialerk": 7,
      "rashien3": 34
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/AddTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TopicList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.exception.topic.InvalidTopicException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topic.RepeatedTopicException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": " * Adds an instance of the \u003ccode\u003eTopic\u003c/code\u003e class into a \u003ccode\u003eTopicList\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class AddTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public AddTopicCommand(String fullCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) throws RepeatedTopicException, InvalidTopicException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int startOfMessage \u003d 4;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int endOfMessage \u003d fullCommand.length();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidTopicException(Ui.INVALID_TOPIC_EXCEPTION);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String title \u003d fullCommand.substring(startOfMessage, endOfMessage).strip();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (title.isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidTopicException(Ui.INVALID_TOPIC_EXCEPTION);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic topic : topicList.getList()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (topic.getTitle().equals(title)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                throw new RepeatedTopicException(Ui.REPEATED_TOPIC_EXCEPTION);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Topic t \u003d new Topic(title);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        topicList.add(t);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printTopic(t, topicList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 4,
      "CookieHoodie": 7,
      "jialerk": 3,
      "rashien3": 37
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/DeleteTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TopicList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class DeleteTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public DeleteTopicCommand(String fullCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Deletes a Task in a \u003ccode\u003etaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subject the \u003ccode\u003eSubject\u003c/code\u003e instance of the Subject class for the user to delete from"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) throws NumberFormatException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int number \u003d Integer.parseInt(message[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Topic topic \u003d topicList.getList().get(number - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        topicList.getList().remove(number - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printTopicDelete(topic, topicList.getList().size());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 3,
      "jialerk": 3,
      "rashien3": 32
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/ExitTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.topic.InvalidTopicException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.topic.NoTopicException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.topic.RepeatedTopicException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ExitTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) throws NoTopicException, InvalidTopicException,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            FailedParseException, RepeatedTopicException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 10,
      "CookieHoodie": 13,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/FindTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.topic.InvalidTopicException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.FindTaskCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class FindTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public FindTopicCommand(String fullcommand) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) throws InvalidTopicException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (message.length \u003c\u003d 1 || message[1].isEmpty()) {  // empty argument"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidTopicException(Ui.INVALID_TOPIC_EXCEPTION);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Ui.printFindTopic(topicList, message[1].strip());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        FindTaskCommand findTaskCommand \u003d new FindTaskCommand(this.fullcommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        findTaskCommand.execute(subject.getTasks());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 11,
      "jialerk": 3,
      "rashien3": 22
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/HelpTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.command.topic.TopicCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class HelpTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printTopicHelp();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sugandha929": 20,
      "CookieHoodie": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/ListAllTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class ListAllTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private SubjectList subjectList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(ListAllTopicCommand.class.getName());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * List all subjects, topics, tasks, and flashcards."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subject subject the user is currently looking at"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void execute(Subject subject) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Begin listing all while looking at subject.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printAll(subjectList.getList(), subject,null);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Finished listing all while looking at subject.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void setSubjectList(SubjectList subjectList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.subjectList \u003d subjectList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 35
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/ListTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class ListTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printTopicList(subject);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printTaskList(subject);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 2,
      "jialerk": 3,
      "rashien3": 12
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/QuizTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.quiz.TopicQuiz;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.command.subject.QuizSubjectCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.flashcard.NoFlashcardException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topic.InvalidTopicException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topic.NoTopicException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class QuizTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(QuizTopicCommand.class.getName());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public QuizTopicCommand(String fullcommand) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String getFullcommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.fullcommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) throws NoTopicException, InvalidTopicException, NoFlashcardException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Begin finding the topic for which the quiz has to be conducted.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (message.length \u003c\u003d 1 || message[1].isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidTopicException(Ui.INVALID_TOPIC_EXCEPTION);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Topic quizTopic \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (topic.toString().equals(message[1].strip())) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                quizTopic \u003d topic;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (quizTopic \u003d\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoTopicException(Ui.TOPIC_NOT_FOUND_EXCEPTION);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Finish reading the command to find the topic for the quiz feature\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The subject is %s\",quizTopic.getTitle()));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        startQuiz(quizTopic);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private void startQuiz(Topic topic) throws NoFlashcardException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        TopicQuiz topicQuiz \u003d new TopicQuiz(topic);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        topicQuiz.startQuiz();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 35,
      "CookieHoodie": 16,
      "jialerk": 5
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/ResultTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topic.InvalidTopicException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topic.NoTopicException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class ResultTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(QuizTopicCommand.class.getName());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public ResultTopicCommand(String fullcommand) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) throws NoTopicException, InvalidTopicException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Begin finding the topic for which the results feature has to be called.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (message.length \u003d\u003d 1 || message[1].isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidTopicException(Ui.INVALID_TOPIC_EXCEPTION);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Topic resultTopic \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (topic.toString().equals(message[1].strip())) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                resultTopic \u003d topic;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (resultTopic \u003d\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoTopicException(Ui.TOPIC_NOT_FOUND_EXCEPTION);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Finish reading the command to find the topic for the result feature.Now, the \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"application prints\" + \"the results.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The subject is %s\", resultTopic.getTitle()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printTopicResults(resultTopic);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 29,
      "CookieHoodie": 8,
      "jialerk": 5
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/SorryTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class SorryTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) throws FailedParseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        throw new FailedParseException(Ui.FAILED_PARSE_EXCEPTION);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 3,
      "jialerk": 4,
      "rashien3": 15
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/TopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.flashcard.NoFlashcardException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.NoSubjectException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.RepeatedSubjectException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topic.InvalidTopicException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topic.NoTopicException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topic.RepeatedTopicException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public abstract class TopicCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public abstract void execute(Subject subject) throws NoTopicException, InvalidTopicException,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            FailedParseException, RepeatedTopicException, NoFlashcardException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 5,
      "jialerk": 16
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/FailedParseException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class FailedParseException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public FailedParseException(String failedParseError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(failedParseError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/flashcard/InvalidFlashcardException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class InvalidFlashcardException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public InvalidFlashcardException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/flashcard/NoFlashcardException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class NoFlashcardException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public NoFlashcardException(String noFlashcardsError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(noFlashcardsError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/flashcard/RepeatedFlashcardException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class RepeatedFlashcardException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public RepeatedFlashcardException(String repeatedFlashcardError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(repeatedFlashcardError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/storage/DataLoadingException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class DataLoadingException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public DataLoadingException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public DataLoadingException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 11
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/subject/InvalidSubjectException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class InvalidSubjectException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public InvalidSubjectException(String invalidSubjectError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(invalidSubjectError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/subject/NoSubjectException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class NoSubjectException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public NoSubjectException(String noSubjectError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(noSubjectError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/subject/RepeatedSubjectException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class RepeatedSubjectException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public RepeatedSubjectException(String repeatedSubjectError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(repeatedSubjectError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/task/RepeatedDateTimeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "syncode98"
        },
        "content": "package seedu.revised.exception.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class RepeatedDateTimeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public RepeatedDateTimeException(String printDateTimeError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        super(printDateTimeError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/task/TaskDeadlineException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskDeadlineException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public TaskDeadlineException(String taskDeadlineError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(taskDeadlineError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/task/TaskEventException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskEventException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public TaskEventException(String taskEventError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(taskEventError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/task/TaskTodoException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskTodoException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public TaskTodoException(String taskTodoError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(taskTodoError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/topic/InvalidTopicException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class InvalidTopicException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public InvalidTopicException(String enterTopicError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(enterTopicError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/topic/NoTopicException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class NoTopicException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public NoTopicException(String noTopicsError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(noTopicsError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/topic/RepeatedTopicException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class RepeatedTopicException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public RepeatedTopicException(String repeatedTopicError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(repeatedTopicError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/list/BaseList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public abstract class BaseList\u003cT\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    protected List\u003cT\u003e list;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public BaseList(List\u003cT\u003e list) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Adds an item into the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param item The item to add into the list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void add(T item) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        list.add(item);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Gets the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return the list of items"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public List\u003cT\u003e getList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 29
    }
  },
  {
    "path": "src/main/java/seedu/revised/list/ResultList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.quiz.Result;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class ResultList extends BaseList\u003cResult\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public ResultList(List\u003cResult\u003e resultList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(resultList);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 11
    }
  },
  {
    "path": "src/main/java/seedu/revised/list/SubjectList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class SubjectList extends BaseList\u003cSubject\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public SubjectList(List\u003cSubject\u003e subjectList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(subjectList);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 11
    }
  },
  {
    "path": "src/main/java/seedu/revised/list/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class TaskList extends BaseList\u003cTask\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 12
    }
  },
  {
    "path": "src/main/java/seedu/revised/list/TopicList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class TopicList extends BaseList\u003cTopic\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public TopicList(List\u003cTopic\u003e topics) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(topics);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Gets the \u003ccode\u003eTopic\u003c/code\u003e at the index."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param index index number of the topic"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return \u003ccode\u003eTopic\u003c/code\u003e with the index number"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Topic get(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return this.list.get(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 21
    }
  },
  {
    "path": "src/main/java/seedu/revised/parser/FlashcardParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.flashcard.AddFlashcardCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.flashcard.ExitFlashcardCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.flashcard.FlashcardCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.flashcard.ListAllFlashcardCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.flashcard.ListFlashcardCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.flashcard.DeleteFlashcardCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.flashcard.SorryFlashcardCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.command.flashcard.HelpFlashcardCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class FlashcardParser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Parses the inputs provided by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @param fullCommand input by the user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return returns a command instance to execute a command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static FlashcardCommand parse(String fullCommand) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String[] tokens \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String command \u003d tokens[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (fullCommand.equals(\"exit\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new ExitFlashcardCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new ListFlashcardCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } else if (fullCommand.equals(\"list all\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new ListAllFlashcardCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } else if (command.equals(\"add\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new AddFlashcardCommand(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new DeleteFlashcardCommand(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        } else if (fullCommand.equals(\"help\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new HelpFlashcardCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new SorryFlashcardCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 1,
      "sugandha929": 24,
      "CookieHoodie": 11,
      "jialerk": 1,
      "rashien3": 3
    }
  },
  {
    "path": "src/main/java/seedu/revised/parser/SubjectParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.subject.ListAllSubjectCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.AddSubjectCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.DeleteSubjectCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.ExitSubjectCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subject.ExportSubjectCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.FindSubjectCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.ListSubjectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subject.AccessSubjectCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.SorrySubjectCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.SubjectCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.QuizSubjectCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.ResultSubjectCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.command.subject.HelpSubjectCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": " * Allows the parsing of inputs provided by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SubjectParser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Parses the inputs provided by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param fullCommand input by the user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return returns a command instance to execute a command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static SubjectCommand parse(String fullCommand) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String[] tokens \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String command \u003d tokens[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ExitSubjectCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ListSubjectCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } else if (fullCommand.equals(\"list all\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new ListAllSubjectCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } else if (fullCommand.equals(\"export\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ExportSubjectCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } else if (command.equals(\"add\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new DeleteSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new FindSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        } else if (fullCommand.equals(\"help\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new HelpSubjectCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } else if (command.equals(\"subject\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AccessSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } else if (command.equals(\"quiz\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            return new QuizSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } else if (command.equals(\"results\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            return new ResultSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new SorrySubjectCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "sugandha929": 3,
      "CookieHoodie": 19,
      "jialerk": 31,
      "rashien3": 3
    }
  },
  {
    "path": "src/main/java/seedu/revised/parser/TaskParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.DeleteTaskCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.DoneTaskCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.ExitTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.FindTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.ListTaskCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.SorryTaskCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.TaskCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskParser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Parses the inputs provided by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param fullCommand input by the user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return returns a command instance to execute a command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static TaskCommand parse(String fullCommand) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ExitTaskCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new DoneTaskCommand(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ListTaskCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddTodoCommand(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddDeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddEventCommand(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new DeleteTaskCommand(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new FindTaskCommand(fullCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new SorryTaskCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "sugandha929": 1,
      "CookieHoodie": 10,
      "jialerk": 31
    }
  },
  {
    "path": "src/main/java/seedu/revised/parser/TopicParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.AddDeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.AddEventCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.AddTodoCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.DeleteTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.DoneTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.topic.ListAllTopicCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.QuizTopicCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.AddTopicCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.ExitTopicCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.ListTopicCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.command.topic.ResultTopicCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.SorryTopicCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.DeleteTopicCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.FindTopicCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topic.AccessTopicCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.command.topic.HelpTopicCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": " * Parses the commands on the topic level."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class TopicParser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Parses the inputs provided by the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param fullCommand input by the user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return returns a command instance to execute a command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        switch (message[0]) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (fullCommand.equals(\"exit\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new ExitTopicCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new SorryTopicCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new ListTopicCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else if (fullCommand.equals(\"list all\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new ListAllTopicCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new SorryTopicCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            String [] commands \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (message[1].equals(\"topic\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new DeleteTopicCommand(commands[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else if (message[1].equals(\"task\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new DeleteTaskCommand(commands[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new SorryTopicCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new FindTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        case \"quiz\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            return new QuizTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        case \"results\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            return new ResultTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"topic\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AccessTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddTodoCommand(fullCommand);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddDeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddEventCommand(fullCommand);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new DoneTaskCommand(fullCommand);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            if (fullCommand.equals(\"help\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                return new HelpTopicCommand();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                return new SorryTopicCommand();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new SorryTopicCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 7,
      "sugandha929": 8,
      "CookieHoodie": 12,
      "jialerk": 4,
      "rashien3": 57
    }
  },
  {
    "path": "src/main/java/seedu/revised/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.JsonSyntaxException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.storage.DataLoadingException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.quiz.Result;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final File baseDir;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final File exportDir;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String flashcardFilename;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String taskFilename;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String resultFilename;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String exportFilename;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String topicResultFilename;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String subjectResultFilename;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(Storage.class.getName());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private Storage(StorageBuilder builder) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.baseDir \u003d new File(builder.baseDir);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.exportDir \u003d new File(builder.exportDir);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.flashcardFilename \u003d builder.flashcardFilename;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.taskFilename \u003d builder.taskFilename;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.resultFilename \u003d builder.resultFilename;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.exportFilename \u003d builder.exportFilename;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String capResultFilename \u003d resultFilename.substring(0, 1).toUpperCase() + resultFilename.substring(1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.topicResultFilename \u003d \"topic\" + capResultFilename;  // prepend topic to resultFilename"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.subjectResultFilename \u003d \"subject\" + capResultFilename;  // prepend subject to resultFilename"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Loads and populates subject data from the storage. Subjects and topics will be sorted by their titles in"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * alphabetical order."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws DataLoadingException if fails to load the saved data due to filesystem error"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public List\u003cSubject\u003e loadSubjects() throws DataLoadingException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Loading subject data and its contents from the disk.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cSubject\u003e subjects;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (!baseDir.exists()) {  // if the data hasn\u0027t been saved before"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.info(String.format(\"%s folder is not found, no saved data is loaded.\", baseDir.getAbsolutePath()));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            subjects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File[] subjectDirs \u003d baseDir.listFiles(File::isDirectory);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (subjectDirs \u003d\u003d null) {  // error in getting the directories even if they may exist"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                throw new DataLoadingException(Ui.DATA_LOADING_EXCEPTION);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            subjects \u003d loadSubjects(subjectDirs);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish loading subject data.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Returning subjects: %s.\", subjects));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return subjects;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Creates a list of subjects from the saved directories and populates each subject with existing topics, results,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * and flashcards. Subjects and topics will be sorted by their titles in alphabetical order."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectDirs directories of subjects saved previously"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated subjects loaded from the disk"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws DataLoadingException if fails to load the saved data due to filesystem error"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cSubject\u003e loadSubjects(File[] subjectDirs) throws DataLoadingException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Loading subject data from the directories: %s.\", Arrays.toString(subjectDirs)));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cSubject\u003e subjects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (File subjectDir : subjectDirs) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File[] topicDirs \u003d subjectDir.listFiles(File::isDirectory);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (topicDirs \u003d\u003d null) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                throw new DataLoadingException(Ui.DATA_LOADING_EXCEPTION);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cTopic\u003e topics \u003d loadTopics(topicDirs);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                tasks \u003d loadTasks(subjectDir.toPath());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                if (e instanceof FileNotFoundException) {  // task file may have been deleted by the user intentionally"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    logger.info(String.format(\"Task file is not found under %s, \""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                            + \"proceeding with an empty task list.\", subjectDir.getAbsolutePath()));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                } else {  // task file content may have been corrupted by the user"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    String errMessage \u003d Ui.fileSyntaxErrorMsg(\"task\", subjectDir.getAbsolutePath());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    logger.log(Level.WARNING, errMessage, e);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    Ui.printErrorMsg(errMessage);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(subjectDir.toString(), getSubjectResultFilename());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cResult\u003e results \u003d loadResults(resultFile);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Subject subject \u003d new Subject(subjectDir.getName(), topics, tasks, results);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            subjects.add(subject);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        subjects.sort(Comparator.comparing(Subject::getTitle));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Finish loading subject data. Subjects: %s.\", subjects));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return subjects;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Creates a list of topics from the saved directories and populates each topic with the existing flashcards"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * and results. Topics will be sorted by their titles in alphabetical order."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param topicDirs directories of topics saved previously"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated topics loaded from the disk"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cTopic\u003e loadTopics(File[] topicDirs) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Loading topic data from the directories: %s.\", Arrays.toString(topicDirs)));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cTopic\u003e topics \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (File topicDir : topicDirs) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File flashcardFile \u003d new File(topicDir, getFlashcardFilename());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(topicDir, getTopicResultFilename());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cFlashcard\u003e flashcards \u003d loadFlashcards(flashcardFile);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cResult\u003e results \u003d loadResults(resultFile);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Topic topic \u003d new Topic(topicDir.getName(), flashcards, results);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            topics.add(topic);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        topics.sort(Comparator.comparing(Topic::getTitle));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Finish loading topic data. Topics: %s.\", topics));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return topics;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Loads the json data in the file into an ArrayList of objects (of type specified)."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param type     the type of the object inside the json file"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param jsonFile the file that stores the flashcard data"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated objects with type specified loaded from the file"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws JsonSyntaxException if the file is not in json format or the content is corrupted"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static \u003cT\u003e List\u003cT\u003e loadFromJson(Type type, File jsonFile) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(String.format(\"Loading data of type %s from %s.\", type, jsonFile.getAbsolutePath()));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cT\u003e objects;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileReader fileReader \u003d new FileReader(jsonFile)) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            objects \u003d gson.fromJson(fileReader, type);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (IOException e) {  // file may have been deleted by the user"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.info(String.format(\"%s is not found, proceeding with returning an empty list.\","
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    jsonFile.getAbsolutePath()));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            objects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assert objects !\u003d null;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish loading data.\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Data: %s.\", objects));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return objects;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Loads the data in the file into an ArrayList of Flashcard."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param flashcardFile the file that stores the flashcard data"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated flashcards loaded from the file"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cFlashcard\u003e loadFlashcards(File flashcardFile) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Loading flashcards from %s.\", flashcardFile));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Type objectType \u003d new TypeToken\u003cArrayList\u003cFlashcard\u003e\u003e() {}.getType();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cFlashcard\u003e flashcards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            flashcards \u003d loadFromJson(objectType, flashcardFile);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (JsonSyntaxException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            String errMessage \u003d Ui.fileSyntaxErrorMsg(\"flashcard\", flashcardFile.getAbsolutePath());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.log(Level.WARNING, errMessage, e);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Ui.printErrorMsg(errMessage);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Finish loading flashcards: %s.\", flashcards));"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return flashcards;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Loads the data in the file into an ArrayList of Result."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param resultFile the file that stores the result data"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated results loaded from the file"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cResult\u003e loadResults(File resultFile) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Loading results from %s.\", resultFile));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Type objectType \u003d new TypeToken\u003cArrayList\u003cResult\u003e\u003e() {}.getType();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cResult\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            results \u003d loadFromJson(objectType, resultFile);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (JsonSyntaxException e) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            String errMessage \u003d Ui.fileSyntaxErrorMsg(\"result\", resultFile.getAbsolutePath());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.log(Level.WARNING, errMessage, e);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Ui.printErrorMsg(errMessage);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Finish loading results: %s.\", results));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Saves the subjects along with all the contents into the storage. Quiz results under the subject will"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * also be saved. Note that all of the storage content will be cleared before storing of data happens so that"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * deletion of subjects and topics will be reflected."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjects subjects to be saved"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if fails to save to the storage"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void saveSubjects(List\u003cSubject\u003e subjects) throws IOException {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Clearing old data.\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        clearData();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish clearing old data.\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Saving the subject data to the disk.\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Subjects: %s.\", subjects));"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assert subjects !\u003d null;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Path subjectPath \u003d Paths.get(getBaseDir().toString(), subject.getTitle());"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Files.createDirectories(subjectPath);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(subjectPath.toString(), getSubjectResultFilename());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveToJson(resultFile, subject.getResults().getList());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveTasks(subjectPath, subject.getTasks().getList());"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveTopics(subjectPath, subject.getTopics().getList());"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish saving the subjects to the disk.\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Saves the topics along with all the contents into the storage. If the topic has no flashcards in it, the file"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * with name {@link Storage#getFlashcardFilename()} with an empty square bracket will be created under it. Similarly"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * , the quiz result will be stored under the path with name {@link Storage#getTopicResultFilename()}."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectPath subject directory where topics will be stored under"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param topics      topics to be saved"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if fails to save to the storage"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void saveTopics(Path subjectPath, List\u003cTopic\u003e topics) throws IOException {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assert topics !\u003d null;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(String.format(\"Saving list of topics to %s.\", subjectPath.toAbsolutePath()));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Topics: %s.\", topics));"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Path topicPath \u003d Paths.get(subjectPath.toString(), topic.getTitle());"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Files.createDirectories(topicPath);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File flashcardFile \u003d new File(topicPath.toString(), getFlashcardFilename());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(topicPath.toString(), getTopicResultFilename());"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveToJson(flashcardFile, topic.getFlashcards());"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveToJson(resultFile, topic.getResults().getList());"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish saving the list of topics.\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Save the contents of the list of objects to the file path provided."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * This overwrites the content of the file if it already exists."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param jsonFile File where the objects will be stored into as json"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param objects  list of objects"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if fails to save to the storage"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static \u003cT\u003e void saveToJson(File jsonFile, List\u003cT\u003e objects) throws IOException {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(String.format(\"Saving list of data to %s.\", jsonFile.getAbsolutePath()));"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Objects: %s.\", objects));"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(jsonFile)) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            gson.toJson(objects, fileWriter);  // store the json to file"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            fileWriter.flush();  // flush to actually write the content"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish saving the list of data.\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Delete the directory and all its content."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param directory the directory to be deleted"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if any of the file fails to be deleted"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static void deleteDirectory(Path directory) throws IOException {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(String.format(\"Deleting directory: %s.\", directory.toString()));"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (Stream\u003cPath\u003e fileStream \u003d Files.walk(directory)) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            fileStream"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    .sorted(Comparator.reverseOrder())"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    .map(Path::toFile)"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    .forEach(File::delete);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish deleting the directory.\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Delete baseDir and its contents."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if any of the file fails to be deleted"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private void clearData() throws IOException {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Clearing the directory %s.\", getBaseDir().getAbsolutePath()));"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (getBaseDir().exists()) {  // only delete if the folder exists to avoid error"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Path dataFolder \u003d Paths.get(getBaseDir().toString());"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            deleteDirectory(dataFolder);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(\"Finish clearing the directory.\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Saves the tasks into the file with name {@link Storage#getTaskFilename()} under the subjectPath."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * This overwrites the content of the file if it already exists."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectPath subject directory where the tasks will be stored under"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if there is an error writing to the file"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void saveTasks(Path subjectPath, List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File taskFile \u003d new File(subjectPath.toString(), getTaskFilename());"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(String.format(\"Saving tasks to %s\", taskFile.getAbsolutePath()));"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(taskFile)) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String type \u003d null;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String done \u003d task.getIsDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String datetime \u003d null;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    type \u003d \"T\";"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    type \u003d \"D\";"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    datetime \u003d ((Deadline) task).getDateTimeDescription();"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    type \u003d \"E\";"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    datetime \u003d ((Event) task).getDateTimeDescription();"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    assert false : \"Unknown tasks have not been accounted for.\";"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                fileWriter.write(type + \" | \" + done + \" | \" + task.getDescription());"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                if (datetime !\u003d null) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    fileWriter.write(\" | \" + datetime);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                fileWriter.write(\"\\n\");"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish saving tasks.\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Reads the task file contents under the specified subject into a list of tasks."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectPath subject directory where the tasks were stored under"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of previously saved tasks"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws FileNotFoundException when there are no files found"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public List\u003cTask\u003e loadTasks(Path subjectPath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File taskFile \u003d new File(subjectPath.toString(), getTaskFilename());"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(String.format(\"Loading tasks from %s.\", taskFile.getAbsolutePath()));"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (Scanner scan \u003d new Scanner(taskFile)) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            while (scan.hasNextLine()) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String content \u003d scan.nextLine();"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String[] contents \u003d content.split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String type \u003d contents[0].trim();"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                boolean done \u003d Integer.parseInt(contents[1].trim()) \u003d\u003d 1;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String description \u003d contents[2].trim();"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String datetimeStr;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                LocalDateTime dateTime \u003d null;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM yyyy\");"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                if (type.equals(\"D\") || type.equals(\"E\")) {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    datetimeStr \u003d contents[3].trim();"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    dateTime \u003d LocalDateTime.parse(datetimeStr, format);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    tasks.add(new Todo(description, done));"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    tasks.add(new Deadline(description, done, dateTime));"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    tasks.add(new Event(description, done, dateTime));"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    assert false : type;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish loading tasks.\");"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Tasks: %s.\", tasks));"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Export the subjects with all their contents into one json file. The file location is specified by"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * {@link Storage#getExportDir()}/{@link Storage#getExportFilename()}."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjects list of subjects to be saved to the storage"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return the file that the data has been exported to"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if fails to save to the file"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public File export(List\u003cSubject\u003e subjects) throws IOException {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File file \u003d new File(getExportDir().toString(), getExportFilename());"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(String.format(\"Exporting the subject data to %s.\", file.getAbsolutePath()));"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Files.createDirectories(getExportDir().toPath());  // create export directory"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        saveToJson(file, subjects);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish exporting data.\");"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public File getBaseDir() {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return baseDir;"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public File getExportDir() {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return exportDir;"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getFlashcardFilename() {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return flashcardFilename;"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getTaskFilename() {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return taskFilename;"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getResultFilename() {"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return resultFilename;"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getExportFilename() {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return exportFilename;"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getTopicResultFilename() {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return topicResultFilename;"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getSubjectResultFilename() {"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return subjectResultFilename;"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static class StorageBuilder {"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String baseDir;"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String exportDir;"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String flashcardFilename;"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String taskFilename;"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String resultFilename;"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String exportFilename;"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set baseDir property of the Storage to be built."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param baseDir the name of the directory to store the data into"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setBaseDir(String baseDir) {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.baseDir \u003d baseDir;"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set exportDir property of the Storage to be built."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param exportDir the name of the directory to export the data to"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setExportDir(String exportDir) {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.exportDir \u003d exportDir;"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set flashcardFilename property of the Storage to be built."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param flashcardFilename the name of the file to store all the flashcard info"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setFlashcardFilename(String flashcardFilename) {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.flashcardFilename \u003d flashcardFilename;"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set taskFilename property of the Storage to be built."
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param taskFilename the name of the file to store all the tasks under a subject"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setTaskFilename(String taskFilename) {"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.taskFilename \u003d taskFilename;"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set resultFilename property of the Storage to be built."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param resultFilename the name of the file to store all the results of quizzes"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setResultFilename(String resultFilename) {"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.resultFilename \u003d resultFilename;"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set exportFilename property of the Storage to be built."
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param exportFilename the name of the file that the data will be exported to"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setExportFilename(String exportFilename) {"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.exportFilename \u003d exportFilename;"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Build a Storage object with all the properties previously set. All the properties must be set before"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * calling this function or an exception will be thrown."
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @return a Storage object with all the properties set."
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public Storage build() {"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Storage storage \u003d new Storage(this);"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (storage.getBaseDir() \u003d\u003d null || storage.getExportDir() \u003d\u003d null"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    || storage.getFlashcardFilename() \u003d\u003d null || storage.getTaskFilename() \u003d\u003d null"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    || storage.getResultFilename() \u003d\u003d null || storage.getExportFilename() \u003d\u003d null) {"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return storage;"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 6,
      "CookieHoodie": 498,
      "jialerk": 45
    }
  },
  {
    "path": "src/main/java/seedu/revised/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.quiz.Result;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String LONG_DIVIDER \u003d \"_______________________________________________________________________\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            + \"___________________________________________________\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String LOGO \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            \"                                    ___________\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    + \"                                    |  __ |  _ \\\\\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    + \" ____  ______      _____   ________ |  |__| | | |\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    + \"|  __|/ __ \\\\ \\\\    / /| |  /  _____/ |   __| | | |\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    + \"| |  |  __/ \\\\ \\\\__/ / | | /_____  /  |  |__| |_| |\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    + \"| |   \\\\___|  \\\\____/  |_|/_______/   |_____|_____/\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String HELP_MESSAGE \u003d \"Type help for all available commands\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String OOPS_PREFIX \u003d \" ☹ OOPS!!!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String OOPS_SUFFIX \u003d \":-(\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String FAILED_PARSE_EXCEPTION \u003d OOPS_PREFIX + \" I\u0027m sorry, but I don\u0027t know what that means \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + OOPS_SUFFIX;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String NO_SUBJECT_EXCEPTION \u003d OOPS_PREFIX + \" I\u0027m sorry, but I can\u0027t find that subject \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + OOPS_SUFFIX;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String REPEATED_SUBJECT_EXCEPTION \u003d OOPS_PREFIX + \" I\u0027m sorry, but subject is already \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + \"in the list \" + OOPS_SUFFIX;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String REPEATED_TOPIC_EXCEPTION \u003d OOPS_PREFIX + \" I\u0027m sorry, but topic is already in the list \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + OOPS_SUFFIX;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String REPEATED_FLASHCARD_EXCEPTION \u003d OOPS_PREFIX + \" I\u0027m sorry, but flashcard is already \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + \"in the list \" + OOPS_SUFFIX;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String TODO_EXCEPTION \u003d OOPS_PREFIX + \" The format should be: todo \u003ctaskname\u003e\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String DEADLINE_EXCEPTION \u003d OOPS_PREFIX + \" The format should be: deadline \u003ctaskname\u003e /by \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + \"\u003cdatetime\u003e\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String EVENT_EXCEPTION \u003d OOPS_PREFIX + \" The format should be: event \u003ctaskname\u003e /at \u003cdatetime\u003e\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String INDEX_FORMAT_EXCEPTION \u003d OOPS_PREFIX + \" Invalid index format entered.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String INDEX_OUT_OF_BOUND_EXCEPTION \u003d OOPS_PREFIX + \" The index you entered does not exist.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String NO_FLASHCARD_EXCEPTION \u003d \"There are no flashcards present yet!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String NO_TOPIC_EXCEPTION \u003d \"There are no topics present yet!\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String TOPIC_NOT_FOUND_EXCEPTION \u003d OOPS_PREFIX + \" I\u0027m sorry, but I can\u0027t find that topic \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + OOPS_SUFFIX;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String INVALID_SUBJECT_EXCEPTION \u003d \"Please enter a subject!\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String INVALID_TOPIC_EXCEPTION \u003d \"Please enter a topic!\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String INVALID_FLASHCARD_EXCEPTION \u003d \"Please enter a valid flashcard!\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String INVALID_DATETIME_EXCEPTION \u003d \"Enter date and time in the following format: \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + \"HH:MM DD-MM-YYYY\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String DATA_LOADING_EXCEPTION \u003d \"Error loading saved data from the disk, \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + \"proceeding with clean state.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String WRITING_EXCEPTION \u003d \"Writing to file failed.\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static String readCommand() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printStart(SubjectList subjects) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Hello from\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Hello! I\u0027m revisED\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (subjects.getList().size() !\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            printUpcomingTasks(subjects);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Alright, What can I do for you?\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        printHelpMessage();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private static void printHelpMessage() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(HELP_MESSAGE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printSubjectList(List\u003cSubject\u003e list) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Here are the subject(s) in your list:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject item : list) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            System.out.println(num + \". \" + item);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            num++;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTaskList(Subject subject) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Here are the tasks(s) under \" + subject.getTitle() + \": \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TaskList taskList \u003d subject.getTasks();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Task t : taskList.getList()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            assert index \u003e 0;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(index + \". \" + t);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printDone(Task task) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\" Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"   \" + task);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printDelete(Task task, int total) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\" Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"   \" + task);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\" Now you have \" + total + (total \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printSubjectDelete(Subject subject, int total) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\" Noted. I\u0027ve removed this subject:\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"   \" + subject);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\" Now you have \" + total + (total \u003d\u003d 1 ? \" subject \" : \" subjects \") + \"in the list.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printBye() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(BYE_MESSAGE);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static void printError(Exception err) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static void printErrorMsg(String msg) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printFindTask(TaskList taskList, String find) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int taskPresent \u003d 0;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Task task : taskList.getList()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if (task.toString().contains(find)) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                if (taskPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printTaskMatch(taskPresent);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                System.out.println(task);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                taskPresent \u003d 1;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assert (taskPresent \u003d\u003d 1 || taskPresent \u003d\u003d 0);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (taskPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\" Sorry! I could not find any task with \" + find + \" in the list.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printFindSubject(SubjectList subjectList, String find) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int subjectPresent \u003d 0;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if (subject.toString().contains(find)) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                if (subjectPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printSubjectMatch(subjectPresent);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                System.out.println(subject);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                subjectPresent \u003d 1;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assert (subjectPresent \u003d\u003d 1 || subjectPresent \u003d\u003d 0);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (subjectPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            System.out.println(\" Sorry! I could not find any subject with \" + find + \" in the list.\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printSubjectMatch(int subjectPresent) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (subjectPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            System.out.println(\" Here are the matching subject(s) in your list:\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printTaskMatch(int taskPresent) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (taskPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            System.out.println(\" Here are the matching task(s) in your list:\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printGoToSubject(Subject subject) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"You are currently looking at the subject: \" + subject.toString());"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        printHelpMessage();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printBackToSubjects() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Going back to the subjects list.\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTopicList(Subject subject) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Here are the topic(s) under \" + subject.getTitle() + \": \");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic t : topicList.getList()) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            assert index \u003e 0;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(index + \". \" + t);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printTopicMatch(int topicPresent) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (topicPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            System.out.println(\" Here are the matching topic(s) in your list:\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printFindTopic(TopicList topicList, String query) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int topicPresent \u003d 0;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic topic : topicList.getList()) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (topic.toString().contains(query)) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                if (topicPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printTopicMatch(topicPresent);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                System.out.println(topic);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                topicPresent \u003d 1;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assert (topicPresent \u003d\u003d 1 || topicPresent \u003d\u003d 0);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (topicPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            System.out.println(\" Sorry! I could not find any topics with \" + query + \" in the list.\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printGoToTopic(Topic topic) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"You are currently looking at the topic: \" + topic.getTitle());"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        printHelpMessage();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTopicDelete(Topic topic, int total) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\" Noted. I\u0027ve removed this topic:\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"   \" + topic);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\" Now you have \" + total + (total \u003d\u003d 1 ? \" topic \" : \" topics \" + \"in the list.\"));"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static void printFlashcardDelete(Flashcard flashcard, int total) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\" Noted. I\u0027ve removed this flashcard:\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"   \" + flashcard.getQuestion() + \"; \" + flashcard.getAnswer());"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\" Now you have \" + total + (total \u003d\u003d 1 ? \" flashcard \" : \" flashcards \" + \"in the list.\"));"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static void printFlashcardList(Topic topic) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Here are the flashcard(s) under \" + topic.getTitle() + \": \");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        for (Flashcard t : topic.getFlashcards()) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            assert index \u003e 0;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            System.out.println(index + \". \" + t.getQuestion() + \"; \" + t.getAnswer());"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printScore(Result result) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Result:\" + result);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printIncorrectAnswers(List\u003cString\u003e incorrectAnswers) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Here are the questions which you got wrong.\");"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (int i \u003d 0; i \u003c incorrectAnswers.size(); i +\u003d 3) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"Question:\" + incorrectAnswers.get(i));"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"Correct Answer: \" + incorrectAnswers.get(i + 1));"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"Your Answer: \" + incorrectAnswers.get(i + 2));"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printStartSubjectQuiz(Subject subject) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"You are about to begin the quiz for \" + subject + \".You have 2 minutes.\");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printStartTopicQuiz(Topic topic) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"You are about to begin the quiz for \" + topic + \".You have 1 minute.\");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printStopQuiz() {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"The quiz has been stopped!\");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printEndQuiz() {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"The quiz has ended\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printSubjectResults(Subject subject) {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (subject.getResults().getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"You do not have any results!\");"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            for (Result result : subject.getResults().getList()) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                assert index \u003e 0;"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                System.out.println(\"Quiz \" + index + \": \" + result);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printSubject(Subject subject, SubjectList subjectList) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this subject:\");"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"  \" + subject);"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Now you have \" + subjectList.getList().size() + (subjectList.getList().size() \u003d\u003d 1"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                ? \" subject \" : \" subjects \") + \"in the list.\");"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printTopic(Topic topic, TopicList topicList) {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this topic:\");"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"  \" + topic);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Now you have \" + topicList.getList().size() + (topicList.getList().size() \u003d\u003d 1"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                ? \" topic \" : \" topics \") + \"in the list.\");"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static void printFlashcard(Flashcard flashcard, List\u003cFlashcard\u003e flashcards) {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this flashcard:\");"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(flashcard.getQuestion() + \"; \" + flashcard.getAnswer());"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Now you have \" + flashcards.size() + (flashcards.size() \u003d\u003d 1"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                ? \" flashcard \" : \" flashcards \") + \"in the list.\");"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printTopicResults(Topic topic) {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (topic.getResults().getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"You do not have any results!\");"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            for (Result result : topic.getResults().getList()) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                assert index \u003e 0;"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                System.out.println(\"Quiz \" + index + \": \" + result);"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printQuestion(String question) {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"Question: \" + question);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printBackToTopicsAndTasks() {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Going back to the topics and tasks list.\");"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.getList().size() + (taskList.getList().size() \u003d\u003d 1"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                ? \" task \" : \" tasks \") + \"in the list.\");"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Prints all the upcoming tasks that are due within a week."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @param subjects The list of subjects present in the application"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printUpcomingTasks(SubjectList subjects) {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        LocalDateTime nextWeek \u003d LocalDateTime.now().plusDays(7);"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        int firstTask \u003d 0;"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Subject subject : subjects.getList()) {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            for (Task task : subject.getTasks().getList()) {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                if (task.getDateTime() !\u003d null) {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    if (task.getDateTime().isBefore(nextWeek) \u0026 task.getDateTime().isAfter(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        taskList.add(task);"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        if (firstTask \u003d\u003d 0) {"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                            System.out.println(\"Here are the upcoming tasks for next week!\");"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                            firstTask \u003d 1;"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                            System.out.println(subject);"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        System.out.println(index + \":\" + task);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        index \u003d index + 1;"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            taskList.clear();"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static String repeatedDateTimeException(Task task) {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return \"There is another task at that date and time:\\n\" + task;"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static String fileSyntaxErrorMsg(String dataType, String fileLocation) {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return String.format(\"Error reading the %s data under %s. Make sure the syntax is correct \""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"if you changed it manually. Proceeding with empty %ss.\", dataType, fileLocation, dataType);"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static void printExportSuccessful(File exportFile) {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Your data has been successfully exported to \" + exportFile.getAbsolutePath() + \".\");"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static void printSubjectHelp() {"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(LONG_DIVIDER);"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                \"help:          shows the list of commands available at the main level\\n\""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"add abc:       adds a subject called \u0027abc\u0027\\n\""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"find abc:      finds all subjects containing the letters abc\\n\""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"list:          shows the list of all subjects\\n\""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"list all:      shows the tree of all subjects, topics, tasks and flashcards\\n\""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"delete 1:      deletes the 1st subject in the list.\\n\""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"subject abc:   enters the subject called abc, now you can create, find, list, delete \""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"and enter the topics of subject abc\\n\""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"quiz abc:      starts a quiz for all the flashcards present in all topics of subject abc\\n\""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"               answer the questions of the current flashcards to test your knowledge\\n\""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"results abc:   gives you the results of all attempted quizzes for abc subject\\n\""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                        + \"export:        exports all the data to a JSON file\\n\""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                        + \"bye:           exits the application\""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        );"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(LONG_DIVIDER);"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static void printTopicHelp() {"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(LONG_DIVIDER);"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                \"help:                              shows the list of commands available at the subject level\\n\""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"add abc:                           adds a topic called \u0027abc\u0027 in the current subject\\n\""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"todo abc:                          adds a todo type task with the description \u0027abc\u0027\\n\""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"deadline abc /by 12:00 13-11-2020: adds a deadline type task with description \u0027abc\u0027 with \""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"date/time of deadline\\n\""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"                                   as 12:00 AM 13 Nov 2020\\n\""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"event abc /at 01:00 21-11-2020:    adds an event type task with description \u0027abc\u0027 \""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"with date/time of event\\n\""
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"                                   as 1:00 AM 21 Nov 2020\\n\""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"find abc:                          finds all topics and tasks containing \u0027abc\u0027 in the \""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"current subject\\n\""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"list:                              shows the list of all topics and tasks in the current \""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"subject\\n\""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"list all:                          shows the tree of all subjects, topics, tasks and \""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"flashcards\\n\""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"delete topic 1:                    deletes the 1st topic in the list of topics.\\n\""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"delete task 1:                     deletes the 1st task in the list of tasks.\\n\""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"done 1:                            marks the 1st task in the list of tasks as done\\n\""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"topic abc:                         enters the topic abc, now you can add, find, list \""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"and delete flashcards of topic abc\\n\""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"quiz abc:                          starts a quiz for all the flashcards of the topic abc,\\n\""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"                                   answer the questions of the prompted flashcards \""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"to test your knowledge\\n\""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"results abc:                       gives you the results of all attempted quizzes for \""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"abc topic\\n\""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                        + \"exit:                              exits the subject to return to the main screen, \""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                        + \"where you can work with subjects\""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        );"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(LONG_DIVIDER);"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static void printFlashcardHelp() {"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(LONG_DIVIDER);"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                \"help:              shows the list of commands available at the topic level\\n\""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"add abc; def:      adds a flashcard with question \u0027abc\u0027 and answer \u0027def\u0027 \""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"in the current topic\\n\""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"list:              shows the list of all flashcards in the current topic\\n\""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"list all:          shows the tree of all subjects, topics, tasks and flashcards\\n\""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"delete 1:          deletes the 1st flashcard in the list\\n\""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"exit:              exits the topic to return to the subject level, \""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                        + \"where you can work with tasks and topics\""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        );"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(LONG_DIVIDER);"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Prints a tree of all subjects, topics, tasks, and flashcards."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Tells user which subject you are currently looking at."
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subjects      the list of all subjects to be printed"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param activeSubject Subject that the user is currently looking at. null if user is not looking at a subject"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param activeTopic   Topic that the user is currently looking at. null if user is not looking at a topic"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printAll(List\u003cSubject\u003e subjects, Subject activeSubject, Topic activeTopic) {"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"Here\u0027s a list of all subjects, topics, tasks, and flashcards:\");"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (activeSubject \u003d\u003d null \u0026\u0026 activeTopic \u003d\u003d null) {"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"(You are currently here)\");"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Subject s : subjects) {"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            boolean isLast \u003d (i \u003d\u003d subjects.size()"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    \u0026\u0026 s.getTasks().getList().size() \u003d\u003d 0"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    \u0026\u0026 s.getTopics().getList().size() \u003d\u003d 0);"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println((isLast ? \"└─ \" : \"├─ \")"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    + (i++) + \". \" + s.toString()"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    + ((activeSubject !\u003d null \u0026\u0026 s \u003d\u003d activeSubject) ? \" (You are currently here)\" : \"\"));"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            printAllTopics(s, activeTopic);"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Prints a subtree of all topics under a subject."
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * If the user is lookking at a topic, tells which topic the user is currently looking at."
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subject     the subject containing all the topics to be printed"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param activeTopic Topic that the user is currently looking at. null if user is not looking at a topic"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printAllTopics(Subject subject, Topic activeTopic) {"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        List\u003cTopic\u003e topics \u003d topicList.getList();"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"│  Topics\");"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            boolean isLastTopic \u003d i \u003d\u003d topics.size();"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"│  \" + (isLastTopic ? \"└─ \" : \"├─ \")"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    + (i++) + \". \" + topic.toString()"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    + (activeTopic !\u003d null \u0026\u0026 topic \u003d\u003d activeTopic ? \" (You are currently here)\" : \"\"));"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            int numberOfFlashcards \u003d topic.getFlashcards().size();"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (numberOfFlashcards !\u003d 0) {"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                System.out.println(\"│  \""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + (isLastTopic ? \" \" : \"│\")"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"  └─ \" + numberOfFlashcards"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + (numberOfFlashcards \u003d\u003d 1 ? \" Flashcard\" : \" Flashcards\"));"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        i \u003d 1;"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TaskList taskList \u003d subject.getTasks();"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getList();"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"│  Tasks\");"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"│  \" + ((i \u003d\u003d tasks.size()) ? \"└─ \" : \"├─ \")"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    + (i++) + \". \" + task.toString());"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "syncode98": 132,
      "sugandha929": 51,
      "CookieHoodie": 223,
      "jialerk": 107,
      "rashien3": 109
    }
  },
  {
    "path": "src/test/java/seedu/revised/RevisedTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "class RevisedTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "jialerk": 2
    }
  },
  {
    "path": "src/test/java/seedu/revised/card/quiz/SubjectQuizTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.ResultList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcard.NoFlashcardException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topic.NoTopicException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "class SubjectQuizTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private SubjectList subjects;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private Result result \u003d new Result(0, 0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private List\u003cFlashcard\u003e flashcards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private List\u003cString\u003e incorrectAnswers \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private ResultList results \u003d new ResultList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setup() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjects \u003d new SubjectList("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        new Subject(\"Maths\"),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        new Subject(\"History\"),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        new Subject(\"Science\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                )));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjects.getList().get(1).getTopics().add(new Topic(\"First War\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjects.getList().get(2).getTopics().add(new Topic(\"Evolution\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Flashcard first \u003d new Flashcard(\"middle of solar system\", \"Sun\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Flashcard second \u003d new Flashcard(\"lightspeed\", \"speed of light\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjects.getList().get(2).getTopics().get(0).addFlashcard(first);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjects.getList().get(2).getTopics().get(0).addFlashcard(second);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setUpQuiz_subjectWithoutTopic_throwsNoTopicException() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        SubjectQuiz subjectQuiz \u003d new SubjectQuiz(subjects.getList().get(0));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assertThrows(NoTopicException.class, subjectQuiz::setUpQuiz);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setUpQuiz_subjectWithTopicWithoutFlashcard_throwsNoFlashcardException() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        SubjectQuiz subjectQuiz \u003d new SubjectQuiz(subjects.getList().get(1));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NoFlashcardException.class, subjectQuiz::setUpQuiz);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setUpQuiz_subjectWithTopicsAndFlashcards_checkMaxScore()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throws NoFlashcardException, NoTopicException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        SubjectQuiz subjectQuiz \u003d new SubjectQuiz(subjects.getList().get(2));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjectQuiz.setUpQuiz();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assertEquals(subjectQuiz.result.getMaxScore(), 2.0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 59,
      "CookieHoodie": 2,
      "jialerk": 8
    }
  },
  {
    "path": "src/test/java/seedu/revised/card/quiz/TopicQuizTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.ResultList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TopicList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcard.NoFlashcardException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "class TopicQuizTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private TopicList topics;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private Result result \u003d new Result(0, 0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private List\u003cFlashcard\u003e flashcards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private List\u003cString\u003e incorrectAnswers \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private ResultList results \u003d new ResultList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setup() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        topics \u003d new TopicList("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        new Topic(\"First War\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        new Topic(\"Evolution\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                )));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Flashcard first \u003d new Flashcard(\"middle of solar system\", \"Sun\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Flashcard second \u003d new Flashcard(\"lightspeed\", \"speed of light\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        topics.get(1).addFlashcard(first);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        topics.get(1).addFlashcard(second);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setUpQuiz_TopicWithoutFlashcard_throwsNoFlashcardException() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        TopicQuiz topicQuiz \u003d new TopicQuiz(topics.get(0));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NoFlashcardException.class, topicQuiz::setUpQuiz);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setUpQuiz_TopicsWithFlashcards_checkMaxScore()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throws NoFlashcardException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        TopicQuiz topicQuiz \u003d new TopicQuiz(topics.get(1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        topicQuiz.setUpQuiz();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assertEquals(topicQuiz.result.getMaxScore(), 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 47,
      "CookieHoodie": 2,
      "jialerk": 6
    }
  },
  {
    "path": "src/test/java/seedu/revised/command/SubjectCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.AddSubjectCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.DeleteSubjectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.FindSubjectCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.ListSubjectCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.command.subject.ResultSubjectCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subject.AccessSubjectCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.QuizSubjectCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.exception.subject.InvalidSubjectException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.NoSubjectException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subject.RepeatedSubjectException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SubjectCommandTest {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private SubjectList subjects;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private AddSubjectCommand addCommand;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private DeleteSubjectCommand deleteCommand;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private FindSubjectCommand findCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private AccessSubjectCommand returnCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private ListSubjectCommand listCommand;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    Path tempDir;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        subjects \u003d new SubjectList("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        new Subject(\"English\"),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        new Subject(\"Chinese\"),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        new Subject(\"Science\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                )));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage \u003d new Storage.StorageBuilder()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setBaseDir(tempDir.toString())"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportDir(tempDir.toString())"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setFlashcardFilename(\"flashcards.json\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setTaskFilename(\"tasks.txt\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setResultFilename(\"results.json\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportFilename(\"data.json\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void addSubject_validCommand_returnsSubjectTitle() throws RepeatedSubjectException, InvalidSubjectException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand \u003d new AddSubjectCommand(\"add Maths\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        addCommand.execute(subjects, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(\"Maths\", subjects.getList().get(3).getTitle());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void deleteSubject_validCommand_returnsIndex() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        deleteCommand \u003d new DeleteSubjectCommand(\"delete 2\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        deleteCommand.execute(subjects, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(Integer.valueOf(\"2\"), subjects.getList().size());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void findSubject_validCommand_executesMethod() throws InvalidSubjectException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        findCommand \u003d new FindSubjectCommand(\"find English\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        findCommand.execute(subjects, storage);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void listSubject_validCommand_executesMethod() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        listCommand \u003d new ListSubjectCommand();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        listCommand.execute(subjects, storage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void quizSubject_subjectNotPresent_throwsException() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        QuizSubjectCommand quizNoSubject \u003d new QuizSubjectCommand(\"quiz Maths\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertThrows(NoSubjectException.class, () -\u003e quizNoSubject.execute(subjects, storage));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void quizSubject_invalidCommand_throwsException() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        QuizSubjectCommand quizInvalidCommand \u003d new QuizSubjectCommand(\"quiz\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertThrows(InvalidSubjectException.class, () -\u003e quizInvalidCommand.execute(subjects, storage));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void resultSubject_subjectNotPresent_throwsException() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        ResultSubjectCommand resultNoSubject \u003d new ResultSubjectCommand(\"quiz Maths\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertThrows(NoSubjectException.class, () -\u003e resultNoSubject.execute(subjects, storage));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void resultSubject_invalidCommand_throwsException() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        ResultSubjectCommand resultInvalidCommand \u003d new ResultSubjectCommand(\"quiz\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertThrows(InvalidSubjectException.class, () -\u003e resultInvalidCommand.execute(subjects, storage));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 28,
      "CookieHoodie": 30,
      "jialerk": 52
    }
  },
  {
    "path": "src/test/java/seedu/revised/command/TopicCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package seedu.revised.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TopicList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.topic.AddTopicCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.topic.DeleteTopicCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.topic.FindTopicCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.topic.ListTopicCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topic.AccessTopicCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.exception.topic.InvalidTopicException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.exception.topic.NoTopicException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.exception.topic.RepeatedTopicException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class TopicCommandTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private Subject subject;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private TopicList topics;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private AddTopicCommand addCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private DeleteTopicCommand deleteCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private FindTopicCommand findCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private AccessTopicCommand returnCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private ListTopicCommand listCommand;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        List topicList \u003d new ArrayList\u003cTopic\u003e(List.of("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                new Topic(\"Distance\"),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                new Topic(\"Speed\"),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                new Topic(\"Time\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        topics \u003d new TopicList(topicList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        subject \u003d new Subject(\"Maths\", topicList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void addTopic() throws NoTopicException, RepeatedTopicException, InvalidTopicException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        addCommand \u003d new AddTopicCommand(\"add Geometry\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        addCommand.execute(subject);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        assertEquals(\"Geometry\", topics.getList().get(3).getTitle());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void deleteTopic() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        deleteCommand \u003d new DeleteTopicCommand(\"delete 2\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        deleteCommand.execute(subject);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        assertEquals(Integer.valueOf(\"2\"), subject.getTopics().getList().size());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void findTopic() throws InvalidTopicException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        findCommand \u003d new FindTopicCommand(\"find Speed\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        findCommand.execute(subject);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void listTopic() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        listCommand \u003d new ListTopicCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        listCommand.execute(subject);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "CookieHoodie": 2,
      "jialerk": 2,
      "rashien3": 61
    }
  },
  {
    "path": "src/test/java/seedu/revised/storage/StorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.quiz.Result;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.storage.DataLoadingException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.task.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cSubject\u003e subjects;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cTopic\u003e topics;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cFlashcard\u003e flashcards;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cString\u003e tasksStr;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cResult\u003e results;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    Path tempDir;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // use tempDir as baseDir to avoid file creation for subjects"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage \u003d new Storage.StorageBuilder()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setBaseDir(tempDir.toString())"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportDir(tempDir.toString())"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setFlashcardFilename(\"flashcards.json\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setTaskFilename(\"tasks.txt\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setResultFilename(\"results.json\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportFilename(\"data.json\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        subjects \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Subject(\"subject1\"),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Subject(\"subject2\"),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Subject(\"subject3\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        topics \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Topic(\"topic1\"),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Topic(\"topic2\"),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Topic(\"topic3\")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        flashcards \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Flashcard(\"question1\", \"answer1\"),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Flashcard(\"question2\", \"answer2\"),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Flashcard(\"question3\", \"answer3\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String dateTimeInput \u003d \"18:00 10-10-2019\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HH:mm d-MM-yyyy\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeInput, format);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Todo(\"todoTask\", false),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                new Event(\"eventTask\", true, dateTime),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                new Deadline(\"deadlineTask\", false, dateTime)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        results \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Result(100, 100),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Result(50, 100),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Result(10, 30)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        tasksStr \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                \"T | 0 | todoTask\","
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                \"E | 1 | eventTask | 6:00 PM 10 Oct 2019\","
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                \"D | 0 | deadlineTask | 6:00 PM 10 Oct 2019\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Create a valid data directory with populated subjects and topics."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return root directory of the directory created"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private File createValidDataDirectory() throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // create valid directory structure"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Topic topic : topics) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Path topicPath \u003d Paths.get(storage.getBaseDir().toString(), subject.getTitle(), topic.getTitle());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Files.createDirectories(topicPath);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                File flashcardFile \u003d new File(topicPath.toString(), storage.getFlashcardFilename());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                File resultFile \u003d new File(topicPath.toString(), storage.getTopicResultFilename());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                // write flashcards to file"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                try (FileWriter fileWriter \u003d new FileWriter(flashcardFile)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    gson.toJson(flashcards, fileWriter);  // store the json to file"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    fileWriter.flush();  // flush to actually write the content"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                // write results to file"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                try (FileWriter fileWriter \u003d new FileWriter(resultFile)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    gson.toJson(results, fileWriter);  // store the json to file"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    fileWriter.flush();  // flush to actually write the content"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return storage.getBaseDir();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveSubjects_subjectsWithoutTopics_DirectoriesWithSubjectTitlesAndTasksFileAndResultFileCreated()"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveSubjects(subjects);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File subjectDir \u003d Paths.get(storage.getBaseDir().toString(), subject.getTitle()).toFile();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.exists());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.isDirectory());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File taskFile \u003d new File(subjectDir, storage.getTaskFilename());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(subjectDir, storage.getSubjectResultFilename());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(taskFile.exists());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(resultFile.exists());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveSubjects_subjectsWithTopicsAndResults_DirectoriesWithEveryHierarchyCreated() throws IOException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // populate subjects"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Topic topic : topics) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                subject.getTopics().add(topic);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            results.forEach(result -\u003e subject.getResults().add(result));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveSubjects(subjects);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File subjectDir \u003d Paths.get(storage.getBaseDir().toString(), subject.getTitle()).toFile();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.exists());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.isDirectory());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(subjectDir, storage.getSubjectResultFilename());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File taskFile \u003d new File(subjectDir, storage.getTaskFilename());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(taskFile.exists());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(resultFile.exists());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            // check if subdirectories are created"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File[] topicDirs \u003d subjectDir.listFiles(File::isDirectory);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotNull(topicDirs);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(subject.getTopics().getList().size(), topicDirs.length);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotEquals(\"[]\", Files.readString(resultFile.toPath()));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveTopics_topicsWithoutFlashcardsAndResult_DirectoriesWithTopicTitlesAndEmptyFileCreated()"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveTopics(tempDir, topics);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File topicDir \u003d Paths.get(tempDir.toString(), topic.getTitle()).toFile();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.exists());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.isDirectory());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File flashcardFile \u003d new File(topicDir, storage.getFlashcardFilename());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(flashcardFile.exists());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(\"[]\", Files.readString(flashcardFile.toPath()));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(topicDir, storage.getTopicResultFilename());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(resultFile.exists());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(\"[]\", Files.readString(resultFile.toPath()));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveTopics_topicsWithFlashcardsAndResults_DirectoriesWithTopicTitlesAndPopulatedFilesCreated()"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // populate topics with flashcards and results"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Flashcard flashcard : flashcards) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                topic.addFlashcard(flashcard);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            results.forEach(result -\u003e topic.getResults().add(result));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveTopics(tempDir, topics);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File topicDir \u003d Paths.get(tempDir.toString(), topic.getTitle()).toFile();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.exists());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.isDirectory());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File flashcardFile \u003d new File(topicDir, storage.getFlashcardFilename());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(flashcardFile.exists());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotEquals(\"[]\", Files.readString(flashcardFile.toPath()));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(topicDir, storage.getTopicResultFilename());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(resultFile.exists());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotEquals(\"[]\", Files.readString(resultFile.toPath()));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveToJson_validFlashcards_readableJsonIsStored() throws IOException {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File file \u003d new File(tempDir.toString(), storage.getFlashcardFilename());"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Storage.saveToJson(file, flashcards);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertTrue(file.exists());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertEquals(gson.toJson(flashcards), Files.readString(file.toPath()));"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void loadFromJson_populatedFile_listWithCorrectTypeOfObjectsReturned() throws IOException {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File flashcardFile \u003d Paths.get(tempDir.toString(), storage.getFlashcardFilename()).toFile();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // write flashcards to file"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(flashcardFile)) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            gson.toJson(flashcards, fileWriter);  // store the json to file"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            fileWriter.flush();  // flush to actually write the content"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Type type \u003d new TypeToken\u003cArrayList\u003cFlashcard\u003e\u003e() {}.getType();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cFlashcard\u003e loadedFlashcards \u003d Storage.loadFromJson(type, flashcardFile);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertEquals(flashcards.size(), loadedFlashcards.size());"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Flashcard flashcard : loadedFlashcards) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotNull(flashcard);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void loadSubjects_noSavedData_emptyListOfSubjectsReturned() throws DataLoadingException {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertTrue(storage.loadSubjects().isEmpty());"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void loadSubjects_validStructure_populatedSubjects() throws IOException, DataLoadingException {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        createValidDataDirectory();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cSubject\u003e loadedSubjects \u003d storage.loadSubjects();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertEquals(loadedSubjects.size(), subjects.size());"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : loadedSubjects) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(subject.getTopics().getList().size(), topics.size());"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                assertEquals(topic.getFlashcards().size(), flashcards.size());"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                assertEquals(topic.getResults().getList().size(), results.size());"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            // subject result is not populated"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(subject.getResults().getList().size(), 0);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveTasks_tasks_correctFormatInFile() throws IOException {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Path subjectPath \u003d storage.getBaseDir().toPath();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveTasks(subjectPath, tasks);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File writtenFile \u003d new File(subjectPath.toString(), storage.getTaskFilename());"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (Scanner scanner \u003d new Scanner(writtenFile)) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                assertTrue(tasksStr.stream().anyMatch(s -\u003e s.equals(line)));"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void loadTasks_taskFile_correctlyParsedTasks() throws IOException {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Path subjectPath \u003d storage.getBaseDir().toPath();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File taskFile \u003d new File(subjectPath.toString(), storage.getTaskFilename());"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(taskFile)) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (String taskStr : tasksStr) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                fileWriter.write(taskStr + \"\\n\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cTask\u003e savedTasks \u003d storage.loadTasks(subjectPath);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (int i \u003d 0; i \u003c savedTasks.size(); i++) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Task t1 \u003d savedTasks.get(i);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Task t2 \u003d tasks.get(i);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(t1.getDescription(), t2.getDescription());"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(t1.getIsDone(), t2.getIsDone());"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (t1 instanceof Event) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                assertEquals(((Event) t1).getDateTimeDescription(), ((Event) t2).getDateTimeDescription());"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            } else if (t1 instanceof Deadline) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                assertEquals(((Deadline) t1).getDateTimeDescription(), ((Deadline) t2).getDateTimeDescription());"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void deleteDirectory_directoryWithContent_directoryIsDeleted() throws IOException {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File dir \u003d createValidDataDirectory();"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertTrue(dir.exists());"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertTrue(dir.isDirectory());"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Storage.deleteDirectory(Paths.get(dir.toString()));"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertFalse(dir.exists());"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void export_populatedSubjects_allContentsAreSaved() throws IOException {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // populated subjects with data"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Topic topic : topics) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                subject.getTopics().add(topic);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                for (Flashcard flashcard : flashcards) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    topic.addFlashcard(flashcard);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                for (Result result : results) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    topic.getResults().add(result);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Result result : results) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                subject.getResults().add(result);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                subject.getTasks().add(task);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String jsonString \u003d gson.toJson(subjects);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File exportFile \u003d storage.export(subjects);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertTrue(exportFile.exists());"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String storedJson \u003d Files.readString(exportFile.toPath());"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertEquals(jsonString, storedJson);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 11,
      "sugandha929": 1,
      "CookieHoodie": 329,
      "jialerk": 8
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1
    }
  }
]
