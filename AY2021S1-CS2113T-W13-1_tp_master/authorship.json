[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.7.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.7.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    implementation group: \u0027com.google.code.gson\u0027, name: \u0027gson\u0027, version: \u00272.8.6\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    mainClassName \u003d \"seedu.revised.Revised\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    archiveBaseName \u003d \"revised\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 4,
      "-": 42,
      "jialerk": 2
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "syncode98"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | I Muthukumar | [Github](https://github.com/syncode98) | [Portfolio](team/syncode98)  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Herman Thong | [Github](https://https://github.com/rashien3) | [Portfolio](team/rashien3)  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Sugandha Tuteja | [Github](https://github.com/sugandha929) | [Portfolio](team/sugandha929)  "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chin Hang | [Github](https://github.com/CookieHoodie/) | [Portfolio](team/cookiehoodie)  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jialerk | [Github](https://github.com/jialerk) | [Portfolio](team/jialerk)  "
      }
    ],
    "authorContributionMap": {
      "syncode98": 1,
      "sugandha929": 2,
      "CookieHoodie": 2,
      "-": 4,
      "rashien3": 1
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## Table of contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href\u003d\"#introduction\"\u003e1. Introduction\u003c/a\u003e "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href\u003d\"#setting-up\"\u003e2. Setting up the Project\u003c/a\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href\u003d\"#design\"\u003e3. Design\u003c/a\u003e "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * \u003ca href\u003d\"#card\"\u003e3.1 Card Package\u003c/a\u003e "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * \u003ca href\u003d\"#command\"\u003e3.2 Command Package\u003c/a\u003e "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * \u003ca href\u003d\"#list\"\u003e3.3 List Package\u003c/a\u003e "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * \u003ca href\u003d\"#parser\"\u003e3.4 Parser Package\u003c/a\u003e "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * \u003ca href\u003d\"#ui\"\u003e3.5 Ui Package\u003c/a\u003e "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * \u003ca href\u003d\"#storage\"\u003e3.6 Storage Package\u003c/a\u003e "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href\u003d\"#implementation\"\u003e4. Implementation\u003c/a\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    * \u003ca href\u003d\"#store-imp\"\u003e4.1 Storing data\u003c/a\u003e "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    * \u003ca href\u003d\"#load-imp\"\u003e4.2 Loading data\u003c/a\u003e "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    * \u003ca href\u003d\"#export-imp\"\u003e4.3 Exporting data\u003c/a\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * \u003ca href\u003d\"#parse-imp\"\u003e4.4 Parsing commands\u003c/a\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * \u003ca href\u003d\"#quiz-imp\"\u003e4.5 Quiz\u003c/a\u003e  "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * \u003ca href\u003d\"#sort-imp\"\u003e4.6 Sorting tasks\u003c/a\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * \u003ca href\u003d\"#results-imp\"\u003e4.7 Results feature\u003c/a\u003e "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * \u003ca href\u003d\"#adding-imp\"\u003e4.8 Adding objects\u003c/a\u003e "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * \u003ca href\u003d\"#accessing-imp\"\u003e4.9 Accessing levels\u003c/a\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * \u003ca href\u003d\"#listall-imp\"\u003e4.10 List all command\u003c/a\u003e "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href\u003d\"#logging\"\u003e5. Logging\u003c/a\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href\u003d\"#documentation\"\u003e6. Documentation\u003c/a\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href\u003d\"#testing\"\u003e7. Testing\u003c/a\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href \u003d\"#product-scope\"\u003eAppendix A: Product Scope\u003c/a\u003e "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href \u003d\"#user-story\"\u003eAppendix B: User Stories\u003c/a\u003e "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href \u003d\"#nfr\"\u003eAppendix C: Non functional Requirements\u003c/a\u003e "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href \u003d\"#glossary\"\u003eAppendix D: Glossary\u003c/a\u003e "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href \u003d\"#manual-testing\"\u003eAppendix E: Instructions for Manual Testing\u003c/a\u003e "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "## 1. Introduction \u003ca name\u003d\"introduction\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "**revisED** is a CLI application that helps students to revise by allowing them to create flashcards, take quizzes, "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "and keep track of their deadlines, tasks and any other important dates. The users can create different subjects, "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "add different topics under a subject, and create different flashcards in the form of questions and answers under a topic. They can also "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "take quizzes for the flashcards they have added and view the results. "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This developer guide is for developers who wish to understand and/or develop **reviseED** further. "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This guide includes design, implementation, logging, testing, product scope, and other"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "sections to help developers better understand the application."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Note the following symbols and formatting used in this document:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Symbols / Formatting|Meaning"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "------|------"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "📝️️ **_NOTE:_** | Important or additional information"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "⚠️ **_WARNING:_** | Things to avoid or pay extra attention to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "✔️ **_TODO:_** | Things that should be but have not been done"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "`Grey highlight` | Code or terms related to the code/application"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "## 2. Setting up the Project \u003ca name\u003d\"setting-up\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This section guides you through the steps to setup the project on your computer."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e 📝️️ **_NOTE:_** This guide assumes you already have [Java 11](https://openjdk.java.net/projects/jdk/11/) or above"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e installed on your computer. If you do not have it yet, follow the link"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e to download and install it. "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Fork [this repo](https://github.com/AY2021S1-CS2113T-W13-1/tp) and clone the fork to your computer. Alternatively,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "download the source code from [here](https://github.com/AY2021S1-CS2113T-W13-1/tp/releases)."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Open a console in the folder where `build.gradle` resides, and run the command `gradlew.bat run` if you are using Windows "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "or `./gradlew run` if you are using Mac/Linux."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. If the setup is successful, you should see the greeting screen:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e Task :run"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                                    ___________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                                    |  __ |  _ \\"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " ____  ______      _____   ________ |  |__| | | |"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "|  __|/ __ \\ \\    / /| |  /  _____/ |   __| | | |"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "| |  |  __/ \\ \\__/ / | | /_____  /  |  |__| |_| |"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "| |   \\___|  \\____/  |_|/_______/   |_____|_____/"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Hello! I\u0027m revisED"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Alright, What can I do for you?"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Type help for all available commands"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Alternatively, if you are using [IntelliJ](https://www.jetbrains.com/idea/), follow the first step above, then:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Configure the Intellij for JDK 11, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Import the project as a Gradle project, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Locate and click the `run` task under `Tasks \u003e application \u003e run` in the [Gradle tool window](https://www.jetbrains.com/help/idea/jetgradle-tool-window.html)."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "## 3. Design \u003ca name\u003d\"design\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This section describes how **revisED** has been designed so that developers can better understand the "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "designing of the code, with the help of visual aids."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The application has been broken down into different levels so that users would find it easy to navigate from one level "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jialerk"
        },
        "content": "to the next one. There are three levels within the application, and their hierarchy is ranked as shown below:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* **Main:** This level edits the list of all the subjects present within the application and takes care of relevant commands "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rashien3"
        },
        "content": "such as add subject, delete subject or find subject. The parser for this level is invoked in the `Revised` class."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* **Subject:** This level is accessed through the `subject [NAMEOFSUBJECT]` command. The user would then look at the individual "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "subjects and then would be able to add, delete, list or find either tasks or topics. "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rashien3"
        },
        "content": "The parser for this level is invoked in the `AccessSubjectCommand` class."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* **Topic:** This level is accessed through the `topic [NAMEOFTOPIC]` command. The user can add, delete or list flashcards"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rashien3"
        },
        "content": "in this level. The parser for this level is invoked in the `AccessTopicCommand` class."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Exiting from the Topic level will result in the program running at the Subject level, while exiting from the Subject level "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jialerk"
        },
        "content": "allows the program to run at the Main level. The program can also access the Subject level from the main level, or the Topic level"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jialerk"
        },
        "content": "from the Subject level via user input."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rashien3"
        },
        "content": "### Architecture \u003ca name\u003d\"architecture\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rashien3"
        },
        "content": "![architecture](https://user-images.githubusercontent.com/50734854/98514327-3be86900-22a4-11eb-9021-8099c536ad0f.png)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rashien3"
        },
        "content": "\u003csub\u003e***Figure 3** Architecture diagram for revisED.*\u003c/sub\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rashien3"
        },
        "content": "The **Architecture Diagram** given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`Revised` is the Main class and is responsible for:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* Containing the `SubjectList`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* Invoking `Parser` on the main level on loop until the user exits"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* Invoking `Storage` to save data when user exits"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rashien3"
        },
        "content": "The rest of the App consists of six packages:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* \u003ca href\u003d\"#card\"\u003ecard\u003c/a\u003e - main data structures that holds the most of the information of the application."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* \u003ca href\u003d\"#command\"\u003ecommand\u003c/a\u003e - handles the commands"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* \u003ca href\u003d\"#list\"\u003elist\u003c/a\u003e - contains lists of classes in `card`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* \u003ca href\u003d\"#parser\"\u003eparser\u003c/a\u003e - parses instances of `Command`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* \u003ca href\u003d\"#ui\"\u003eui\u003c/a\u003e - handles input and output"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* \u003ca href\u003d\"#storage\"\u003estorage\u003c/a\u003e - handles loading, saving, and exporting"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rashien3"
        },
        "content": "More details for each package can be accessed in the sections below, or by clicking the links above."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 3.1 Card Package \u003ca name\u003d\"card\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rashien3"
        },
        "content": "![cardUML](https://user-images.githubusercontent.com/50734854/98472577-f2aa0200-222e-11eb-9b00-c23280986366.png)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rashien3"
        },
        "content": "\u003csub\u003e***Figure 3.1** UML class diagram for card package. The quizcard package is omitted.*\u003c/sub\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rashien3"
        },
        "content": "The `card` package contains the main data structures that holds the most of the information of the application."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rashien3"
        },
        "content": "It contains:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rashien3"
        },
        "content": "- `Flashcard` class - contains a `question` and `answer`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rashien3"
        },
        "content": "- `Subject` class - contains a `TopicList`,`TaskList`, and `ResultList`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rashien3"
        },
        "content": "- `Topic` class - contains a list of `FlashCards`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rashien3"
        },
        "content": "- `quizcard` package - contains classes related to the quiz functions"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rashien3"
        },
        "content": "- `taskcard` package - contains classes related to the task functions"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Each of the classes in the card package contains getters and setters for its own attributes."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.1.1 Quizcard Package \u003ca name\u003d\"quiz\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rashien3"
        },
        "content": "![QuizUML](https://user-images.githubusercontent.com/50734854/98472580-f76eb600-222e-11eb-92c4-d721895cfd41.png)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rashien3"
        },
        "content": "\u003csub\u003e***Figure 3.1.1** UML class diagram for the quizcard package*\u003c/sub\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rashien3"
        },
        "content": "The `quizcard` package stores the information relating to all quiz functionality in the application. "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rashien3"
        },
        "content": "It also starts the quizes and handles the updating of results. It consists of 4 classes:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* `Quiz` class - abstract class in the `quizcard` package. It contains:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * `result` - the `Result` of the quiz."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* `TopicQuiz` class - inherits from the `Quiz` class and initiates the quiz for a topic. It contains:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * `topic` - the `Topic` that the quiz is on"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* `SubjectQuiz` class - inherits from the `Quiz` class and initiates the quiz for a subject. It contains:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * `subject` - the `Subject` that the quiz is on"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* `Result` class - holds information regarding the results of a quiz. It has three class variables:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * `score` is the user\u0027s current score for the quiz"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * `maxScore` is the maximum score for the quiz"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * `desciption` is the grade given to the user depending on their performance."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.1.2 Taskcard Package \u003ca name\u003d\"task\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rashien3"
        },
        "content": "![TaskUML](https://user-images.githubusercontent.com/50734854/98472584-fb023d00-222e-11eb-8513-eb9493cae215.png)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rashien3"
        },
        "content": "\u003csub\u003e***Figure 3.1.2** UML class diagram for taskcard package*\u003c/sub\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rashien3"
        },
        "content": "The `taskcard` package stores the information relating to all the tasks in the application. It consists of 4 classes:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* `Task` class - class that the other classes in this package inherits from. It contains:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * description - name of the the task"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * isDone - whether the task is done or not"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* `Todo` class - inherits from `Task`"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* `Deadline` class - inherits from `Task`. Additionally, it contains:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * `dateTime` - deadline of the task"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* `Event` class - inherits from `Task`. Additionally, it contains:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * `dateTime` - time of the event"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "rashien3"
        },
        "content": "##"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jialerk"
        },
        "content": "### 3.2 command Package \u003ca name\u003d\"command\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The Command package consists of different classes that executes the various commands of the application due to user input,"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jialerk"
        },
        "content": "and is split into 4 packages, flashcard, subject, task and topic, as well as an abstract command class, that is a superclass of the various classes in the different packages."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jialerk"
        },
        "content": "As mentioned in the introduction of the design segment of the developer guide, the program is split into 3 levels, namely the main level, the subject level, as well as the topic level."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `subjectcommand` package holds the information to allow the program to execute a user command at the main level, the `topiccommand` package holds the information"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jialerk"
        },
        "content": "to allow the program to execute a user command at the subject level, while the `taskcommand` and `flashcardcommand` packages holds the information to allow the program to execute a user command"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* Command: In charge of reading the command and calling the relevant methods. The package itself holds"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jialerk"
        },
        "content": "the following packages. The commands also have a method isExit to exit the current level the program is at. "
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Exiting from a level of the program will either up the program to run at a level of a higher level or end the program."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The levels in the program are mentioned in the introduction of the design segment of the developer guide."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - flashcardcommand"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - subjectcommand"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - topiccommand"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - taskcommand"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Each of the sub-packages hold multiple classes that are a subclass of the Command class, and contains:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* An execute command to execute the respective commands in their respective levels of the program"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* An isExit method that checks if the command exits the level the program is currently running in"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jialerk"
        },
        "content": "AccessSubjectCommand and AccessTopicCommand both have an extra method goToSubject and goToTopic methods that "
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jialerk"
        },
        "content": "allows the program to enter Subject level from the Main level, and to the Topic level from the Subject level respectively."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jialerk"
        },
        "content": "#### subjectcommand package \u003ca name\u003d\"subjectcommand\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `subjectcommand` package holds all the necessary classes for executing methods at the main level. The Class that will be created and executed depends "
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jialerk"
        },
        "content": "on user input. A Class diagram of how the classes interact with each other in the subjectcommand package is shown below."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jialerk"
        },
        "content": "![SubjectCommandClassDiagram](https://user-images.githubusercontent.com/47527482/98504305-9c21df80-2291-11eb-988a-916430c7270d.jpg)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003csub\u003e***Figure 3.2.1** UML class diagram for subjectcommand package*\u003c/sub\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `subjectcommand` package holds the following classes."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- AccessSubjectCommand"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- AddSubjectCommand"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- DeleteSubjectCommand"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- ExitSubjectCommand"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- ExportSubjectCommand"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- FindSubjectCommand"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- HelpSubjectCommand"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- ListAllSubjectCommand"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- ListSubjectCommand"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- QuizSubjectCommand"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- ResultSubjectCommand"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- SorrySubjectCommand"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- SubjectCommand"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jialerk"
        },
        "content": "##### AccessSubjectCommand"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `AccessSubjectCommand` class has 3 methods:"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- execute()"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- goToSubject()"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- isExit()"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jialerk"
        },
        "content": "and is mainly used for entering the Subject level from the Main Level. This occurs when "
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jialerk"
        },
        "content": "the execute() method of the `AccessSubjectCommand` is first run. It first decodes the full command of the user input, then "
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jialerk"
        },
        "content": "accesses the subject level of the program. Different Subject class instances have different information contained in them, thus "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jialerk"
        },
        "content": "there exists multiple subject levels of the program, each subject class having their own subject level in the program. "
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jialerk"
        },
        "content": "For example, if there are 2 subjects, like Maths and Science, then accessing the Subject level of the Maths instance is different from "
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jialerk"
        },
        "content": "accessing the Subject level of the Science Subject, since both subjects contain different information. Accessing the different subjects depend on user input, which "
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jialerk"
        },
        "content": "will be decoded in the execute() method in `AccessSubjectCommand`. The execute() method will then run the goToSubject() command, that will access the information "
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jialerk"
        },
        "content": "available in the subject that is selected via user input."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The isExit() method determines whether the program exits. The `AccessSubjectCommand` isExit() method is hard coded to return false since the command does not exit the code."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jialerk"
        },
        "content": "For more information of the implementation of the AccessCommand Class, refer to \u003ca href\u003d\"#accessing-imp\"\u003e4.8 Accessing subjects/topics implementation\u003c/a\u003e. "
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jialerk"
        },
        "content": "##### AddSubjectCommand"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The execute() method of the `AddSubjectCommand` decodes the user input, then adds a subject into the SubjectList, which title depends on the user input. For example, if the "
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jialerk"
        },
        "content": "user input is `add Maths`, then the title of the Subject created in the SubjectList will be Maths. It also prints the title of the subject that "
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jialerk"
        },
        "content": "is added to the SubjectList."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The isExit() method determines whether the program exits. The `AddSubjectCommand` isExit() method is hard coded to return false since the command does not exit the code."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jialerk"
        },
        "content": "For more information of the implementation of the AddCommand Class, refer to \u003ca href\u003d\"#adding-imp\"\u003e4.7 Adding objects implementation\u003c/a\u003e "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jialerk"
        },
        "content": ". "
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jialerk"
        },
        "content": "##### DeleteSubjectCommand"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The execute() method of the `DeleteSubjectCommand` decodes the user input, then deletes a subject based on the index the Subject currently in the SubjectList. "
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jialerk"
        },
        "content": "For example, when the user input is `delete 1`, the program decodes the input, and deletes the first Subject in the SubjectList, which is at index 0 of the SubjectList."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The isExit() method determines whether the program exits. The `DeleteSubjectCommand` isExit() method is hard coded to return false since the command does not exit the code."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jialerk"
        },
        "content": "##### ExitSubjectCommand"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The execute() method of the `ExitSubjectCommand` does nothing, but needed since this method was implemented from an abstract class."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The isExit() method determines whether the program exits. The `ExitSubjectCommand` isExit() method is hard coded to return true, so that when the isExit() command is run, the program "
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jialerk"
        },
        "content": "will exit."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "jialerk"
        },
        "content": "##### ExportSubjectCommand"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The execute() method of the `ExportSubjectCommand` calls the export() method of the storage instance to export all"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "data to the disk storage. "
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The isExit() method determines whether the program exits. The `ExportSubjectCommand` isExit() method is hard coded to return false, so that when the isExit() command is run, the program does not exit."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "jialerk"
        },
        "content": "##### FindSubjectCommand"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The execute() method of the `FindSubjectCommand` decodes the user input, then find subjects whose title contains the keywords the user input into the program. "
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "jialerk"
        },
        "content": "It then prints the title of the Subjects in the SubjectList whose title contains the keyword."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The isExit() method determines whether the program exits. The `FindSubjectCommand` isExit() method is hard coded to return false since the command does not exit the code."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "jialerk"
        },
        "content": "##### HelpSubjectCommand"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The execute() method of the `HelpSubjectCommand` prints a list of available commands at the main level of the program, "
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "jialerk"
        },
        "content": "for the user to understand the format of inputs, as well as types of input needed for execution."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The isExit() method determines whether the program exits. The `HelpSubjectCommand` isExit() method is hard coded to return false since the command does not exit the code."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "jialerk"
        },
        "content": "##### ListAllSubjectCommand"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The execute() method of the `ListAllSubjectCommand` groups different tasks and flashcards under each topic, and different topics under each subject, then prints an organized list "
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "jialerk"
        },
        "content": "of all the subjects, topics, tasks and flashcards."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The isExit() method determines whether the program exits. The `ListAllSubjectCommand` isExit() method is hard coded to return false since the command does not exit the code."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "jialerk"
        },
        "content": "##### ListSubjectCommand"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The execute() method of the `ListAllSubjectCommand` prints a list of all subjects in the SubjectList instance."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The isExit() method determines whether the program exits. The `ListSubjectCommand` isExit() method is hard coded to return false since the command does not exit the code."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jialerk"
        },
        "content": "##### QuizSubjectCommand"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The execute() method of the `QuizSubjectCommand` decodes the user input, and initiates a quiz for the subject that the user requested for."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "syncode98"
        },
        "content": "For example, if the user enters `quiz Maths`, then the application starts a quiz for the Maths subject."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The isExit() method determines whether the program exits. The `QuizSubjectCommand` isExit() method is hard coded to return false since the command does not exit the code."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "jialerk"
        },
        "content": "##### ResultSubjectCommand"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The execute() method of the `ResultSubjectCommand` decodes the user input, and prints out the results of previous SubjectQuizzes for the subject."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "syncode98"
        },
        "content": "For example, if the user enters `results Maths`, then the application prints out the results of the previous SubjectQuizzes attempted by the user for the Maths subject."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The isExit() method determines whether the program exits. The `ResultSubjectCommand` isExit() method is hard coded to return false since the command does not exit the code."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "jialerk"
        },
        "content": "##### SorrySubjectCommand"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The execute() method of the `SorrySubjectCommand` throws a `FailedParseException`, meaning the parser has failed to decode the user input. Then, the exception will result in the Ui printing the error back "
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "jialerk"
        },
        "content": "to the user."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The isExit() method determines whether the program exits. The `SorrySubjectCommand` isExit() method is hard coded to return false since the command does not exit the code."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "jialerk"
        },
        "content": "##### SubjectCommand"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `SubjectCommand` class is an abstract class that contains a abstract execute() method as well as a isExit() method, and is a super class for all the commands in the subjectcommand "
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package. This is to ensure that all other commands in the subjectcommand package can have the same method calls, and that execute() can be called on a SubjectCommand class, "
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "jialerk"
        },
        "content": "even if they are a subclass of the SubjectCommand class."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "jialerk"
        },
        "content": "#### topiccommand package"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `topiccommand` package holds all the necessary classes for executing methods at the subject level. The Class that will be created and executed depends "
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "jialerk"
        },
        "content": "on user input. A Class diagram of how the classes interact with each other in the topiccommand package is shown below."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "jialerk"
        },
        "content": "![TopicCommandClassDiagram](https://user-images.githubusercontent.com/47527482/98504309-9fb56680-2291-11eb-932d-2ffac059b101.jpg)"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003csub\u003e***Figure 3.2.2** UML class diagram for topiccommand package*\u003c/sub\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `topiccommand` package holds the following classes."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- AccessTopicCommand"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- AddTopicCommand"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- DeleteTopicCommand"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- ExitTopicCommand"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- FindTopicCommand"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- HelpTopicCommand"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- ListAllTopicCommand"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- ListTopicCommand"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- QuizTopicCommand"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- ResultTopicCommand"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- SorryTopicCommand"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- TopicCommand"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "jialerk"
        },
        "content": "All classes in the `topiccommand` package works the same way as the ones found in the `subjectcommand` package, but it deals with the `Topic` class instead of the `Subject` class. Notably, "
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jialerk"
        },
        "content": "there is a change in parameters, as the `TopicCommand` classes is missing the Storage parameter. This is due to the absence of `ExportCommand` in the TopicCommands, since we did not implement "
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "jialerk"
        },
        "content": "the export command for the subject level. The rest of the TopicCommands do not need the Storage parameter since none of the execute() methods of the Commands require it. "
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "jialerk"
        },
        "content": "For more information of the `subjectcommand` package, please refer to \u003ca href\u003d\"#subjectcommand\"\u003eSubjectCommand\u003c/a\u003e ."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "jialerk"
        },
        "content": "#### taskcommand package"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `taskcommand` package holds all the necessary classes for executing methods at the subject level. The Class that will be created and executed depends "
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "jialerk"
        },
        "content": "on user input. A Class diagram of how the classes interact with each other in the taskcommand package is shown below."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "jialerk"
        },
        "content": "![TaskCommandClassDiagram](https://user-images.githubusercontent.com/47527482/98503905-9e376e80-2290-11eb-90b8-274623ec400b.png)"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "jialerk"
        },
        "content": " "
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003csub\u003e***Figure 3.2.3** UML class diagram for taskcommand package*\u003c/sub\u003e"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "jialerk"
        },
        "content": " "
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `taskcommand` package holds the following classes."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- AddDeadlineCommand"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- AddEventCommand"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- AddTodoCommand"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- DeleteTaskCommand"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- DoneTaskCommand"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- FindTaskCommand"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- TaskCommand"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The Classes in the `taskcommand` package is different from the ones found in the other command packages. This is because all the `taskcommand` Classes are parsed by the `TopicParser`, since they work at the "
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Subject level, similar to the Topic Commands. Thus, they do not have their own Exit Commands, List Commands and Help Commands, since all those are handled by the Topic Commands."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "jialerk"
        },
        "content": "There are 3 different Add Task Commands, due to the 3 different formats of the Tasks that the user can save, namely `Event`, `Deadline` and `Todo`. The rest of the Task Commands have similar functionality to "
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "jialerk"
        },
        "content": "the ones found in the `subjectcommand` package. For more information of the `subjectcommand` package, please refer to \u003ca href\u003d\"#subjectcommand\"\u003eSubjectCommand\u003c/a\u003e ."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "jialerk"
        },
        "content": "#### flashcardcommand package"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `flashcardcommand` package holds all the necessary classes for executing methods at the topic level. The Class that will be created and executed depends "
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "jialerk"
        },
        "content": "on user input. A Class diagram of how the classes interact with each other in the flashcardcommand package is shown below."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "jialerk"
        },
        "content": "![FlashcardCommandClassDiagram](https://user-images.githubusercontent.com/47527482/98503810-6cbea300-2290-11eb-90c3-e0525258077b.png)"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003csub\u003e***Figure 3.2.4** UML class diagram for flashcardcommand package*\u003c/sub\u003e"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The `flashcardcommand` package holds the following classes."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- AddFlashcardCommand"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- DeleteFlashcardCommand"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- ExitFlashcardCommand"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- HelpFlashcardCommand"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- ListAllFlashcardCommand"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- ListFlashcardCommand"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- SorryFlashcardCommand"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- FlashcardCommand"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "jialerk"
        },
        "content": "All classes in the `Flashcardcommand` package works the same way as the ones found in the `subjectcommand` package, but it deals with the `Flashcard` class instead of the `Subject` class. Notably, "
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "jialerk"
        },
        "content": "there is a change in parameters, as the `FlashcardCommand` classes is missing the Storage parameter. This is due to the absence of `ExportCommand` in the FlashcardCommands, since we did not implement "
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "jialerk"
        },
        "content": "the export command for the subject level. The rest of the FlashcardCommands do not need the Storage parameter since none of the execute() methods of the Commands require it. Additionally, the flashcardcommand "
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package is also missing a few classes such as the `QuizCommand`, `ResultCommand` and `FindCommand` classes. This is due to the fact that at the topic level, there are only flashcards in each topic, and it would not "
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "jialerk"
        },
        "content": "make sense to quiz one flashcard at a time, thus the absence of the implementation. For more information of the `subjectcommand` package, please refer to \u003ca href\u003d\"#subjectcommand\"\u003eSubjectCommand\u003c/a\u003e ."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 3.3 List Package \u003ca name\u003d\"list\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This package contains different list classes used for managing a list of different card package objects. "
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "They are used to abstract the extra processing needed (if any) before or after interacting with the underlying list."
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The relationship between the classes is shown below."
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![ListClass](https://user-images.githubusercontent.com/15065550/98496925-98417f00-21f7-11eb-8102-bcaf2ce8dc7a.png)"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csub\u003e***Figure 3.3.1** UML class diagram for list package*\u003c/sub\u003e"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ✔️ **_TODO:_** Delete method should also be implemented here (just like the add method) and be called to do the delete operations "
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e instead of doing it directly through the underlying list for better cohesion."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ✔️ **_TODO:_** FlashcardList should also be created to manage the list of flashcards instead of directly operate on the"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ArrayList for better cohesion."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 3.4 Parser Package \u003ca name\u003d\"parser\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "The parser package consists of all the classes that are necessary to parse the user inputs. "
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "These classes are responsible to understand what the useer has input, and take the necessary action.   "
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This package consists of three classes:"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "-SubjectParser: This class parses all the user inputs at the main level. "
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "It deals with all the commands that relate to working with subjects, such as add and delete subjects."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "-TopicParser: This class parses all the user inputs at the subject level. "
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "It deals with all the commands that relate to working with topics and tasks, "
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "such as adding and deleting topics or tasks."
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "-FlashcardParser: This class parses all the user inputs at the topic level. "
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "It deals with all the commands that relate to working with flashcards, such as adding and deleting flashcards."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "The classes in this package directly communicate with the command package in order to execute the relevant commands."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 3.5 Ui Package \u003ca name\u003d\"ui\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "The ui package deals with handling user input and printing all the system outputs on the command line. "
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "It consists of one class, Ui. "
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This class is responsible to print all messages to the command line. "
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "The command classes call the methods in this class in order to print anything on the command line."
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "jialerk"
        },
        "content": "This class also deals with printing any messages when exceptions are encountered."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 3.6 Storage Package \u003ca name\u003d\"storage\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "There are two classes inside this package, both of which are inside `Storage.java`. The following diagram shows the"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "relationship between the two classes."
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![StorageClass](https://user-images.githubusercontent.com/15065550/97547893-9cfe6b80-198b-11eb-8475-0992c8274ee3.png)"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csub\u003e***Figure 3.6.1** UML class diagram for storage package*\u003c/sub\u003e"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### StorageBuilder \u003ca name\u003d\"Sbuilder\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "`StorageBuilder` class is a static inner class of the `Storage` class. It follows the builder pattern and its sole purpose"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "is to create `Storage` instances. The [builder pattern](https://en.wikipedia.org/wiki/Builder_pattern) is used to deal "
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "with the decrease in clarity due to the increase of the number parameters. Every instance of the `Storage` class should "
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "be created through `StorageBuilder`, and this is enforced by disabling the public constructor of the `Storage` class."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### Storage \u003ca name\u003d\"Sstorage\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "`Storage` class handles every operation that involves data storage, including storing, loading, and exporting of "
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "application data. Storing of data only happens when the application exits while loading of data only happens"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "when the application launches. On the other hand, exporting of data happens when the user runs `export` command."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "## 4. Implementation \u003ca name\u003d\"implementation\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 4.1 Storing data \u003ca name\u003d\"store-imp\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "`Storage` class stores the data following the same logical structure (subject -\u003e topic) of the application to "
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "make the stored data more presentable to the user. `Subject` and `Topic` data are stored as nested directories, while "
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "`Flashcard` and `Result` data are stored in [JSON](https://en.wikipedia.org/wiki/JSON) format so that they are readable "
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "to the users and allows them to change the saved data manually. "
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "[Gson](https://github.com/google/gson/blob/master/UserGuide.md) library is used to create the json files."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "`Task` data are stored differently as text files due to "
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "legacy reason, but they are also readable and can be changed manually as well. "
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e 📝️️ **_NOTE:_** If the users modify the file contents with wrong syntax, the data in the affected files will"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e not be loaded and empty data will be returned instead so that the application can still run."
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "An example of the structure mentioned is shown in the figure below."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "data                            \u003cem\u003e--\u003e Data main folder\u003c/em\u003e"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "└── CS2113T                     \u003cem\u003e--\u003e CS2113T subject folder\u003c/em\u003e"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    ├── Java                    \u003cem\u003e--\u003e Java topic folder under CS2113T subject\u003c/em\u003e"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    │   ├── topicResults.json"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    │   └── flashcards.json"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    ├── subjectResults.json"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    └── tasks.txt"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csub\u003e***Figure 4.1.1** Sample directory structure*\u003c/sub\u003e"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "##### File formats"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "One `tasks.txt` file is created under each subject folder, storing the tasks (Todo, Event, Deadline) data under "
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "that subject. An example of the file content is shown below."
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "T | 1 | someTodoTask                                    \u003cem\u003e--\u003e Todo task\u003c/em\u003e"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "D | 0 | someDeadlineTask | 11:59 PM 20 Dec 2020         \u003cem\u003e--\u003e Deadline task\u003c/em\u003e"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "E | 0 | someEventTask | 1:00 PM 10 Nov 2020             \u003cem\u003e--\u003e Event task\u003c/em\u003e"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csup\u003e***Figure 4.1.2** Sample tasks.txt content*\u003c/sup\u003e"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The first column of data shows the type of task, where T corresponds to `Todo` task, D corresponds to `Deadline` "
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "task, and E corresponds to `Event` task. The second column shows if a task is completed, where 0 means not completed "
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "while 1 means completed. The third column shows the name of a task. Lastly, the fourth column shows the time and date of "
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "a deadline or event task. "
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Moving on, one `subjectResults.json` is created under each subject folder, and one `topicResults.json` is created "
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "under each topic folder. `subjectResults.json` stores the quiz results the users have obtained from doing quizzes under "
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "a subject, while `topicResults.json` stores the quiz results the users have obtained from doing quizzes under a topic. "
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Both of the files have the same content format, and an example of "
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "the file content is shown below."
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "["
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  {                                    \u003cem\u003e--\u003e Result record 1\u003c/em\u003e"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"score\": 1.0,                      \u003cem\u003e--\u003e Score obtained\u003c/em\u003e"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"maxScore\": 1.0,                   \u003cem\u003e--\u003e Maximum score that can be obtained\u003c/em\u003e"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"description\": \"Excellent\"         \u003cem\u003e--\u003e Result description\u003c/em\u003e"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  },"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  {                                    \u003cem\u003e--\u003e Result record 2\u003c/em\u003e"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  },"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  ..."
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "]"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csup\u003e***Figure 4.1.3** Sample subjectResults.json content*\u003c/sup\u003e"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This content format is a result of converting a list of `Result` data into json form. "
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Lastly, one `flashcards.json` file is created under each topic folder, storing all the flashcard data the users "
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "have added under a specific subject and topic. An example of the file content is shown below."
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "["
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  {                                            \u003cem\u003e--\u003e Flashcard 1\u003c/em\u003e"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"question\": \"x + y \u003d 4. y \u003d ? \","
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"answer\": \"4 - x\""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  },"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  {                                            \u003cem\u003e--\u003e Flashcard 2\u003c/em\u003e"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  },"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  ..."
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "]"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csup\u003e***Figure 4.1.4** Sample flashcard.json content*\u003c/sup\u003e"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Similarly, this content format is a result of converting a list of `Flashcard` data into json form."
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "##### Behavior"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The implementation stores the data in a cascading manner, meaning that when a call to save topics is made, all the data "
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "under the topics will be saved. Similarly, when a call to save subjects is made, all the data under the subjects"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "including topics will be saved. The behavior mentioned is shown in the diagram below."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![StorageSaveSubjects](https://user-images.githubusercontent.com/15065550/97779044-cdcfd380-1b38-11eb-8e5e-a4f258a726e5.png)"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csub\u003e***Figure 4.1.5** UML sequence diagram for storing subjects*\u003c/sub\u003e"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![StorageSaveTopics](https://user-images.githubusercontent.com/15065550/97779045-ce686a00-1b38-11eb-821f-1b468dcb996e.png)"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csub\u003e***Figure 4.1.6** UML sequence diagram for storing topics*\u003c/sub\u003e"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "As can be seen in _figure 4.1.5_, all the data is deleted from the disk before saving of data takes place. It is implemented this way"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "to make sure the deletion of a subject or topic by the user is also saved. Otherwise, the subject or topic will not be"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "deleted since the rest of the method calls only replace or create data."
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ✔️ **_TODO:_** As the amount of data grows larger, this saving algorithm can get very slow since it only saves the data"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e when the application exits, not to mention the (most of the time) needless deletion of all data before each save. "
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e To speed up the process, the implementation can be changed such that data is saved right after each user command that involves data manipulation."
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "jialerk"
        },
        "content": "### 4.2 Loading data \u003ca name\u003d\"load-imp\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "For the data stored in json format, they are loaded using the same [Gson](https://github.com/google/gson/blob/master/UserGuide.md)"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "library, whereas for the data `tasks.txt`, they are parsed line by line and converted into corresponding `Task` objects."
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The loading of data follows a similar cascading manner as saving, as can be seen in the diagram below."
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![StorageLoadSubjects](https://user-images.githubusercontent.com/15065550/97828501-1cd25180-1c7c-11eb-94e9-9c7731711e30.png)"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csub\u003e***Figure 4.2.1** UML sequence diagram for loading subjects*\u003c/sub\u003e"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![StorageLoadTopics](https://user-images.githubusercontent.com/15065550/97779042-cc9ea680-1b38-11eb-9e06-f36274dd4286.png)"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csub\u003e***Figure 4.2.2** UML sequence diagram for loading topics*\u003c/sub\u003e"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Note that only `Subject` and `Topic` data are sorted; `Result`, `Flashcard`, and `Task` data still follow the added "
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "order. This is because subjects and topics are stored as directories, and the order of the directories loaded is not "
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "guaranteed by the Java, so the sorting is just to fix the inconsistency of the order. The rest of the data, on the"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "other hand, is guarenteed to have the same order every time they are loaded, so they are not sorted. "
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "jialerk"
        },
        "content": "### 4.3 Exporting data \u003ca name\u003d\"export-imp\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The user can export all data of the application to the pre-defined `export/data.json` in the same directory where "
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "the application runs. An example of the file content is shown below."
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "["
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  {                                                                  \u003cem\u003e--\u003e Subject 1\u003c/em\u003e"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"title\": \"CS2113T\",                                                "
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"topics\": {"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "      \"topics\": [                                                    \u003cem\u003e--\u003e Topics under CS2113T subject\u003c/em\u003e"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        {                                                            \u003cem\u003e--\u003e Topic 1\u003c/em\u003e"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"title\": \"Java\",                                        "
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"flashcards\": \u003cem\u003e[same as the content of flashcards.json]\u003c/em\u003e,    \u003cem\u003e--\u003e Flashcards under Java topic\u003c/em\u003e"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"results\": {"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            \"resultList\": \u003cem\u003e[same as the content of topicResults.json]\u003c/em\u003e \u003cem\u003e--\u003e Results under Java topic\u003c/em\u003e"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          }"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        },"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ..."
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "      ]"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    },"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"tasks\": {                                                       \u003cem\u003e--\u003e Tasks under CS2113T subject\u003c/em\u003e"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "      \"taskList\": ["
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        {                                                            \u003cem\u003e--\u003e Task 1\u003c/em\u003e"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"description\": \"someTodoTask\","
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"isDone\": false"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        },"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        {                                                            \u003cem\u003e--\u003e Task 2\u003c/em\u003e"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"dateTime\": {"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            \"date\": {"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"year\": 2020,"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"month\": 12,"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"day\": 20"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            },"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            \"time\": {"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"hour\": 23,"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"minute\": 59,"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"second\": 0,"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"nano\": 0"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          },"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"description\": \"someDeadlineTask\","
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"isDone\": false"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        },"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ...                                                       "
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "      ]"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    },                            "
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"results\": {"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "      \"resultList\": \u003cem\u003e[same as the content of subjectResults.json]\u003c/em\u003e    \u003cem\u003e--\u003e Results under CS2113T subject\u003c/em\u003e"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  },"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  ...                                                               \u003cem\u003e--\u003e More subjects\u003c/em\u003e"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "]"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csup\u003e***Figure 4.3.1** Sample data.json content*\u003c/sup\u003e"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This content format is a result of converting a list of `Subject` objects with populated data into json form."
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ✔️ **_TODO:_** Importing of the exported data is not yet supported, and it would make sense to implement it in the"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e future versions. However, it may not be straightforward as type conversion is needed to convert the data into the"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e right types "
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e (refer to [Gson documentation](https://github.com/google/gson/blob/master/UserGuide.md#TOC-Collections-Limitations) for more details)."
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### 4.4 Parsing Commands \u003ca name\u003d\"parse-imp\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "The parser package contains the following three classes which are responsible for making sense of the user input."
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### SubjectParser"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "The SubjectParser class parses the user inputs at the main level."
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "The diagram below shows how the SubjectParser class is implemented."
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "![SUbjectParser](http://www.plantuml.com/plantuml/svg/VTBBIiD05CRn_Jp5q5LRY0zGfBHumOKBjKympPngv2HfvoAjJ-yO8npbEt4JoF_B-AFC9YONKcxP69TJx-hKVBX4jkzCjTxb_JlLwSc5I65r_7xCToaqtQizPEQRlcrTvnV6E4xopHMTikCud-qlD5iOM_x-76MhjRqxDsbyENwrN9hVVmygEEMwgj3GqzGnXZWIn78JawPzB4tLWegrO2Yqg4vhhMEU4c-PLJGUOBVSOZeUw7ew7_kGrBinL9KEEvQBAOIF7RhhVsRdlGRUUgzhPPoWZZli114ZFJ4bqfotGrMfi6Ejc48mxjXyQ3glYUzBKxsWOgqO0Ykg-jLz8pvgseVIL2seM2k6G8ig_btZpqYzj7LDCQfSs35OJ24PTum-vUPJ4p-Nfdf1nLen15PKiJHGp9oYXdqPiig57OF5599n7zKOj-j3kAWsb35DBA5CEuZAS_XS7hYoNMOscn9po-OB)"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003csub\u003e***Figure 4.4.1** UML sequence diagram for subject parser*\u003c/sub\u003e"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### FlashcardParser"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "The FlashcardParser class parses the user inputs at the topic level."
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "The diagram below shows how the FlashcardParser class is implemented."
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "![FlashcardParser](http://www.plantuml.com/plantuml/svg/ZPBTIiD048NlzocMNhM5-015Iei_UE65q2SOCgCDJ9AwFw9lxo1I9CmUpCt2dhCVtu4SSg5KwgWXK2qpzMNue29ndaAtVrJAvvuIlr3AadONEsHzAccOtk9hLRsRnv4ctjXZBNzlRkIzakRrIZw7ijg4QD-25hjzVB3qUltxTBiDLmilTrctNUUNMJ0iY6PnpNN8mFpPKc3kvC3SBRDW63QFf8hjZwfeW5_16xm-YuFqblIB5SJS7d1aHlBB68bxNHQ8yeLPL8gqdUz_SgJjDO1veyw2WUZNEOjUsWkUB0N-JWxitJAB2rkOj_nESqfVID0f04E_pV8FdDXfY2Ls5wUg6WuMrr6_0G00)"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003csub\u003e***Figure 4.4.2** UML sequence diagram for flashcard parser*\u003c/sub\u003e"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### TopicParser"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "The TopicParser class parses the user inputs at the topic level."
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This class is implemented in a similar manner as the FlashcardParser and SubjectParser classes."
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### 4.5 Quiz \u003ca name\u003d\"quiz-imp\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The abstract quiz class  contains a checkAnswer() method that checks the answer that the user had given with the correct answer of the quiz. "
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "syncode98"
        },
        "content": "If the user enters the correct answer, the existing score is incremented by one. Else, the contents of the flashcards and the incorrect answer provided by"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "syncode98"
        },
        "content": "the user are transferred to the  `incorrectAnswers` list. Once the user finished the quiz, the application would print the "
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "syncode98"
        },
        "content": "questions that the users did not answer correctly, along the the answer that was provided by the user."
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "jialerk"
        },
        "content": "#### Initiating a subject quiz"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "syncode98"
        },
        "content": "You can start a subject quiz by entering `quiz NAMEOFSUBJECT`. Subsequently, the application retrieves the QuizSubjectCommand"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "syncode98"
        },
        "content": "after parsing the command and calls for the `startQuiz` method."
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The `startQuiz` method calls for the  `setupQuiz` method checks for the presence of topics or flashcards. Else, the application throws the `NoTopicException` for the former, and the "
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "syncode98"
        },
        "content": "`NoFlashcardException` for the latter. If the topics have flashcards, then these are transferred to the "
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "syncode98"
        },
        "content": "`SubjectQuiz` class, while the maximum score of the quiz is set to be the total number of flashcards in the list of flashcards"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "syncode98"
        },
        "content": "present in the `SubjectQuiz` class . "
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The application now returns to the `startQuiz` method and the current score of the quiz is set to zero. Subsequently, the"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "syncode98"
        },
        "content": "application begins printing the questions from the flashcards and checks the answer that you provide. If you want to stop the "
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "syncode98"
        },
        "content": "quiz, use the `stop` command. The application will then print out the score that you obtain. If you complete the quiz"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "syncode98"
        },
        "content": "then the application not only prints the score, but it also prints the incorrect answers from the quiz."
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The following diagram shows how you can initiate the quiz for the Maths Subject."
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "syncode98"
        },
        "content": "![first](https://user-images.githubusercontent.com/46095141/98517456-e5c9f480-22a8-11eb-98ad-87c08752e1b1.png)"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "sugandha929"
        },
        "content": " \u003csub\u003e***Figure 4.5.1** UML sequence diagram for subject quiz*\u003c/sub\u003e"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "jialerk"
        },
        "content": "#### Initiating a topic quiz"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Provided that you have used the `subject NAMEOFSUBJECT` command to access a subject,you can start a subject quiz by entering `quiz NAMEOFTOPIC`. Subsequently, the application retrieves the QuizTopicCommand"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "syncode98"
        },
        "content": "after parsing the command and calls for the `startQuiz` method. This method class for the `setupQuiz`method, which  throws the `NoFlashcardException` for when the topic does not "
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "syncode98"
        },
        "content": "have any flashcards. The application then returns back to the `startQuiz` method. The implementation of the `startQuiz` method is similar"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "syncode98"
        },
        "content": "to that of the SubjectQuiz class."
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The following diagram shows how you can initiate the quiz for a topic speed under the Maths subject."
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "syncode98"
        },
        "content": "![topic](https://user-images.githubusercontent.com/46095141/98517458-e793b800-22a8-11eb-81c9-50581c178043.png)"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "sugandha929"
        },
        "content": " \u003csub\u003e***Figure 4.5.2** UML sequence diagram for topic quiz*\u003c/sub\u003e"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e 📝️ **_NOTE:_** For both the subject quiz and the topic quiz, the application only prints out the incorrectAnswer"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003eif the user has completed the quiz. If the user stops the quiz without completing it, then the application will only"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003eshow the score obtained by the user. "
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### 4.6 Sorting tasks \u003ca name\u003d\"sort-imp\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The application sorts the tasks according to their dates and times. Tasks which are due soon are placed at the front"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "syncode98"
        },
        "content": "while tasks which are due later are placed at the end of the task list. `Todo` tasks are placed at the end of the tasklist."
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Their `LocalDateTime` variables are assigned the  `LocalDateTimeMax` value. This is to ensure that the sorting can be done"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "syncode98"
        },
        "content": "for all tasks. "
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### 4.7 Results feature\u003ca name\u003d\"results-imp\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### Updating results"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The `updateResult` method in the `Result`class updates the result for a given quiz by setting the score and the description."
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "syncode98"
        },
        "content": "There are three categories of descriptions: `Fail` for getting a score which is lesser than half of the maximum score, `Pass`"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "syncode98"
        },
        "content": "for obtaining a score above half of the maximum score and `Excellent` for getting the maximum score in a quiz."
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### 4.7.1 Printing out the results for a subject"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "syncode98"
        },
        "content": " For the results of a subject , the `printSubjectResults` method in the Ui class checks if there are any results of previous subject quizzes for that particular subject. "
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "syncode98"
        },
        "content": " "
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "syncode98"
        },
        "content": " ![sr](https://user-images.githubusercontent.com/46095141/98535180-a3141680-22c0-11eb-9e75-519ea76684bd.png)"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "rashien3"
        },
        "content": "\u003csub\u003e***Figure 4.7.1** UML sequence diagram for requesting results of the Maths subject*\u003c/sub\u003e"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### 4.7.2 Printing out the results for a topic"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "syncode98"
        },
        "content": "For the results of a topic, the `printTopicResults` method checks if the topic has any any results from previous topic quizzes."
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The user has to access the particular subject level to use this command."
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "syncode98"
        },
        "content": "![tr](https://user-images.githubusercontent.com/46095141/98535184-a3acad00-22c0-11eb-94fd-d911a346af11.png)"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "rashien3"
        },
        "content": "\u003csub\u003e***Figure 4.7.2** UML sequence diagram for requesting results of the Speed topic of the Maths subject*\u003c/sub\u003e"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### 4.8 Adding objects \u003ca name\u003d\"adding-imp\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Each of the add commands have an execute() method. The execute() method for AddSubjectCommand add subjects into the subject list, the execute() method for AddTopicCommand "
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "jialerk"
        },
        "content": "add topics in a subject, while the execute() method for AddTodoCommand, AddDeadlineCommand and AddEventCommand adds tasks in a subject."
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "jialerk"
        },
        "content": "subject."
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "jialerk"
        },
        "content": "#### Adding a subject"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "jialerk"
        },
        "content": "You can add a subject by entering `add [SUBJECT_NAME]`. The subject will be added to a `SubjectList` created when the program initialises. "
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "jialerk"
        },
        "content": "After the program initialises, the program will ask for user input. The `Ui` will read the user input using the readCommand() method, then the "
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "jialerk"
        },
        "content": "the `SubjectParser` will parse the command. Since the user input is `add [TOPIC_NAME]`, the program will register it as a command to add a `Subject`, "
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "jialerk"
        },
        "content": "and will create a new `AddSubjectCommand`. This `AddSubjectCommand` is then passed back to the main function, where its execute() method will run. "
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The execute method decodes the user input. If the `[SUBJECT_NAME]` is not a title of another `Subject` already on the list, it will create a new `Subject`, "
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "jialerk"
        },
        "content": "and add that new `Subject` created into the `SubjectList` that was created during initialisation of the program. The `Ui` will then print the adding of the "
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "jialerk"
        },
        "content": "`Subject` into the list. The program then returns to the main function, where it waits for next user input."
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "jialerk"
        },
        "content": "A Sequence diagram of adding a `Subject` Maths is shown below."
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "jialerk"
        },
        "content": "![AddSubjectSequenceDiagram](https://user-images.githubusercontent.com/47527482/98213500-1c89cd00-1f80-11eb-9b0c-9da37446b530.png)"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003csub\u003e***Figure 4.8.1** UML sequence diagram for adding a subject*\u003c/sub\u003e"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "jialerk"
        },
        "content": "#### Adding a topic/task"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "jialerk"
        },
        "content": "you can add a `Topic` by entering `add [TOPIC_NAME]`. Additionally, you can add a `Todo` task by entering `todo [DESCRIPTION]`, add a `Deadline` "
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "jialerk"
        },
        "content": "task by entering `deadline [DESCRIPTION] /by [TIME]`, and add an `Event` task by entering `event [DESCRIPTION] /at [TIME]`. This command can only "
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "jialerk"
        },
        "content": "be entered in the subject level of the program, which can be accessed using the command `subject [SUBJECT_NAME]`. The documentation of the "
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "jialerk"
        },
        "content": "implementation and how to access a subject can be found in \u003ca href\u003d\"#accessing-imp\"\u003e4.8 Accessing subjects/topics implementation\u003c/a\u003e."
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Otherwise, adding topics and tasks follows the same implementation as adding a subject."
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### 4.9 Accessing levels \u003ca name\u003d\"accessing-imp\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Each of the access commands have an execute() method and a goToSubject()/goToTopic() method. The AccessSubjectCommand class allows users to "
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "jialerk"
        },
        "content": "access the subject level of a subject specified in the user input from the main level, while the AccessTopicCommand class allows users to access the topic level "
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "jialerk"
        },
        "content": "of a topic specified in the user input from a subject level."
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "jialerk"
        },
        "content": "#### Accessing a subject"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "jialerk"
        },
        "content": "You can access a subject by entering `subject [SUBJECT_NAME]`. The subject needs to be a subject that already exists in the list, and you can "
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "jialerk"
        },
        "content": "add the `Subject` into the `SubjectList` by using the `add [SUBJECT_NAME]` feature, elaborated further in \u003ca href\u003d\"#adding-imp\"\u003e4.7 Adding objects implementation\u003c/a\u003e."
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "jialerk"
        },
        "content": "For example, after adding a `Subject` CS2101, the CS2101 `Subject` can be accessed by entering `access CS2101`. The application first reads the command using "
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "jialerk"
        },
        "content": "the Ui class, then parses the user input using the `SubjectParser` class, similar to adding a subject. The program will register the user input as a command to "
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "jialerk"
        },
        "content": "access a subject. The SubjectParser will create a new `AccessSubjectCommand` class, and this class will be returned to the main function. "
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The main program will run the execute() method of `AccessSubjectCommand`. The execute() method checks for subjects in the `SubjectList` whose title "
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "jialerk"
        },
        "content": "matches the `[SUBJECT_NAME]`, and if a subject matches, the subject will be passed as a parameter to the goToSubject() method. The goToSubject() method will then "
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "jialerk"
        },
        "content": "have a loop that reads user inputs and parse these inputs to create new `TopicCommand` or `TaskCommand` classes to execute."
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "jialerk"
        },
        "content": "The sequence diagram of accessing a `Subject` Maths is shown below."
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "jialerk"
        },
        "content": "![AccessSubjectSequenceDiagram](https://user-images.githubusercontent.com/47527482/98199431-171f8900-1f66-11eb-9dfe-fc263ccfe15f.png)"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003csub\u003e***Figure 4.9.1** UML sequence diagram for accessing a subject*\u003c/sub\u003e"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### Accessing a Topic \u003ca name\u003d\"accessing-topic\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "jialerk"
        },
        "content": "You can access a topic by entering `topic [TOPIC_NAME]`. The topic needs to be a topic that already exists in the list, and you can "
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "jialerk"
        },
        "content": "add the `Topic` into the `TopicList` of a `Subject` by using the adding a topic feature, elaborated further in \u003ca href\u003d\"#adding-imp\"\u003e4.7 Adding objects implementation\u003c/a\u003e."
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### 4.10 `list all` command \u003ca name\u003d\"listall-imp\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "rashien3"
        },
        "content": "While the syntax of the `list all` command is the same on the main, subject and topic levels,"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "rashien3"
        },
        "content": "there are 3 separate ListAllXYZCommands for each level. Although all 3 commands classes call `Ui.printAll(subjects,activeSubject,activeTopic)`,"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "rashien3"
        },
        "content": "the 3 classes are kept separate so that `printAll()` can recognise what object the user is accessing."
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "rashien3"
        },
        "content": "The following sequence diagram shows how you can proccess the `list all` command from the subject level."
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "rashien3"
        },
        "content": "![ListAllTopicSequenceDiagram](https://user-images.githubusercontent.com/50734854/98481821-11f95d00-2238-11eb-90c6-9bb081956da5.png)"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003csub\u003e***Figure 4.9.1** UML sequence diagram for list all at topic level*\u003c/sub\u003e"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "rashien3"
        },
        "content": "If the `list all` command is given at the topic level, `printTreeTopic()` will check if each topic is the active topic each loop,"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "rashien3"
        },
        "content": "instead of `Ui.printAll` checking each subject."
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "rashien3"
        },
        "content": "\u003e 📝️ **_NOTE:_** This command uses unicode characters such as \"├\" and \"└\". You may consider changing the characters to ASCII"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "rashien3"
        },
        "content": "\u003e characters only for the sake of compatibility."
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "## 5. Logging \u003ca name \u003d \"logging\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "We use [java.util.logging](https://docs.oracle.com/en/java/javase/11/docs/api/java.logging/java/util/logging/package-summary.html) "
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package for logging. Whenever you need to use logging in a class, add this line "
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "syncode98"
        },
        "content": "```"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "syncode98"
        },
        "content": "java"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "private static final Logger logger \u003d Logger.getLogger(CurrentClass.class.getName());"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "to the start of the class to get a logger instance,"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "where `CurrentClass` is replaced by the class name you are adding the logger to. "
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Subsequently, you can use the logger instance created to start logging. To learn more about"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "how logging works, read the [official logging documentation](https://docs.oracle.com/javase/7/docs/technotes/guides/logging/overview.html)."
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The current configuration logs all the messages with log levels above `FINE` into a file (`revisED.log`) in the same"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "directory where the application is run. You can find more details about the logging configurations (and change them or add more)"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "in `src/main/resources/logging.properties`. "
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "For consistency, you should only change the behavior of logging via this file."
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "## 6. Documentation \u003ca name\u003d\"documentation\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "All project documentations are put under the `/docs` folder. The following tools are used to write the documentations:"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " "
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* [Jekyll](https://jekyllrb.com/) to manage documentation"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* [Markdown](https://guides.github.com/features/mastering-markdown/) syntax for formatting"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* [PlantUML](https://plantuml.com/) for drawing diagrams"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "To learn how set the documentation website up and maintain it, follow the guide [Using Jekyll for project documentation](https://se-education.org/guides/tutorials/jekyll.html)."
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "To convert the documents to PDF files for distribution, follow the guide [Saving web documents as PDF files](https://se-education.org/guides/tutorials/savingPdf.html)."
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "## 7. Testing \u003ca name\u003d\"testing\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This section describes different types of tests used in the application and the ways to carry them out. "
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 7.1 JUnit Tests"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "We use JUnit to write all unit tests and integration tests for the project. If you are new to JUnit, "
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "refer to the [JUnit Tutorial](https://se-education.org/guides/tutorials/junit.html)."
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "All the JUnit Tests are located under `src/test` folder. To run all the tests available in the project,"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "open a console in the project root directory and run `gradlew.bat test` if you are using Windows or `./gradlew test` if "
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "you are using Mac/Linux."
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Alternatively, you can run the `test` task under `Tasks \u003e verification \u003e test` in the Gradle tool window if "
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "you are using IntelliJ."
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 7.2 I/O Redirection Tests"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "We use I/O redirection to test the actual output of the application against the expected output using a set of different"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "inputs."
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "To run the test, open a console in the `text-ui-test` folder under the project root and run `runtest.bat` if you"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "are using Windows or `./runtest.sh` if you are using Mac/Linux. If the test is successful,"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "you will see the following message in the last line of the output."
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Test passed!"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "If the test fails, you will instead see the following message in the last line of the output."
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Test failed!"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "To see what goes wrong, you can compare the content of `ACTUAL.txt` and the content of `EXPECTED.txt` inside the same folder,"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "where `ACTUAL.txt` contains the actual output of the application and `EXPECTED.txt` shows the expected output of the "
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "application given the inputs."
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e 📝️️ **_NOTE:_** You can change the inputs in `input.txt` and the expected output in `EXPECTED.txt` if you would like to"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e test more aspects of the application or if the input/expected output changes due to code modification."
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 7.3 Checkstyle"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "We use [Checkstyle](https://checkstyle.sourceforge.io/) "
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "to check if all the developers comply to the coding standards. The rules and configurations can be found"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "in `checkstyle.xml` under `config/checkstyle` folder in the project root. Refer to the official documentation"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "to learn more about how to configure the rules."
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "To run the checks, open a console in the project root directory and run `gradlew.bat checkstyleMain` if you are using Windows "
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "or `./gradlew checkstyleMain` if you are using Mac/Linux. "
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Alternatively, you can run the `checkstyleMain` task under `Tasks \u003e other \u003e checkstyleMain` in the Gradle tool window if "
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "you are using IntelliJ."
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "## Appendix A: Product scope \u003ca name\u003d\"product-scope\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This section describes the scope of the application. To be specific, the target audience and "
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "the uses and benefits of this application."
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### Target user profile \u003ca name\u003d\"Ptarget\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The targeted audience are university students , aged 18 - 25 who have access to a computer. The students must be familiar"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "syncode98"
        },
        "content": "with applications that run on the command-line interface. Currently, this application is created for students who study in "
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Singaporean universities."
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### Value proposition \u003ca name\u003d\"Pvalue\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "syncode98"
        },
        "content": "This application aims to help students to keep track of their revision. Students should be"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "syncode98"
        },
        "content": "able to revise their subjects effectively through this application by adding various questions"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "syncode98"
        },
        "content": "and answers in the form of flashcards. After that, students can refer to the flashcards to"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "syncode98"
        },
        "content": "revise the subjects. Furthermore, they can take quizzes and see if they grasp the topics or subjects well"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "syncode98"
        },
        "content": "enough to attend their school based exams."
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Students who find it hard to keep track of their assignments would also find this application"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "syncode98"
        },
        "content": "useful since it lets the students add their tasks. The application then reminds the students"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "syncode98"
        },
        "content": "regarding the upcoming tasks, which would prompt the students to prepare them."
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Students who find it difficult to organise would find this app useful since it"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "syncode98"
        },
        "content": "offers a one stop solution to manage both their revision and their upcoming tasks ."
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "## Appendix B: User Stories \u003ca name\u003d\"user-story\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This section summarises various user stories of this application in the table below."
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "|Version| As a ... | I want to ... | So that I ...|"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "syncode98"
        },
        "content": "|v1.0|new user| add a flash card intuitively|don\u0027t get put off by learning a new program |"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "|v1.0|long time user| categorize the flashcards to different categories|know where to look for which flashcard|"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "|v1.0|organised person| see neat UI and flashcard organization| will want to use the program|"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "syncode98"
        },
        "content": "|v1.0|student|revise all my notes for different subjects|do not have to use multiple applications/websites to revise|"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "|v1.0|long time user|add flashcards efficiently |can save time when need to add multiple flashcards|"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "|v1.0|long time user|find a to-do item by name|can locate a to-do without having to go through the entire list|"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "|v1.0|student|do quizzes on the flashcards added| can know how much I remember the content|"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "|v2.0|forgetful student|be notified of assignments which are due in a week|do not forget them|"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "|v2.0|new user|see usage instructions|can refer to them when I forget how to use the application|"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "|v2.0|CS student|export all data into a readable format| can import the data into another application I made|"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "|v2.0|normal user| be able to view my data saved on the disk easily| can do modify the data without launching the app|"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "|v2.0|long time user| see all the subjects, topics, and number of flashcards I have added| know what I have added|"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "## Appendix C: Non-Functional Requirements \u003ca name\u003d\"nfr\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The following are the requirements that the application should satisfy:"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. The application should be easily maintainable when bugs and errors occur. "
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. The application should be scalable for possible future expansion of the project."
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. The application should run on any mainstream OS as long as it has Java 11 or above installed."
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Application data should be portable so that it can be transferred between devices."
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. The application should be easy to use or come with a detailed user guide/help for better user experience."
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. The application should not crash when invalid or malicious user input is received."
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Users should be allowed to modify the saved data manually without causing disruption to the application operations."
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "## Appendix D: Glossary \u003ca name\u003d\"glossary\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### A"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `AccessSubjectCommand` - A command in the subjectcommand package which returns the subject that the user wants to access."
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `AccessTopicCommand` - A command in the topiccommand package which returns the topic that the user wants to access."
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `AddDeadlineCommand` - A command in the taskcommand package which adds a deadline task in the application."
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `AddEventCommand` - A command in the taskcommand package which adds an event task to the application."
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `AddFlashcardCommand` - A command  in the flashcardcommand package which adds a flashcard in the application."
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `AddSubjectCommand` - A command in the subjectcommand package which adds a subject to the application."
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `AddTodoCommand` - A command in the taskcommand package which adds a todo task in the application."
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `AddTopicCommand` - A command  in the topiccommand package which adds a topic to the application."
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. Application - Refers to the revisED application which the user is using."
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. attributes - variables in a class"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### B"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `BaseList` - An abstract class in the list package which all others lists inherit from."
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. Builder Pattern - A methodology used in the Storage class to ensure that the clarity does not decrease even if the"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "syncode98"
        },
        "content": "number of parameters increase."
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### C"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `card` - Package which contains the quizcard package, task package and the Flashcard,Topic and Subject classes."
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. Checkstyle - Tool that checks the coding standards in the application."
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. CLI - Command Line Interface"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Command` - An abstract class in the command package which is inherited by all the command classes."
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `command` - A package which holds the 4 command packages: subjectcommand,topiccommand,taskcommand,flashcardcommand. This package "
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "syncode98"
        },
        "content": "is in charge of returning the relevant subject,task,topic or flashcard ."
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### D"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `DataLoadingException` - An exception thrown if the application is not able to load data. "
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1.  `DateTime` - A variable in Event and Deadline classes which tracks the time and date at which the"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "syncode98"
        },
        "content": "task has to be completed."
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Deadline` - A class in the taskcard package which refers to a task with a deadline. Inherits from the Task class."
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `DeleteFlashcardCommand` - A command in the flashcardcommand package which deletes a flashcard from the application."
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `DeleteSubjectCommand` - A command in the subjectcommand package which deletes a subject from the application."
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `DeleteTaskCommand` - A command in the taskcommand package which deletes a task from the application."
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `DeleteTopicCommand` - A command in the topiccommand package which deletes a topic from the application."
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `description` - A variable in the Result class which describes the grade obtained during a quiz."
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `description` - A variable in the Task class which describes the task to be completed."
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "syncode98"
        },
        "content": "  "
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### E"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Event` - A class in the taskcard package which refers to an event. Inherits from the Task class."
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Excellent` - A description for a quiz present in the Result class which states that the user obtained full marks for the quiz."
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Exception ` - A class which holds conditions that the application would throw in the event that the input entered"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "syncode98"
        },
        "content": "is incorrect."
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `exception` - A package which holds all the exceptions used in the application. These exceptions are delcared as individual"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "syncode98"
        },
        "content": "classes, all extending the Exception class."
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `execute` - A command in Command classes which executes the required action by the command."
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `ExitFlashcardCommand` - A command in the flashcardcommand package which allows the user to exit the topic level to return to the subject level."
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `ExitSubjectCommand` - A command in the subjectcommand package which allows the user to exit the application."
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `ExitTaskCommand` - A command in the taskcommand package which allows the user to exit the subject level to return to the main level."
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `ExitTopicCommand` - A command in the topiccommand package which allows the user to exit the subject level to return to the main level."
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `export` - A User Command to export the data to external file."
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### F"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Fail` - A description for a quiz which states that the user failed the quiz."
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `FailedParseException` - An exception thrown in the SorrySubjectCommand if the application is not able to read the commands."
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `FINE` - A log level, which indicates the severity of the message."
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Flashcard` - A class in the card package which instantiates the flashcard object.Contains the question and answer feature of the flashcard."
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `FlashcardCommand` - An abstract class that is inherited by all the other FlashcardCommand classes in the FlashCardCommand package."
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `flashcardcommand` - A package which holds the different FlashcardCommand classes."
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `flashcardexception` - A package which holds all the exceptions for methods related to flashcard operations."
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `FlashcardParser` - A class in the parser package which reads the user commands to call the relevant Flashcard command."
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `FindSubjectCommand` - A command in the subjectcommand package which finds the subject which the user requested for."
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `FindTaskCommand` - A command in the taskcommand package which finds the task which the user requested for."
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `FindTopicCommand` - A command in the topiccommand package which finds the topic which the user requested for."
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### G"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1.  GSON - Used to create the Json files in the external data file."
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `goToSubject`- A method in the AccessSubjectCommand class which allows the application to transition to the"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Subject Level from the main level."
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `goToTopic` - A method in the AccessTopicCommand class which allows the application to transfer from "
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "syncode98"
        },
        "content": "the Subject Level to the Topic Level."
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1.  GRADLE -  An automated tool to build and compile the application."
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### H"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `HelpSubjectCommand` - A command in the subjectcommand package which lists all the commands in the Main level."
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `HelpTopicCommand` - A command in the topiccommand package which lists all the commands in the Subject level."
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### I"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `isExit` - A method which checks if the user wants to change levels/exit application. This"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "syncode98"
        },
        "content": "method is implemented in all the command classes."
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `incorrectAnswers` - List present in the Quiz class which stores the questions that the user answered incorrectly, along with the answer provided"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "syncode98"
        },
        "content": "by the user and the correct answer."
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `InvalidFlashcardException` - An exception thrown if a flashcard is not created using the question ; answer format."
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `InvalidSubjectException` - An exception that is thrown if the user does not add a title of a subject for"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "syncode98"
        },
        "content": "the commands in the main level."
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `InvalidTopicException` - An exception thrown if the TopicCommands are used solely without a topic."
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. I/O - Input/Output"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### J"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. Jekyll - A software used by Github to create websites."
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. JSON - Javascript Object Notation. A form of data representation used in the external data files."
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. JUnit - A testing framework in Java that runs automated tests."
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### L"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `list` - A package which holds all the lists used in the application."
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `ListAllFlashcardCommand` - A command in the flashcardcommand package which lists all the items in the application in the topic level."
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `ListAllSubjectCommand` - A command in the subjectcommand package which all the items in the application."
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `ListAllTopicCommand` - A command in the topiccommand package which prints all the topics in the Subject level."
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `ListFlashcardCommand` - A command in the flashcardcommand package which lists all the  flashcards in the application."
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `ListSubjectCommand` - A command in the subjectcommand package which lists all the subjects in the application."
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `ListTaskCommand` - A command in the taskcommand packagewhich lists all the  tasks in the application."
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `ListTopicCommand` - A command in the topiccommand package which lists all the topics and tasks in the application."
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `LocalDateTime` - A class in Java which contains both the time and date of a given task.Used in Event and Deadline classes."
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `LocalDateTimeMax`- Maximum time available in the LocalDateTime library."
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `loadFlashcards` - Method in Storage class which loads the flashcards into the application."
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `loadResults` - Method in Storage class which loads the results into the application."
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `loadTasks` - Method in Storage class which loads the tasks into the application"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `loadTopics` - Method in Storage class which loads the topics into the application."
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Logging` - Procedure of writing information to an external file, to track the flow of the program."
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### M"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `maxScore` - Maximum score obtainable from a quiz.Present in the Result class."
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. Markdown - Syntax used in Github."
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### N"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `NoFlashcardException` - An exception thrown if a quiz is initiated for a subject or topic without flashcards."
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `NoSubjectException` - An exception thrown if the user requests for a subject that is not present in the application."
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `NoTopicException` - An exception thrown if the user requests for a topic that has not been added to the application."
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### P"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `parser` - A package which parses the user commands and initialises the necessary topics,subjects or tasks."
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Pass` - A description for a quiz which states that the user passed the quiz.Present in the Result class."
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1.  PlantUML - Software used to create UML diagrams."
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `printScore` - Method in SubjectQuiz and TopicQuiz classes which prints out the score and the incorrect answers from a quiz."
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### Q"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Quiz` - An abstract class that holds the result, list of flashcards and a list of incorrectAnswers for the "
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "syncode98"
        },
        "content": "SubjectQuiz class and the TopicQuiz class to inherit from."
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `quizcard` - Package which contains the Quiz,Result,SubjectQuiz,TopicQuiz classes."
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `QuizSubjectCommand` - A command in the subjectcommand package which initiates a quiz for a subject."
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `QuizTopicCommand` - A command in the topiccommand package which initiates a quiz for a topic."
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### R"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `RepeatedFlashcardException` - An exception thrown if the user tries to add a flashcard which already exists."
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `RepeatedSubjectException` - An exception thrown if the user adds a subect which is already present in the application."
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `RepeatedTopicException` - An exception thrown if the users adds a topic that is already present in the application."
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. repo - The repository in Github which holds the revisED project."
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Result` - A class in the quizcard package which stores the marks from a quiz and a description which indicates the performance of the user "
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "syncode98"
        },
        "content": "for that quiz."
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `result` - An object of the Result class."
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `ResultList` - A class in the list package which holds an ArrayList of Results."
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `ResultSubjectCommand` - A command in the subjectcommand package which shows all the results of subjectQuizzes obtained for the subject."
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Revised` - The main class which initiates the whole application.It is also the name of the application."
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### S"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `saveTasks`- Method in the Storage class which saves the tasks."
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `saveToJson` - Method in the Storage class which saves information in JSON format."
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1.  `saveTopics` - Method in Storage class which saves the topics in the application."
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `score` - A variable in the Result class which tracks the score during the quiz."
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `setupQuiz` - Method in SubjectQuiz and TopicQuiz class which sets up the quiz by transfering the flashcards."
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Subject` - A class which instantiates the subject object. Holds the title of the subject and lists of flashcards, "
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "syncode98"
        },
        "content": "results and topics."
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `SubjectCommand` - An abstract class that is inherited by all the other SubjectCommand classes in the subjectcommand package."
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `subjectcommand` - A package which holds the different Subjectcommand classes."
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `subjectexception` - A package which holds the exceptions thrown in the main level."
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `SubjectList` - A class in the list package which holds an ArrayList of Subjects."
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `SubjectParser` - A class in the parser package which reads the user commands to call the relevant Subject command."
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `SubjectQuiz` - A class in quizcard package which initiates a quiz for the subject. "
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `SorryFlashcardCommand` - A command in the flashcardcommand package which highlights invalid commands in the topic level."
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `SorrySubjectCommand` - A command in the subjectcommand package which highlights invalid commands in the main level."
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `SorryTaskCommand` - A command in the taskcommand package which highlights invalid commands in the subject level."
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `SorryTopicCommand` - A command in the topiccommand package which highlights invalid commands in the subject level."
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Storage` - A class which is saves the data when the user exits the application and loads the data once the"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "syncode98"
        },
        "content": "user starts the application."
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `storage` - A package which holds the Storage class, which is in charge of storing and loading data"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "syncode98"
        },
        "content": "into the application."
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `StorageBuilder` - Inner class of storage class and creates storage instances."
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `storageexception` - A package which holds the DataLoadingException."
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### T"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Task` - An abstract class in the taskcard package which Todo, Deadline and Event classes inherit from."
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1.  `task` - A package which contains the TaskList class."
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `taskcard` - Package which contains the task classes."
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `TaskCommand` - A  class in the taskcommand package that is inherited by all the other TaskCommand classes in the taskCommand package."
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `taskcommand` - A package which holds the different taskcommand classes."
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `TaskDeadlineException` - An exception thrown if an invalid deadline task is added to the applcation."
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `TaskEventException` - An exception thrown if an invalid event task is added to the application."
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `taskexception` - A package which holds the exceptions related to task operations."
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `TaskList ` - A class in the list package which holds the list of classes."
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `TaskList` - A class in the list package which holds an ArrayList of Tasks."
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `TaskParser` - A class in the parser package which reads the user commands to call the relevant task command."
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `TaskTodoException` - An exception thrown if an invalid todo task is added to the application."
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Todo` - A class in the taskcard package which refers to a task without deadline.Inherits from the Task class."
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Topic` - A class in the card package which is instantiated when the user creates the topic. Holds the title of the topic, an arraylist of"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "syncode98"
        },
        "content": "flashcards and an arraylist of results."
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `TopicCommand` - An abstract class in the topiccommand package that is inherited by all the other TopicCommand classes in the topiccommand package."
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `topiccommand` - A package which holds the different topiccommand classes."
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `topicexception` - A package which holds the exceptions that are related to topic operations."
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `TopicList` - A class in the list package which holds an ArrayList of Topics."
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `TopicParser` - A class in the parser package which reads the user commands to call the relevant topic command."
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `TopicQuiz` - A class in the quizcard package which initiates the quiz for a topic."
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `toString` - A method provided by Java to convert the current object into a String. This method has been overriden "
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "syncode98"
        },
        "content": "in classes such as Event,Deadline to provide the accurate output ."
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### U"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `Ui` - A class which takes care of interaction with the users. Prints the correct output to the console."
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1. `ui` - Package which contains the Ui class, in charge of user interactions."
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1.  `updateResult` - Method in Result class which updates the score of a quiz."
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "rashien3"
        },
        "content": "## Appendix E: Instructions for Manual Testing \u003ca name\u003d\"manual-testing\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Given below are the instructions to test the app manually."
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e 📝️️ **_NOTE:_** These instructions only provide a starting point for testers to work on; testers are expected to do more exploratory testing."
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### Launching"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Refer to the [Quick Start](https://ay2021s1-cs2113t-w13-1.github.io/tp/UserGuide.html#start) to download and launch the application."
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. **Expected:** The application should show the greeting screen as illustrated in the quick start section."
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### Testing features"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Run each command as demonstrated in the example of usage in the [Features](https://ay2021s1-cs2113t-w13-1.github.io/tp/UserGuide.html#features) section"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "of the user guide."
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. **Expected:** The output should match the sample output given."
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### Shutdown"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Run `exit` command until you reach the main level of the application (or until an error message saying the command is not recognized is displayed)."
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Run `bye` command."
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. **Expected:** A bye message should be displayed and the application should exit."
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### Saving data"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### When shutdown normally  \u003ca name\u003d\"man-save-normal\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Create a new folder and copy the jar file used in the above steps to the new folder. "
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Navigate to the new folder and launch the application."
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Run `add CS2113T` then `subject CS2113T`."
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Run `add Java`."
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Run `exit` then `bye`."
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. **Expected:** A `data/` folder containing the same structure as mentioned \u003ca href\u003d\"#store-imp\"\u003ehere\u003c/a\u003e should be created"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "in the new folder."
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### When shutdown abruptly"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Follow steps 1 to 4 \u003ca href\u003d\"#man-save-normal\"\u003eabove\u003c/a\u003e to add data."
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Close the console running the application, then navigate to the new folder via file explorer."
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. **Expected:** No folder is found created in the new folder."
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### Loading data"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### When data is not modified externally"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Follow all the steps \u003ca href\u003d\"#man-save-normal\"\u003eabove\u003c/a\u003e to create saved data."
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Launch the application again."
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. **Expected:** CS2113T subject and Java topic persist in the application."
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### When data is modified externally"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Follow all the steps \u003ca href\u003d\"#man-save-normal\"\u003eabove\u003c/a\u003e to create saved data."
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Go into the `data/` folder in the new folder."
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Rename the `CS2113T/` folder to `CS2040/`."
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Go back to the new folder and launch the application."
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. **Expected:** CS2113T subject is changed to CS2040, and Java topic remains the same in the application."
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "syncode98": 284,
      "sugandha929": 80,
      "CookieHoodie": 462,
      "-": 25,
      "jialerk": 271,
      "rashien3": 96
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "syncode98"
        },
        "content": "# Revised"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "This application aims to help students to revise effectively."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "-": 6
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## Table of Contents (Sugandha)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href \u003d#intro\u003e1. Introduction \u003c/a\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href \u003d#start\u003e2. Quick Start \u003c/a\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href \u003d#features\u003e3. Features \u003c/a\u003e      "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "   * \u003ca href \u003d#main-level\u003e3.1 Main Level Features \u003c/a\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "   * \u003ca href \u003d#subject-level\u003e3.2 Subject Level Features \u003c/a\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "   * \u003ca href \u003d#topic-level\u003e3.3 Topic Level Features \u003c/a\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "   * \u003ca href \u003d#other-feat\u003e3.4 Other Features \u003c/a\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href \u003d#faq\u003e4. FAQ \u003c/a\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href \u003d#summary\u003e5. Command Summary \u003c/a\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## 1. Introduction \u003ca name\u003d\"intro\"\u003e\u003c/a\u003e "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "**revisED** aims to help students to revise their subjects through the creation of flashcards or tasks that have"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "to be completed. The users can store the tasks under different subjects and flashcards under different topics, "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "which can be created under the subjects. This application ensures that students would be"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "able to revise, even if they are doing it at the last minute."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "This user guide provides an in-depth documentation on the installation process, the application features, and"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "the application usage to get you started."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Note the following symbols and formatting used in this document:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Symbols / Formatting|Meaning"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "------|------"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "📝️   **_NOTE:_** | Important or additional information"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "⚠️ **_WARNING:_** | Things to avoid or pay extra attention to"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "`Grey highlight` | Code or terms related to the code/application"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## 2. Quick Start (Chin Hang) \u003ca name\u003d\"start\"\u003e\u003c/a\u003e "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "To setup the application,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Download the latest version of `revised.jar` [here](https://github.com/AY2021S1-CS2113T-W13-1/tp/releases)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Transfer the jar file to the folder of your choice."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Open a command prompt in the folder you just put the jar file in. Follow this [guide](https://www.groovypost.com/howto/open-command-window-terminal-window-specific-folder-windows-mac-linux/)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "if you are unsure how."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "1. Run the command `java -jar revised.jar` to start the application."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "You will see the logo of the application, as shown below, once u run it."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                                    ___________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                                    |  __ |  _ \\"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": " ____  ______      _____   ________ |  |__| | | |"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "|  __|/ __ \\ \\    / /| |  /  _____/ |   __| | | |"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "| |  |  __/ \\ \\__/ / | | /_____  /  |  |__| |_| |"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "| |   \\___|  \\____/  |_|/_______/   |_____|_____/"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Hello! I\u0027m revisED"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Alright, What can I do for you?"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Type help for all available commands"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Subsequently, you can begin using the application!"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## 3. Features (Chin Hang) \u003ca name\u003d\"features\"\u003e\u003c/a\u003e "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This section elaborates on the features of **revisED** along with their usage. We further break this section down into several"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "subsections to better illustrate the design of the application."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href \u003d#main-level\u003e3.1 Main Level Features \u003c/a\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href \u003d#subject-level\u003e3.2 Subject Level Features \u003c/a\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href \u003d#topic-level\u003e3.3 Topic Level Features \u003c/a\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* \u003ca href \u003d#other-feat\u003e3.4 Other Features \u003c/a\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "To give you some context, **revisED** is divided into 3 logical levels—**main**, **subject**, and **topic** levels. In the main level,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "you can add/configure different subjects; in the subject level, you can add/configure different topics and tasks (under a subject); and in the topic"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "level, you can add/configure different flashcards (under a topic \u0026 subject). Continue reading to learn more about the features"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "in each level."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e 📝️️  **_NOTE:_** The format of the command, an example of usage, and an expected output will be presented in `grey boxes` "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e for each feature that involves the use of a command."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### 3.1 Main Level Features (Jia Lerk) \u003ca name\u003d\"main-level\"\u003e\u003c/a\u003e "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Main level features can only be used when the user is currently viewing the main section of the program."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jialerk"
        },
        "content": "On this level, users are able to add and delete subjects in a subject list. "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Users are also able to access the subjects in the subject list. "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jialerk"
        },
        "content": "For more details on subjects, see section \u003ca href \u003d#subject-level\u003e3.2 Subject Level Features \u003c/a\u003e."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jialerk"
        },
        "content": "This section describes the usage of commands that can be used to add, delete and list subjects. "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.1.1 Displaying all the available commands: `help`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Displays all available commands on the main level.  "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Format: `help`  "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Use this command whenever you get confused or need help to navigate the application."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print a list of all the functions available to you at the current level(main) on the command line."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "help"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "________________________________________________________________________________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "help:          shows the list of commands available at the main level"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "add abc:       adds a subject called \u0027abc\u0027"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "find abc:      finds all subjects containing the letters abc"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "list:          shows the list of all subjects"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "list all:      shows the tree of all subjects, topics, tasks and flashcards"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "delete 1:      deletes the 1st subject in the list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "subject abc:   enters the subject called abc, now you can create, find, list, delete and enter the topics of subject abc"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "quiz abc:      starts a quiz for all the flashcards present in all the topics of subject abc,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "               answer the questions of the current flashcards to test your knowledge"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "results abc:   gives you the results of all attempted quizzes for abc subject"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "export:        exports all the data to a JSON file"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "bye:           exits the application"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "________________________________________________________________________________________________________________________"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.1.2 Listing all subjects: `list` \u003ca name\u003d\"list\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Prints a list of all subjects in the main list."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Use this command whenever you need to see a list of all the subjects you have keyed into the application."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print the title of all the subjects in your list on the command line."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rashien3"
        },
        "content": "list"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Here are the subject(s) in your list:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rashien3"
        },
        "content": "1.CS1010"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rashien3"
        },
        "content": "2.CS2040C"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rashien3"
        },
        "content": "3.CG2027"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rashien3"
        },
        "content": "4.CS2113T"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rashien3"
        },
        "content": "5.CS2101"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.1.3 Listing all items: `list all` \u003ca name\u003d\"list\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Prints a list of all items stored in the application."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `list all`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Use this command whenever you need to see a list of all the subjects, topics and tasks you have keyed into the application."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print a tree on the command line, and will also show you that you are accessing the main level."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jialerk"
        },
        "content": "list all"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Here\u0027s a list of all items:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rashien3"
        },
        "content": "(You are currently here)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jialerk"
        },
        "content": "├─ 1. CG2027"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  │  Topics"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  ├─ 1. Pass Transistor Multiplexers"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  ├─ 2. Arithmetic Logic Unit"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  │  Tasks"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rashien3"
        },
        "content": "│  └─ 1. [T][N] revise on Arithmetic Logic Unit"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jialerk"
        },
        "content": "├─ 2. CS2101"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rashien3"
        },
        "content": "│  │  Topics"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  ├─ 1. Oral Presentation"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  ├─ 2. Product Demo"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "rashien3"
        },
        "content": "│  │  Tasks"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "rashien3"
        },
        "content": "│  └─ 1. [E][Y] Product Demo (at: 2:00 PM 5 Nov 2020)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jialerk"
        },
        "content": "└─ 3. CS2113T"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "rashien3"
        },
        "content": "   │  Topics"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jialerk"
        },
        "content": "   ├─ 1. Class Diagram"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jialerk"
        },
        "content": "   ├─ 2. Abstraction"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "rashien3"
        },
        "content": "   │  Tasks"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "rashien3"
        },
        "content": "   └─ 1. [D][N] Final Project (by: 11:59 PM 11 Nov 2020)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.1.4 Adding a subject: `add`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Adds a subject to the main list."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `add [SUBJECT_NAME]`"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Adds a subject with a name of `[SUBJECT_NAME]`."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print the title of the subject you have added into the subject list, as well as the amount of subjects you "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jialerk"
        },
        "content": "have in the subject list on the command line."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e ⚠️ **_WARNING:_** `[SUBJECT_NAME]` is case-sensitive. `cs2101` and `CS2101` will be registered as 2 different subjects. "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003eAdding tasks or topics in `cs2101` will not add the same tasks and topics in `CS2101`."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "rashien3"
        },
        "content": "add CS2101"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Got it. I\u0027ve added this subject:"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "rashien3"
        },
        "content": "  CS2101"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Now you have 5 subjects in the list."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.1.5 Deleting a subject: `delete`"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Deletes the specified subject, given the subject number."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `delete [SUBJECT_NUMBER]`"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Deletes the subject with the index number of `[SUBJECT_NUMBER]`."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print the title of the subject you have deleted from the subject list, as well as the amount of subjects you "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jialerk"
        },
        "content": "have in the subject list on the command line."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- `[SUBJECT_NUMBER]` must be a **positive integer**."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e 📝️️ **_NOTE:_** The `[SUBJECT_NUMBER]` of a subject is the number assigned to each subject when the user uses the "
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003elist command to print out the subjects."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e 📝️️ **_NOTE:_** After deletion of a subject, the `[SUBJECT_NUMBER]` of subjects in the list may change."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e ⚠️ **_WARNING:_** It is impossible to retrieve data deleted by this command. Make sure you do not need the data"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e in this subject before you delete it!"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jialerk"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jialerk"
        },
        "content": " Noted. I\u0027ve removed this subject:"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jialerk"
        },
        "content": "   CS1010"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jialerk"
        },
        "content": " Now you have 4 subjects in the list."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.1.6 Finding a subject: `find`"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Searches the list of subject names for all subjects that contains the query."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `find [QUERY]`"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- searches all subjects with `[QUERY]` in its title."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print a list of subjects with titles that contain the query."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The find command will only search the name of subjects on this level."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Partial words will be matched. e.g. `CS` will find `CS2101` and `CS2113T`."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e ⚠️ **_WARNING:_** `[QUERY]` is case-sensitive. e.g. `cs2113t` will not find a Subject with the name `CS2113T`."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jialerk"
        },
        "content": "find CS"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "jialerk"
        },
        "content": " Here are the matching subject(s) in your list:"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "jialerk"
        },
        "content": "CS2040C"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "jialerk"
        },
        "content": "CS2113T"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "jialerk"
        },
        "content": "CS2101"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.1.7 Accessing a subject: `subject`"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Allows the user to access a pre-existing subject."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `subject [SUBJECT_NAME]`"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Access a pre-existing subject with a name of `[SUBJECT_NAME]`."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Use this command if you want to access the subject level of a subject in the subject list."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print the subject level of the subject specified in `[SUBJECT_NAME]` on the command line."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- For more information on subject level commands, refer to \u003ca href \u003d#subject-level\u003e3.2 Subject Level Features \u003c/a\u003e."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e ⚠️ **_WARNING:_** `[SUBJECT_NAME]` is case-sensitive. e.g. `subject cs2113t` will not access a subject with the name `CS2113T`."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jialerk"
        },
        "content": "subject CS2113T"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Entering the Subject Level for the CS2113T subject."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Type help for all available commands"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### 3.1.8 Starting Subject Quiz: `quiz`  \u003ca name\u003d\"subject_quiz\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Starts a quiz for a particular subject. For more details, see \u003ca href\u003d\"#takeQuiz\"\u003etaking quizzes\u003c/a\u003e."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `quiz [SUBJECT_NAME]`"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Starts a quiz of a pre-existing subject of the name `[SUBJECT_NAME]`."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will quiz you on the subject specified in `[SUBJECT_NAME]` on the command line."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e ⚠️ **_WARNING:_** `[SUBJECT_NAME]` is case-sensitive. e.g. e.g. `quiz cs2101` will not start a `CS2101` quiz."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "syncode98"
        },
        "content": "quiz CS2113T"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output: "
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "syncode98"
        },
        "content": "You are about to begin the quiz for CS2113T."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### 3.1.9 Viewing results for quizzes on a subject: `results` (Muthu)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "syncode98"
        },
        "content": "This command allows you to look at the results for a subject. For more details, see \u003ca href\u003d\"#result\"\u003eresult\u003c/a\u003e."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Format: `results [SUBJECT_NAME]`"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Displays the results of your previous quizzes of the subject the name `[SUBJECT_NAME]`."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print the results of all the quizzes of the subject specified in `[SUBJECT_NAME]` in the command line."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e ⚠️ **_WARNING:_** `[SUBJECT_NAME]` is case-sensitive. e.g. results cs2101 will not enable you to see your CS2101 quiz results."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "syncode98"
        },
        "content": "```"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "syncode98"
        },
        "content": "results CS2113T"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "syncode98"
        },
        "content": "```"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output: "
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "syncode98"
        },
        "content": "```"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Quiz 1: 1.0/2.0 -- Pass"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Quiz 2: 2.0/2.0 -- Excellent"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "syncode98"
        },
        "content": "```"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "#### 3.1.10 Exporting data: `export` (Chin Hang) \u003ca name\u003d\"export-command\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This command exports all the data of the application to an external file. For more details, see \u003ca href\u003d\"#export\"\u003eExporting Data section\u003c/a\u003e."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Format: `export`"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Use this command if you want to save all the data in the application on an external file."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print the file location of the file the data is being saved to on the command line."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "export"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Your data has been successfully exported to /home/guest/revised/export/data.json."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### 3.1.11 Saving and exiting: `bye` \u003ca name\u003d\"bye\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "jialerk"
        },
        "content": "This command will save all the data in the application."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Use this command if you want to save and exit the application."
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will save all the updated details and exit."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e ⚠️ **_WARNING:_** Use this command before closing the command line as this command "
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003eensures all your data updated is saved. Failure to use this method to exit the application will "
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003eresult in all work updated in the session being lost."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "rashien3"
        },
        "content": "bye"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "rashien3"
        },
        "content": "### 3.2 Subject Level Features (Herman)\u003ca name \u003d \"subject-level\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Subject level features can only be used when the user is currently viewing a subject."
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "rashien3"
        },
        "content": "On this level, users are able to add and delete topics and tasks. "
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Users are also able to access the topics listed in the current subject. "
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "jialerk"
        },
        "content": "For more details on topics, see section \u003ca href\u003d\"#topic-level\"\u003e3.3 Topic Level Features\u003c/a\u003e."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "rashien3"
        },
        "content": "This section describes the usage of commands that can be used to add, delete and list both topics and tasks. "
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "jialerk"
        },
        "content": "#### 3.2.1 Displaying all available commands: `help`"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Displays all available commands on the subject level."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Format: `help` "
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Use this command whenever you get confused or need help to navigate the application."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print a list of all the functions available to you at the current level(subject) on the command line."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "jialerk"
        },
        "content": "  "
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "help"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "________________________________________________________________________________________________________________________"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "help:                              shows the list of commands available at the subject level"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "add abc:                           adds a topic called \u0027abc\u0027 in the current subject"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "todo abc:                          adds a todo type task with the description \u0027abc\u0027"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "deadline abc /by 12:00 13-11-2020: adds a deadline type task with description \u0027abc\u0027 with date/time of deadline"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                                   as 12:00 AM 13 Nov 2020"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "event abc /at 01:00 21-11-2020:    adds an event type task with description \u0027abc\u0027 with date/time of event"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                                   as 1:00 AM 21 Nov 2020"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "find abc:                          finds all topics and tasks containing \u0027abc\u0027 in the current subject"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "list:                              shows the list of all topics and tasks in the current subject"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "list all:                          shows the tree of all subjects, topics, tasks and flashcards"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "delete topic 1:                    deletes the 1st topic in the list of topics."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "delete task 1:                     deletes the 1st task in the list of tasks."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "done 1:                            marks the 1st task in the list of tasks as done"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "topic abc:                         enters the topic abc, now you can add, find, list and delete flashcards of topic abc"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "quiz abc:                          starts a quiz for all the flashcards of the topic abc,"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                                   answer the questions of the prompted flashcards to test your knowledge"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "results abc:                       gives you the results of all attempted quizzes for abc topic"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "exit:                              exits the subject to return to the main screen, where you can work with subjects"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "________________________________________________________________________________________________________________________"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.2.2 Listing all topics and tasks: `list` \u003ca name\u003d\"subject-list\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Prints a list of all topics and tasks of the current subject. "
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "rashien3"
        },
        "content": "  "
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Use this command whenever you need to see a list of all the tasks and topics you have keyed into the subject."
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print the title of all the tasks and topics in your subject on the command line."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "jialerk"
        },
        "content": "list"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Here are the topic(s) under CS2101: "
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "jialerk"
        },
        "content": "1. Oral Presentation"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "jialerk"
        },
        "content": "2. Product Demo"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Here are the tasks(s) under CS2101: "
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "rashien3"
        },
        "content": "1. [E][N] Product Demo (at: 2:00 PM 5 Nov 2020)"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.2.3 Listing all items: `list all`"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Prints a list of all items stored in the application."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `list all`"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Use this command whenever you need to see a list of all the subjects, topics and tasks you have keyed into the application."
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print a tree on the command line, and will also show you that you are accessing the subject level of "
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "jialerk"
        },
        "content": "a specific subject."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "jialerk"
        },
        "content": "list all"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Here\u0027s a list of all items:"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "jialerk"
        },
        "content": "├─ 1. CG2027"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  │  Topics"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  ├─ 1. Pass Transistor Multiplexers"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  ├─ 2. Arithmetic Logic Unit"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  │  Tasks"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "rashien3"
        },
        "content": "│  └─ 1. [T][N] revise on Arithmetic Logic Unit"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "jialerk"
        },
        "content": "├─ 2. CS2101 (You are currently here)"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "rashien3"
        },
        "content": "│  │  Topics"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  ├─ 1. Oral Presentation"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  ├─ 2. Product Demo"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "rashien3"
        },
        "content": "│  │  Tasks"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "rashien3"
        },
        "content": "│  └─ 1. [E][Y] Product Demo (at: 2:00 PM 5 Nov 2020)"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "jialerk"
        },
        "content": "└─ 3. CS2113T"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "rashien3"
        },
        "content": "   │  Topics"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "jialerk"
        },
        "content": "   ├─ 1. Class Diagram"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "jialerk"
        },
        "content": "   ├─ 2. Abstraction"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "rashien3"
        },
        "content": "   │  Tasks"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "rashien3"
        },
        "content": "   └─ 1. [D][N] Final Project (by: 11:59 PM 11 Nov 2020)"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "rashien3"
        },
        "content": "### Topic commands"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.2.4 Adding a topic: `add` \u003ca name\u003d\"add-topic\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Adds a topic to the current subject."
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `add [TOPIC_NAME]`"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Adds a topic with a name of `[TOPIC_NAME]`."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print the title of the topic you have added into the topic list, as well as the amount of topics you "
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "jialerk"
        },
        "content": "  have in the topic list on the command line."
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e ⚠️ **_WARNING:_** `[TOPIC_NAME]` is case-sensitive. `Product pitch` and `PRODUCT PITCH` will be registered as 2 different topics. "
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003eAdding flashcards in `product pitch` will not add the same flashcards in `PRODUCT PITCH`."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "jialerk"
        },
        "content": "add Product Pitch"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Got it. I\u0027ve added this topic:"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "jialerk"
        },
        "content": "  Product Pitch"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Now you have 3 topics in the list."
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.2.5 Deleting a topic: `delete topic` \u003ca name\u003d\"delete-topic\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Deletes the topic from the current subject, given the topic number."
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `delete topic [TOPIC_NUMBER]`"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Deletes the topic with the index number of `[TOPIC_NUMBER]`."
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print the title of the topic you have deleted from the topic list, as well as the amount of topics you "
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "jialerk"
        },
        "content": "have in the topic list on the command line."
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- `[TOPIC_NUMBER]` must be a **positive integer**."
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e 📝️️ **_NOTE:_** The `[TOPIC_NUMBER]` of a topic is the number assigned to each topic when the user uses the "
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003elist command to print out the topics."
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e 📝️️ **_NOTE:_** After deletion of a topic, the `[TOPIC_NUMBER]` of topics in the list may change."
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003e ⚠️ **_WARNING:_** It is impossible to retrieve data deleted by this command. Make sure you do not need the data"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e in this topic before you delete it!"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "jialerk"
        },
        "content": "delete topic 3"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "rashien3"
        },
        "content": " Noted. I\u0027ve removed this topic:"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "jialerk"
        },
        "content": "   Product Pitch"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "jialerk"
        },
        "content": " Now you have 2 topics in the list."
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.2.6 Finding a topic or task: `find` \u003ca name\u003d\"subject-find\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Searches the current subject for all the topics and tasks that contains the query."
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `find [QUERY]`"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- searches all topics and tasks in the current subject with `[QUERY]` in its name and prints a list of them."
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print a list of topics and tasks with titles that contain the query."
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The `find` command will only search the name of topics and tasks on this level."
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Partial words will be matched. e.g. `Pro` will find `Product`."
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e ⚠️ **_WARNING:_** `[QUERY]` is case-sensitive. e.g. `product` will not find a topic or task with the name `PRODUCT`."
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "jialerk"
        },
        "content": "find Pro"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "rashien3"
        },
        "content": "``` "
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Here are the matching topic(s) in your list:"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Product Demo"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Here are the matching task(s) in your list:"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "rashien3"
        },
        "content": "[E][Y] Product Demo (at: 2:00 PM 5 Nov 2020)"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.2.7 Accessing a topic: `topic` \u003ca name\u003d\"access-topic\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Enters a pre-existing topic."
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `topic [TOPIC_NAME]`"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Access a pre-existing topic with a name of `[TOPIC_NAME]`."
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Use this command if you want to access the topic level of a topic in the topic list."
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print the topic level of the subject specified in `[TOPIC_NAME]` on the command line."
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- For more information on topic level commands, refer to \u003ca href\u003d\"#topic-level\"\u003e3.3 Topic Level Features\u003c/a\u003e"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e ⚠️ **_WARNING:_** `[TOPIC_NAME]` is case-sensitive. e.g. `topic product` will not access a topic with the name `PRODUCT`."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "syncode98"
        },
        "content": "topic Oral Presentation"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Entering the topic Level for the Oral Presentation topic."
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "jialerk"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Type help for all available commands"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "rashien3"
        },
        "content": "### Task commands"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.2.8 Adding a \u0027todo\u0027 task: `todo` \u003ca name\u003d\"todo\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Adds a todo task."
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `todo [DESCRIPTION]`"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Adds a todo task with a description of `[DESCRIPTION]`."
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print the description of the todo task you have added into the task list, "
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "jialerk"
        },
        "content": "as well as the amount of tasks in the task list on the command line."
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "rashien3"
        },
        "content": "- The format for task when the application is printing out information is:"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`[T/D/E][Y/N] TASK DESCRIPTION`"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * T - Todo"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * D - Deadline"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * E - Event"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * Y - Done"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * N - Not done yet"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "jialerk"
        },
        "content": "todo look up on what is active listening"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "rashien3"
        },
        "content": "  [T][N] look up on what is active listening"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "rashien3"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.2.9 Adding a \u0027deadline\u0027 task - `deadline` \u003ca name\u003d\"deadline\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Adds a deadline task."
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Format: `deadline [DESCRIPTION] /by [TIME]`"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Adds a deadline task with a description of `[DESCRIPTION]` and a deadline of `[TIME]`."
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- A deadline must have a `[TIME]`. If you do not wish to set a time, add a \u003ca href\u003d\"#todo\"\u003etodo\u003c/a\u003e instead."
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print the description of the deadline task you have added into the task list, "
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "jialerk"
        },
        "content": "as well as the amount of tasks in the task list on the command line."
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "rashien3"
        },
        "content": "- The format for task when the application is printing out information is:"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`[T/D/E][Y/N] TASK DESCRIPTION`"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * T - Todo"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * D - Deadline"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * E - Event"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * Y - Done"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * N - Not done yet"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e 📝️️ **_NOTE:_** Add the time using the HH:MM DD-MM-YYYY format. "
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "rashien3"
        },
        "content": "deadline assignment /by 23:59 21-10-2020"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "rashien3"
        },
        "content": "  [D][N] assignment (by: 11:59 PM 21 Oct 2020)"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.2.10 Adding an event - `event` - Add event \u003ca name\u003d\"event\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Add an event task."
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `event [DESCRIPTION] /at [TIME]`"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Adds a deadline task with a description of `[DESCRIPTION]` and a timing of `[TIME]`."
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- An event must have a `[TIME]`. If you do not wish to set a time, add a \u003ca href\u003d\"#todo\"\u003etodo\u003c/a\u003e instead."
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print the description of the event task you have added into the task list, "
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "jialerk"
        },
        "content": "as well as the amount of tasks in the task list on the command line."
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "rashien3"
        },
        "content": "- The format for task when the application is printing out information is:"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "rashien3"
        },
        "content": "`[T/D/E][Y/N] TASK DESCRIPTION`"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * T - Todo"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * D - Deadline"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * E - Event"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * Y - Done"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * N - Not done yet"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "rashien3"
        },
        "content": "\u003e 📝️️ **_NOTE:_** Add the time using the HH:MM DD-MM-YYYY format. "
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "rashien3"
        },
        "content": "event tutorial /at 16:00 21-10-2020"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "rashien3"
        },
        "content": "  [E][N] tutorial (at: 4:00 PM 21 Oct 2020)"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.2.11 Deleting a task: `delete task`"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Deletes a task from the current subject, given the task number."
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `delete task [TASK_INDEX]`"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Deletes the task with the index number of `[TASK_INDEX]`."
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print the description of the task you have deleted from the task list, as well as the amount of tasks you "
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "jialerk"
        },
        "content": "have in the topic list on the command line."
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- `[TASK_INDEX]` must be a **positive integer**."
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e 📝️️ **_NOTE:_** The `TASK_INDEX` of a topic is the number assigned to each task when the user uses the "
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003elist command to print out the tasks."
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e 📝️️ **_NOTE:_** After deletion of a task, the `TASK_INDEX` of tasks in the list may change."
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003e ⚠️ **_WARNING:_** It is impossible to retrieve data deleted by this command. Make sure you do not need the data"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e in this task before you delete it!"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "rashien3"
        },
        "content": "delete task 2"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "rashien3"
        },
        "content": " Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "rashien3"
        },
        "content": "   [E][N] tutorial (at: 4:00 PM 21 Oct 2020)"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "rashien3"
        },
        "content": " Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.2.12 Marking a task as completed: `done`"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Marks the specified task as done."
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "rashien3"
        },
        "content": "done [TASK_INDEX]"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- `[TASK_INDEX]` must be a **positive integer**."
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Task `[TASK_INDEX]` must **already exist in the task list**."
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "rashien3"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "rashien3"
        },
        "content": " Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "rashien3"
        },
        "content": "   [D][Y] assignment (by: 11:59 PM 21 Oct 2020)"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### 3.2.13 Starting Topic Quiz - `quiz`  \u003ca name\u003d\"topic_quiz\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "rashien3"
        },
        "content": "This type of quiz helps you to prepare for a particular topic. For more details, see section \u003ca href \u003d#takeQuiz\u003e3.4.1 Taking quizzes\u003c/a\u003e."
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `quiz [TOPIC_NAME]`"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Starts a quiz of a pre-existing topic the name `[TOPIC_NAME]`."
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will quiz you on the topic specified in `[TOPIC_NAME]` on the command line."
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e ⚠️ **_WARNING:_** `[TOPIC_NAME]` is case-sensitive. e.g. `quiz java` will not start a `Java` quiz."
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "syncode98"
        },
        "content": "quiz Java"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output: "
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "syncode98"
        },
        "content": "You are about to begin the quiz for Java."
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### 3.2.14 Viewing results for quizzes on a topic: `results` (Muthu)"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "jialerk"
        },
        "content": "This command allows you to look at the results for a topic. For more details, see \u003ca href \u003d#result\u003eresult\u003c/a\u003e."
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `results [TOPIC_NAME]`"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- Displays the results of your previous quizzes of the topic the name `[TOPIC_NAME]`."
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "jialerk"
        },
        "content": "- The application will print the results of all the quizzes of the topic specified in `[TOPIC_NAME]` in the command line."
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "jialerk"
        },
        "content": "\u003e ⚠️ **_WARNING:_** `[TOPIC_NAME]` is case-sensitive. e.g. `results java` will not enable you to see your `Java` quiz results."
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "syncode98"
        },
        "content": "```"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "jialerk"
        },
        "content": "results Java"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "```"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output: "
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "syncode98"
        },
        "content": "```"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Quiz 1: 1.0/2.0 -- Pass"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Quiz 2: 2.0/2.0 -- Excellent"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "syncode98"
        },
        "content": "```"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### 3.2.15 Exiting the subject: `exit`"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Exits the subjects and returns to the main level."
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "- Use this command whenever you want to return to the subject level to work with subjects."
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003e 📝️  **_NOTE:_** The `exit` command is not the same as the `bye` command."
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003e The `bye` command saves and closes the application, and can only be accessed on the main level."
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "jialerk"
        },
        "content": "exit"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output: "
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Going back to the main level."
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "### 3.3 Topic Level Features (Sugandha) \u003ca name\u003d\"topic-level\"\u003e \u003c/a\u003e "
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Topic level features can only be used when the user is currently viewing a topic."
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "On this level, users are able to add and delete flashcards, in the form of questions and answers."
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "These flashcards can also be used to take topic or subject quizzes. For more information on subject quizzes see "
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003ca href\u003d#subject_quiz\u003e3.1.8 Starting Subject Quiz\u003c/a\u003e and for topic quizzes see \u003ca href \u003d#topic_quiz\u003e3.2.13 Starting Topic Quiz\u003c/a\u003e. "
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This section describes the usage of commands that can be used to add, delete and list flashcards. "
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### 3.3.1 Displaying all the available commands: `help`"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Displays all available commands.    "
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Format: `help`   "
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "- Use this command whenever you get confused or need help to navigate the application."
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "- The application will print a list of all the functions available to you at the current level(main) on the command line."
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "  "
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "help"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "________________________________________________________________________________________________________________________"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "help:              shows the list of commands available at the topic level"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "add abc; def:      adds a flashcard with question \u0027abc\u0027 and answer \u0027def\u0027 in the current topic"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "list:              shows the list of all flashcards in the current topic"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "list all:          shows the tree of all subjects, topics, tasks and flashcards"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "delete 1:          deletes the 1st flashcard in the list"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "exit:              exits the topic to return to the subject level, where you can work with tasks and topics"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "________________________________________________________________________________________________________________________"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### 3.3.2 Listing all flashcards: `list`"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Prints a list of all flashcards of the topic you are currently viewing. "
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Format: `list`  "
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "- Use this command whenever you need to see all the flashcards you have added or to take note of the index number of the flashcard you might want to delete."
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "- The application will print the questions and answers of all the flashcards in your topic on the command line."
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "jialerk"
        },
        "content": "list"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "jialerk"
        },
        "content": "```"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Here are the flashcard(s) under Java: "
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "1. Q: Name 3 Java primitive data types. "
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "   A: short, int, long."
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "2. Q: Is return 0 needed at the end of main method to indicate a successful execution? "
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "   A: No, it is considered as a successful execution unless an error is signalled specifically."
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "rashien3"
        },
        "content": "#### 3.3.3 Listing all items: `list all`"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "jialerk"
        },
        "content": "Prints a list of all items stored in the application."
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Format: `list all`"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "- Use this command whenever you need to see a list of all the subjects, topics, tasks and number of flashcards you have keyed into the application."
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "- The application will print a tree on the command line, and will also show you that you are accessing the topic level of "
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "a specific topic. "
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "list all"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Here\u0027s a list of all items:"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "jialerk"
        },
        "content": "├─ 1. CG2027"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "rashien3"
        },
        "content": "│  │  Topics"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  ├─ 1. Arithmetic Logic Unit"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  ├─ 2. Pass Transistor Multiplexers"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "rashien3"
        },
        "content": "│  │  Tasks"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "rashien3"
        },
        "content": "│  └─ 1. [T][N] revise on Arithmetic Logic Unit"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "jialerk"
        },
        "content": "├─ 2. CS2101"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  │  Topics"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  ├─ 1. Oral Presentation"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  ├─ 2. Product Demo"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "jialerk"
        },
        "content": "│  │  Tasks"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "rashien3"
        },
        "content": "│  ├─ 1. [E][Y] Product Demo (at: 2:00 PM 5 Nov 2020)"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "rashien3"
        },
        "content": "│  └─ 2. [T][N] look up on what is active listening"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "jialerk"
        },
        "content": "└─ 3. CS2113T"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "rashien3"
        },
        "content": "   │  Topics"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "jialerk"
        },
        "content": "   ├─ 1. Abstraction"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "jialerk"
        },
        "content": "   ├─ 2. Class Diagram"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "jialerk"
        },
        "content": "   ├─ 3. Java (You are currently here)"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "rashien3"
        },
        "content": "   │  └─ 1 Flashcard"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "rashien3"
        },
        "content": "   │  Tasks"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "rashien3"
        },
        "content": "   └─ 1. [D][N] Final Project (by: 11:59 PM 11 Nov 2020)"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### 3.3.4 Adding a flashcard - `add`"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Adds a flashcard under the topic you are currently viewing."
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "These flashcards can be added to take notes. "
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "They are added in the form of questions and answers."
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Format: `add` `[QUESTION]; [ANSWER]`"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "- Use this command whenever you wish to take notes."
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "- This command adds a flashcard with the question, `[QUESTION]` and the answer, `[ANSWER]`."
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "- The application will print the question and answer of the flashcard you added along with the "
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "total number of flashcards under the current topic."
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003e 📝️ ️  **_NOTE:_** Do not forget the semicolon, as it separates the question and the answer."
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003e ⚠️   **_WARNING:_** `[QUESTION]` and `[ANSWER]` of the flashcards are case-sensitive. "
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "jialerk"
        },
        "content": "add What is the version of Java used in CS2113T; 11.0"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Got it. I\u0027ve added this flashcard:"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "  Q: What is the version of Java used in CS2113T"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "  A: 11.0"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Now you have 3 flashcards in the list."
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### 3.3.5 Deleting a flashcard: `delete`"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Deletes the flashcard from the current topic, given the flashcard number."
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "This can be used if you make a mistake or no longer need a flashcard."
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "You can check the flashcard number from the list of flashcards, which is described next."
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Format: `delete [FLASHCARD_NUMBER]`"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "- Deletes the flashcard with the index number of `[TOPIC_NUMBER]`."
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "- The application will print the question and answer of the flashcard you have deleted from the topic list, as well as "
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "the number of flashcards you now have under the current topic on the command line.  "
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e 📝️️ **_NOTE:_** The `FLASHCARD_NUMBER` of a flashcard is the number assigned to each flashcard when the user uses the "
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003elist command to print out the flashcards."
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003e 📝️️ **_NOTE:_** After deletion of a flashcard, the `FLASHCARD_NUMBER` of topics in the list may change."
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003e ⚠️ **_WARNING:_** It is impossible to retrieve data deleted by this command. Make sure you do not need the data"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003e in this topic before you delete it!"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "rashien3"
        },
        "content": "```"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "rashien3"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Noted. I\u0027ve removed this flashcard:"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "  Q: What is the version of Java used in CS2113T"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "  A: 11.0"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Now you have 2 flashcards in the list."
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "#### 3.3.6 Exiting the topic: `exit` "
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Exits the topic and returns the to the subject level."
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "- Use this command whenever you want to return to the subject level to work with topics and tasks."
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003e 📝️  **_NOTE:_** The `exit` command is not the same as the `bye` command."
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "\u003e The `bye` command saves and closes the application, and can only be accessed on the main level."
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "exit"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output: "
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Going back to the subject level."
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "```"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "### 3.4 Other Features \u003ca name\u003d\"other-feat\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This section expands on the features that are not specific to any part of the previous sections and features that"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "require further explanations."
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### 3.4.1 Taking quizzes \u003ca name \u003d \"takeQuiz\"\u003e \u003c/a\u003e (Muthu)"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Once you have added the necessary flashcards, you can use the Quiz functionality to test yourself. This would"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "syncode98"
        },
        "content": "let you gauge how much you understand from the material. This will be beneficial if you are running out of time"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "syncode98"
        },
        "content": "to revise your own notes."
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "syncode98"
        },
        "content": " "
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "syncode98"
        },
        "content": "In this feature, the application prints the questions from the flashcards stored in the application. You need to complete the quiz within a"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "syncode98"
        },
        "content": "certain time limit. There are two types of quizzes :"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Quiz for a subject"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Quiz for a Topic"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "syncode98"
        },
        "content": "##### Quiz for a subject"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "syncode98"
        },
        "content": "This type of quiz helps you prepare for a particular subject.The application prints out the questions from the topics present in a subject."
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "syncode98"
        },
        "content": "##### Quiz for a Topic"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "syncode98"
        },
        "content": "This type of quiz helps you to prepare for a particular topic. The application prints out all the questions that have been saved in the specific topic ."
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e 📝️ ️  **_NOTE:_** Ensure that you start a quiz for a subject/topic that has been added to the application "
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e and has a flashcard. Else, the application will not start the quiz."
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Once you have entered the type of quiz you want to begin, the application starts the quiz. You"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "syncode98"
        },
        "content": "are expected to answer these questions."
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Format: `Question [NAMEOFQUESTION]`\u003cbr\u003e"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Example: `Question: What is the version of Java used in CS2113T?` \u003cbr\u003e"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Once the quiz has been completed, the application prints out the scores that you obtained."
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "syncode98"
        },
        "content": "You will also be notified about the questions that you did not answer correctly. "
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The score is printed in the following format:\u003cbr\u003e"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* If you get full marks : `Result:4/4 -- Excellent`\u003cbr\u003e"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* If you get enough marks to pass: `Result:2/4 -- Pass`\u003cbr\u003e"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* If you fail: `Result:0/4 -- Fail`\u003cbr\u003e"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The code below shows an example of a result that you can get after attempting a quiz."
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003cpre\u003e\u003ccode\u003e____________________________________________________________"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Result:2/4 -- Pass"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Here are the questions which you got wrong."
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "syncode98"
        },
        "content": "           "
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Question:What is the version of Java used in CS2113T?"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Correct Answer: 11.0 "
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Your Answer: 11.1"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Question:What is the ide used for the project? "
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Correct Answer: Intellij"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Your Answer: Vim"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________\u003c/code\u003e\u003c/pre\u003e"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "syncode98"
        },
        "content": "You can stop the quiz by entering `stop`. The application then prints the score.\u003cbr\u003e"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Format: `stop`\u003cbr\u003e"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Sample output:`The quiz has been stopped!`."
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003cpre\u003e\u003ccode\u003e____________________________________________________________"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The quiz has been stopped!"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Result:1/2 -- Pass"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003c/code\u003e\u003c/pre\u003e"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e 📝️ ️  **_NOTE:_** If you stop the quiz, the application will only print the score for the particular quiz. It does not"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003eprint the list of incorrect answers."
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e ⚠️ **_WARNING:_** If you stop the quiz ,you cannot go back to the same quiz to continue it. You will"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e have to restart another quiz."
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### 3.4.2 Viewing quiz results \u003ca name \u003d\"result\"\u003e \u003c/a\u003e (Muthu)"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "syncode98"
        },
        "content": "After completing a few number of quizzes, you would want to look at the results of the previous quizzes to see if"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "syncode98"
        },
        "content": "you have improved over the time. You can use the `results` functionality to check your results."
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "syncode98"
        },
        "content": "This can be done for the subjects or for the topics."
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e 📝️ ️  **_NOTE:_** Ensure that at least one quiz has been attempted under the subject or topic."
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e 📝️ ️  **_NOTE:_** The results for a subject is different from the results for a topic. The application only shows"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003ethe result of a subject or topic that you requested for. Entering `results CS2113T` will not show you the results"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003ethat you obtained for the topics in the CS2113T subject and vice-versa.  "
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### 3.4.3 Storing data \u003ca name\u003d\"store\"\u003e \u003c/a\u003e (Chin Hang)"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "jialerk"
        },
        "content": "When you exit the application, the data you have added to the application is automatically saved to the disk. "
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The data is stored under the `data/` folder in the same folder where you run the application. "
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ⚠️ **_WARNING:_** The data (or any changes to the data) are not saved if the application is closed abnormally "
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e (i.e. not via `bye` command)."
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Instead of storing all data in one file, **revisED** creates a folder hierarchy under `data/` following the logical structure of the"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "subjects and topics added. For example, if you add a `CS2113T` subject and a `Java` topic under it, a"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "syncode98"
        },
        "content": "`CS2113T/` folder will be created under the `data/` folder and an `Java` folder will be created under the `CS2113T/`"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "folder, as shown in figure 3.4.1 below. "
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "revised.jar                     \u003cem\u003e--\u003e \u003cb\u003erevisED\u003c/b\u003e Application\u003c/em\u003e"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "data                            \u003cem\u003e--\u003e Data main folder\u003c/em\u003e"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "└── CS2113T                     \u003cem\u003e--\u003e CS2113T subject folder\u003c/em\u003e"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    ├── Java                    \u003cem\u003e--\u003e Java topic folder under CS2113T subject\u003c/em\u003e"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    │   ├── topicResults.json"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    │   └── flashcards.json"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    ├── subjectResults.json"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    └── tasks.txt"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csup\u003e***Figure 3.4.1** Sample directory structure created*\u003c/sup\u003e"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The details of the files that are created under each subject and topic folder will be explained below."
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e 📝️️   **_NOTE:_**  The name of the subject and topic folders can be changed manually, and the changes will be reflected"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e in the application the next time you launch it."
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "##### tasks.txt"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "One `tasks.txt` file will be created under each subject folder. This file contains the tasks (Todo, Event, Deadline) you"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "have added to a specific subject. An example of the file content is shown below."
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "T | 1 | someTodoTask                                    \u003cem\u003e--\u003e Todo task\u003c/em\u003e"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "D | 0 | someDeadlineTask | 11:59 PM 20 Dec 2020         \u003cem\u003e--\u003e Deadline task\u003c/em\u003e"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "E | 0 | someEventTask | 1:00 PM 10 Nov 2020             \u003cem\u003e--\u003e Event task\u003c/em\u003e"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csup\u003e***Figure 3.4.2** Sample tasks.txt content*\u003c/sup\u003e"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "The first column of data shows the type of task, where T corresponds to `Todo` task, D corresponds to `Deadline` "
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "task, and E corresponds to `Event` task. The second column shows if a task is completed, where 0 means not completed "
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "while 1 means completed. The third column shows the name of a task. Lastly, the fourth column shows the time and date of "
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "a deadline or event task. "
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ⚠️ **_WARNING:_** Although you can change the content of this file manually, "
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e you are not advised to do so because a mismatch in the format will corrupt the data. "
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e **If the data is corrupted, it will not be loaded by the application.**"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e Make a copy of the file before making changes if you have to do so manually."
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "##### subjectResults.json / topicResults.json"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "One `subjectResults.json` will be created under each subject folder, and one `topicResults.json` will be created "
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "under each topic folder. `subjectResults.json` stores the quiz results you have obtained from doing quizzes under "
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "a subject, while `topicResults.json` stores the quiz results you have obtained from doing quizzes under a topic. "
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Both of the files have the same content format, and an example of "
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "the file content is shown below."
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "["
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  {                                    \u003cem\u003e--\u003e Result record 1\u003c/em\u003e"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"score\": 1.0,                      \u003cem\u003e--\u003e Score obtained\u003c/em\u003e"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"maxScore\": 1.0,                   \u003cem\u003e--\u003e Maximum score that can be obtained\u003c/em\u003e"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"description\": \"Excellent\"         \u003cem\u003e--\u003e Result description\u003c/em\u003e"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  },"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  {                                    \u003cem\u003e--\u003e Result record 2\u003c/em\u003e"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  },"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  ..."
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "]"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csup\u003e***Figure 3.4.3** Sample subjectResults.json content*\u003c/sup\u003e"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "##### flashcards.json"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "One `flashcards.json` file will be created under each topic folder. This file stores all the flashcard data you "
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "have added under a specific subject and topic. An example of the file content is shown below."
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "["
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  {                                            \u003cem\u003e--\u003e Flashcard 1\u003c/em\u003e"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"question\": \"x + y \u003d 4. y \u003d ? \","
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"answer\": \"4 - x\""
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  },"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  {                                            \u003cem\u003e--\u003e Flashcard 2\u003c/em\u003e"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    ..."
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  },"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  ..."
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "]"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csup\u003e***Figure 3.4.4** Sample flashcard.json content*\u003c/sup\u003e"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Each entry enclosed with the curly braces ({}) corresponds to one flashcard."
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ⚠️ **_WARNING:_** Although you can change the content of this file manually, "
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e a mismatch in the format will corrupt the data. **If the data is corrupted, it will not be loaded by the application.** "
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e Therefore, make a copy of the file before making changes if you have to do so."
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### 3.4.4 Loading data \u003ca name\u003d\"load\"\u003e \u003c/a\u003e (Chin Hang)"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Similar to \u003ca href \u003d#store\u003estoring data\u003c/a\u003e,"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "when you launch the application, the saved data is automatically loaded from the disk."
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e 📝️   **_NOTE:_** Loaded subjects and topics will be sorted in alphabetical order, which can be seen when running"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e \u003ca href\u003d#list\u003elist\u003c/a\u003e command. Flashcards, tasks, and results data, on the other hand, are not sorted and instead"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e follow the added order."
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e ⚠️ **_WARNING:_** If you have manually modified the contents of the files stored with wrong syntax, the files affected "
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e will not be loaded (and, instead, empty data will be loaded) when the application launches. "
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### 3.4.5 Exporting data \u003ca name\u003d \"export\"\u003e \u003c/a\u003e (Chin Hang)"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "You can export all the data, including the quiz results and tasks, to a `json` file so that it can be imported into"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "other applications that understand the data. To export the data, run the \u003ca href\u003d\"#export-command\"\u003eexport command\u003c/a\u003e "
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "when you are in the main level of the application. "
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "After running the command, the data will be exported to "
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "`export/data.json` under the same folder where **revisED** application resides. An example of the file content is shown "
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "below."
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003cpre\u003e"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "["
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  {                                                                  \u003cem\u003e--\u003e Subject 1\u003c/em\u003e"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"title\": \"CS2113T\",                                                "
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"topics\": {"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "      \"topics\": [                                                    \u003cem\u003e--\u003e Topics under CS2113T subject\u003c/em\u003e"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        {                                                            \u003cem\u003e--\u003e Topic 1\u003c/em\u003e"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"title\": \"Java\",                                        "
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"flashcards\": \u003cem\u003e[same as the content of flashcards.json]\u003c/em\u003e,    \u003cem\u003e--\u003e Flashcards under Java topic\u003c/em\u003e"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"results\": {"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            \"resultList\": \u003cem\u003e[same as the content of topicResults.json]\u003c/em\u003e \u003cem\u003e--\u003e Results under Java topic\u003c/em\u003e"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          }"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        },"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ..."
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "      ]"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    },"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"tasks\": {                                                       \u003cem\u003e--\u003e Tasks under CS2113T subject\u003c/em\u003e"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "      \"taskList\": ["
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        {                                                            \u003cem\u003e--\u003e Task 1\u003c/em\u003e"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"description\": \"someTodoTask\","
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"isDone\": false"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        },"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        {                                                            \u003cem\u003e--\u003e Task 2\u003c/em\u003e"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"dateTime\": {"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            \"date\": {"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"year\": 2020,"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"month\": 12,"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"day\": 20"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            },"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            \"time\": {"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"hour\": 23,"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"minute\": 59,"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"second\": 0,"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "              \"nano\": 0"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          },"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"description\": \"someDeadlineTask\","
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "          \"isDone\": false"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        },"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ...                                                       "
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "      ]"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    },                            "
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    \"results\": {"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "      \"resultList\": \u003cem\u003e[same as the content of subjectResults.json]\u003c/em\u003e    \u003cem\u003e--\u003e Results under CS2113T subject\u003c/em\u003e"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  },"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "  ...                                                               \u003cem\u003e--\u003e More subjects\u003c/em\u003e"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "]"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003c/pre\u003e"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003csup\u003e***Figure 3.4.5** Sample data.json content*\u003c/sup\u003e"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Note that the content of the file follows the same logical structure as that"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "in the `data/` folder."
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003e 📝️ ️ **_NOTE:_** **Importing** of the exported file is **currently not supported** as it is meant to be read by other "
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "\u003e applications. Nevertheless, the feature may be implemented in the future versions if it is highly requested."
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### 3.4.6 Sorting tasks  \u003ca name\u003d \"sort\"\u003e \u003c/a\u003e (Muthu)"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The tasks in the application are sorted according to their deadlines. Tasks which are due soon are placed at the front"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "syncode98"
        },
        "content": "of the list, while tasks which are due later are placed at the rear. `Todo` tasks are placed at the end of the list since"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "syncode98"
        },
        "content": "they do not have any deadlines."
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Suppose you use the `list` command and get this output:"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003cpre\u003e\u003ccode\u003e____________________________________________________________"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Here are the tasks(s) under CS2113T: "
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "rashien3"
        },
        "content": "1. [D][N] homework (by: 6:00 PM 6 Nov 2020)"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "rashien3"
        },
        "content": "2. [E][N] marathon (at: 6:00 PM 9 Nov 2020)"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003c/code\u003e\u003c/pre\u003e"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Adding the following deadline by `deadline project /by 18:00 07-11-2020` and using the `list` command would yield this output."
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003cpre\u003e\u003ccode\u003e____________________________________________________________"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Here are the tasks(s) under CS2113T: "
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "rashien3"
        },
        "content": "1. [D][N] homework (by: 6:00 PM 6 Nov 2020)"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "rashien3"
        },
        "content": "2. [D][N] project (by: 6:00 PM 7 Nov 2020)"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "rashien3"
        },
        "content": "3. [E][N] marathon (at: 6:00 PM 9 Nov 2020)"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003c/code\u003e\u003c/pre\u003e"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### 3.4.7 Printing upcoming tasks \u003ca name\u003d\"upcoming\"\u003e \u003c/a\u003e (Muthu)"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Once you open the application, it will print the tasks which are due in the upcoming week. Only tasks which have not been"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "syncode98"
        },
        "content": "completed yet will be printed out. The tasks will be sorted out according to the subjects, then the date and time at which "
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "syncode98"
        },
        "content": "the task is due."
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003cpre\u003e\u003ccode\u003e"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                                    ___________"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                                    |  __ |  _ \\"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "syncode98"
        },
        "content": " ____  ______      _____   ________ |  |__| | | |"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "syncode98"
        },
        "content": "|  __|/ __ \\ \\    / /| |  /  _____/ |   __| | | |"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "syncode98"
        },
        "content": "| |  |  __/ \\ \\__/ / | | /_____  /  |  |__| |_| |"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "syncode98"
        },
        "content": "| |   \\___|  \\____/  |_|/_______/   |_____|_____/"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Hello! I\u0027m revisED"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Here are the upcoming tasks for next week!"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "syncode98"
        },
        "content": "CS2113T"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "rashien3"
        },
        "content": "1. [D][N] homework (by: 6:00 PM 6 Nov 2020)"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "syncode98"
        },
        "content": "CG2027"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "rashien3"
        },
        "content": "2. [E][N] exam (at: 7:00 PM 9 Nov 2020)"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Alright, What can I do for you?"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Type help for all available commands"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003c/code\u003e\u003c/pre\u003e"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "## 4. FAQ \u003ca name \u003d \"faq\"\u003e \u003c/a\u003e"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "This section answers some common questions that you may have about **revisED**."
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "**_Q:_ I moved the jar file to another location. Will my previous data be erased automatically?**\u003cbr\u003e"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "**_A:_** Do not worry. You previous data will still be avaiable in the `data/` folder."
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "**_Q:_ I accidentally saved a task as an event, when it is a deadline. Is there any method to change the type of the task?**\u003cbr\u003e"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "**_A:_** Unfortunately, no. You will have to delete the event using the `delete task [TASK_INDEX]`to delete the task, and then "
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "syncode98"
        },
        "content": "add the task back using the `deadline [DESCRIPTION] /by [TIME]` command."
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "**_Q:_ Is there any limit to the number of topics/subjects that I can store in my application?**\u003cbr\u003e"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "**_A:_** No. You can store unlimited number of topics/subjects.   "
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "**_Q:_ A file named `revisED0.log` appears in the folder after I run the application. What is it? Can I delete it?**\u003cbr\u003e"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "**_A:_** This is the log file that logs down the activities of the application when you are running it. In the case where"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "you find any bugs or the application crashes, you can send us a bug report"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "[here](https://github.com/AY2021S1-CS2113T-W13-1/tp/issues) along with the log file to help us with solving the bugs. "
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "Nevertheless, you can delete it if you want to, and it does not affect the behavior of the application in any way."
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "syncode98"
        },
        "content": "## 5. Command Summary \u003ca name\u003d\"summary\"\u003e\u003c/a\u003e (Muthu)"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "A summary of all the commands available is shown in the table below."
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Action|Examples"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "syncode98"
        },
        "content": "------|------"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "syncode98"
        },
        "content": "SUBJECT COMMANDS (MAIN LEVEL)|"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Add subject|`add CS2113T` "
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Change to the specific subject |`subject CS2113T`"
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Start a quiz for a subject| `quiz CS2113T`"
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "syncode98"
        },
        "content": "View results for a subject | `results CS2113T`"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Find Subject | `find CS2113T`"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Delete Subject | `delete 1`"
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "syncode98"
        },
        "content": "List all subjects| `list`"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Export data | `export`"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Exit application|`bye`"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "syncode98"
        },
        "content": "TOPIC AND TASK COMMANDS (SUBJECT LEVEL)| "
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Add topic|`add Java` "
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Delete topic| `delete topic 4`"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Change to the specific topic |`topic Java`"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Start a quiz for a topic| `quiz Java`"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "syncode98"
        },
        "content": "View results for a topic | `results Java`"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Add todo|`todo revise for test` "
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Add deadline| `deadline assignment /by 23:59 21-10-2020`"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Add an event| `event tutorial /at 16:00 21-10-2020`"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Find tasks| `find assignment`"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Complete task|`done 4`"
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "rashien3"
        },
        "content": "Delete task|`delete task 4`"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "syncode98"
        },
        "content": "List topics and tasks | `list`"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Exit subject | `exit`"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "syncode98"
        },
        "content": "FLASHCARD COMMANDS (TOPIC LEVEL)|"
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Add flashcard|`add What version of Java are you using; 11.0`"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Delete flashcard| `delete 1`"
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "syncode98"
        },
        "content": "List flashcards|`list`"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Exit topic | `exit`"
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "syncode98"
        },
        "content": "OTHER COMMANDS (All LEVELS)|"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "syncode98"
        },
        "content": "List all the items in the application|`list all`"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "syncode98"
        },
        "content": "List all the commands|`help`"
      }
    ],
    "authorContributionMap": {
      "syncode98": 224,
      "sugandha929": 191,
      "CookieHoodie": 303,
      "-": 33,
      "jialerk": 306,
      "rashien3": 363
    }
  },
  {
    "path": "docs/team/cookiehoodie.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "# Ong Chin Hang - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "**revisED** is a CLI application to help students revise by allowing them to create flashcards, take quizzes, "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "and keep track of their deadlines, tasks and any other important dates. It is written in Java."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "## Summary of Contributions"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* **Code contributed:** [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dcookiehoodie\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other) "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* **Features implemented:** "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * Storing of data in the form of nested folders and files for easier navigation and manual changes by the users. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        * This was challenging because a lot of testings needed to be done to make sure the hierarchy was created as intended, "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        as compared to storing all data to one place."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        * Credit: the methods for storing and loading tasks are taken from [JiaLerk](https://github.com/jialerk), though with "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        quite some modifications to improve on them. (Pull requests: [#83](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/83))"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * Loading of the saved data"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        * loading the data stored in this way posed challenges because the user can make a lot more variation of changes"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        to the stored data, as compared to storing all data in one file. Thus, a lot of exception handling needed to be done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        to make sure the application still works with corrupted data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * Exporting of all data to one Json file for the use of other applications."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* **Enhancements implemented:** "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * Enhanced the code to reduce redundancy and improve design."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        (Issues: "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        [#29](https://github.com/AY2021S1-CS2113T-W13-1/tp/issues/29) "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        [#33](https://github.com/AY2021S1-CS2113T-W13-1/tp/issues/33)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        [#26](https://github.com/AY2021S1-CS2113T-W13-1/tp/issues/26))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * Included `Result` data to storage, which was not in consideration. (Pull requests: [#42](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/42))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * Modified `Storage` class to use builder design pattern for less error prone instance creation. (Pull requests: "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    [#47](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/47))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* **Contributions to the UG:** "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * [Export](https://ay2021s1-cs2113t-w13-1.github.io/tp/UserGuide.html#export-command) feature command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * Explanation to [storing](https://ay2021s1-cs2113t-w13-1.github.io/tp/UserGuide.html#store), [loading](https://ay2021s1-cs2113t-w13-1.github.io/tp/UserGuide.html#load)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    and [exporting](https://ay2021s1-cs2113t-w13-1.github.io/tp/UserGuide.html#export) of data."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * Restructuring of features section, adding of symbols legend to the introduction, improvement on quick start."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    (Pull requests: [#126](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/126))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "   "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* **Contributions to the DG:** "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * [Storage](https://ay2021s1-cs2113t-w13-1.github.io/tp/DeveloperGuide.html#storage) section under design (along with its class diagram)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * [Storing, loading, and exporting data](https://ay2021s1-cs2113t-w13-1.github.io/tp/DeveloperGuide.html#storage) sections"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    under implementation (along with all the sequence diagrams contained in them)."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * [List](https://ay2021s1-cs2113t-w13-1.github.io/tp/DeveloperGuide.html#list) section and its class diagram."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * [Logging](https://ay2021s1-cs2113t-w13-1.github.io/tp/DeveloperGuide.html#logging) section."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * Restructuring of whole DG; improvement on setting up the project section, testing, user stories,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    non-functional requirements, manual testing. (Pull requests: "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    [#142](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/142)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    [#129](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/129))"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* **Contributions to team-based tasks:**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * Maintained the issue tracker - opening and assigning of most issues."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * Setup the logging configuration. (Pull requests: [#51](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/51))"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * Enhanced the code to reduce redundancy and improve design."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    (Issues: "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    [#29](https://github.com/AY2021S1-CS2113T-W13-1/tp/issues/29) "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    [#33](https://github.com/AY2021S1-CS2113T-W13-1/tp/issues/33)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    [#26](https://github.com/AY2021S1-CS2113T-W13-1/tp/issues/26))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    * Restructured DG and UG and revamped/enhanced common sections such as introduction, user stories, manual testing, etc. "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    (Pull requests: [#142](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/142)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    [#129](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/129)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    [#127](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/127)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    [#126](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/126))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "* **Review/mentoring contributions:** Pull requests: "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "[#151](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/151)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "[#146](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/146)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "[#124](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/124)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " [#86](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/86)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " [#82](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/82)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " [#52](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/52)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " [#141](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/141)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " [#32](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/32)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " [#12](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/12)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " [#69](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/69)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " [#54](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/54)"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 72
    }
  },
  {
    "path": "docs/team/jialerk.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "# Gan Jia Lerk - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "**revisED** is a CLI application to help students revise by allowing them to create flashcards, take quizzes, "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "and keep track of their deadlines, tasks and any other important dates. It is written in Java."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "## Summary of Contributions"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* **Code contributed:** [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003djialerk\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* **Enhancements implemented:**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Did up the base code for the project for easier development"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        [#12](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/12/files)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Implemented most SubjectCommand features which includes:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        - JavaDoc in subjectcommand package excluding QuizSubjectCommand and ResultSubjectCommand which are from [Muthu](https://github.com/syncode98)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        - All classes under the subjectcommand package excluding ExportSubjectCommand"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        which is from [Chin Hang](https://github.com/cookiehoodie), and QuizSubjectCommand and ResultSubjectCommand which are from [Muthu](https://github.com/syncode98)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        - Logging in classes in subjectcommand package"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        - Assertions in classes in subjectcommand package"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Implemented some methods in the Ui class which includes:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        - All relevant Subject Error messages as well as printing all subject related methods in Ui"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Implemented exceptions which includes:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        - All exceptions in the subjectexception package"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        - FailedParserException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        - Reformat all exceptions to output error messages instead of printing the errors straight "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        [#53](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/53)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        - Changed the structure of exceptions and added some exceptions the other exception packages"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        [#52](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/52)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Implemented almost all the test cases under the command package which includes:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        - FlashcardCommandTest"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        - SubjectCommandTest but the storage component of setup was inspired by [Chin Hang](https://github.com/cookiehoodie)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        - TaskCommandTest"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        - TopicCommandTest"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        [#168](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/168) and [#128](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull128)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Implemented most assertions in Ui class"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* **Contributions to documentation:**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Did the Main level features"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Did the restructuring of the UG together with [Chin Hang](https://github.com/cookiehoodie)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* **Contributions to the DG:** "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Did all the design for the command package, inlcuding diagrams [#128](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/128)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Did implementation for 4.7 Adding objects implementation and 4.8 Accessing subjects/topics implementation, including diagrams"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    [#159](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/159)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Did the first level of restructuring to the DG [#86](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/86)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Did the base part of design in card package which was later done by [Herman](https://github.com/rashien3) "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "* **Review/mentoring contributions:** "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Approved and commented on the following pull requests:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    [#172](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/172)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    [#158](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/158)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    [#150](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/150)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    [#129](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/129)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    [#127](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/127)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    [#126](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/126)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    [#125](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/125)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    [#88](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/88)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    [#75](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/75)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    [#59](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/59)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    [#38](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/38)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    [#22](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/22)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    [#21](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/21)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    [#11](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/11)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    - Inspired code for some of the other Classes in the project since the project is based on a level system, and I did the code for the main level."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jialerk": 74
    }
  },
  {
    "path": "docs/team/rashien3.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "# Herman Thong - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "**revisED** is a CLI application to help students revise by allowing them to create flashcards, take quizzes, "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "and keep track of their deadlines, tasks and any other important dates. It is written in Java."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "## Summary of Contributions"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* **Code contributed:** [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003drashien3\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003drashien3\u0026tabRepo\u003dAY2021S1-CS2113T-W13-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code) "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* **Features implemented:** "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * All subject level features and commands"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        * Credit: The repeated and similar commands was modified from the main level commands of the code by [JiaLerk](https://github.com/jialerk)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        * Total of 18 different commands in the taskcommand package and the topiccommand package."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * Integrated task level features into project"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        * Credit: task level features were modified from the ip of [JiaLerk](https://github.com/jialerk)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        * I had to change the syntax for subject-level commands in order to integrate tasks under the subject level, and ensure that features"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        shared across Topics and Tasks (eg. add, delete, find) did not conflict."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * AccessSubjectCommand class"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        * This was harder than expected because the 18 different subject-level commands required different objects to be passed to them to initialise them,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        and they threw different exceptions that had to be caught, so a lot of debugging had to be done to ensure that the correct error messages were printed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * List all function - printing the tree of the overall structure"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        * There are many corner cases in printing out the tree (eg. no tasks, last subject), so I had to do a lot of trial-and-error to control"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        the flow of logic of the code. Later, I had to SLAP it to make the method less nested and confusing."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* **Enhancements implemented:** "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * Enhanced the code to reduce redundancy and improve design."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Changed the cascading if-else statements into switch-case statements for FlashcardParser and TopicParser classes. "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    (Pull requests: [#124](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/124))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * Improve handling of command in the case of mistyped inputs (extra spaces, capital letters, etc.)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    (Pull requests: [#124](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/124))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * Improved format of printing flashcards under list command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * Added tests for subject-level commands"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    (Pull requests: [#59](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/59))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * Fix bugs discovered in PE dry run regarding user input and "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* **Contributions to the UG:**  TODO:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * All [Subject level features](https://ay2021s1-cs2113t-w13-1.github.io/tp/UserGuide.html#subject-level) features."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * Restructuring of explanation of all the commands to be consistent."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * Update examples related to list all"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* **Contributions to the DG:** "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * Editted the write-up under [Design](https://ay2021s1-cs2113t-w13-1.github.io/tp/DeveloperGuide.html#design) section under design (along with its class diagram)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * [Architecture](https://ay2021s1-cs2113t-w13-1.github.io/tp/DeveloperGuide.html#architecture) section under design and architecture diagram."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * [Card package](https://ay2021s1-cs2113t-w13-1.github.io/tp/DeveloperGuide.html#card) section and its class diagrams."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * UML sequence diagram for [accessing a topic](https://ay2021s1-cs2113t-w13-1.github.io/tp/DeveloperGuide.html#accessing-topic)."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * [list all](https://ay2021s1-cs2113t-w13-1.github.io/tp/DeveloperGuide.html#list-all-imp) under Implementation and its sequence diagram."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* **Contributions to team-based tasks:**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * Fixed general coding standard issues (eg. variable names)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * Restructured and reordered DG design section for more cohesive documentation"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    * Manually test code before release"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* **Review/mentoring contributions:** "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "  "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "  [PRs reviewed](https://github.com/AY2021S1-CS2113T-W13-1/tp/pulls?q\u003dis%3Apr+reviewed-by%3Arashien3)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rashien3"
        },
        "content": "* **Contributions beyond the project team:**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "  * Posted an [issue](https://github.com/AY2021S1-CS2113-T16-4/tp/issues/63) for T16-4 when their release jar file could not run."
      }
    ],
    "authorContributionMap": {
      "sugandha929": 1,
      "rashien3": 53
    }
  },
  {
    "path": "docs/team/sugandha929.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "# Tuteja Sugandha - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "**revisED** is a CLI application to help students revise by allowing them to create flashcards, take quizzes, "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "and keep track of their deadlines, tasks and any other important dates. It is written in Java."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "## Summary of Contributions"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* **Code contributed:** [here](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dsugandha929)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* **Features implemented:** "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * All topic level features and commands"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        * Credit: The repeated and similar commands was modified from the main level commands of the code by [JiaLerk](https://github.com/jialerk)."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        * Total of 8 different commands in the flashcardcommand package."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        * The FlashcardParser Class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        * Flashcard Class, in Card package."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        * Invalid flashcard exception, and Repeated flashcard exxception."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        * All related methods in Ui class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Implementing help function"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        * All the methods related to help commands. "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        * HelpSubjectCommand class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        * HelpTopicCommand class.   "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        * HelpTopicCommand class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        * Related methods in Ui class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Logging in DeleteFlashcardCommand"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* **Enhancements implemented:** "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Enhanced the code to reduce redundancy and improve design."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Changed the cascading if-else statements into switch-case statements for SubjectParser class. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Improve format of printing flashcards."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Added tests for FlashcardCommand package."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Fix bugs discovered in PE dry run regarding flashcards in the code and UG."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* **Contributions to the UG:** "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Table of contents"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * All Topic Level Features"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Improvements on any grammatical or syntax errors"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Help commands in Main, Subject and Topic Level features"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* **Contributions to the DG:** "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Table of Contents"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Introduction"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Parser Package under design section"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Ui Package under design section"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Parsing commands under implementation section"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * UML sequence diagram for SubjectParser class"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * UML sequence diagram for FlshcardParser class"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Improvements on grammatical or syntax errors"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "* **Contributions to team-based tasks:** "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Fixed coding style checks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Updated UG and DG to follow a standardised format"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Updated some ui methods to follow a standardised format"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    * Link to Pull Requests Reviewed: [here](https://github.com/AY2021S1-CS2113T-W13-1/tp/pulls?q\u003dis%3Apr+reviewed-by%3Asugandha929)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sugandha929": 58
    }
  },
  {
    "path": "docs/team/syncode98.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "syncode98"
        },
        "content": "# I MUTHUKUMAR - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "**revisED** is an application which aims aims to provide students with a one stop solution to manage their tasks, to take  notes and to improve their efficiency.This product has been implemented in a short span of 6 weeks by a team of 5 students. This application"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* **Code contributed:** [Reposense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dsyncode98)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* **Features implemented:** "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    * Implement Quiz Feature which includes the following:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "         - Quiz,SubjectQuiz and TopicQuiz classes which form the quiz."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "         - QuizSubjectCommand and QuizTopicCommand classes to read the input and initiate the respective quizzes .These "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "         classes were based on the other SubjectCommand classes created by [JiaLerk](https://github.com/jialerk)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "         - Logging (within the respective classes) "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "         - Testing - SubjectQuizTest and TopicQuizTest."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "         - Testing -Two test cases in the SubjectCommandTest and  TopicCommandTest related to quiz. The other methods were created by [JiaLerk](https://github.com/jialerk)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    * Implement Result Feature which includes the following:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Result , ResultList classes. The resultList class is based on the other list classes created by [JiaLerk](https://github.com/jialerk). "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - ResultSubjectCommand and ResultTopicCommand classes to read the input and show the respective results.These command classes are based on the command classes created by [JiaLerk](https://github.com/jialerk).    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - NoFlashcardException to inform the users if there are no flashcards present in a topic or a quiz."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Logging (within the respective classes)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Testing -  The two test cases in the SubjectCommandTest and TopicCommandTest related to results.The other methods were created by [JiaLerk](https://github.com/jialerk)."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* **Enhancements implemented:**        "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    * Implement printing of upcoming tasks in the application[#141](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/141)."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": " "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    * Implement Date and Time feature in Event and deadline classes. Furthermore, sorted the tasks according to their Date and Time [#84](https://github.com/AY2021S1-CS2113T-W13-1/tp/pull/84)."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": " "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    * Implement the logo in the application."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": " "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* **Contributions to the UG:** "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    * Sections contributed: "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Viewing results for quizzes on a subject - 3.1.9"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Viewing results for quizzes on a topic - 3.2.14"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Taking quizzes - 3.4.1"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Viewing quiz results - 3.4.2"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Sorting tasks - 3.4.6"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Printing upcoming tasks - 3.4.7"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Command Summary"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* **Contributions to the DG:** "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    * Sections contributed: "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Implementation of the quiz class - 4.5"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Sorting Tasks - 4.6"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Results - 4.7"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Target User Profile"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Value proposition"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - Glossary"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        - UML diagrams: Section 4.5,4.7 "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": " "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* **Team based :** "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    - Set up the Github team org and repo \u003cbr\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    - In charge of release v1.0 and v2.0 \u003cbr\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    - Link to issues created: Click [here](https://github.com/AY2021S1-CS2113T-W13-1/tp/issues/created_by/syncode98)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    - Link to pull requests reviewed:[here](https://github.com/AY2021S1-CS2113T-W13-1/tp/pulls?q\u003dis%3Apr+reviewed-by%3Asyncode98"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": ")"
      }
    ],
    "authorContributionMap": {
      "syncode98": 53,
      "-": 4
    }
  },
  {
    "path": "src/main/java/seedu/revised/Revised.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.SubjectCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.storageexception.DataLoadingException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.parser.SubjectParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Revised {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String BASE_DIR \u003d \"data\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String EXPORT_DIR \u003d \"export\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String FLASHCARD_FILENAME \u003d \"flashcards.json\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String TASK_FILENAME \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String RESULT_FILENAME \u003d \"results.json\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String EXPORT_FILENAME \u003d \"data.json\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final SubjectList subjects;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(Revised.class.getName());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // configuration for logging, should only be done once"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            InputStream stream \u003d Revised.class.getClassLoader().getResourceAsStream(\"logging.properties\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            LogManager.getLogManager().readConfiguration(stream);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.log(Level.WARNING, \"Failed to read logging configuration file.\", e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Initialises Duke by loading saved data from the disk, if any."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param baseDir           the name of the directory to store the data into"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param exportDir         the name of the directory to export the data to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param flashcardFilename the name of the file to store all the flashcard info"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param taskFilename      the name of the file to store all the tasks under a subject"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param resultFilename    the name of the file to store all the results of quizzes"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param exportFilename    the name of the file that the data will be exported to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Revised(String baseDir, String exportDir, String flashcardFilename, String taskFilename,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                   String resultFilename, String exportFilename) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage \u003d new Storage.StorageBuilder()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setBaseDir(baseDir)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportDir(exportDir)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setFlashcardFilename(flashcardFilename)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setTaskFilename(taskFilename)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setResultFilename(resultFilename)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportFilename(exportFilename)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cSubject\u003e savedSubjects \u003d new ArrayList\u003c\u003e();  // initialize to empty in case data loading fails"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            savedSubjects \u003d storage.loadSubjects();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (DataLoadingException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.log(Level.WARNING, \"Failed to load saved subjects or topics.\", e);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Ui.printError(e);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        subjects \u003d new SubjectList(savedSubjects);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Runs the Duke program until the user exits the program."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printStart(subjects);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                SubjectCommand c \u003d SubjectParser.parse(fullCommand);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                c.execute(subjects, storage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printErrorMsg(Ui.SUBJECT_INDEX_FORMAT_EXCEPTION);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printErrorMsg(Ui.SUBJECT_INDEX_FORMAT_EXCEPTION);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Ui.printError(e);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            storage.saveSubjects(subjects.getList());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Ui.printErrorMsg(Ui.WRITING_EXCEPTION);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.log(Level.SEVERE, Ui.WRITING_EXCEPTION, e);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printBye();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Application starts.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            new Revised(BASE_DIR, EXPORT_DIR, FLASHCARD_FILENAME, TASK_FILENAME, RESULT_FILENAME, EXPORT_FILENAME)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    .run();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.info(\"Application exits.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "CookieHoodie": 72,
      "-": 7,
      "jialerk": 30,
      "rashien3": 2
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/Flashcard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class Flashcard {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private String question;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private String answer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Flashcard(String question, String answer) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getQuestion() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getAnswer() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return \"Q: \" + question + \"\\n   A: \" + answer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 1,
      "sugandha929": 7,
      "CookieHoodie": 21,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/Subject.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.quizcard.Result;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.ResultList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TopicList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class Subject {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private TopicList topics;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private ResultList results;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject(String title) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Subject(String title, List\u003cTopic\u003e topics) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, topics, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Subject(String title, List\u003cTopic\u003e topics, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, topics, tasks, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Subject(String title, List\u003cTopic\u003e topics, List\u003cTask\u003e tasks, List\u003cResult\u003e results) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.topics \u003d new TopicList(topics);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.tasks \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.results \u003d new ResultList(results);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public TopicList getTopics() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return topics;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public TaskList getTasks() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public ResultList getResults() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 7,
      "CookieHoodie": 33,
      "jialerk": 11,
      "rashien3": 9
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/Topic.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.quizcard.Result;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.ResultList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class Topic {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cFlashcard\u003e flashcards;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private ResultList results;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Topic(String title) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Topic(String title, List\u003cFlashcard\u003e flashcards) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, flashcards, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Topic(String title, List\u003cFlashcard\u003e flashcards, List\u003cResult\u003e results) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.flashcards \u003d flashcards;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.results \u003d new ResultList(results);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public void addFlashcard(Flashcard flashcard) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        flashcards.add(flashcard);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public List\u003cFlashcard\u003e getFlashcards() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return this.flashcards;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public ResultList getResults() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 6,
      "sugandha929": 2,
      "CookieHoodie": 26,
      "jialerk": 2,
      "rashien3": 13
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/quizcard/Quiz.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quizcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.NoFlashcardException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.NoTopicException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public abstract class Quiz {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(Quiz.class.getName());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    protected Result result \u003d new Result(0, 0);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    protected List\u003cFlashcard\u003e flashcards;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    protected List\u003cString\u003e incorrectAnswers \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public abstract void startQuiz() throws NoFlashcardException, NoTopicException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public List\u003cString\u003e getIncorrectAnswers() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return incorrectAnswers;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Checks the given answer for its correctness. If the answer is wrong, the question, the correct answer"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * and the wrong answer given by the user is added to the incorrectAnswers List."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @param answer    The answer given by the user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @param flashcard The flashcard for which the user is currently answering the questions"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void checkAnswer(String answer, Flashcard flashcard) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Checks if the answer that the user gave was correct.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (flashcard.getAnswer().equalsIgnoreCase(answer)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            logger.info(\"The current score of the user is increased by one.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            double updatedResult \u003d this.result.getScore() + 1.0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.result.updateResult(updatedResult);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            logger.info(\"The current score remains the same while the contents of the flashcard and the user\u0027s \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    + \"answer are added to the incorrectAnswers list\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.incorrectAnswers.add(flashcard.getQuestion());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.incorrectAnswers.add(flashcard.getAnswer());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.incorrectAnswers.add(answer);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Finish checking the accuracy of the answer.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 43,
      "CookieHoodie": 1,
      "jialerk": 4
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/quizcard/Result.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quizcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class Result {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(Result.class.getName());"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private double score \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private double maxScore;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Result(float score, int maxScore) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.score \u003d score;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.maxScore \u003d maxScore;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.description \u003d \"Fail\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public double getScore() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return score;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public double getMaxScore() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return maxScore;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void setScore(int score) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.score \u003d score;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void setMaxScore(int maxScore) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.maxScore \u003d maxScore;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Updates the current score and sets the description of the result."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @param score The \u003ccode\u003escore\u003c/code\u003e to replace the current score"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void updateResult(double score) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Update the result and description of the result\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.score \u003d score;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (this.score \u003e\u003d this.maxScore / 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.description \u003d \"Pass\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (this.score \u003d\u003d this.maxScore) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.description \u003d \"Excellent\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Finish updating the result of the quiz\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The description of the quiz is %s\",this.description));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.score + \"/\" + this.maxScore + \" -- \" + this.description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 60,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/quizcard/SubjectQuiz.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quizcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.NoFlashcardException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.NoTopicException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class SubjectQuiz extends Quiz {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(SubjectQuiz.class.getName());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private Subject subject;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public SubjectQuiz(Subject subject) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.subject \u003d subject;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.flashcards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Transfers the flashcards from the all the topics in a subject to the SubjectQuiz class and"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * sets the maximum score of the quiz."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoFlashcardException If the topic has no flashcards"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @throws NoTopicException     If the subject has no topic"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void setUpQuiz() throws NoFlashcardException, NoTopicException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Start setting up the quiz\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (subject.getTopics().getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            throw new NoTopicException(Ui.NO_TOPIC_YET_EXCEPTION);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        int maxScore \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.flashcards.addAll(topic.getFlashcards());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            maxScore +\u003d topic.getFlashcards().size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.result.setMaxScore(maxScore);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (this.flashcards.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoFlashcardException(Ui.NO_FLASHCARD_EXCEPTION);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Finished setting up the quiz\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"Max Score of quiz: %d\", maxScore));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Begins the quiz for the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoFlashcardException If the topic has no flashcards"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @throws NoTopicException     If the subject has no topic"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void startQuiz() throws NoFlashcardException, NoTopicException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Start of the quiz\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The subject being tested is  %s\", this.subject));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        setUpQuiz();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.result.setScore(0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printStartSubjectQuiz(this.subject);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String answer \u003d null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Start printing the questions\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Flashcard flashcard : this.flashcards) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printQuestion(flashcard.getQuestion());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            answer \u003d Ui.readCommand().strip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (answer.equals(\"stop\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                logger.info(\"If the user wants to end the quiz.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printStopQuiz();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printScore(this.result);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                checkAnswer(answer, flashcard);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The last answer is : %s\", answer));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assert answer !\u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (!answer.equals(\"stop\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printEndQuiz();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printScore(this.result);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (this.result.getScore() \u003c this.result.getMaxScore()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printIncorrectAnswers(this.incorrectAnswers);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.subject.getResults().add(this.result);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"End of quiz\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The result for the quiz is %f\",this.result.getScore()));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 84,
      "CookieHoodie": 2,
      "jialerk": 10,
      "rashien3": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/quizcard/TopicQuiz.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quizcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.NoFlashcardException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class TopicQuiz extends Quiz {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(TopicQuiz.class.getName());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private Topic topic;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public TopicQuiz(Topic topic) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.topic \u003d topic;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.flashcards \u003d topic.getFlashcards();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.result.setMaxScore(this.flashcards.size());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Topic getTopic() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return topic;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void setTopic(Topic topic) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.topic \u003d topic;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Checks if the topic has flashcards. Furthermore, this method sets the maximum score for the quiz."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoFlashcardException If there are no flashcards in this topic"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void setUpQuiz() throws NoFlashcardException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Start setting up the quiz for the topic\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (this.flashcards.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoFlashcardException(Ui.NO_FLASHCARD_EXCEPTION);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.result.setMaxScore(this.flashcards.size());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Finished setting up the quiz\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"Max Score of quiz: %d\", this.flashcards.size()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Begins the quiz for the user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoFlashcardException If the topic has no flashcards"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void startQuiz() throws NoFlashcardException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Start of the quiz\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The topic being tested is  %s\", this.topic));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        setUpQuiz();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.result.setScore(0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printStartTopicQuiz(this.topic);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String answer \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Start printing the questions\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Flashcard flashcard : this.flashcards) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printQuestion(flashcard.getQuestion());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            answer \u003d Ui.readCommand().strip();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (answer.equals(\"stop\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printStopQuiz();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printScore(this.result);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                checkAnswer(answer, flashcard);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assert answer !\u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The last answer is : %s\", answer));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (!answer.equals(\"stop\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printEndQuiz();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printScore(this.result);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (this.result.getScore() \u003c this.result.getMaxScore()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printIncorrectAnswers(this.incorrectAnswers);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.topic.getResults().add(this.result);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"End of quiz for this topic\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The result for the quiz is %f\", this.result.getScore()));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 82,
      "CookieHoodie": 2,
      "jialerk": 8
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/taskcard/Deadline.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.taskcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM yyyy\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String dateTime \u003d this.dateTime.format(formatter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String getDateTimeDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM yyyy\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.dateTime.format(formatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 16,
      "CookieHoodie": 3,
      "jialerk": 13
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/taskcard/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.taskcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Event(String description, boolean isDone, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM yyyy\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String dateTime \u003d this.dateTime.format(formatter);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String getDateTimeDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM yyyy\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.dateTime.format(formatter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 16,
      "CookieHoodie": 3,
      "jialerk": 12
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/taskcard/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.taskcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether a task is done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return true when a task is done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Prints the String representation of the class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return the String representation of the class"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return LocalDateTime.MAX;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "syncode98": 6,
      "CookieHoodie": 14,
      "jialerk": 32,
      "rashien3": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/taskcard/Todo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.taskcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 12
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " * Various commands to use depending on the various inputs given by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 2,
      "jialerk": 6,
      "rashien3": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcardcommand/AddFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.flashcardcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.InvalidFlashcardException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.RepeatedFlashcardException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class AddFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public AddFlashcardCommand(String fullCommand) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Adds an instance of Flashcard in the list \u003ccode\u003eTopic.flashcards\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @param topic the \u003ccode\u003eTopic\u003c/code\u003e instance of the Topic class for the user to append to"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @throws RepeatedFlashcardException If the program detects the flashcard the user inputs already exists"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *                                    in the program"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @throws InvalidFlashcardException If the program does not detect any flashcard question or answer in user input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Topic topic) throws RepeatedFlashcardException, InvalidFlashcardException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String[] tokens \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String question \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String answer \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            String content \u003d tokens[1].strip();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            String[] contentTokens \u003d content.split(\";\", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            question \u003d contentTokens[0].strip();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            answer \u003d contentTokens[1].strip();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidFlashcardException(Ui.INVALID_FLASHCARD_EXCEPTION);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        if (question.isEmpty() || answer.isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidFlashcardException(Ui.INVALID_FLASHCARD_EXCEPTION);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        for (Flashcard flashcard : topic.getFlashcards()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            if (flashcard.getQuestion().equals(question) \u0026\u0026 flashcard.getAnswer().equals(answer)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                throw new RepeatedFlashcardException(Ui.REPEATED_FLASHCARD_EXCEPTION);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Flashcard t \u003d new Flashcard(question, answer);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        topic.addFlashcard(t);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printFlashcard(t, topic.getFlashcards());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 6,
      "sugandha929": 34,
      "CookieHoodie": 16,
      "jialerk": 5
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcardcommand/DeleteFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.flashcardcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.command.subjectcommand.DeleteSubjectCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class DeleteFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(DeleteFlashcardCommand.class.getName());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public DeleteFlashcardCommand(String fullCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Deletes an instance of Flashcard in the list \u003ccode\u003eTopic.flashcards\u003c/code\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @param topic the \u003ccode\u003eTopic\u003c/code\u003e instance of the Topic class for the user to delete from"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Topic topic) throws NumberFormatException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        logger.info(\"Begin checking string command to get the flashcard to be deleted.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        int number \u003d Integer.parseInt(message[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Flashcard flashcard \u003d topic.getFlashcards().get(number - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        topic.getFlashcards().remove(number - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printFlashcardDelete(flashcard, topic.getFlashcards().size());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        logger.info(\"Finished deleting the flashcard to be deleted.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        logger.fine(String.format(\"The flashcard is %s; %s\", flashcard.getQuestion(), flashcard.getAnswer()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sugandha929": 38,
      "CookieHoodie": 1,
      "jialerk": 4
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcardcommand/ExitFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.flashcardcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class ExitFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * from an abstract class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @param topic Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *                    from an abstract class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Topic topic) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 19,
      "CookieHoodie": 7,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcardcommand/FlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.flashcardcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.InvalidFlashcardException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.NoFlashcardException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.RepeatedFlashcardException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public abstract class FlashcardCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public abstract void execute(Topic topic) throws NoFlashcardException, RepeatedFlashcardException,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            InvalidFlashcardException, FailedParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 3,
      "CookieHoodie": 2,
      "jialerk": 13
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcardcommand/HelpFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.flashcardcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class HelpFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Prints help function."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @param topic Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *              from an abstract class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Topic topic) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printFlashcardHelp();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sugandha929": 24,
      "CookieHoodie": 1,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcardcommand/ListAllFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.flashcardcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class ListAllFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private SubjectList subjectList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(ListAllFlashcardCommand.class.getName());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * List all subjects, topics, tasks, and flashcards."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param topic topic the user is currently looking at"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void execute(Topic topic) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Begin listing all while looking at topic.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printAll(subjectList.getList(), null, topic);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Finished listing all while looking at topic.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void setSubjectList(SubjectList subjectList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.subjectList \u003d subjectList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 1,
      "rashien3": 34
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcardcommand/ListFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.flashcardcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class ListFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Lists flashcards in the list \u003ccode\u003eTopic.flashcards\u003c/code\u003e."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @param topic the \u003ccode\u003eTopic\u003c/code\u003e instance of the \u003ccode\u003eTopic\u003c/code\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *              class for the user to list flashcards from"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Topic topic) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printFlashcardList(topic);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 16,
      "CookieHoodie": 1,
      "jialerk": 3
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcardcommand/SorryFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.flashcardcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class SorryFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Throws an exception to show invalid user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @param topic                 Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *                              from an abstract class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @throws FailedParseException If user input is invalid"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Topic topic) throws FailedParseException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        throw new FailedParseException(Ui.FAILED_PARSE_EXCEPTION);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 22,
      "CookieHoodie": 2,
      "jialerk": 4
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subjectcommand/AccessSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.taskcommand.TaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.AccessTopicCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.ListAllTopicCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.TopicCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subjectexception.NoSubjectException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.parser.TopicParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AccessSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(AccessSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private SubjectList subjectList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public AccessSubjectCommand(String fullCommand) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eSubject\u003c/code\u003e class into a \u003ccode\u003eSubjectList\u003c/code\u003e."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList           An instance of the \u003ccode\u003eSubjectList\u003c/code\u003e class for the user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                              to find subjects that matches the user input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage               Does nothing in this case but needed since this method was"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                              implemented from an abstract class"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoSubjectException   If the program does not detect the correct syntax for user input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throws NoSubjectException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.subjectList \u003d subjectList;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Subject gotoSubject \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \",2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message.length \u003d\u003d 1 || message[1].isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoSubjectException(Ui.NO_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (subject.getTitle().equals(message[1])) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                gotoSubject \u003d subject;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (gotoSubject \u003d\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            throw new NoSubjectException(Ui.SUBJECT_NOT_FOUND_EXCEPTION);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        goToSubject(gotoSubject);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eSubject\u003c/code\u003e class into a \u003ccode\u003eSubjectList\u003c/code\u003e."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subject An instance of the \u003ccode\u003eSubject\u003c/code\u003e class for the user to access"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private void goToSubject(Subject subject) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Begin accessing a Subject to get Subject details\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printGoToSubject(subject);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        boolean isSubjectExit \u003d false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        while (!isSubjectExit) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Command c \u003d TopicParser.parse(fullCommand);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                if (c instanceof ListAllTopicCommand) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((ListAllTopicCommand) c).setSubjectList(subjectList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                } else if (c instanceof AccessTopicCommand) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((AccessTopicCommand) c).setSubjectList(subjectList);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                if (c instanceof TopicCommand) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((TopicCommand) c).execute(subject);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                } else if (c instanceof TaskCommand) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    TaskList taskList \u003d subject.getTasks();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((TaskCommand) c).execute(taskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                isSubjectExit \u003d c.isExit();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printErrorMsg(Ui.DEADLINE_EXCEPTION);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printErrorMsg(Ui.TOPIC_INDEX_FORMAT_EXCEPTION);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printErrorMsg(Ui.TOPIC_INDEX_FORMAT_EXCEPTION);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } catch (IllegalArgumentException | DateTimeParseException d) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Ui.printErrorMsg(Ui.INVALID_DATETIME_EXCEPTION);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Ui.printError(e);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printBackToSubjects();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Finished access into a subject, going back to main.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 11,
      "CookieHoodie": 17,
      "jialerk": 60,
      "rashien3": 21
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subjectcommand/AddSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subjectexception.InvalidSubjectException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subjectexception.NoSubjectException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subjectexception.RepeatedSubjectException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(AddSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddSubjectCommand(String fullCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eSubject\u003c/code\u003e class into a \u003ccode\u003eSubjectList\u003c/code\u003e."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList               An instance of the \u003ccode\u003eSubjectList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage                   Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                                  from an abstract class"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws InvalidSubjectException  If the program does not detect any subject title in user input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws RepeatedSubjectException If the program detects the Subject the user inputs already exists"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                                  in the program"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throws RepeatedSubjectException, InvalidSubjectException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Begin checking string command to get the title of the subject to be added.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 4;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.length();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidSubjectException(Ui.INVALID_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String title \u003d fullCommand.substring(startOfMessage, endOfMessage).strip();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (title.isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidSubjectException(Ui.INVALID_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assert title !\u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if (subject.getTitle().equals(title)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                throw new RepeatedSubjectException(Ui.REPEATED_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Subject temp \u003d new Subject(title);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        subjectList.getList().add(temp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printSubject(temp, subjectList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Finished creating a new subject.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.fine(String.format(\"The subject is %s\", temp.getTitle()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 3,
      "CookieHoodie": 7,
      "jialerk": 54
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subjectcommand/DeleteSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DeleteSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(DeleteSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public DeleteSubjectCommand(String fullCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Deletes an instance of the \u003ccode\u003eSubject\u003c/code\u003e class in a \u003ccode\u003eSubjectList\u003c/code\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList               An instance of the \u003ccode\u003eSubjectList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage                   Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                                  from an abstract class"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NumberFormatException    If the program detects a wrong format for user input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) throws NumberFormatException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Begin checking string command to get the subject to be deleted.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int number \u003d Integer.parseInt(message[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Subject subject \u003d subjectList.getList().get(number - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assert !(number \u003c\u003d 0 \u0026\u0026 number \u003e subjectList.getList().size());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        subjectList.getList().remove(number - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printSubjectDelete(subject, subjectList.getList().size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Finished deleting the subject to be deleted.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.fine(String.format(\"The subject is %s\", subject.getTitle()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 3,
      "jialerk": 42,
      "rashien3": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subjectcommand/ExitSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ExitSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * from an abstract class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                    from an abstract class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage     Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                    from an abstract class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 3,
      "jialerk": 25
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subjectcommand/ExportSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ExportSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(ExportSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Stores an instance of the \u003ccode\u003eSubjectList\u003c/code\u003e into a file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList  An instance of the \u003ccode\u003eSubjectList\u003c/code\u003e class to be stored"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage      An instance of the \u003ccode\u003eStorage\u003c/code\u003e class to store the"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                     information in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws IOException If there is an error accessing the storage location"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Begin exporting all subjects into a file.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File exportFile \u003d storage.export(subjectList.getList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Ui.printExportSuccessful(exportFile);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Finished exporting all subjects into a file.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 17,
      "jialerk": 20
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subjectcommand/FindSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subjectexception.InvalidSubjectException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class FindSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(FindSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public FindSubjectCommand(String fullCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Find subjects in an instance of the \u003ccode\u003eSubjectList\u003c/code\u003e that holds a query keyed in by the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList               An instance of the \u003ccode\u003eSubjectList\u003c/code\u003e class for the user to "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                                        conduct the search on"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage                   Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                                  from an abstract class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws InvalidSubjectException  If the program does not detect any subject title in user input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) throws InvalidSubjectException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Begin checking string command to get the query.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (message.length \u003c\u003d 1 || message[1].isEmpty()) {  // empty argument"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidSubjectException(Ui.INVALID_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Ui.printFindSubject(subjectList, message[1].strip());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Finished searching for subjects matching the query.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 7,
      "jialerk": 31,
      "rashien3": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subjectcommand/HelpSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class HelpSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Prints help function."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                    from an abstract class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage     Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                    from an abstract class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printSubjectHelp();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 12,
      "CookieHoodie": 3,
      "jialerk": 14
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subjectcommand/ListAllSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class ListAllSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(ListAllSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * List all subjects, topics, tasks, and flashcards."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subjectList the \u003ccode\u003eSubjectList\u003c/code\u003e instance of the \u003ccode\u003eSubjectList\u003c/code\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *                    class for the user to list subjects from"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param storage     Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *                    from an abstract class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Begin listing all subjects, topics, tasks, and flashcards.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printAll(subjectList.getList(),null,null);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Finished listing all subjects, topics, tasks, and flashcards.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 1,
      "rashien3": 33
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subjectcommand/ListSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ListSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(ListSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * List subjects in a \u003ccode\u003eSubjectList\u003c/code\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList the \u003ccode\u003eSubjectList\u003c/code\u003e instance of the \u003ccode\u003eSubjectList\u003c/code\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                    class for the user to list subjects from"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage     Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                    from an abstract class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Begin listing subjects in the SubjectList.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printSubjectList(subjectList.getList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Finished listing the subjects in the SubjectList.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 3,
      "jialerk": 31
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subjectcommand/QuizSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.quizcard.SubjectQuiz;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.NoFlashcardException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.NoTopicException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subjectexception.InvalidSubjectException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subjectexception.NoSubjectException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class QuizSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(QuizSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public QuizSubjectCommand(String fullcommand) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullcommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String getFullCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return this.fullCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Quiz subjects in a \u003ccode\u003eSubjectList\u003c/code\u003e."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList               An instance of the \u003ccode\u003eSubjectList\u003c/code\u003e class for the user to quiz on"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage                   Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                                  from an abstract class"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws InvalidSubjectException  If the program does not detect any subject title in user input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoSubjectException       If the program does not detect a matching subject title in user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) throws NoSubjectException, InvalidSubjectException,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            NoTopicException, NoFlashcardException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Begin finding the subject for which the quiz has to be conducted.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (message.length \u003c\u003d 1 || message[1].isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidSubjectException(Ui.INVALID_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Subject quizSubject \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (subject.toString().equals(message[1].strip())) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                quizSubject \u003d subject;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (quizSubject \u003d\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            throw new NoSubjectException(Ui.SUBJECT_NOT_FOUND_EXCEPTION);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Finished reading the command to find the subject for the quiz feature\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The subject is %s\", quizSubject.getTitle()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        startQuiz(quizSubject);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Starts the quiz of the subject specified in the param."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subject               An instance of the \u003ccode\u003eSubject\u003c/code\u003e class for the user to quiz on"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoTopicException     If there are no instances of \u003ccode\u003eTopic\u003c/code\u003e available for the"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                              program to quiz from"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoFlashcardException If there are no instances of \u003ccode\u003eFlashcard\u003c/code\u003e available for the"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                              program to quiz from"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private void startQuiz(Subject subject) throws NoTopicException, NoFlashcardException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        SubjectQuiz subjectQuiz \u003d new SubjectQuiz(subject);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        subjectQuiz.startQuiz();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 28,
      "CookieHoodie": 15,
      "jialerk": 32,
      "rashien3": 6
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subjectcommand/ResultSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subjectexception.InvalidSubjectException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subjectexception.NoSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class ResultSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(ResultSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public ResultSubjectCommand(String fullCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Shows results of the quiz of a \u003ccode\u003eSubject\u003c/code\u003e in a \u003ccode\u003eSubjectList\u003c/code\u003e."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList               An instance of the \u003ccode\u003eSubjectList\u003c/code\u003e class to get the results from"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage                   Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                                  from an abstract class"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws InvalidSubjectException  If the program does not detect any subject title in user input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws NoSubjectException       If the program does not detect a matching subject title in user input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) throws"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            NoSubjectException, InvalidSubjectException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Begin finding the subject for which the results feature has to be called.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (message.length \u003d\u003d 1 || message[1].isEmpty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidSubjectException(Ui.INVALID_SUBJECT_EXCEPTION);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Subject resultSubject \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (subject.toString().equals(message[1].strip())) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                resultSubject \u003d subject;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (resultSubject \u003d\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            throw new NoSubjectException(Ui.SUBJECT_NOT_FOUND_EXCEPTION);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assert (resultSubject !\u003d null) : \"No such subject exists!\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printSubjectResults(resultSubject);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        logger.info(\"Finished reading the command to find the subject for the results feature.Now, the \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"application prints the results.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The subject is %s\", resultSubject.getTitle()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 24,
      "CookieHoodie": 6,
      "jialerk": 27,
      "rashien3": 5
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subjectcommand/SorrySubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SorrySubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Throws an exception to show invalid user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList           Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                              from an abstract class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param storage               Does nothing in this case but needed since this method was implemented"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *                              from an abstract class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws FailedParseException If user input is invalid"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(SubjectList subjectList, Storage storage) throws FailedParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        throw new FailedParseException(Ui.FAILED_PARSE_EXCEPTION);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the program"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 2,
      "jialerk": 29
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subjectcommand/SubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.NoFlashcardException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subjectexception.InvalidSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subjectexception.NoSubjectException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.NoTopicException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subjectexception.RepeatedSubjectException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public abstract class SubjectCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public abstract void execute(SubjectList subjectList, Storage storage) throws NoSubjectException,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            RepeatedSubjectException, InvalidSubjectException, FailedParseException, IOException, NoTopicException,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            NoFlashcardException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 8,
      "jialerk": 15
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/taskcommand/AddDeadlineCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.taskexception.TaskDeadlineException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddDeadlineCommand extends TaskCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddDeadlineCommand(String fullCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eDeadline\u003c/code\u003e class into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList An instance of the \u003ccode\u003eTaskList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws TaskDeadlineException If there are no parameters written to initialise the creation of a new Deadline"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *                               class"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void execute(TaskList taskList) throws TaskDeadlineException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 9;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.indexOf(\"/by\") - 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfBy \u003d fullCommand.indexOf(\"/by\") + 4;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfBy \u003d fullCommand.length();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new TaskDeadlineException(Ui.DEADLINE_EXCEPTION);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String message \u003d fullCommand.substring(startOfMessage, endOfMessage).strip();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String by \u003d fullCommand.substring(startOfBy, endOfBy);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HH:mm d-MM-yyyy\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(by, format);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message.isEmpty() || by.isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new TaskDeadlineException(Ui.DEADLINE_EXCEPTION);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Task temp \u003d new Deadline(message, false, dateTime);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().add(temp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        taskList.getList().sort(Comparator.comparing(Task::getDateTime));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printTask(temp, taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 14,
      "CookieHoodie": 9,
      "jialerk": 35
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/taskcommand/AddEventCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.taskexception.TaskEventException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddEventCommand extends TaskCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddEventCommand(String fullCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Adds an instance of an \u003ccode\u003eEvent\u003c/code\u003e class into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList An instance of the \u003ccode\u003eTaskList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws TaskEventException If there are no parameters written to initialise the creation of a new Event class"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void execute(TaskList taskList) throws TaskEventException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 6;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.indexOf(\"/at\") - 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfAt \u003d fullCommand.indexOf(\"/at\") + 4;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfAt \u003d fullCommand.length();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new TaskEventException(Ui.EVENT_EXCEPTION);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String message \u003d fullCommand.substring(startOfMessage, endOfMessage).strip();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String at \u003d fullCommand.substring(startOfAt, endOfAt);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HH:mm d-MM-yyyy\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(at, format);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message.isEmpty() || at.isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new TaskEventException(Ui.EVENT_EXCEPTION);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Task temp \u003d new Event(message, false, dateTime);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().add(temp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        taskList.getList().sort(Comparator.comparing(Task::getDateTime));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printTask(temp, taskList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 14,
      "CookieHoodie": 8,
      "jialerk": 37
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/taskcommand/AddTodoCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.taskexception.TaskTodoException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddTodoCommand extends TaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddTodoCommand(String fullCommand) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eTodo\u003c/code\u003e class into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList An instance of the \u003ccode\u003eTaskList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws TaskTodoException If there are no parameters written to initialise the creation of a new Todo class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws TaskTodoException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 5;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.length();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new TaskTodoException(Ui.TODO_EXCEPTION);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String message \u003d fullCommand.substring(startOfMessage, endOfMessage).strip();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message.isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new TaskTodoException(Ui.TODO_EXCEPTION);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Task temp \u003d new Todo(message, false);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            taskList.getList().add(temp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printTask(temp, taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "syncode98": 6,
      "CookieHoodie": 4,
      "jialerk": 39
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/taskcommand/DeleteTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DeleteTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public DeleteTaskCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Deletes a Task in a \u003ccode\u003etaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList the \u003ccode\u003eTaskList\u003c/code\u003e instance of the TaskList class for the user to delete from"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws NumberFormatException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int number \u003d Integer.valueOf(message[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Task task \u003d taskList.getList().get(number - 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().remove(number - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printDelete(task, taskList.getList().size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 5,
      "jialerk": 30
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/taskcommand/DoneTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " * Allows marking a \u003ccode\u003eTask\u003c/code\u003e in a \u003ccode\u003eTaskList\u003c/code\u003e as done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DoneTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public DoneTaskCommand(String fullCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Marks a \u003ccode\u003eTask\u003c/code\u003e in a \u003ccode\u003eTaskList\u003c/code\u003e as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param taskList the \u003ccode\u003eTaskList\u003c/code\u003e instance of the TaskList class for the user to obtain the Task in the"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *                 TaskList specified by the user and set it as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws NumberFormatException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int number \u003d Integer.parseInt(message[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().get(number - 1).markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printDone(taskList.getList().get(number - 1));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 8,
      "jialerk": 27,
      "rashien3": 2
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/taskcommand/FindTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class FindTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public FindTaskCommand(String fullcommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Searches a \u003ccode\u003eTasklist\u003c/code\u003e for all tasks containing the search query."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param taskList \u003ccode\u003eTasklist\u003c/code\u003e to be searched"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printFindTask(taskList,message[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 24,
      "rashien3": 4
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/taskcommand/TaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.taskexception.TaskDeadlineException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.taskexception.TaskEventException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.taskexception.TaskTodoException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws TaskEventException,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            TaskTodoException, TaskDeadlineException, FailedParseException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 1,
      "CookieHoodie": 1,
      "jialerk": 17
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topiccommand/AccessTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.flashcardcommand.FlashcardCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.flashcardcommand.ListAllFlashcardCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.subjectcommand.AddSubjectCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.NoTopicException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.parser.FlashcardParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AccessTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(AddSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private SubjectList subjectList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public AccessTopicCommand(String fullCommand) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eSubject\u003c/code\u003e class into a \u003ccode\u003eSubjectList\u003c/code\u003e."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subject The subject that the user is currently looking at"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @throws NoTopicException Thrown if the command is in the wrong syntax"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) throws NoTopicException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Begin checking command to get the title of the topic to be added.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \",2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Topic t \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message.length \u003d\u003d 1 || message[1].isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            throw new NoTopicException(Ui.NO_TOPIC_EXCEPTION);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (topic.getTitle().equals(message[1].strip())) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                t \u003d topic;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (t \u003d\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoTopicException(Ui.TOPIC_NOT_FOUND_EXCEPTION);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        assert t.getTitle().equals(message[1].strip());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        goToTopic(t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Accesses a topic, handles exceptions thrown by topic-level commands."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param topic Topic that is accessed"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private void goToTopic(Topic topic) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Begin accessing a Topic to get Topic details\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printGoToTopic(topic);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        boolean isTopicExit \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        while (!isTopicExit) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                FlashcardCommand c \u003d FlashcardParser.parse(fullCommand);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                isTopicExit \u003d c.isExit();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                if (c instanceof ListAllFlashcardCommand) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((ListAllFlashcardCommand) c).setSubjectList(subjectList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                c.execute(topic);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printErrorMsg(Ui.FLASHCARD_INDEX_FORMAT_EXCEPTION);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printErrorMsg(Ui.FLASHCARD_INDEX_FORMAT_EXCEPTION);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Ui.printError(e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printBackToTopicsAndTasks();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Finished access into a topic, going back to subject.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void setSubjectList(SubjectList subjectList) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.subjectList \u003d subjectList;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 4,
      "sugandha929": 4,
      "CookieHoodie": 9,
      "jialerk": 11,
      "rashien3": 59
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topiccommand/AddTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.subjectcommand.AddSubjectCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.InvalidTopicException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.RepeatedTopicException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class AddTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(AddSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public AddTopicCommand(String fullCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eTopic\u003c/code\u003e class into a \u003ccode\u003eTopicList\u003c/code\u003e."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subject Subject that user is currently looking at"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @throws RepeatedTopicException Thrown if there already is a topic with the same name"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @throws InvalidTopicException Thrown if the given title is invalid"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) throws RepeatedTopicException, InvalidTopicException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Begin checking string command to get the title of the topic to be added.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int startOfMessage \u003d 4;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int endOfMessage \u003d fullCommand.length();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidTopicException(Ui.INVALID_TOPIC_EXCEPTION);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String title \u003d fullCommand.substring(startOfMessage, endOfMessage).strip();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (title.isEmpty()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidTopicException(Ui.INVALID_TOPIC_EXCEPTION);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic topic : topicList.getList()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (topic.getTitle().equals(title)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                throw new RepeatedTopicException(Ui.REPEATED_TOPIC_EXCEPTION);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Topic t \u003d new Topic(title);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        topicList.add(t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        assert t.getTitle().equals(title);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printTopic(t, topicList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Finished creating a new topic.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.fine(String.format(\"The topic is %s\", t.getTitle()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 3,
      "CookieHoodie": 6,
      "jialerk": 5,
      "rashien3": 48
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topiccommand/DeleteTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.subjectcommand.AddSubjectCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class DeleteTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(AddSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public DeleteTopicCommand(String fullCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Deletes a \u003ccode\u003eTopic\u003c/code\u003e in a \u003ccode\u003eSubject\u003c/code\u003e."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subject the \u003ccode\u003eSubject\u003c/code\u003e instance of the Subject class for the user to delete from"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) throws NumberFormatException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Begin checking string command to get the topic to be deleted.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int number \u003d Integer.parseInt(message[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        List\u003cTopic\u003e topics \u003d topicList.getList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int initialSize \u003d topics.size();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Topic topic \u003d topics.get(number - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        topics.remove(number - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printTopicDelete(topic, topics.size());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        assert initialSize - 1 \u003d\u003d topics.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Finished deleting the topic.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.fine(String.format(\"The subject is %s\", topic.getTitle()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 2,
      "jialerk": 4,
      "rashien3": 43
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topiccommand/ExitTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ExitTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Does nothing, needed because it inherits from an abstract class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subject The subject that the user is currently looking at"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void execute(Subject subject)  {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 10,
      "CookieHoodie": 5,
      "jialerk": 2,
      "rashien3": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topiccommand/FindTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.subjectcommand.FindSubjectCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.InvalidTopicException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.taskcommand.FindTaskCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class FindTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(FindSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public FindTopicCommand(String fullCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Searches a \u003ccode\u003eSubject\u003c/code\u003e for topics and tasks that contain a search query."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subject Subject to search for topics and tasks in"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @throws InvalidTopicException Thrown if the search term is invalid"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) throws InvalidTopicException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Begin checking string command to get the search query.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (message.length \u003c\u003d 1 || message[1].isEmpty()) {  // empty argument"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidTopicException(Ui.INVALID_TOPIC_EXCEPTION);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Ui.printFindTopic(topicList, message[1].strip());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        FindTaskCommand findTaskCommand \u003d new FindTaskCommand(this.fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        findTaskCommand.execute(subject.getTasks());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Finished searching for subjects matching the query.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the subject."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the subject"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 7,
      "jialerk": 5,
      "rashien3": 36
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topiccommand/HelpTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class HelpTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Prints the list of subject level commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subject Subject the user is currently looking at"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printTopicHelp();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the subject."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the subject"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sugandha929": 14,
      "CookieHoodie": 1,
      "jialerk": 1,
      "rashien3": 10
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topiccommand/ListAllTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.subjectcommand.ListAllSubjectCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class ListAllTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(ListAllSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private SubjectList subjectList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * List all subjects, topics, tasks, and flashcards."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subject subject the user is currently looking at"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void execute(Subject subject) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Begin listing all at subject level.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printAll(subjectList.getList(), subject,null);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Finished listing all at subject level.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void setSubjectList(SubjectList subjectList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.subjectList \u003d subjectList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the subject."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the subject"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 1,
      "rashien3": 35
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topiccommand/ListTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.command.subjectcommand.ListSubjectCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class ListTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(ListSubjectCommand.class.getName());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Lists all topics and tasks in a subject."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subject The subject that the user is currently looking at"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Begin listing topics in Subject.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printTopicList(subject);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Finished listing topics in Subject.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Begin listing tasks in the Subject.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printTaskList(subject);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        logger.info(\"Begin listing tasks in Subject.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the subject."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the subject"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 3,
      "rashien3": 30
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topiccommand/QuizTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.quizcard.TopicQuiz;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.NoFlashcardException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.InvalidTopicException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.NoTopicException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class QuizTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(QuizTopicCommand.class.getName());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public QuizTopicCommand(String fullCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String getFullCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return this.fullCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) throws NoTopicException, InvalidTopicException, NoFlashcardException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Begin finding the topic for which the quiz has to be conducted.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (message.length \u003c\u003d 1 || message[1].isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidTopicException(Ui.INVALID_TOPIC_EXCEPTION);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Topic quizTopic \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (topic.toString().equals(message[1].strip())) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                quizTopic \u003d topic;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (quizTopic \u003d\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoTopicException(Ui.TOPIC_NOT_FOUND_EXCEPTION);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Finish reading the command to find the topic for the quiz feature\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The subject is %s\",quizTopic.getTitle()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        startQuiz(quizTopic);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private void startQuiz(Topic topic) throws NoFlashcardException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        TopicQuiz topicQuiz \u003d new TopicQuiz(topic);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        topicQuiz.startQuiz();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 29,
      "CookieHoodie": 12,
      "jialerk": 8,
      "rashien3": 6
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topiccommand/ResultTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.InvalidTopicException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.NoTopicException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class ResultTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(QuizTopicCommand.class.getName());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public ResultTopicCommand(String fullcommand) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullcommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) throws NoTopicException, InvalidTopicException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Begin finding the topic for which the results feature has to be called.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (message.length \u003d\u003d 1 || message[1].isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new InvalidTopicException(Ui.INVALID_TOPIC_EXCEPTION);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Topic resultTopic \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (topic.toString().equals(message[1].strip())) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                resultTopic \u003d topic;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (resultTopic \u003d\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new NoTopicException(Ui.TOPIC_NOT_FOUND_EXCEPTION);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.info(\"Finish reading the command to find the topic for the result feature.Now, the \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"application prints\" + \"the results.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        logger.fine(String.format(\"The subject is %s\", resultTopic.getTitle()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printTopicResults(resultTopic);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the subject."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the subject"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 26,
      "CookieHoodie": 6,
      "jialerk": 10,
      "rashien3": 8
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topiccommand/SorryTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class SorryTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(Subject subject) throws FailedParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        throw new FailedParseException(Ui.FAILED_PARSE_EXCEPTION);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the subject."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e If user exits the subject"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 2,
      "jialerk": 4,
      "rashien3": 15
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topiccommand/TopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.FailedParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.NoFlashcardException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.InvalidTopicException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.NoTopicException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.RepeatedTopicException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public abstract class TopicCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public abstract void execute(Subject subject) throws NoTopicException, InvalidTopicException,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            FailedParseException, RepeatedTopicException, NoFlashcardException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 16
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/FailedParseException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class FailedParseException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public FailedParseException(String failedParseError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(failedParseError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/flashcardexception/InvalidFlashcardException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.flashcardexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class InvalidFlashcardException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public InvalidFlashcardException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 6,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/flashcardexception/NoFlashcardException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.flashcardexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class NoFlashcardException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public NoFlashcardException(String noFlashcardsError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(noFlashcardsError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/flashcardexception/RepeatedFlashcardException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.flashcardexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class RepeatedFlashcardException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public RepeatedFlashcardException(String repeatedFlashcardError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(repeatedFlashcardError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/storageexception/DataLoadingException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.storageexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class DataLoadingException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public DataLoadingException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public DataLoadingException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 10,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/subjectexception/InvalidSubjectException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.subjectexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class InvalidSubjectException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public InvalidSubjectException(String invalidSubjectError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(invalidSubjectError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/subjectexception/NoSubjectException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.subjectexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class NoSubjectException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public NoSubjectException(String noSubjectError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(noSubjectError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/subjectexception/RepeatedSubjectException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.subjectexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class RepeatedSubjectException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public RepeatedSubjectException(String repeatedSubjectError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(repeatedSubjectError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/taskexception/TaskDeadlineException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.taskexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskDeadlineException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public TaskDeadlineException(String taskDeadlineError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(taskDeadlineError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jialerk": 8
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/taskexception/TaskEventException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.taskexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskEventException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public TaskEventException(String taskEventError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(taskEventError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jialerk": 8
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/taskexception/TaskTodoException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.taskexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskTodoException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public TaskTodoException(String taskTodoError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(taskTodoError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jialerk": 8
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/topicexception/InvalidTopicException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.topicexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class InvalidTopicException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public InvalidTopicException(String enterTopicError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(enterTopicError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/topicexception/NoTopicException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.topicexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class NoTopicException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public NoTopicException(String noTopicsError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(noTopicsError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/topicexception/RepeatedTopicException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.exception.topicexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class RepeatedTopicException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public RepeatedTopicException(String repeatedTopicError) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(repeatedTopicError);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 7
    }
  },
  {
    "path": "src/main/java/seedu/revised/list/BaseList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public abstract class BaseList\u003cT\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    protected List\u003cT\u003e list;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public BaseList(List\u003cT\u003e list) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Adds an item into the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param item The item to add into the list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void add(T item) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        list.add(item);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Gets the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return the list of items"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public List\u003cT\u003e getList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 29
    }
  },
  {
    "path": "src/main/java/seedu/revised/list/ResultList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.quizcard.Result;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class ResultList extends BaseList\u003cResult\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public ResultList(List\u003cResult\u003e resultList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(resultList);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 10,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/list/SubjectList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class SubjectList extends BaseList\u003cSubject\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public SubjectList(List\u003cSubject\u003e subjectList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(subjectList);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 11
    }
  },
  {
    "path": "src/main/java/seedu/revised/list/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class TaskList extends BaseList\u003cTask\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 11,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/list/TopicList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class TopicList extends BaseList\u003cTopic\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public TopicList(List\u003cTopic\u003e topics) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(topics);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Gets the \u003ccode\u003eTopic\u003c/code\u003e at the index."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param index index number of the topic"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return \u003ccode\u003eTopic\u003c/code\u003e with the index number"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Topic get(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return this.list.get(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 21
    }
  },
  {
    "path": "src/main/java/seedu/revised/parser/FlashcardParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.flashcardcommand.AddFlashcardCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.flashcardcommand.ExitFlashcardCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.flashcardcommand.FlashcardCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.flashcardcommand.ListAllFlashcardCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.flashcardcommand.ListFlashcardCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.flashcardcommand.DeleteFlashcardCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.flashcardcommand.SorryFlashcardCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.flashcardcommand.HelpFlashcardCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": " * Parses the commands on the topic level."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class FlashcardParser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Parses the inputs provided by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @param fullCommand input by the user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return returns a command instance to execute a command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static FlashcardCommand parse(String fullCommand) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        fullCommand \u003d fullCommand.trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String[] tokens \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String fullCommandLowerCase \u003d fullCommand.toLowerCase();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String command \u003d tokens[0].toLowerCase();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new AddFlashcardCommand(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new DeleteFlashcardCommand(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new HelpFlashcardCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            switch (fullCommandLowerCase) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            case \"exit\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new ExitFlashcardCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            case \"list\" :"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new ListFlashcardCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            case \"list all\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new ListAllFlashcardCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                return new SorryFlashcardCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 21,
      "CookieHoodie": 2,
      "jialerk": 9,
      "rashien3": 17
    }
  },
  {
    "path": "src/main/java/seedu/revised/parser/SubjectParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.ListAllSubjectCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.AddSubjectCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.DeleteSubjectCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.ExitSubjectCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.ExportSubjectCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.FindSubjectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.ListSubjectCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.AccessSubjectCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.SorrySubjectCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.SubjectCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.QuizSubjectCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.ResultSubjectCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.HelpSubjectCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": " * Allows the parsing of inputs provided by the user on the main level."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SubjectParser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Parses the inputs provided by the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param fullCommand input by the user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return returns a command instance to execute a command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static SubjectCommand parse(String fullCommand) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        fullCommand \u003d fullCommand.trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String[] tokens \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String fullCommandLowerCase \u003d fullCommand.toLowerCase();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String command \u003d tokens[0].toLowerCase();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        case \"results\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new ResultSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        case \"quiz\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new QuizSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        case \"subject\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new AccessSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new FindSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new DeleteSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            switch (fullCommandLowerCase) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            case \"export\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                return new ExportSubjectCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                return new HelpSubjectCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                return new ExitSubjectCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            case \"list\" :"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                return new ListSubjectCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            case \"list all\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                return new ListAllSubjectCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                return new SorrySubjectCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 27,
      "CookieHoodie": 2,
      "jialerk": 33,
      "rashien3": 3
    }
  },
  {
    "path": "src/main/java/seedu/revised/parser/TopicParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.taskcommand.AddDeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.taskcommand.AddEventCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.taskcommand.AddTodoCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.taskcommand.DeleteTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.taskcommand.DoneTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.ListAllTopicCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.QuizTopicCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.AddTopicCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.ExitTopicCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.ListTopicCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.ResultTopicCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.SorryTopicCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.DeleteTopicCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.FindTopicCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.AccessTopicCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.HelpTopicCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": " * Parses the commands on the subject level."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class TopicParser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Parses the inputs provided by the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param fullCommand input by the user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return returns a command instance to execute a command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        fullCommand \u003d fullCommand.trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        switch (message[0].toLowerCase()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (fullCommand.equals(\"exit\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new ExitTopicCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new SorryTopicCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new ListTopicCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else if (fullCommand.equals(\"list all\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new ListAllTopicCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new SorryTopicCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            String [] commands \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (message[1].equals(\"topic\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new DeleteTopicCommand(commands[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else if (message[1].equals(\"task\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new DeleteTaskCommand(commands[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new SorryTopicCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new FindTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        case \"quiz\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            return new QuizTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        case \"results\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            return new ResultTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"topic\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AccessTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddTodoCommand(fullCommand);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddDeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddEventCommand(fullCommand);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new DoneTaskCommand(fullCommand);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new HelpTopicCommand();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new SorryTopicCommand();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 6,
      "sugandha929": 4,
      "jialerk": 19,
      "rashien3": 57
    }
  },
  {
    "path": "src/main/java/seedu/revised/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.JsonSyntaxException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.storageexception.DataLoadingException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.quizcard.Result;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final File baseDir;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final File exportDir;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String flashcardFilename;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String taskFilename;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String resultFilename;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String exportFilename;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String topicResultFilename;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String subjectResultFilename;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(Storage.class.getName());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private Storage(StorageBuilder builder) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.baseDir \u003d new File(builder.baseDir);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.exportDir \u003d new File(builder.exportDir);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.flashcardFilename \u003d builder.flashcardFilename;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.taskFilename \u003d builder.taskFilename;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.resultFilename \u003d builder.resultFilename;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.exportFilename \u003d builder.exportFilename;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String capResultFilename \u003d resultFilename.substring(0, 1).toUpperCase() + resultFilename.substring(1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.topicResultFilename \u003d \"topic\" + capResultFilename;  // prepend topic to resultFilename"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.subjectResultFilename \u003d \"subject\" + capResultFilename;  // prepend subject to resultFilename"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Loads and populates subject data from the storage. Subjects and topics will be sorted by their titles in"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * alphabetical order."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws DataLoadingException if fails to load the saved data due to filesystem error"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public List\u003cSubject\u003e loadSubjects() throws DataLoadingException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Loading subject data and its contents from the disk.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cSubject\u003e subjects;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (!baseDir.exists()) {  // if the data hasn\u0027t been saved before"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.info(String.format(\"%s folder is not found, no saved data is loaded.\", baseDir.getAbsolutePath()));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            subjects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File[] subjectDirs \u003d baseDir.listFiles(File::isDirectory);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (subjectDirs \u003d\u003d null) {  // error in getting the directories even if they may exist"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                throw new DataLoadingException(Ui.DATA_LOADING_EXCEPTION);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            subjects \u003d loadSubjects(subjectDirs);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish loading subject data.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Returning subjects: %s.\", subjects));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return subjects;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Creates a list of subjects from the saved directories and populates each subject with existing topics, results,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * and flashcards. Subjects and topics will be sorted by their titles in alphabetical order."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectDirs directories of subjects saved previously"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated subjects loaded from the disk"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws DataLoadingException if fails to load the saved data due to filesystem error"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cSubject\u003e loadSubjects(File[] subjectDirs) throws DataLoadingException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Loading subject data from the directories: %s.\", Arrays.toString(subjectDirs)));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cSubject\u003e subjects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (File subjectDir : subjectDirs) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File[] topicDirs \u003d subjectDir.listFiles(File::isDirectory);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (topicDirs \u003d\u003d null) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                throw new DataLoadingException(Ui.DATA_LOADING_EXCEPTION);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cTopic\u003e topics \u003d loadTopics(topicDirs);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                tasks \u003d loadTasks(subjectDir.toPath());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                if (e instanceof FileNotFoundException) {  // task file may have been deleted by the user intentionally"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    logger.info(String.format(\"Task file is not found under %s, \""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                            + \"proceeding with an empty task list.\", subjectDir.getAbsolutePath()));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                } else {  // task file content may have been corrupted by the user"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    String errMessage \u003d Ui.fileSyntaxErrorMsg(\"task\", subjectDir.getAbsolutePath());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    logger.log(Level.WARNING, errMessage, e);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    Ui.printErrorMsg(errMessage);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(subjectDir.toString(), getSubjectResultFilename());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cResult\u003e results \u003d loadResults(resultFile);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Subject subject \u003d new Subject(subjectDir.getName(), topics, tasks, results);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            subjects.add(subject);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        subjects.sort(Comparator.comparing(Subject::getTitle));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Finish loading subject data. Subjects: %s.\", subjects));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return subjects;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Creates a list of topics from the saved directories and populates each topic with the existing flashcards"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * and results. Topics will be sorted by their titles in alphabetical order."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param topicDirs directories of topics saved previously"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated topics loaded from the disk"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cTopic\u003e loadTopics(File[] topicDirs) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Loading topic data from the directories: %s.\", Arrays.toString(topicDirs)));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cTopic\u003e topics \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (File topicDir : topicDirs) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File flashcardFile \u003d new File(topicDir, getFlashcardFilename());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(topicDir, getTopicResultFilename());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cFlashcard\u003e flashcards \u003d loadFlashcards(flashcardFile);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cResult\u003e results \u003d loadResults(resultFile);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Topic topic \u003d new Topic(topicDir.getName(), flashcards, results);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            topics.add(topic);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        topics.sort(Comparator.comparing(Topic::getTitle));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Finish loading topic data. Topics: %s.\", topics));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return topics;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Loads the json data in the file into an ArrayList of objects (of type specified)."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param type     the type of the object inside the json file"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param jsonFile the file that stores the flashcard data"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated objects with type specified loaded from the file"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws JsonSyntaxException if the file is not in json format or the content is corrupted"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static \u003cT\u003e List\u003cT\u003e loadFromJson(Type type, File jsonFile) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(String.format(\"Loading data of type %s from %s.\", type, jsonFile.getAbsolutePath()));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cT\u003e objects;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileReader fileReader \u003d new FileReader(jsonFile)) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            objects \u003d gson.fromJson(fileReader, type);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (IOException e) {  // file may have been deleted by the user"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.info(String.format(\"%s is not found, proceeding with returning an empty list.\","
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    jsonFile.getAbsolutePath()));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            objects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assert objects !\u003d null;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish loading data.\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Data: %s.\", objects));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return objects;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Loads the data in the file into an ArrayList of Flashcard."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param flashcardFile the file that stores the flashcard data"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated flashcards loaded from the file"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cFlashcard\u003e loadFlashcards(File flashcardFile) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Loading flashcards from %s.\", flashcardFile));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Type objectType \u003d new TypeToken\u003cArrayList\u003cFlashcard\u003e\u003e() {}.getType();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cFlashcard\u003e flashcards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            flashcards \u003d loadFromJson(objectType, flashcardFile);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (JsonSyntaxException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            String errMessage \u003d Ui.fileSyntaxErrorMsg(\"flashcard\", flashcardFile.getAbsolutePath());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.log(Level.WARNING, errMessage, e);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Ui.printErrorMsg(errMessage);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Finish loading flashcards: %s.\", flashcards));"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return flashcards;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Loads the data in the file into an ArrayList of Result."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param resultFile the file that stores the result data"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated results loaded from the file"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cResult\u003e loadResults(File resultFile) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Loading results from %s.\", resultFile));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Type objectType \u003d new TypeToken\u003cArrayList\u003cResult\u003e\u003e() {}.getType();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cResult\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            results \u003d loadFromJson(objectType, resultFile);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (JsonSyntaxException e) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            String errMessage \u003d Ui.fileSyntaxErrorMsg(\"result\", resultFile.getAbsolutePath());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            logger.log(Level.WARNING, errMessage, e);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Ui.printErrorMsg(errMessage);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Finish loading results: %s.\", results));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Saves the subjects along with all the contents into the storage. Quiz results under the subject will"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * also be saved. Note that all of the storage content will be cleared before storing of data happens so that"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * deletion of subjects and topics will be reflected."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjects subjects to be saved"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if fails to save to the storage"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void saveSubjects(List\u003cSubject\u003e subjects) throws IOException {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Clearing old data.\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        clearData();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish clearing old data.\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Saving the subject data to the disk.\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Subjects: %s.\", subjects));"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assert subjects !\u003d null;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Path subjectPath \u003d Paths.get(getBaseDir().toString(), subject.getTitle());"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Files.createDirectories(subjectPath);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(subjectPath.toString(), getSubjectResultFilename());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveToJson(resultFile, subject.getResults().getList());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveTasks(subjectPath, subject.getTasks().getList());"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveTopics(subjectPath, subject.getTopics().getList());"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish saving the subjects to the disk.\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Saves the topics along with all the contents into the storage. If the topic has no flashcards in it, the file"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * with name {@link Storage#getFlashcardFilename()} with an empty square bracket will be created under it. Similarly"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * , the quiz result will be stored under the path with name {@link Storage#getTopicResultFilename()}."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectPath subject directory where topics will be stored under"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param topics      topics to be saved"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if fails to save to the storage"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void saveTopics(Path subjectPath, List\u003cTopic\u003e topics) throws IOException {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assert topics !\u003d null;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(String.format(\"Saving list of topics to %s.\", subjectPath.toAbsolutePath()));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Topics: %s.\", topics));"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Path topicPath \u003d Paths.get(subjectPath.toString(), topic.getTitle());"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Files.createDirectories(topicPath);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File flashcardFile \u003d new File(topicPath.toString(), getFlashcardFilename());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(topicPath.toString(), getTopicResultFilename());"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveToJson(flashcardFile, topic.getFlashcards());"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveToJson(resultFile, topic.getResults().getList());"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish saving the list of topics.\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Save the contents of the list of objects to the file path provided."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * This overwrites the content of the file if it already exists."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param jsonFile File where the objects will be stored into as json"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param objects  list of objects"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if fails to save to the storage"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static \u003cT\u003e void saveToJson(File jsonFile, List\u003cT\u003e objects) throws IOException {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(String.format(\"Saving list of data to %s.\", jsonFile.getAbsolutePath()));"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Objects: %s.\", objects));"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(jsonFile)) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            gson.toJson(objects, fileWriter);  // store the json to file"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            fileWriter.flush();  // flush to actually write the content"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish saving the list of data.\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Delete the directory and all its content."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param directory the directory to be deleted"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if any of the file fails to be deleted"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static void deleteDirectory(Path directory) throws IOException {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(String.format(\"Deleting directory: %s.\", directory.toString()));"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (Stream\u003cPath\u003e fileStream \u003d Files.walk(directory)) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            fileStream"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    .sorted(Comparator.reverseOrder())"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    .map(Path::toFile)"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    .forEach(File::delete);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish deleting the directory.\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Delete baseDir and its contents."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if any of the file fails to be deleted"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private void clearData() throws IOException {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Clearing the directory %s.\", getBaseDir().getAbsolutePath()));"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (getBaseDir().exists()) {  // only delete if the folder exists to avoid error"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Path dataFolder \u003d Paths.get(getBaseDir().toString());"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            deleteDirectory(dataFolder);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(\"Finish clearing the directory.\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Saves the tasks into the file with name {@link Storage#getTaskFilename()} under the subjectPath."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * This overwrites the content of the file if it already exists."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectPath subject directory where the tasks will be stored under"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if there is an error writing to the file"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void saveTasks(Path subjectPath, List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File taskFile \u003d new File(subjectPath.toString(), getTaskFilename());"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(String.format(\"Saving tasks to %s\", taskFile.getAbsolutePath()));"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(taskFile)) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String type \u003d null;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String done \u003d task.getIsDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String datetime \u003d null;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    type \u003d \"T\";"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    type \u003d \"D\";"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    datetime \u003d ((Deadline) task).getDateTimeDescription();"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    type \u003d \"E\";"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    datetime \u003d ((Event) task).getDateTimeDescription();"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    assert false : \"Unknown tasks have not been accounted for.\";"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                fileWriter.write(type + \" | \" + done + \" | \" + task.getDescription());"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                if (datetime !\u003d null) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    fileWriter.write(\" | \" + datetime);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                fileWriter.write(\"\\n\");"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish saving tasks.\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Reads the task file contents under the specified subject into a list of tasks."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectPath subject directory where the tasks were stored under"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of previously saved tasks"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws FileNotFoundException when there are no files found"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public List\u003cTask\u003e loadTasks(Path subjectPath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File taskFile \u003d new File(subjectPath.toString(), getTaskFilename());"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(String.format(\"Loading tasks from %s.\", taskFile.getAbsolutePath()));"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (Scanner scan \u003d new Scanner(taskFile)) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            while (scan.hasNextLine()) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String content \u003d scan.nextLine();"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String[] contents \u003d content.split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String type \u003d contents[0].trim();"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                boolean done \u003d Integer.parseInt(contents[1].trim()) \u003d\u003d 1;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String description \u003d contents[2].trim();"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String datetimeStr;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                LocalDateTime dateTime \u003d null;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM yyyy\");"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                if (type.equals(\"D\") || type.equals(\"E\")) {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    datetimeStr \u003d contents[3].trim();"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    dateTime \u003d LocalDateTime.parse(datetimeStr, format);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    tasks.add(new Todo(description, done));"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    tasks.add(new Deadline(description, done, dateTime));"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    tasks.add(new Event(description, done, dateTime));"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    assert false : type;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish loading tasks.\");"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.fine(String.format(\"Tasks: %s.\", tasks));"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Export the subjects with all their contents into one json file. The file location is specified by"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * {@link Storage#getExportDir()}/{@link Storage#getExportFilename()}."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjects list of subjects to be saved to the storage"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return the file that the data has been exported to"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if fails to save to the file"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public File export(List\u003cSubject\u003e subjects) throws IOException {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File file \u003d new File(getExportDir().toString(), getExportFilename());"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(String.format(\"Exporting the subject data to %s.\", file.getAbsolutePath()));"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Files.createDirectories(getExportDir().toPath());  // create export directory"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        saveToJson(file, subjects);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        logger.info(\"Finish exporting data.\");"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public File getBaseDir() {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return baseDir;"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public File getExportDir() {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return exportDir;"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getFlashcardFilename() {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return flashcardFilename;"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getTaskFilename() {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return taskFilename;"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getResultFilename() {"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return resultFilename;"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getExportFilename() {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return exportFilename;"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getTopicResultFilename() {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return topicResultFilename;"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getSubjectResultFilename() {"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return subjectResultFilename;"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static class StorageBuilder {"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String baseDir;"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String exportDir;"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String flashcardFilename;"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String taskFilename;"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String resultFilename;"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String exportFilename;"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set baseDir property of the Storage to be built."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param baseDir the name of the directory to store the data into"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setBaseDir(String baseDir) {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.baseDir \u003d baseDir;"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set exportDir property of the Storage to be built."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param exportDir the name of the directory to export the data to"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setExportDir(String exportDir) {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.exportDir \u003d exportDir;"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set flashcardFilename property of the Storage to be built."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param flashcardFilename the name of the file to store all the flashcard info"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setFlashcardFilename(String flashcardFilename) {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.flashcardFilename \u003d flashcardFilename;"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set taskFilename property of the Storage to be built."
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param taskFilename the name of the file to store all the tasks under a subject"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setTaskFilename(String taskFilename) {"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.taskFilename \u003d taskFilename;"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set resultFilename property of the Storage to be built."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param resultFilename the name of the file to store all the results of quizzes"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setResultFilename(String resultFilename) {"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.resultFilename \u003d resultFilename;"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set exportFilename property of the Storage to be built."
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param exportFilename the name of the file that the data will be exported to"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setExportFilename(String exportFilename) {"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.exportFilename \u003d exportFilename;"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Build a Storage object with all the properties previously set. All the properties must be set before"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * calling this function or an exception will be thrown."
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @return a Storage object with all the properties set."
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public Storage build() {"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Storage storage \u003d new Storage(this);"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (storage.getBaseDir() \u003d\u003d null || storage.getExportDir() \u003d\u003d null"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    || storage.getFlashcardFilename() \u003d\u003d null || storage.getTaskFilename() \u003d\u003d null"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    || storage.getResultFilename() \u003d\u003d null || storage.getExportFilename() \u003d\u003d null) {"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return storage;"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 6,
      "CookieHoodie": 496,
      "jialerk": 47
    }
  },
  {
    "path": "src/main/java/seedu/revised/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.quizcard.Result;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String LONG_DIVIDER \u003d \"_______________________________________________________________________\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            + \"___________________________________________________\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String LOGO \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            \"                                    ___________\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    + \"                                    |  __ |  _ \\\\\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    + \" ____  ______      _____   ________ |  |__| | | |\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    + \"|  __|/ __ \\\\ \\\\    / /| |  /  _____/ |   __| | | |\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    + \"| |  |  __/ \\\\ \\\\__/ / | | /_____  /  |  |__| |_| |\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    + \"| |   \\\\___|  \\\\____/  |_|/_______/   |_____|_____/\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String HELP_MESSAGE \u003d \"Type help for all available commands\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static final String OOPS_PREFIX \u003d \" OOPS!!!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String OOPS_SUFFIX \u003d \":-(\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String FAILED_PARSE_EXCEPTION \u003d OOPS_PREFIX + \" I\u0027m sorry, but I don\u0027t know what that means \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + OOPS_SUFFIX;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static final String NO_SUBJECT_EXCEPTION \u003d \"Please enter an existing subject.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static final String SUBJECT_NOT_FOUND_EXCEPTION \u003d OOPS_PREFIX + \" I\u0027m sorry, but I can\u0027t find that subject \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + OOPS_SUFFIX;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String REPEATED_SUBJECT_EXCEPTION \u003d OOPS_PREFIX + \" I\u0027m sorry, but subject is already \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + \"in the list \" + OOPS_SUFFIX;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String REPEATED_TOPIC_EXCEPTION \u003d OOPS_PREFIX + \" I\u0027m sorry, but topic is already in the list \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + OOPS_SUFFIX;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String REPEATED_FLASHCARD_EXCEPTION \u003d OOPS_PREFIX + \" I\u0027m sorry, but flashcard is already \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + \"in the list \" + OOPS_SUFFIX;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String TODO_EXCEPTION \u003d OOPS_PREFIX + \" The format should be: todo \u003ctaskname\u003e\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String DEADLINE_EXCEPTION \u003d OOPS_PREFIX + \" The format should be: deadline \u003ctaskname\u003e /by \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + \"\u003cdatetime\u003e\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String EVENT_EXCEPTION \u003d OOPS_PREFIX + \" The format should be: event \u003ctaskname\u003e /at \u003cdatetime\u003e\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static final String SUBJECT_INDEX_FORMAT_EXCEPTION \u003d OOPS_PREFIX"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            + \" The index number must be a positive integer \\n that belongs to an existing subject.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static final String TOPIC_INDEX_FORMAT_EXCEPTION \u003d OOPS_PREFIX"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            + \" The index number must be a positive integer \\n that belongs to an existing task or topic.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static final String FLASHCARD_INDEX_FORMAT_EXCEPTION \u003d OOPS_PREFIX"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            + \" The index number must be a positive integer \\n that belongs to an existing flashcard.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String NO_FLASHCARD_EXCEPTION \u003d \"There are no flashcards present yet!\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static final String NO_TOPIC_YET_EXCEPTION \u003d \"There are no topics present yet!\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static final String NO_TOPIC_EXCEPTION \u003d \"Please enter an existing topic.\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String TOPIC_NOT_FOUND_EXCEPTION \u003d OOPS_PREFIX + \" I\u0027m sorry, but I can\u0027t find that topic \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + OOPS_SUFFIX;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String INVALID_SUBJECT_EXCEPTION \u003d \"Please enter a subject!\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String INVALID_TOPIC_EXCEPTION \u003d \"Please enter a topic!\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String INVALID_FLASHCARD_EXCEPTION \u003d \"Please enter a valid flashcard!\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String INVALID_DATETIME_EXCEPTION \u003d \"Enter date and time in the following format: \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + \"HH:MM DD-MM-YYYY\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String DATA_LOADING_EXCEPTION \u003d \"Error loading saved data from the disk, \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            + \"proceeding with clean state.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String WRITING_EXCEPTION \u003d \"Writing to file failed.\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private static final Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static String readCommand() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printStart(SubjectList subjects) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Hello from\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Hello! I\u0027m revisED\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (subjects.getList().size() !\u003d 0) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            printUpcomingTasks(subjects);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Alright, What can I do for you?\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        printHelpMessage();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private static void printHelpMessage() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(HELP_MESSAGE);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printSubjectList(List\u003cSubject\u003e list) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"There are no subjects in your list!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"Here are the subject(s) in your list:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            int num \u003d 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            for (Subject item : list) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                System.out.println(num + \". \" + item);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                num++;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTaskList(Subject subject) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TaskList taskList \u003d subject.getTasks();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        List\u003cTask\u003e list \u003d taskList.getList();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"There are no tasks in your list!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"Here are the tasks(s) under \" + subject.getTitle() + \": \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                assert index \u003e 0;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                System.out.println(index + \". \" + t);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printDone(Task task) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\" Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"   \" + task);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printDelete(Task task, int total) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\" Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"   \" + task);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\" Now you have \" + total + (total \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printSubjectDelete(Subject subject, int total) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\" Noted. I\u0027ve removed this subject:\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"   \" + subject);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\" Now you have \" + total + (total \u003d\u003d 1 ? \" subject \" : \" subjects \") + \"in the list.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printBye() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(BYE_MESSAGE);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static void printError(Exception err) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static void printErrorMsg(String msg) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printFindTask(TaskList taskList, String find) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        boolean isTaskFound \u003d false;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Task task : taskList.getList()) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if (task.toString().contains(find)) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printTaskMatch(isTaskFound);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                System.out.println(task);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                isTaskFound \u003d true;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (!isTaskFound) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            System.out.println(\" Sorry! I could not find any tasks with \" + find + \" in the list.\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printFindSubject(SubjectList subjectList, String find) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int subjectPresent \u003d 0;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if (subject.toString().contains(find)) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printSubjectMatch(subjectPresent);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                System.out.println(\"  \" + subject);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                subjectPresent \u003d 1;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assert (subjectPresent \u003d\u003d 1 || subjectPresent \u003d\u003d 0);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (subjectPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            System.out.println(\" Sorry! I could not find any subject with \" + find + \" in the list.\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printSubjectMatch(int subjectPresent) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (subjectPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            System.out.println(\" Here are the matching subject(s) in your list:\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTaskMatch(boolean isTaskFound) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (!isTaskFound) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            System.out.println(\" Here are the matching task(s) in your list:\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printGoToSubject(Subject subject) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"Entering the Subject Level for the \" + subject.toString() + \" subject.\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        printHelpMessage();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printBackToSubjects() {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"Going back to the main level.\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTopicList(Subject subject) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        List\u003cTopic\u003e list \u003d topicList.getList();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"There are no topics in your list!\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"Here are the topic(s) under \" + subject.getTitle() + \": \");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            for (Topic t : list) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                assert index \u003e 0;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                System.out.println(index + \". \" + t);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTopicMatch(boolean isTopicFound) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (!isTopicFound) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            System.out.println(\"Here are the matching topic(s) in your list:\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printFindTopic(TopicList topicList, String query) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        boolean isTopicPresent \u003d false;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic topic : topicList.getList()) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (topic.toString().contains(query)) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printTopicMatch(isTopicPresent);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                System.out.println(topic);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                isTopicPresent \u003d true;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (!isTopicPresent) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            System.out.println(\"Sorry! I could not find any topics with \" + query + \" in the list.\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printGoToTopic(Topic topic) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"Entering the topic level for the \" + topic.getTitle() + \" topic.\");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        printHelpMessage();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTopicDelete(Topic topic, int total) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this topic:\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"   \" + topic);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\" Now you have \" + total + (total \u003d\u003d 1 ? \" topic \" : \" topics \" + \"in the list.\"));"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static void printFlashcardDelete(Flashcard flashcard, int total) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this flashcard:\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        System.out.println(\"  Q: \" + flashcard.getQuestion() + \"\\n  A: \" + flashcard.getAnswer());"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Now you have \" + total + (total \u003d\u003d 1 ? \" flashcard \" : \" flashcards \" + \"in the list.\"));"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static void printFlashcardList(Topic topic) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        List\u003cFlashcard\u003e list \u003d topic.getFlashcards();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"There are no flashcards in your list!\");"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"Here are the flashcard(s) under \" + topic.getTitle() + \": \");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            for (Flashcard t : list) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                assert index \u003e 0;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                System.out.println(index + \". \" + t);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printScore(Result result) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Result:\" + result);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printIncorrectAnswers(List\u003cString\u003e incorrectAnswers) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Here are the questions which you got wrong.\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (int i \u003d 0; i \u003c incorrectAnswers.size(); i +\u003d 3) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"Question:\" + incorrectAnswers.get(i));"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"Correct Answer: \" + incorrectAnswers.get(i + 1));"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"Your Answer: \" + incorrectAnswers.get(i + 2));"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printStartSubjectQuiz(Subject subject) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"You are about to begin the quiz for \" + subject + \".\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printStartTopicQuiz(Topic topic) {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"You are about to begin the quiz for \" + topic + \".\");"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printStopQuiz() {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"The quiz has been stopped!\");"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printEndQuiz() {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"The quiz has ended\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printSubjectResults(Subject subject) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (subject.getResults().getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"You do not have any results!\");"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            for (Result result : subject.getResults().getList()) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                assert index \u003e 0;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                System.out.println(\"Quiz \" + index + \": \" + result);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printSubject(Subject subject, SubjectList subjectList) {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this subject:\");"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"  \" + subject);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Now you have \" + subjectList.getList().size() + (subjectList.getList().size() \u003d\u003d 1"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                ? \" subject \" : \" subjects \") + \"in the list.\");"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printTopic(Topic topic, TopicList topicList) {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this topic:\");"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"  \" + topic);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Now you have \" + topicList.getList().size() + (topicList.getList().size() \u003d\u003d 1"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                ? \" topic \" : \" topics \") + \"in the list.\");"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static void printFlashcard(Flashcard flashcard, List\u003cFlashcard\u003e flashcards) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this flashcard:\");"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        System.out.println(\"  Q: \" + flashcard.getQuestion() + \"\\n  A: \" + flashcard.getAnswer());"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Now you have \" + flashcards.size() + (flashcards.size() \u003d\u003d 1"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                ? \" flashcard \" : \" flashcards \") + \"in the list.\");"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printTopicResults(Topic topic) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (topic.getResults().getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"You do not have any results!\");"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            for (Result result : topic.getResults().getList()) {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                assert index \u003e 0;"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                System.out.println(\"Quiz \" + index + \": \" + result);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printQuestion(String question) {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"Question: \" + question);"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printBackToTopicsAndTasks() {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"Going back to the subject level.\");"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.getList().size() + (taskList.getList().size() \u003d\u003d 1"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                ? \" task \" : \" tasks \") + \"in the list.\");"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Prints all the upcoming tasks that are due within a week."
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @param subjects The list of subjects present in the application"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printUpcomingTasks(SubjectList subjects) {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        LocalDateTime nextWeek \u003d LocalDateTime.now().plusDays(7);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        int firstTask \u003d 0;"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Subject subject : subjects.getList()) {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            for (Task task : subject.getTasks().getList()) {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                if (task.getDateTime() !\u003d null) {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    if (task.getDateTime().isBefore(nextWeek) \u0026 task.getDateTime().isAfter(LocalDateTime.now())"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                            \u0026 ! task.getIsDone()) {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        taskList.add(task);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        if (firstTask \u003d\u003d 0) {"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                            System.out.println(\"Here are the upcoming tasks for next week!\");"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                            firstTask \u003d 1;"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                            System.out.println(subject);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        System.out.println(index + \". \" + task);"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        index \u003d index + 1;"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            taskList.clear();"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static String fileSyntaxErrorMsg(String dataType, String fileLocation) {"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return String.format(\"Error reading the %s data under %s. Make sure the syntax is correct \""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"if you changed it manually. Proceeding with empty %ss.\", dataType, fileLocation, dataType);"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static void printExportSuccessful(File exportFile) {"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Your data has been successfully exported to \" + exportFile.getAbsolutePath() + \".\");"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static void printSubjectHelp() {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(LONG_DIVIDER);"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                \"help:          shows the list of commands available at the main level\\n\""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"add abc:       adds a subject called \u0027abc\u0027\\n\""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"find abc:      finds all subjects containing the letters abc\\n\""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"list:          shows the list of all subjects\\n\""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"list all:      shows the tree of all subjects, topics, tasks and flashcards\\n\""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"delete 1:      deletes the 1st subject in the list.\\n\""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"subject abc:   enters the subject called abc, now you can create, find, list, delete \""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"and enter the topics of subject abc\\n\""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"quiz abc:      starts a quiz for all the flashcards present in all topics of subject abc\\n\""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"               answer the questions of the current flashcards to test your knowledge\\n\""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"results abc:   gives you the results of all attempted quizzes for abc subject\\n\""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                        + \"export:        exports all the data to a JSON file\\n\""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                        + \"bye:           exits the application\""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        );"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(LONG_DIVIDER);"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static void printTopicHelp() {"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(LONG_DIVIDER);"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                \"help:                              shows the list of commands available at the subject level\\n\""
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"add abc:                           adds a topic called \u0027abc\u0027 in the current subject\\n\""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"todo abc:                          adds a todo type task with the description \u0027abc\u0027\\n\""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"deadline abc /by 12:00 13-11-2020: adds a deadline type task with description \u0027abc\u0027 with \""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"date/time of deadline\\n\""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"                                   as 12:00 AM 13 Nov 2020\\n\""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"event abc /at 01:00 21-11-2020:    adds an event type task with description \u0027abc\u0027 \""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"with date/time of event\\n\""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"                                   as 1:00 AM 21 Nov 2020\\n\""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"find abc:                          finds all topics and tasks containing \u0027abc\u0027 in the \""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"current subject\\n\""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"list:                              shows the list of all topics and tasks in the current \""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"subject\\n\""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"list all:                          shows the tree of all subjects, topics, tasks and \""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"flashcards\\n\""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"delete topic 1:                    deletes the 1st topic in the list of topics.\\n\""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"delete task 1:                     deletes the 1st task in the list of tasks.\\n\""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"done 1:                            marks the 1st task in the list of tasks as done\\n\""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"topic abc:                         enters the topic abc, now you can add, find, list \""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"and delete flashcards of topic abc\\n\""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"quiz abc:                          starts a quiz for all the flashcards of the topic abc,\\n\""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"                                   answer the questions of the prompted flashcards \""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"to test your knowledge\\n\""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"results abc:                       gives you the results of all attempted quizzes for \""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"abc topic\\n\""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                        + \"exit:                              exits the subject to return to the main screen, \""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                        + \"where you can work with subjects\""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        );"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(LONG_DIVIDER);"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static void printFlashcardHelp() {"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(LONG_DIVIDER);"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                \"help:              shows the list of commands available at the topic level\\n\""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"add abc; def:      adds a flashcard with question \u0027abc\u0027 and answer \u0027def\u0027 \""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"in the current topic\\n\""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"list:              shows the list of all flashcards in the current topic\\n\""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                        + \"list all:          shows the tree of all subjects, topics, tasks and flashcards\\n\""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"delete 1:          deletes the 1st flashcard in the list\\n\""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                        + \"exit:              exits the topic to return to the subject level, \""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                        + \"where you can work with tasks and topics\""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        );"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(LONG_DIVIDER);"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Prints a tree of all subjects, topics, tasks, and flashcards."
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Tells user which subject you are currently accessing."
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subjects      the list of all subjects to be printed"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param activeSubject Subject that the user is currently accessing. null if user is not accessing a subject"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param activeTopic   Topic that the user is currently accessing. null if user is not accessing a topic"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printAll(List\u003cSubject\u003e subjects, Subject activeSubject, Topic activeTopic) {"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        assert !(activeSubject !\u003d null \u0026\u0026 activeTopic !\u003d null);"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"Here\u0027s a list of all items:\");"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (activeSubject \u003d\u003d null \u0026\u0026 activeTopic \u003d\u003d null) {"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            printActiveTreeMessage();"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            boolean isLastSubject \u003d i \u003d\u003d subjects.size();"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.print((isLastSubject ? \"└─ \" : \"├─ \")"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    + (i++) + \". \" + subject.toString() + \" \");"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (activeSubject !\u003d null \u0026\u0026 subject \u003d\u003d activeSubject) {"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                printActiveTreeMessage();"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            printTreeUnderSubject(isLastSubject, subject, activeTopic);"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Prints a subtree of all items under a subject."
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Prints where in the tree the user is currently accessing."
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param isLastSubject Whether the subject containing the topics is the last subject in the list"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subject       The subject containing all the topics to be printed"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param activeTopic   Topic that the user is currently accessingaccessing. null if user is not accessing a topic"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTreeUnderSubject(boolean isLastSubject, Subject subject, Topic activeTopic) {"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        // Print topics"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        List\u003cTopic\u003e topics \u003d topicList.getList();"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String subjectTreeSymbol \u003d (isLastSubject ? \" \" : \"│\");"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (topics.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(subjectTreeSymbol + \"  ├─ No topics\");"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(subjectTreeSymbol + \"  │  Topics\");"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            printTreeTopic(topic, activeTopic, subjectTreeSymbol, i++);"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        // Print tasks"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        i \u003d 1;"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TaskList taskList \u003d subject.getTasks();"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getList();"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(subjectTreeSymbol + \"  └─ No tasks\");"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(subjectTreeSymbol + \"  │  Tasks\");"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            printTreeTask(task, subjectTreeSymbol, tasks.size(), i++);"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Prints the subtree of a topic."
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param topic The topic to be printed"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param activeTopic The topic the user is accessing. Null if user is accessing a topic"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subjectTreeSymbol Appropriate symbol to print under subject column"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param index Index number of topic"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTreeTopic(Topic topic, Topic activeTopic, String subjectTreeSymbol, int index) {"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.print(subjectTreeSymbol + \"  ├─ \""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + index + \". \" + topic.toString() + \" \");"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (activeTopic !\u003d null \u0026\u0026 topic \u003d\u003d activeTopic) {"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            printActiveTreeMessage();"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int numberOfFlashcards \u003d topic.getFlashcards().size();"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (numberOfFlashcards !\u003d 0) {"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(subjectTreeSymbol"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    + \"  │  └─ \""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    + numberOfFlashcards"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    + (numberOfFlashcards \u003d\u003d 1 ? \" Flashcard\" : \" Flashcards\"));"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Prints the subtree of a task."
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param task The task to be printed"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subjectTreeSymbol Appropriate symbol to print under subject column"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param tasksSize Size of the list of tasks"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param index Index number of task"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTreeTask(Task task, String subjectTreeSymbol, int tasksSize, int index) {"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(subjectTreeSymbol"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"  \""
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + ((index \u003d\u003d tasksSize) ? \"└─ \" : \"├─ \")"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + index + \". \" + task.toString());"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printActiveTreeMessage() {"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"(You are currently here)\");"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "syncode98": 137,
      "sugandha929": 51,
      "CookieHoodie": 194,
      "jialerk": 87,
      "rashien3": 211
    }
  },
  {
    "path": "src/test/java/seedu/revised/RevisedTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "class RevisedTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "jialerk": 2
    }
  },
  {
    "path": "src/test/java/seedu/revised/card/quizcard/SubjectQuizTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quizcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.ResultList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.NoFlashcardException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.NoTopicException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "class SubjectQuizTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private SubjectList subjects;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private Result result \u003d new Result(0, 0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private List\u003cFlashcard\u003e flashcards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private List\u003cString\u003e incorrectAnswers \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private ResultList results \u003d new ResultList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setup() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjects \u003d new SubjectList("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        new Subject(\"Maths\"),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        new Subject(\"History\"),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        new Subject(\"Science\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                )));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjects.getList().get(1).getTopics().add(new Topic(\"First War\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjects.getList().get(2).getTopics().add(new Topic(\"Evolution\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Flashcard first \u003d new Flashcard(\"middle of solar system\", \"Sun\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Flashcard second \u003d new Flashcard(\"lightspeed\", \"speed of light\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjects.getList().get(2).getTopics().get(0).addFlashcard(first);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjects.getList().get(2).getTopics().get(0).addFlashcard(second);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setUpQuiz_subjectWithoutTopic_throwsNoTopicException() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        SubjectQuiz subjectQuiz \u003d new SubjectQuiz(subjects.getList().get(0));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assertThrows(NoTopicException.class, subjectQuiz::setUpQuiz);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setUpQuiz_subjectWithTopicWithoutFlashcard_throwsNoFlashcardException() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        SubjectQuiz subjectQuiz \u003d new SubjectQuiz(subjects.getList().get(1));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NoFlashcardException.class, subjectQuiz::setUpQuiz);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setUpQuiz_subjectWithTopicsAndFlashcards_checkMaxScore()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throws NoFlashcardException, NoTopicException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        SubjectQuiz subjectQuiz \u003d new SubjectQuiz(subjects.getList().get(2));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjectQuiz.setUpQuiz();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assertEquals(subjectQuiz.result.getMaxScore(), 2.0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 59,
      "CookieHoodie": 2,
      "jialerk": 8
    }
  },
  {
    "path": "src/test/java/seedu/revised/card/quizcard/TopicQuizTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quizcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.ResultList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TopicList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.NoFlashcardException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "class TopicQuizTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private TopicList topics;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private Result result \u003d new Result(0, 0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private List\u003cFlashcard\u003e flashcards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private List\u003cString\u003e incorrectAnswers \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private ResultList results \u003d new ResultList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setup() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        topics \u003d new TopicList("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        new Topic(\"First War\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        new Topic(\"Evolution\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                )));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Flashcard first \u003d new Flashcard(\"middle of solar system\", \"Sun\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Flashcard second \u003d new Flashcard(\"lightspeed\", \"speed of light\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        topics.get(1).addFlashcard(first);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        topics.get(1).addFlashcard(second);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setUpQuiz_TopicWithoutFlashcard_throwsNoFlashcardException() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        TopicQuiz topicQuiz \u003d new TopicQuiz(topics.get(0));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NoFlashcardException.class, topicQuiz::setUpQuiz);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setUpQuiz_TopicsWithFlashcards_checkMaxScore()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throws NoFlashcardException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        TopicQuiz topicQuiz \u003d new TopicQuiz(topics.get(1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        topicQuiz.setUpQuiz();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assertEquals(topicQuiz.result.getMaxScore(), 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 47,
      "CookieHoodie": 2,
      "jialerk": 6
    }
  },
  {
    "path": "src/test/java/seedu/revised/command/FlashcardCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.flashcardcommand.AddFlashcardCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.flashcardcommand.DeleteFlashcardCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.InvalidFlashcardException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.flashcardexception.RepeatedFlashcardException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class FlashcardCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private Topic topic;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private AddFlashcardCommand addCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private DeleteFlashcardCommand deleteCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        List flashcardList \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                new Flashcard(\"What is the Speed of Light?\",\"3.0x10^8m/s\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                new Flashcard(\"What is the Speed of sound?\",\"343m/s\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                new Flashcard(\"How to get Speed from Distance and Time?\",\"Distance/Time\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        topic \u003d new Topic(\"Speed\", flashcardList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addFlashcardCommand_validCommand_returnsSubjectTitle()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throws RepeatedFlashcardException, InvalidFlashcardException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand \u003d new AddFlashcardCommand(\"add How to get Speed from Velocity and Time; Velocity*Time\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand.execute(topic);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(\"Q: How to get Speed from Velocity and Time\\n   A: Velocity*Time\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                topic.getFlashcards().get(3).toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addFlashcardCommand_NoFlashcardInputWithoutSpace_throwsException() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand \u003d new AddFlashcardCommand(\"add\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(InvalidFlashcardException.class, () -\u003e addCommand.execute(topic));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addFlashcardCommand_NoFlashcardInputWithSpace_throwsException() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand \u003d new AddFlashcardCommand(\"add \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(InvalidFlashcardException.class, () -\u003e addCommand.execute(topic));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public void addFlashcardCommand_FlashcardWithoutSemicolon_throwsException() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        addCommand \u003d new AddFlashcardCommand(\"add What is the formula for speed? Speed\u003dDistance/Time.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        assertThrows(InvalidFlashcardException.class, () -\u003e addCommand.execute(topic));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void deleteFlashcardCommand_validCommand_returnsIndex() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        deleteCommand \u003d new DeleteFlashcardCommand(\"delete 2\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        deleteCommand.execute(topic);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(Integer.valueOf(\"2\"), topic.getFlashcards().size());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void deleteFlashcardCommand_InputNonIntegerAsIndex_throwsException() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        deleteCommand \u003d new DeleteFlashcardCommand(\"delete What is the Speed of Light?\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NumberFormatException.class, () -\u003e deleteCommand.execute(topic));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 7,
      "jialerk": 66
    }
  },
  {
    "path": "src/test/java/seedu/revised/command/SubjectCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.SubjectList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.AddSubjectCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.DeleteSubjectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.FindSubjectCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.ListSubjectCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.ResultSubjectCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.AccessSubjectCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.subjectcommand.QuizSubjectCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subjectexception.InvalidSubjectException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subjectexception.NoSubjectException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.subjectexception.RepeatedSubjectException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SubjectCommandTest {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private SubjectList subjects;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private AddSubjectCommand addCommand;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private DeleteSubjectCommand deleteCommand;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private FindSubjectCommand findCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private AccessSubjectCommand accessCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    Path tempDir;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        subjects \u003d new SubjectList("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        new Subject(\"English\"),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        new Subject(\"Chinese\"),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        new Subject(\"Science\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                )));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage \u003d new Storage.StorageBuilder()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setBaseDir(tempDir.toString())"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportDir(tempDir.toString())"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setFlashcardFilename(\"flashcards.json\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setTaskFilename(\"tasks.txt\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setResultFilename(\"results.json\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportFilename(\"data.json\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void accessSubjectCommand_NoSubjectInputWithSpace_throwsException() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        accessCommand \u003d new AccessSubjectCommand(\"subject \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NoSubjectException.class, () -\u003e accessCommand.execute(subjects, storage));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void accessSubjectCommand_NoSubjectInputWithoutSpace_throwsException() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        accessCommand \u003d new AccessSubjectCommand(\"subject\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NoSubjectException.class, () -\u003e accessCommand.execute(subjects, storage));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void accessSubjectCommand_subjectNotPresent_throwsException() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        accessCommand \u003d new AccessSubjectCommand(\"subject Malay\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NoSubjectException.class, () -\u003e accessCommand.execute(subjects, storage));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addSubjectCommand_validCommand_returnsSubjectTitle()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throws RepeatedSubjectException, InvalidSubjectException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand \u003d new AddSubjectCommand(\"add Maths\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        addCommand.execute(subjects, storage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(\"Maths\", subjects.getList().get(3).getTitle());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addSubjectCommand_SameSubject_throwsException() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand \u003d new AddSubjectCommand(\"add English\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(RepeatedSubjectException.class, () -\u003e addCommand.execute(subjects, storage));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addSubjectCommand_NoSubjectInputWithSpace_throwsException() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand \u003d new AddSubjectCommand(\"add \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(InvalidSubjectException.class, () -\u003e addCommand.execute(subjects, storage));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addSubjectCommand_NoSubjectInputWithoutSpace_throwsException() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand \u003d new AddSubjectCommand(\"add\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(InvalidSubjectException.class, () -\u003e addCommand.execute(subjects, storage));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void deleteSubjectCommand_validCommand_returnsIndex() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        deleteCommand \u003d new DeleteSubjectCommand(\"delete 2\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        deleteCommand.execute(subjects, storage);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(Integer.valueOf(\"2\"), subjects.getList().size());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void deleteSubjectCommand_InputNonIntegerAsIndex_throwsException() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        deleteCommand \u003d new DeleteSubjectCommand(\"delete English\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NumberFormatException.class, () -\u003e deleteCommand.execute(subjects, storage));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void findSubjectCommand_validCommand_executesMethod() throws InvalidSubjectException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        findCommand \u003d new FindSubjectCommand(\"find English\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        findCommand.execute(subjects, storage);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void findSubjectCommand_NoSubjectInputWithSpace_throwsException() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        findCommand \u003d new FindSubjectCommand(\"find \");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(InvalidSubjectException.class, () -\u003e findCommand.execute(subjects, storage));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void findSubjectCommand_NoSubjectInputWithoutSpace_throwsException() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        findCommand \u003d new FindSubjectCommand(\"find\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(InvalidSubjectException.class, () -\u003e findCommand.execute(subjects, storage));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void quizSubjectCommand_subjectNotPresent_throwsException() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        QuizSubjectCommand quizNoSubject \u003d new QuizSubjectCommand(\"quiz Maths\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertThrows(NoSubjectException.class, () -\u003e quizNoSubject.execute(subjects, storage));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void quizSubjectCommand_invalidCommand_throwsException() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        QuizSubjectCommand quizInvalidCommand \u003d new QuizSubjectCommand(\"quiz\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertThrows(InvalidSubjectException.class, () -\u003e quizInvalidCommand.execute(subjects, storage));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void resultSubjectCommand_subjectNotPresent_throwsException() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        ResultSubjectCommand resultNoSubject \u003d new ResultSubjectCommand(\"quiz Maths\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertThrows(NoSubjectException.class, () -\u003e resultNoSubject.execute(subjects, storage));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void resultSubjectCommand_invalidCommand_throwsException() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        ResultSubjectCommand resultInvalidCommand \u003d new ResultSubjectCommand(\"quiz\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertThrows(InvalidSubjectException.class, () -\u003e resultInvalidCommand.execute(subjects, storage));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 18,
      "CookieHoodie": 22,
      "jialerk": 116
    }
  },
  {
    "path": "src/test/java/seedu/revised/command/TaskCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.taskcommand.AddDeadlineCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.taskcommand.AddEventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.taskcommand.AddTodoCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.taskcommand.DeleteTaskCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.taskcommand.DoneTaskCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.taskcommand.FindTaskCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.taskexception.TaskDeadlineException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.taskexception.TaskEventException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.taskexception.TaskTodoException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.list.TaskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskCommandTest {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private AddTodoCommand addTodoCommand;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private AddDeadlineCommand addDeadlineCommand;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private AddEventCommand addEventCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private DeleteTaskCommand deleteCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private FindTaskCommand findCommand;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private DoneTaskCommand doneCommand;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String by \u003d \"23:59 11-11-2020\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String at \u003d \"12:00 13-11-2020\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HH:mm d-MM-yyyy\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(by, format);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        LocalDateTime dateTime2 \u003d LocalDateTime.parse(at, format);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        tasks \u003d new TaskList("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        new Todo(\"Revise Speed\",false),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        new Deadline(\"Project\",false,dateTime),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        new Event(\"Exam\",false,dateTime2)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                )));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addDeadlineCommand_validCommand_returnsDeadlineString()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throws TaskDeadlineException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addDeadlineCommand \u003d new AddDeadlineCommand(\"deadline Report /by 23:59 20-10-2020\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addDeadlineCommand.execute(tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(\"Report\", tasks.getList().get(0).getDescription());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(\"2020-10-20T23:59\", tasks.getList().get(0).getDateTime().toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addDeadlineCommand_missingDescription_throwsException() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addDeadlineCommand \u003d new AddDeadlineCommand(\"deadline Report /by\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(StringIndexOutOfBoundsException.class, () -\u003e addDeadlineCommand.execute(tasks));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addDeadlineCommand_noDescription_throwsException() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addDeadlineCommand \u003d new AddDeadlineCommand(\"deadline\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(TaskDeadlineException.class, () -\u003e addDeadlineCommand.execute(tasks));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addEventCommand_validCommand_returnsEventString()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throws TaskEventException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addEventCommand \u003d new AddEventCommand(\"event Finals /at 14:00 21-11-2020\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addEventCommand.execute(tasks);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(\"Finals\", tasks.getList().get(2).getDescription());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(\"2020-11-21T14:00\", tasks.getList().get(2).getDateTime().toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addEventCommand_missingDescription_throwsException() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addEventCommand \u003d new AddEventCommand(\"event Report /at\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(StringIndexOutOfBoundsException.class, () -\u003e addEventCommand.execute(tasks));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addEventCommand_noDescription_throwsException() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addEventCommand \u003d new AddEventCommand(\"event\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(TaskEventException.class, () -\u003e addEventCommand.execute(tasks));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addTodoCommand_validCommand_returnsTodoString()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throws TaskTodoException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addTodoCommand \u003d new AddTodoCommand(\"Todo Draw mindmap of speed topic\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addTodoCommand.execute(tasks);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(\"Draw mindmap of speed topic\", tasks.getList().get(3).getDescription());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addTodoCommand_noDescription_throwsException() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addTodoCommand \u003d new AddTodoCommand(\"todo\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(TaskTodoException.class, () -\u003e addTodoCommand.execute(tasks));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addTodoCommand_missingDescription_throwsException() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addTodoCommand \u003d new AddTodoCommand(\"todo \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(TaskTodoException.class, () -\u003e addTodoCommand.execute(tasks));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void deleteTaskCommand_validCommand_returnsIndex() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        deleteCommand \u003d new DeleteTaskCommand(\"delete 2\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        deleteCommand.execute(tasks);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(Integer.valueOf(\"2\"), tasks.getList().size());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void deleteTaskCommand_InputNonIntegerAsIndex_throwsException() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        deleteCommand \u003d new DeleteTaskCommand(\"delete Revise Speed\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NumberFormatException.class, () -\u003e deleteCommand.execute(tasks));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void doneTaskCommand_validCommand_returnsIndex() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        doneCommand \u003d new DoneTaskCommand(\"done 2\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        doneCommand.execute(tasks);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(true, tasks.getList().get(1).getIsDone());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void doneTaskCommand_InputNonIntegerAsIndex_throwsException() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        doneCommand \u003d new DoneTaskCommand(\"done Revise Speed\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NumberFormatException.class, () -\u003e doneCommand.execute(tasks));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 139
    }
  },
  {
    "path": "src/test/java/seedu/revised/command/TopicCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package seedu.revised.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.AccessTopicCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.AddTopicCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.DeleteTopicCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.FindTopicCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.ListTopicCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.QuizTopicCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.topiccommand.ResultTopicCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.list.TopicList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.InvalidTopicException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.NoTopicException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.topicexception.RepeatedTopicException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class TopicCommandTest {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private Subject subject;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private TopicList topics;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private AddTopicCommand addCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private DeleteTopicCommand deleteCommand;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private FindTopicCommand findCommand;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private AccessTopicCommand accessCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        List topicList \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                new Topic(\"Distance\"),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                new Topic(\"Speed\"),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                new Topic(\"Time\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        topics \u003d new TopicList(topicList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        subject \u003d new Subject(\"Maths\", topicList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void accessTopicCommand_NoTopicInputWithSpace_throwsException() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        accessCommand \u003d new AccessTopicCommand(\"topic \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NoTopicException.class, () -\u003e accessCommand.execute(subject));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void accessTopicCommand_NoTopicInputWithoutSpace_throwsException() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        accessCommand \u003d new AccessTopicCommand(\"topic\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NoTopicException.class, () -\u003e accessCommand.execute(subject));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void accessTopicCommand_TopicNotPresent_throwsException() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        accessCommand \u003d new AccessTopicCommand(\"topic Algebra\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NoTopicException.class, () -\u003e accessCommand.execute(subject));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addTopicCommand_validCommand_returnsSubjectTitle()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throws RepeatedTopicException, InvalidTopicException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        addCommand \u003d new AddTopicCommand(\"add Geometry\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        addCommand.execute(subject);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        assertEquals(\"Geometry\", topics.getList().get(3).getTitle());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addTopicCommand_SameTopic_throwsException() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand \u003d new AddTopicCommand(\"add Distance\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(RepeatedTopicException.class, () -\u003e addCommand.execute(subject));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addTopicCommand_NoTopicInputWithSpace_throwsException() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand \u003d new AddTopicCommand(\"add \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(InvalidTopicException.class, () -\u003e addCommand.execute(subject));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addTopicCommand_NoTopicInputWithoutSpace_throwsException() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand \u003d new AddTopicCommand(\"add\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(InvalidTopicException.class, () -\u003e addCommand.execute(subject));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void deleteTopicCommand_validCommand_returnsIndex() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        deleteCommand \u003d new DeleteTopicCommand(\"delete 2\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        deleteCommand.execute(subject);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        assertEquals(Integer.valueOf(\"2\"), subject.getTopics().getList().size());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void deleteTopicCommand_InputNonIntegerAsIndex_throwsException() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        deleteCommand \u003d new DeleteTopicCommand(\"delete Distance\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NumberFormatException.class, () -\u003e deleteCommand.execute(subject));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void findTopicCommand_validCommand_executesMethod() throws InvalidTopicException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        findCommand \u003d new FindTopicCommand(\"find Speed\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        findCommand.execute(subject);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void findTopicCommand_NoTopicInputWithSpace_throwsException() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        findCommand \u003d new FindTopicCommand(\"find \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(InvalidTopicException.class, () -\u003e findCommand.execute(subject));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void findTopicCommand_NoTopicInputWithoutSpace_throwsException() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        findCommand \u003d new FindTopicCommand(\"find\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(InvalidTopicException.class, () -\u003e findCommand.execute(subject));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void quizTopicCommand_TopicNotPresent_throwsException() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        QuizTopicCommand quizNoTopic \u003d new QuizTopicCommand(\"quiz Geometry\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NoTopicException.class, () -\u003e quizNoTopic.execute(subject));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void quizTopicCommand_invalidCommand_throwsException() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        QuizTopicCommand quizInvalidCommand \u003d new QuizTopicCommand(\"quiz\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(InvalidTopicException.class, () -\u003e quizInvalidCommand.execute(subject));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void resultTopicCommand_TopicNotPresent_throwsException() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        ResultTopicCommand resultNoTopic \u003d new ResultTopicCommand(\"quiz Geometry\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(NoTopicException.class, () -\u003e resultNoTopic.execute(subject));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void resultTopicCommand_invalidCommand_throwsException() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        ResultTopicCommand resultInvalidCommand \u003d new ResultTopicCommand(\"quiz\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertThrows(InvalidTopicException.class, () -\u003e resultInvalidCommand.execute(subject));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 93,
      "rashien3": 48
    }
  },
  {
    "path": "src/test/java/seedu/revised/storage/StorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.quizcard.Result;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.exception.storageexception.DataLoadingException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.taskcard.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cSubject\u003e subjects;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cTopic\u003e topics;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cFlashcard\u003e flashcards;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cString\u003e tasksStr;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cResult\u003e results;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    Path tempDir;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // use tempDir as baseDir to avoid file creation for subjects"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage \u003d new Storage.StorageBuilder()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setBaseDir(tempDir.toString())"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportDir(tempDir.toString())"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setFlashcardFilename(\"flashcards.json\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setTaskFilename(\"tasks.txt\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setResultFilename(\"results.json\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportFilename(\"data.json\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        subjects \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Subject(\"subject1\"),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Subject(\"subject2\"),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Subject(\"subject3\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        topics \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Topic(\"topic1\"),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Topic(\"topic2\"),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Topic(\"topic3\")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        flashcards \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Flashcard(\"question1\", \"answer1\"),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Flashcard(\"question2\", \"answer2\"),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Flashcard(\"question3\", \"answer3\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String dateTimeInput \u003d \"18:00 10-10-2019\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HH:mm d-MM-yyyy\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeInput, format);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Todo(\"todoTask\", false),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                new Event(\"eventTask\", true, dateTime),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                new Deadline(\"deadlineTask\", false, dateTime)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        results \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Result(100, 100),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Result(50, 100),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Result(10, 30)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        tasksStr \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                \"T | 0 | todoTask\","
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                \"E | 1 | eventTask | 6:00 PM 10 Oct 2019\","
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                \"D | 0 | deadlineTask | 6:00 PM 10 Oct 2019\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Create a valid data directory with populated subjects and topics."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return root directory of the directory created"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private File createValidDataDirectory() throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // create valid directory structure"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Topic topic : topics) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Path topicPath \u003d Paths.get(storage.getBaseDir().toString(), subject.getTitle(), topic.getTitle());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Files.createDirectories(topicPath);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                File flashcardFile \u003d new File(topicPath.toString(), storage.getFlashcardFilename());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                File resultFile \u003d new File(topicPath.toString(), storage.getTopicResultFilename());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                // write flashcards to file"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                try (FileWriter fileWriter \u003d new FileWriter(flashcardFile)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    gson.toJson(flashcards, fileWriter);  // store the json to file"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    fileWriter.flush();  // flush to actually write the content"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                // write results to file"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                try (FileWriter fileWriter \u003d new FileWriter(resultFile)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    gson.toJson(results, fileWriter);  // store the json to file"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    fileWriter.flush();  // flush to actually write the content"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return storage.getBaseDir();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveSubjects_subjectsWithoutTopics_DirectoriesWithSubjectTitlesAndTasksFileAndResultFileCreated()"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveSubjects(subjects);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File subjectDir \u003d Paths.get(storage.getBaseDir().toString(), subject.getTitle()).toFile();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.exists());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.isDirectory());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File taskFile \u003d new File(subjectDir, storage.getTaskFilename());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(subjectDir, storage.getSubjectResultFilename());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(taskFile.exists());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(resultFile.exists());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveSubjects_subjectsWithTopicsAndResults_DirectoriesWithEveryHierarchyCreated() throws IOException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // populate subjects"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Topic topic : topics) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                subject.getTopics().add(topic);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            results.forEach(result -\u003e subject.getResults().add(result));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveSubjects(subjects);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File subjectDir \u003d Paths.get(storage.getBaseDir().toString(), subject.getTitle()).toFile();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.exists());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.isDirectory());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(subjectDir, storage.getSubjectResultFilename());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File taskFile \u003d new File(subjectDir, storage.getTaskFilename());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(taskFile.exists());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(resultFile.exists());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            // check if subdirectories are created"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File[] topicDirs \u003d subjectDir.listFiles(File::isDirectory);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotNull(topicDirs);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(subject.getTopics().getList().size(), topicDirs.length);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotEquals(\"[]\", Files.readString(resultFile.toPath()));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveTopics_topicsWithoutFlashcardsAndResult_DirectoriesWithTopicTitlesAndEmptyFileCreated()"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveTopics(tempDir, topics);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File topicDir \u003d Paths.get(tempDir.toString(), topic.getTitle()).toFile();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.exists());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.isDirectory());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File flashcardFile \u003d new File(topicDir, storage.getFlashcardFilename());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(flashcardFile.exists());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(\"[]\", Files.readString(flashcardFile.toPath()));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(topicDir, storage.getTopicResultFilename());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(resultFile.exists());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(\"[]\", Files.readString(resultFile.toPath()));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveTopics_topicsWithFlashcardsAndResults_DirectoriesWithTopicTitlesAndPopulatedFilesCreated()"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // populate topics with flashcards and results"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Flashcard flashcard : flashcards) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                topic.addFlashcard(flashcard);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            results.forEach(result -\u003e topic.getResults().add(result));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveTopics(tempDir, topics);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File topicDir \u003d Paths.get(tempDir.toString(), topic.getTitle()).toFile();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.exists());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.isDirectory());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File flashcardFile \u003d new File(topicDir, storage.getFlashcardFilename());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(flashcardFile.exists());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotEquals(\"[]\", Files.readString(flashcardFile.toPath()));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(topicDir, storage.getTopicResultFilename());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(resultFile.exists());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotEquals(\"[]\", Files.readString(resultFile.toPath()));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveToJson_validFlashcards_readableJsonIsStored() throws IOException {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File file \u003d new File(tempDir.toString(), storage.getFlashcardFilename());"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Storage.saveToJson(file, flashcards);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertTrue(file.exists());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertEquals(gson.toJson(flashcards), Files.readString(file.toPath()));"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void loadFromJson_populatedFile_listWithCorrectTypeOfObjectsReturned() throws IOException {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File flashcardFile \u003d Paths.get(tempDir.toString(), storage.getFlashcardFilename()).toFile();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // write flashcards to file"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(flashcardFile)) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            gson.toJson(flashcards, fileWriter);  // store the json to file"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            fileWriter.flush();  // flush to actually write the content"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Type type \u003d new TypeToken\u003cArrayList\u003cFlashcard\u003e\u003e() {}.getType();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cFlashcard\u003e loadedFlashcards \u003d Storage.loadFromJson(type, flashcardFile);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertEquals(flashcards.size(), loadedFlashcards.size());"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Flashcard flashcard : loadedFlashcards) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotNull(flashcard);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void loadSubjects_noSavedData_emptyListOfSubjectsReturned() throws DataLoadingException {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertTrue(storage.loadSubjects().isEmpty());"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void loadSubjects_validStructure_populatedSubjects() throws IOException, DataLoadingException {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        createValidDataDirectory();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cSubject\u003e loadedSubjects \u003d storage.loadSubjects();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertEquals(loadedSubjects.size(), subjects.size());"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : loadedSubjects) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(subject.getTopics().getList().size(), topics.size());"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                assertEquals(topic.getFlashcards().size(), flashcards.size());"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                assertEquals(topic.getResults().getList().size(), results.size());"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            // subject result is not populated"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(subject.getResults().getList().size(), 0);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveTasks_tasks_correctFormatInFile() throws IOException {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Path subjectPath \u003d storage.getBaseDir().toPath();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveTasks(subjectPath, tasks);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File writtenFile \u003d new File(subjectPath.toString(), storage.getTaskFilename());"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (Scanner scanner \u003d new Scanner(writtenFile)) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                assertTrue(tasksStr.stream().anyMatch(s -\u003e s.equals(line)));"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void loadTasks_taskFile_correctlyParsedTasks() throws IOException {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Path subjectPath \u003d storage.getBaseDir().toPath();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File taskFile \u003d new File(subjectPath.toString(), storage.getTaskFilename());"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(taskFile)) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (String taskStr : tasksStr) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                fileWriter.write(taskStr + \"\\n\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cTask\u003e savedTasks \u003d storage.loadTasks(subjectPath);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (int i \u003d 0; i \u003c savedTasks.size(); i++) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Task t1 \u003d savedTasks.get(i);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Task t2 \u003d tasks.get(i);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(t1.getDescription(), t2.getDescription());"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(t1.getIsDone(), t2.getIsDone());"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (t1 instanceof Event) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                assertEquals(((Event) t1).getDateTimeDescription(), ((Event) t2).getDateTimeDescription());"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            } else if (t1 instanceof Deadline) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                assertEquals(((Deadline) t1).getDateTimeDescription(), ((Deadline) t2).getDateTimeDescription());"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void deleteDirectory_directoryWithContent_directoryIsDeleted() throws IOException {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File dir \u003d createValidDataDirectory();"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertTrue(dir.exists());"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertTrue(dir.isDirectory());"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Storage.deleteDirectory(Paths.get(dir.toString()));"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertFalse(dir.exists());"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void export_populatedSubjects_allContentsAreSaved() throws IOException {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // populated subjects with data"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Topic topic : topics) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                subject.getTopics().add(topic);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                for (Flashcard flashcard : flashcards) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    topic.addFlashcard(flashcard);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                for (Result result : results) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    topic.getResults().add(result);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Result result : results) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                subject.getResults().add(result);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                subject.getTasks().add(task);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String jsonString \u003d gson.toJson(subjects);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File exportFile \u003d storage.export(subjects);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertTrue(exportFile.exists());"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String storedJson \u003d Files.readString(exportFile.toPath());"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertEquals(jsonString, storedJson);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 11,
      "sugandha929": 1,
      "CookieHoodie": 327,
      "jialerk": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1
    }
  }
]
