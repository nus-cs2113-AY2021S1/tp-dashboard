[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.7.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.7.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    implementation group: \u0027com.google.code.gson\u0027, name: \u0027gson\u0027, version: \u00272.8.6\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 3,
      "-": 44
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "syncode98"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | I MUTHUKUMAR | [Github](https://github.com/syncode98) | [Portfolio](docs/team/johndoe.md)  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Herman Thong | [Github](https://https://github.com/rashien3) | [Portfolio](docs/team/johndoe.md)  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Sugandha Tuteja | [Github](https://github.com/sugandha929) | [Portfolio](docs/team/johndoe.md)  "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chin Hang | [Github](https://github.com/CookieHoodie/) | [Portfolio](docs/team/chinhang.md)  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jialerk | [Github](https://github.com/jialerk) | [Portfolio](docs/team/johndoe.md)  "
      }
    ],
    "authorContributionMap": {
      "syncode98": 1,
      "sugandha929": 1,
      "CookieHoodie": 1,
      "-": 4,
      "jialerk": 1,
      "rashien3": 2
    }
  },
  {
    "path": "docs/team/chinhang.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "# Ong Chin Hang - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "-": 5
    }
  },
  {
    "path": "docs/team/muthu.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "syncode98"
        },
        "content": "# I MUTHUKUMAR - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "A dedicated individual who is willing to contribute to the team."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "-": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.ReturnSubjectCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.SubjectCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.exception.NoSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.exception.RepeatedSubjectException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.exception.SubjectException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.exception.TaskException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.parser.SubjectParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.storage.SubjectStorage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static String FILENAME \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private SubjectStorage subjectStorage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private SubjectList subjects;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Initialises Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param filename of the \u003ccode\u003eFile\u003c/code\u003e that stores the text data of the to-do list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Duke(String filename) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        subjectStorage \u003d new SubjectStorage(filename);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        subjects \u003d new SubjectList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        subjectStorage.load(subjects);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Runs the Duke program until the user exits the program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printStart();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                SubjectCommand c \u003d SubjectParser.parse(fullCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                if (c instanceof ReturnSubjectCommand) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                    Subject subject \u003d c.execute(subjects);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    ((ReturnSubjectCommand) c).goToSubject(subject, tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                    c.execute(subjects);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                subjects.saveSubject(subjectStorage.getFileName());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printWritingError();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printIndexError();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (NoSubjectException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printNoSubjectError();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (RepeatedSubjectException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printRepeatedSubjectError();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printOutOfBoundsError();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printBye();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        new Duke(FILENAME).run();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 7,
      "CookieHoodie": 5,
      "-": 10,
      "jialerk": 51,
      "rashien3": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/card/Flashcard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.duke.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class Flashcard {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private String question;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private String answer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Flashcard(String question, String answer) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getQuestion() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void setQuestion(String question) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getAnswer() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void setAnswer(String answer) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public void printFlashcard(List flashcards) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                + \"Got it. I\u0027ve added this flashcard:\\n  \" + this.question + \"; \" + this.answer +  \"\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                + \"Now you have \" + flashcards.size() + (flashcards.size() \u003d\u003d 1"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                ? \" flashcard in the list.\\n\" : \" flashcards in the list.\\n\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 10,
      "CookieHoodie": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/card/Subject.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.duke.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class Subject {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private TopicList topics;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject(String title) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Subject(String title, List\u003cTopic\u003e topics) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.topics \u003d new TopicList(topics);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Subject(String title, TopicList topics) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.topics \u003d topics;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Subject(String title, TopicList topics, TaskList tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.topics \u003d topics;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void printSubject(SubjectList subjectList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Got it. I\u0027ve added this subject:\\n  \" + this + \"\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \"Now you have \" + subjectList.getList().size() + (subjectList.getList().size() \u003d\u003d 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                ? \" subject in the list.\\n\" : \" subjects in the list.\\n\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public TopicList getTopics() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return topics;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public TaskList getTasks() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "CookieHoodie": 25,
      "jialerk": 15,
      "rashien3": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/card/SubjectList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SubjectList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private List\u003cSubject\u003e subjectList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public SubjectList(List\u003cSubject\u003e subjectList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.subjectList \u003d subjectList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Adds a \u003ccode\u003eTask\u003c/code\u003e into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subject The \u003ccode\u003eSubject\u003c/code\u003e to add into a \u003ccode\u003eSubjectList\u003c/code\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void add(Subject subject) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.subjectList.add(subject);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Gets a \u003ccode\u003eArrayList\u003c/code\u003e of Subjects in a \u003ccode\u003eSubjectList\u003c/code\u003e instance."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return the \u003ccode\u003eArrayList\u003c/code\u003e of Subjects"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public List\u003cSubject\u003e getList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return this.subjectList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Saves the Tasks in a \u003ccode\u003eTaskList\u003c/code\u003e into a \u003ccode\u003eFile\u003c/code\u003e."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param filename of the \u003ccode\u003eFile\u003c/code\u003e to write to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws IOException if there is an error writing to the file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void saveSubject(String filename) throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filename);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject subject : this.subjectList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 47
    }
  },
  {
    "path": "src/main/java/seedu/duke/card/Topic.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.duke.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class Topic {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cFlashcard\u003e flashcards;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Topic(String title) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.flashcards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Topic(String title, List\u003cFlashcard\u003e flashcards) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.flashcards \u003d flashcards;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public void addFlashcard(Flashcard flashcard) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        flashcards.add(flashcard);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public boolean removeFlashcard(Flashcard flashcard) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return flashcards.remove(flashcard);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Flashcard removeFlashcard(int index) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return flashcards.remove(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public List\u003cFlashcard\u003e getFlashcards() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return this.flashcards;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void printTopic(TopicList topicList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"Got it. I\u0027ve added this topic:\\n  \" + this.title + \"\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"Now you have \" + topicList.getList().size() + (topicList.getList().size() \u003d\u003d 1"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                ? \" topic in the list.\\n\" : \" topics in the list.\\n\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 2,
      "CookieHoodie": 29,
      "jialerk": 2,
      "rashien3": 19
    }
  },
  {
    "path": "src/main/java/seedu/duke/card/TopicList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package seedu.duke.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class TopicList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private List\u003cTopic\u003e topics;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public TopicList(List\u003cTopic\u003e topics) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.topics \u003d topics;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Adds a \u003ccode\u003eTopic\u003c/code\u003e into a \u003ccode\u003etopics\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param topic The \u003ccode\u003eSubject\u003c/code\u003e to add into a \u003ccode\u003eSubjectList\u003c/code\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void add(Topic topic) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.topics.add(topic);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Gets the \u003ccode\u003eTopic\u003c/code\u003e at the index."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param index index number of the topic"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003eTopic\u003c/code\u003e with the index number"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Topic get(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return this.topics.get(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Gets a \u003ccode\u003eArrayList\u003c/code\u003e of Topics in a \u003ccode\u003eTopicList\u003c/code\u003e instance."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return the \u003ccode\u003eArrayList\u003c/code\u003e of Topics"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public List\u003cTopic\u003e getList() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return this.topics;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean remove(Topic topic) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean remove(int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            topics.remove(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } catch (NullPointerException ex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 54
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " * Various commands to use depending on the various inputs given by the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 2,
      "jialerk": 7,
      "rashien3": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/flashcardcommand/AddFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "package seedu.duke.command.flashcardcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.exception.NoSubjectException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.exception.RepeatedSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class AddFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public AddFlashcardCommand(String fullCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public Flashcard execute(Topic topic) throws NoSubjectException, RepeatedSubjectException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        int startOfMessage \u003d 4;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        int endOfQuestion \u003d (fullCommand.indexOf(\";\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        int startOfAnswer \u003d endOfQuestion + 2;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        int endOfMessage \u003d fullCommand.length();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        String question \u003d fullCommand.substring(startOfMessage, endOfQuestion);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        String answer \u003d fullCommand.substring(startOfAnswer, endOfMessage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        if (question.isEmpty() || answer.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        for (Flashcard flashcard : topic.getFlashcards()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            if (flashcard.getQuestion().equals(question) \u0026\u0026 flashcard.getAnswer().equals(answer)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                throw new RepeatedSubjectException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Flashcard t \u003d new Flashcard(question, answer);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        topic.addFlashcard(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        t.printFlashcard(topic.getFlashcards());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 38
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/flashcardcommand/DeleteFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "package seedu.duke.command.flashcardcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class DeleteFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public DeleteFlashcardCommand(String fullCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Deletes a Flashcard in a \u003ccode\u003eflashcardList\u003c/code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @param topic the \u003ccode\u003eTopic\u003c/code\u003e instance of the Topic class for the user to delete from"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public Flashcard execute(Topic topic) throws NumberFormatException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        int number \u003d Integer.parseInt(message[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Flashcard flashcard \u003d topic.getFlashcards().get(number - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        topic.getFlashcards().remove(number - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printFlashcardDelete(flashcard, topic.getFlashcards().size());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sugandha929": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/flashcardcommand/ExitFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "package seedu.duke.command.flashcardcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class ExitFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/flashcardcommand/FlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "package seedu.duke.command.flashcardcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.exception.NoSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.exception.RepeatedSubjectException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class FlashcardCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public Flashcard execute(Topic topic) throws NoSubjectException, RepeatedSubjectException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/flashcardcommand/ListFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "package seedu.duke.command.flashcardcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class ListFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public Flashcard execute(Topic topic) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printFlashcardList(topic);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/flashcardcommand/SorryFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "package seedu.duke.command.flashcardcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class SorryFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public Flashcard execute(Topic topic) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printError();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 23
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/subjectcommand/AddSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.exception.NoSubjectException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.exception.RepeatedSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": " * Adds an instance of the \u003ccode\u003eDeadline\u003c/code\u003e class into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddSubjectCommand(String fullCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject execute(SubjectList subjectList) throws NoSubjectException, RepeatedSubjectException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 4;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.length();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String title \u003d fullCommand.substring(startOfMessage,endOfMessage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (title.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if (subject.getTitle().equals(title)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                throw new RepeatedSubjectException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Subject temp \u003d new Subject(title);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        subjectList.getList().add(temp);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        temp.printSubject(subjectList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 46
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/subjectcommand/DeleteSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DeleteSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public DeleteSubjectCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Deletes a Task in a \u003ccode\u003etaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList the \u003ccode\u003eTaskList\u003c/code\u003e instance of the TaskList class for the user to delete from"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject execute(SubjectList subjectList) throws NumberFormatException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int number \u003d Integer.valueOf(message[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Subject subject \u003d subjectList.getList().get(number - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        subjectList.getList().remove(number - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printSubjectDelete(subject, subjectList.getList().size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 37
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/subjectcommand/ExitSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ExitSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject execute(SubjectList subjectList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/subjectcommand/FindSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class FindSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public FindSubjectCommand(String fullcommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject execute(SubjectList subjectList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printFindSubject(subjectList,message[1]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/subjectcommand/ListSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ListSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject execute(SubjectList subjectList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printSubjectList(subjectList.getList());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/subjectcommand/ReturnSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.TopicList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.duke.command.taskcommand.TaskCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.topiccommand.ListTopicCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.topiccommand.ReturnTopicCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.topiccommand.TopicCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.exception.NoSubjectException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.exception.RepeatedSubjectException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.exception.TaskDeadlineException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.exception.TaskEventException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.exception.TaskException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.exception.TaskTodoException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.parser.SubjectParser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.duke.parser.TaskParser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.parser.TopicParser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ReturnSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public ReturnSubjectCommand(String fullcommand) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject execute(SubjectList subjectList) throws NoSubjectException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        //Subject currentSubject \u003d new Subject(message[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message[1].isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (subject.getTitle().equals(message[1])) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                return subject;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        throw new NoSubjectException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void goToSubject(Subject subject, TaskList tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printGoToSubject(subject);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        boolean isSubjectExit \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        while (!isSubjectExit) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Command c \u003d  TopicParser.parse(fullCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                if (c instanceof ReturnTopicCommand) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    Topic topic \u003d ((ReturnTopicCommand) c).execute(subject);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((ReturnTopicCommand) c).goToTopic(topic, subject);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                } else if (c instanceof TopicCommand) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((TopicCommand) c).execute(subject);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                } else if (c instanceof TaskCommand) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    TaskList taskList \u003d subject.getTasks();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((TaskCommand) c).execute(taskList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                isSubjectExit \u003d c.isExit();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                //TODO: implement the storage methods for Topic"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                //topics.saveSubject(topicStorage.getFileName());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            //} catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                //Ui.printWritingError();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printIndexError();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (NoSubjectException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printNoTopicError();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (RepeatedSubjectException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printRepeatedTopicError();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printOutOfBoundsError();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (TaskTodoException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printTodoError();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (TaskDeadlineException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printDeadlineError();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (TaskEventException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printEventError();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (TaskException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printError();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printExitToMain();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 14,
      "jialerk": 31,
      "rashien3": 48
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/subjectcommand/SorrySubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.exception.NoSubjectException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SorrySubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Subject execute(SubjectList subjectList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printError();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 20,
      "rashien3": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/subjectcommand/SubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.subjectcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.exception.NoSubjectException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.exception.RepeatedSubjectException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SubjectCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject execute(SubjectList subjectList) throws NoSubjectException, RepeatedSubjectException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 18,
      "rashien3": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/taskcommand/AddDeadlineCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.exception.TaskDeadlineException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddDeadlineCommand extends TaskCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddDeadlineCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eDeadline\u003c/code\u003e class into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList An instance of the \u003ccode\u003eTaskList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws TaskDeadlineException If there are no parameters written to initialise the creation of a new Deadline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *      class"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws TaskDeadlineException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 9;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.indexOf(\"/by\") - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfBy \u003d fullCommand.indexOf(\"/by\") + 4;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfBy \u003d fullCommand.length();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new TaskDeadlineException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String message \u003d fullCommand.substring(startOfMessage, endOfMessage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String by \u003d fullCommand.substring(startOfBy, endOfBy);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message.isEmpty() || by.isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new TaskDeadlineException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            Deadline temp \u003d new Deadline(message, false, by);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            taskList.getList().add(temp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            temp.printDeadline(taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 6,
      "jialerk": 42
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/taskcommand/AddEventCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.exception.TaskEventException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddEventCommand extends TaskCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddEventCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Adds an instance of an \u003ccode\u003eEvent\u003c/code\u003e class into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList An instance of the \u003ccode\u003eTaskList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws TaskEventException If there are no parameters written to initialise the creation of a new Event class"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws TaskEventException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 6;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.indexOf(\"/at\") - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfAt \u003d fullCommand.indexOf(\"/at\") + 4;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfAt \u003d fullCommand.length();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new TaskEventException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String message \u003d fullCommand.substring(startOfMessage, endOfMessage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String at \u003d fullCommand.substring(startOfAt, endOfAt);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message.isEmpty() || at.isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new TaskEventException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Event temp \u003d new Event(message, false, at);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().add(temp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        temp.printEvent(taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 5,
      "jialerk": 42
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/taskcommand/AddTodoCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.exception.TaskTodoException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddTodoCommand extends TaskCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddTodoCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eTodo\u003c/code\u003e class into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList An instance of the \u003ccode\u003eTaskList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws TaskTodoException If there are no parameters written to initialise the creation of a new Todo class"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws TaskTodoException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 5;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.length();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new TaskTodoException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String message \u003d fullCommand.substring(startOfMessage,endOfMessage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new TaskTodoException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            Todo temp \u003d new Todo(message, false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            taskList.getList().add(temp);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            temp.printTodo(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jialerk": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/taskcommand/DeleteTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DeleteTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public DeleteTaskCommand(String fullCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Deletes a Task in a \u003ccode\u003etaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList the \u003ccode\u003eTaskList\u003c/code\u003e instance of the TaskList class for the user to delete from"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws NumberFormatException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int number \u003d Integer.valueOf(message[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Task task \u003d taskList.getList().get(number - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().remove(number - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printDelete(task, taskList.getList().size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 5,
      "jialerk": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/taskcommand/DoneTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.taskcommand.TaskCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " * Allows marking a \u003ccode\u003eTask\u003c/code\u003e in a \u003ccode\u003eTaskList\u003c/code\u003e as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DoneTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public DoneTaskCommand(String fullCommand) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Marks a \u003ccode\u003eTask\u003c/code\u003e in a \u003ccode\u003eTaskList\u003c/code\u003e as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param taskList the \u003ccode\u003eTaskList\u003c/code\u003e instance of the TaskList class for the user to obtain the Task in the"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *                 TaskList specified by the user and set it as done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws NumberFormatException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int number \u003d Integer.valueOf(message[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().get(number - 1).markAsDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printDone(taskList.getList().get(number - 1));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 7,
      "jialerk": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/taskcommand/ExitTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.taskcommand.TaskCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ExitTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 7,
      "jialerk": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/taskcommand/FindTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class FindTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public FindTaskCommand(String fullcommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printFindTask(taskList,message[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/taskcommand/ListTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": " * A class that allows the user to list down the tasks they input into the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ListTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void execute(Subject subject) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printTaskList(subject);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 17,
      "rashien3": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/taskcommand/SorryTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.SubjectCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SorryTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printError();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/taskcommand/TaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command.taskcommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.exception.TaskException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws TaskException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 16,
      "rashien3": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/topiccommand/AddTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package seedu.duke.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.exception.NoSubjectException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.exception.RepeatedSubjectException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": " * Adds an instance of the \u003ccode\u003eTopic\u003c/code\u003e class into a \u003ccode\u003eTopicList\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class AddTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public AddTopicCommand(String fullCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Topic execute(Subject subject) throws NoSubjectException, RepeatedSubjectException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int startOfMessage \u003d 4;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int endOfMessage \u003d fullCommand.length();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String title \u003d fullCommand.substring(startOfMessage,endOfMessage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (title.isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic topic : topicList.getList()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (topic.getTitle().equals(title)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                throw new RepeatedSubjectException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Topic t \u003d new Topic(title);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        topicList.add(t);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        t.printTopic(topicList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 51
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/topiccommand/DeleteTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package seedu.duke.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class DeleteTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public DeleteTopicCommand(String fullCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Deletes a Task in a \u003ccode\u003etaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subject the \u003ccode\u003eSubject\u003c/code\u003e instance of the Subject class for the user to delete from"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Topic execute(Subject subject) throws NumberFormatException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int number \u003d Integer.parseInt(message[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Topic topic \u003d topicList.getList().get(number - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        topicList.getList().remove(number - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printTopicDelete(topic, topicList.getList().size());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/topiccommand/ExitTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package seedu.duke.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class ExitTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/topiccommand/FindTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package seedu.duke.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.subjectcommand.SubjectCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.taskcommand.FindTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class FindTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public FindTopicCommand(String fullcommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Topic execute(Subject subject) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printFindTopic(topicList,message[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        FindTaskCommand findTaskCommand \u003d new FindTaskCommand(this.fullcommand);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        findTaskCommand.execute(subject.getTasks());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/topiccommand/ListTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package seedu.duke.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class ListTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Topic execute(Subject subject) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printTopicList(subject);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printTaskList(subject);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/topiccommand/ReturnTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package seedu.duke.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.command.flashcardcommand.FlashcardCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.taskcommand.TaskCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.exception.NoSubjectException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.exception.RepeatedSubjectException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.exception.TaskException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.parser.FlashcardParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.parser.TaskParser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class ReturnTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public ReturnTopicCommand(String fullcommand) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Topic execute(Subject subject) throws NoSubjectException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        //Subject currentSubject \u003d new Subject(message[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (message[1].isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (topic.getTitle().equals(message[1])) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return topic;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        throw new NoSubjectException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void goToTopic(Topic topic, Subject subject) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printGoToTopic(topic);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        boolean isSubjectExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        while (!isSubjectExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            FlashcardCommand c \u003d FlashcardParser.parse(fullCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            isSubjectExit \u003d c.isExit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                c.execute(topic);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            }  catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                Ui.printIndexError();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            } catch (NoSubjectException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                Ui.printNoTopicError();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            } catch (RepeatedSubjectException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                Ui.printRepeatedTopicError();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                Ui.printOutOfBoundsError();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printExitToMain();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 13,
      "rashien3": 50
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/topiccommand/SorryTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package seedu.duke.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class SorryTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Topic execute(Subject subject) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printError();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/topiccommand/TopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package seedu.duke.command.topiccommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.exception.NoSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.exception.RepeatedSubjectException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class TopicCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Topic execute(Subject subject) throws NoSubjectException, RepeatedSubjectException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DataLoadingException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class DataLoadingException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public DataLoadingException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public DataLoadingException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/FlashcardSyntaxException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class FlashcardSyntaxException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public FlashcardSyntaxException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public FlashcardSyntaxException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/NoSubjectException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class NoSubjectException extends SubjectException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/RepeatedSubjectException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class RepeatedSubjectException extends SubjectException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/SubjectException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SubjectException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/TaskDeadlineException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskDeadlineException extends TaskException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jialerk": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/TaskEventException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskEventException extends TaskException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jialerk": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/TaskException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jialerk": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/TaskTodoException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskTodoException extends TaskException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jialerk": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/FlashcardParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.command.flashcardcommand.AddFlashcardCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.command.flashcardcommand.ExitFlashcardCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.command.flashcardcommand.FlashcardCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.command.flashcardcommand.ListFlashcardCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.command.flashcardcommand.DeleteFlashcardCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.command.flashcardcommand.SorryFlashcardCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class FlashcardParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Parses the inputs provided by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @param fullCommand input by the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return returns a command instance to execute a command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static FlashcardCommand parse(String fullCommand) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new ExitFlashcardCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new ListFlashcardCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        } else if (fullCommand.startsWith(\"add\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new AddFlashcardCommand(fullCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new DeleteFlashcardCommand(fullCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new SorryFlashcardCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/SubjectParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.AddSubjectCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.DeleteSubjectCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.ExitSubjectCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.FindSubjectCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.ListSubjectCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.ReturnSubjectCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.SorrySubjectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.SubjectCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": " * Allows the parsing of inputs provided by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SubjectParser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Parses the inputs provided by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param fullCommand input by the user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return returns a command instance to execute a command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static SubjectCommand parse(String fullCommand) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ExitSubjectCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ListSubjectCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"add\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new DeleteSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new FindSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"subject\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ReturnSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new SorrySubjectCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/TaskParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.taskcommand.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.taskcommand.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.taskcommand.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.taskcommand.DeleteTaskCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.taskcommand.DoneTaskCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.taskcommand.ExitTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.taskcommand.FindTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.taskcommand.ListTaskCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.taskcommand.SorryTaskCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.taskcommand.TaskCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskParser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Parses the inputs provided by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param fullCommand input by the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return returns a command instance to execute a command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static TaskCommand parse(String fullCommand) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (fullCommand.equals(\"exit\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ExitTaskCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new DoneTaskCommand(fullCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ListTaskCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddTodoCommand(fullCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddDeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddEventCommand(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new DeleteTaskCommand(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new FindTaskCommand(fullCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new SorryTaskCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "jialerk": 41
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/TopicParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rashien3"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.taskcommand.AddDeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.taskcommand.AddEventCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.taskcommand.AddTodoCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.taskcommand.DeleteTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.taskcommand.DoneTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.topiccommand.AddTopicCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.topiccommand.ExitTopicCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.topiccommand.ListTopicCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.topiccommand.DeleteTopicCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.topiccommand.FindTopicCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.topiccommand.ReturnTopicCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import seedu.duke.command.topiccommand.SorryTopicCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": " * Parses the commands on the topic level."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class TopicParser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Parses the inputs provided by the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param fullCommand input by the user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return returns a command instance to execute a command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        switch (message[0]) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new ExitTopicCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new SorryTopicCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new ListTopicCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new SorryTopicCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            String [] commands \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (message[1].equals(\"topic\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new DeleteTopicCommand(commands[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else if (message[1].equals(\"task\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new DeleteTaskCommand(commands[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new SorryTopicCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new FindTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"topic\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new ReturnTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddTodoCommand(fullCommand);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddDeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddEventCommand(fullCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new DoneTaskCommand(fullCommand);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new SorryTopicCommand();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rashien3": 73
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.JsonSyntaxException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.card.Flashcard;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.exception.DataLoadingException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.exception.FlashcardSyntaxException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final File baseDir;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String flashcardFilename;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String taskFilename;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Creates a new Storage instance. The same filename string will be used to create files to store the flashcard data"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * under each topic directory."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param baseDir           the name of the directory to store the data into"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param flashcardFilename the name of the file to store all the flashcard info"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param taskFilename      the name of the file to store all the tasks under a subject"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Storage(String baseDir, String flashcardFilename, String taskFilename) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.baseDir \u003d new File(baseDir);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.flashcardFilename \u003d flashcardFilename;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.taskFilename \u003d taskFilename;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Loads and populates subject data from the storage. Subjects and topics will be sorted by their titles in"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * alphabetical order."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws DataLoadingException     if fails to load the saved data due to filesystem error"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws FlashcardSyntaxException if fails to read the file due to wrong data syntax, most probably because"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *                                  of wrong user manipulation."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public List\u003cSubject\u003e loadSubjects() throws DataLoadingException, FlashcardSyntaxException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File[] subjectDirs \u003d baseDir.listFiles(File::isDirectory);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (subjectDirs \u003d\u003d null) {  // error in getting the directories even if they may exist"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new DataLoadingException(\"Error loading saved data from the disk.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return loadSubjects(subjectDirs);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Creates a list of subjects from the saved directories and populates each subject with existing topics and"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * flashcards. Subjects and topics will be sorted by their titles in alphabetical order."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectDirs directories of subjects saved previously"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated subjects loaded from the disk"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws DataLoadingException     if fails to load the saved data due to filesystem error"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws FlashcardSyntaxException if fails to read the file due to wrong data syntax, most probably because"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *                                  of wrong user manipulation."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cSubject\u003e loadSubjects(File[] subjectDirs) throws DataLoadingException, FlashcardSyntaxException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cSubject\u003e subjects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (File subjectDir : subjectDirs) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File[] topicDirs \u003d subjectDir.listFiles(File::isDirectory);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (topicDirs \u003d\u003d null) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                throw new DataLoadingException(\"Error loading saved data from the disk.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cTopic\u003e topics \u003d loadTopics(topicDirs);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Subject subject \u003d new Subject(subjectDir.getName(), topics);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            subjects.add(subject);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        subjects.sort(Comparator.comparing(Subject::getTitle));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return subjects;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Creates a list of topics from the saved directories and populates each topic with the existing flashcards. Topics"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * will be sorted by their titles in alphabetical order."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param topicDirs directories of topics saved previously"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated topics loaded from the disk"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws FlashcardSyntaxException if fails to read the file due to wrong data syntax, most probably because"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *                                  of wrong user manipulation."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cTopic\u003e loadTopics(File[] topicDirs) throws FlashcardSyntaxException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cTopic\u003e topics \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (File topicDir : topicDirs) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File flashcardFile \u003d new File(topicDir, getFlashcardFilename());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cFlashcard\u003e flashcards \u003d loadFlashcards(flashcardFile);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Topic topic \u003d new Topic(topicDir.getName(), flashcards);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            topics.add(topic);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        topics.sort(Comparator.comparing(Topic::getTitle));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return topics;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Loads the data in the file into an ArrayList of Flashcard."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param flashcardFile the file that stores the flashcard data"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated flashcards loaded from the file"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws FlashcardSyntaxException if fails to read the file due to wrong data syntax, most probably because"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *                                  of wrong user manipulation."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cFlashcard\u003e loadFlashcards(File flashcardFile) throws FlashcardSyntaxException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cFlashcard\u003e flashcards;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Type objectType \u003d new TypeToken\u003cArrayList\u003cFlashcard\u003e\u003e() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }.getType();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileReader fileReader \u003d new FileReader(flashcardFile)) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            flashcards \u003d gson.fromJson(fileReader, objectType);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (IOException e) {  // file may have been deleted by the user"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            flashcards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (JsonSyntaxException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new FlashcardSyntaxException(\"Error reading the flashcard data at \" + flashcardFile.getAbsolutePath()"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    + \". Make sure the syntax is correct if you changed it manually.\", e);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assert flashcards !\u003d null;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return flashcards;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Saves the subjects along with all the contents into the storage."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjects subjects to be saved"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if fails to save to the storage"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void saveSubjects(List\u003cSubject\u003e subjects) throws IOException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Path subjectPath \u003d Paths.get(getBaseDir().toString(), subject.getTitle());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Files.createDirectories(subjectPath);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveTopics(subjectPath, subject.getTopics().getList());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Saves the topics along with all the contents into the storage. If the topic has no flashcards in it, the file"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * with name {@link Storage#getFlashcardFilename()} with an empty square bracket will be created under it."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectPath subject directory where topics will be stored under"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param topics      topics to be saved"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if fails to save to the storage"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void saveTopics(Path subjectPath, List\u003cTopic\u003e topics) throws IOException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Path topicPath \u003d Paths.get(subjectPath.toString(), topic.getTitle());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Files.createDirectories(topicPath);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveFlashcards(topicPath, topic.getFlashcards());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Save the contents of flashcards to the file with name {@link Storage#getFlashcardFilename()} under the topicPath."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * This overwrites the content of the file if it already exists."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param topicPath  topic directory where flashcards will be stored under"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param flashcards list of flashcards which content will be written to the file"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if fails to save to the storage"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void saveFlashcards(Path topicPath, List\u003cFlashcard\u003e flashcards) throws IOException {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File file \u003d Paths.get(topicPath.toString(), getFlashcardFilename()).toFile();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(file)) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            gson.toJson(flashcards, fileWriter);  // store the json to file"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            fileWriter.flush();  // flush to actually write the content"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Saves the tasks into the file with name {@link Storage#getTaskFilename()} under the subjectPath."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * This overwrites the content of the file if it already exists."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectPath subject directory where the tasks will be stored under"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if there is an error writing to the file"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void saveTasks(Path subjectPath, List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File taskFile \u003d new File(subjectPath.toString(), getTaskFilename());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(taskFile)) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    fileWriter.write(\"T | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                            + task.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    fileWriter.write(\"D | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                            + task.getDescription() + \" | \" + ((Deadline) task).getBy() + \"\\n\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    fileWriter.write(\"E | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                            + task.getDescription() + \" | \" + ((Event) task).getAt() + \"\\n\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Reads the task file contents under the specified subject into a list of tasks."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectPath subject directory where the tasks were stored under"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of previously saved tasks"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws FileNotFoundException When there are no files found"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public List\u003cTask\u003e loadTasks(Path subjectPath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File taskFile \u003d new File(subjectPath.toString(), getTaskFilename());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (Scanner scan \u003d new Scanner(taskFile)) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            while (scan.hasNextLine()) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String content \u003d scan.nextLine();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String[] contents \u003d content.split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String legend \u003d contents[0].trim();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                boolean done \u003d Integer.parseInt(contents[1].trim()) \u003d\u003d 1;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String action \u003d contents[2].trim();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String action2 \u003d \"\";"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                if (legend.equals(\"D\") || legend.equals(\"E\")) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                    action2 \u003d contents[3].trim();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                switch (legend) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    tasks.add(new Todo(action, done));"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    tasks.add(new Deadline(action, done, action2));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    tasks.add(new Event(action, done, action2));"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    assert false : legend;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public File getBaseDir() {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return baseDir;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getFlashcardFilename() {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return flashcardFilename;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getTaskFilename() {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return taskFilename;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 224,
      "jialerk": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/SubjectStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SubjectStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public SubjectStorage(String fileName) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.file \u003d new File(fileName);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * gets the name of the file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return the name of the file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String getFileName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return this.fileName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Tries to get the file to write on, if not create a new file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList Writes contents of the file into a \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void load(SubjectList subjectList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            getFile(subjectList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                createFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                //Ui.fileNotFoundError();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (IOException e1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.createFileError();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Reads the file contents and writes in onto a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList the taskList which data will be read into"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws FileNotFoundException When there are no files found"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private void getFile(SubjectList subjectList) throws FileNotFoundException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Scanner scan \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        while (scan.hasNextLine()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Creates a file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws IOException When there is an error in creating a file"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private void createFile() throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Path path \u003d Paths.get(this.fileName);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Files.createDirectory(path.getParent());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 73
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void printDeadline(TaskList taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"Got it. I\u0027ve added this task:\\n  \" + this + \"\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"Now you have \" + taskList.getList().size() + (taskList.getList().size() \u003d\u003d 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                ? \" task in the list.\\n\" : \" tasks in the list.\\n\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 11,
      "jialerk": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void printEvent(TaskList taskList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"Got it. I\u0027ve added this task:\\n  \" + this + \"\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"Now you have \" + taskList.getList().size() + (taskList.getList().size() \u003d\u003d 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                ? \" task in the list.\\n\" : \" tasks in the list.\\n\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 11,
      "jialerk": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether a task is done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return true when a task is done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Prints the String representation of the class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return the String representation of the class"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 15,
      "jialerk": 32
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Adds a \u003ccode\u003eTask\u003c/code\u003e into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param task The \u003ccode\u003eTask\u003c/code\u003e to add into a \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Gets a \u003ccode\u003eArrayList\u003c/code\u003e of Tasks in a \u003ccode\u003eTaskList\u003c/code\u003e instance."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return the \u003ccode\u003eArrayList\u003c/code\u003e of Tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Saves the Tasks in a \u003ccode\u003eTaskList\u003c/code\u003e into a \u003ccode\u003eFile\u003c/code\u003e."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param filename of the \u003ccode\u003eFile\u003c/code\u003e to write to"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws IOException if there is an error writing to the file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void saveTask(String filename) throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filename);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                fileWriter.write(\"T | \" + (task.isDone ? \"1\" : \"0\") + \" | \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        + task.description + \"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String[] deadline \u003d  task.description.split(\"/by\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                fileWriter.write(\"D | \" + (task.isDone ? \"1\" : \"0\") + \" | \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        + task.description + \" | \" + ((Deadline) task).by + \"\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                fileWriter.write(\"E | \" + (task.isDone ? \"1\" : \"0\") + \" | \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        + task.description + \" | \" + ((Event) task).at + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 7,
      "jialerk": 53
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Todo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void printTodo(TaskList taskList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"Got it. I\u0027ve added this task:\\n  \" + this + \"\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"Now you have \" + taskList.getList().size() + (taskList.getList().size() \u003d\u003d 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                ? \" task in the list.\\n\" : \" tasks in the list.\\n\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 7,
      "jialerk": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import seedu.duke.card.Flashcard;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private static Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static String readCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printStart() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String logo \u003d \"                               __________\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"                              |  __ |  _ \\\\\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \" ____  ______      _____      |  |__| | | |\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"|  __|/ __ \\\\ \\\\    / /| | ____ |   __| | | |\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"| |  |  __/ \\\\ \\\\__/ / | | \\\\____|  |__| |_| |\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"| |   \\\\___|  \\\\____/  |_| ____/|_____|_____/\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \" Hello! I\u0027m revisED\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \" What can I do for you?\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printSubjectList(List\u003cSubject\u003e list) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Here are the subject(s) in your list:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject item : list) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            System.out.println(num + \".\" + item);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            num++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTaskList(Subject subject) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TaskList taskList \u003d subject.getTasks();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"Here are the tasks(s) under \" + subject.getTitle() + \": \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Task t : taskList.getList()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(index + \".\" + t);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printDone(Task task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                \" Nice! I\u0027ve marked this task as done:\\n   \" + task + \"\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printDelete(Task task, int total) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \" Noted. I\u0027ve removed this task:\\n   \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + task + \"\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \" Now you have \" + total + (total \u003d\u003d 1 ? \" task in the list.\\n\" : \" tasks in the list.\\n\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printSubjectDelete(Subject subject, int total) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \" Noted. I\u0027ve removed this subject:\\n   \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + subject + \"\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \" Now you have \" + total + (total \u003d\u003d 1 ? \" task in the list.\\n\" : \" tasks in the list.\\n\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printBye() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \" Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printError() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printNoSubjectError() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \" ☹ OOPS!!! I\u0027m sorry, but I can\u0027t find that subject :-(\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printRepeatedSubjectError() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \" ☹ OOPS!!! I\u0027m sorry, but subject is already in the list :-(\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printTodoError() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \" ☹ OOPS!!! The description of a todo cannot be empty.\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printDeadlineError() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \" ☹ OOPS!!! The description of a deadline cannot be empty.\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printEventError() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \" ☹ OOPS!!! The description of a event cannot be empty.\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printIndexError() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \" ☹ OOPS!!! Invalid index format entered.\\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printOutOfBoundsError() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \" ☹ OOPS!!! The index you entered does not exist.\\n\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printFindTask(TaskList taskList, String find) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int taskPresent \u003d 0;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Task task : taskList.getList()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if (task.toString().contains(find)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printMatch(taskPresent);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                System.out.println(task);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                taskPresent \u003d 1;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (taskPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\" Sorry! I could not find any task with \" + find + \" in the list.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printFindSubject(SubjectList subjectList, String find) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int taskPresent \u003d 0;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if (subject.toString().contains(find)) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printMatch(taskPresent);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                System.out.println(subject);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                taskPresent \u003d 1;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (taskPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    + \" Sorry! I could not find any subjects with \" + find + \" in the list.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printMatch(int taskPresent) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (taskPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\" Here are the matching task(s) in your list:\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void fileNotFoundError() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"File not found. Creating file...\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void createFileError() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"Creating file failed.\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printWritingError() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"Writing to file failed.\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printGoToSubject(Subject subject) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"You are currently looking at the subject: \" + subject.toString() + \"\\n\""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printExitToMain() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Going back to the main screen.\\n\""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTopicList(Subject subject) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"Here are the topic(s) under \" + subject.getTitle() + \": \");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic t : topicList.getList()) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(index + \".\" + t);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTopicMatch(int taskPresent) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (taskPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    + \" Here are the matching topic(s) in your list:\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printFindTopic(TopicList topicList, String query) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int taskPresent \u003d 0;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic topic : topicList.getList()) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (topic.toString().contains(query)) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printTopicMatch(taskPresent);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                System.out.println(topic);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                taskPresent \u003d 1;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (taskPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    + \" Sorry! I could not find any topics with \" + query + \" in the list.\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printGoToTopic(Topic topic) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"You are currently looking at the topic: \" + topic.getTitle() + \"\\n\""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printNoTopicError() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \" ☹ OOPS!!! I\u0027m sorry, but I can\u0027t find that topic :-(\\n\""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printRepeatedTopicError() {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \" ☹ OOPS!!! I\u0027m sorry, but that topic is already in the list :-(\\n\""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTopicDelete(Topic topic, int total) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \" Noted. I\u0027ve removed this topic:\\n   \""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + topic + \"\\n\""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \" Now you have \" + total + (total \u003d\u003d 1 ? \" task in the list.\\n\" : \" tasks in the list.\\n\")"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static void printFlashcardDelete(Flashcard flashcard, int total) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                + \" Noted. I\u0027ve removed this flashcard:\\n   \""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                + flashcard.getQuestion() + \"; \" + flashcard.getAnswer() + \"\\n\""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                + \" Now you have \" + total + (total \u003d\u003d 1 ? \" flashcard in the list.\\n\" : \" flashcards in the list.\\n\")"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static void printFlashcardList(Topic topic) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                + \"Here are the flashcard(s) under \" + topic.getTitle() + \": \");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        for (Flashcard t : topic.getFlashcards()) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            System.out.println(index + \".\" + t.getQuestion() + \"; \" + t.getAnswer());"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 19,
      "sugandha929": 24,
      "CookieHoodie": 30,
      "jialerk": 122,
      "rashien3": 80
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/SubjectCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.card.SubjectList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.AddSubjectCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.DeleteSubjectCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.FindSubjectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.ListSubjectCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.command.subjectcommand.ReturnSubjectCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.exception.NoSubjectException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.duke.exception.RepeatedSubjectException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SubjectCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private SubjectList subjects;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private AddSubjectCommand addCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private DeleteSubjectCommand deleteCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private FindSubjectCommand findCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private ReturnSubjectCommand returnCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private ListSubjectCommand listCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        subjects \u003d new SubjectList("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                new Subject(\"English\"),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                new Subject(\"Chinese\"),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                new Subject(\"Science\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        )));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addSubject() throws NoSubjectException, RepeatedSubjectException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand \u003d new AddSubjectCommand(\"add Maths\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand.execute(subjects);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(\"Maths\",subjects.getList().get(3).getTitle());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void deleteSubject() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        deleteCommand \u003d new DeleteSubjectCommand(\"delete 2\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        deleteCommand.execute(subjects);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(Integer.valueOf(\"2\"),subjects.getList().size());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void findSubject() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        findCommand \u003d new FindSubjectCommand(\"find English\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        findCommand.execute(subjects);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void listSubject() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        listCommand \u003d new ListSubjectCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        listCommand.execute(subjects);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void returnSubject() throws NoSubjectException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        returnCommand \u003d new ReturnSubjectCommand(\"subject Chinese\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Subject testSubject \u003d returnCommand.execute(subjects);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(\"Chinese\",testSubject.getTitle());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 70
    }
  },
  {
    "path": "src/test/java/seedu/duke/storage/StorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.card.Flashcard;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.card.Subject;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.card.Topic;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.exception.DataLoadingException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.exception.FlashcardSyntaxException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.nio.file.DirectoryStream;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cSubject\u003e subjects;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cTopic\u003e topics;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cFlashcard\u003e flashcards;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cString\u003e tasksStr;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    Path tempDir;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // use tempDir as baseDir to avoid file creation for subjects"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage \u003d new Storage(tempDir.toString(), \"flashcard.txt\", \"tasks.txt\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        subjects \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Subject(\"subject1\"),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Subject(\"subject2\"),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Subject(\"subject3\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        topics \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Topic(\"topic1\"),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Topic(\"topic2\"),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Topic(\"topic3\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        flashcards \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Flashcard(\"question1\", \"answer1\"),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Flashcard(\"question2\", \"answer2\"),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Flashcard(\"question3\", \"answer3\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Todo(\"todoTask\", false),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Event(\"eventTask\", true, \"atTime\"),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Deadline(\"deadlineTask\", false, \"byTime\")"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        tasksStr \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                \"T | 0 | todoTask\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                \"E | 1 | eventTask | atTime\","
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                \"D | 0 | deadlineTask | byTime\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveSubjects_subjectsWithoutTopics_EmptyDirectoriesWithSubjectTitlesCreated() throws IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveSubjects(subjects);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File subjectDir \u003d Paths.get(storage.getBaseDir().toString(), subject.getTitle()).toFile();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.exists());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.isDirectory());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(isDirectoryEmpty(subjectDir));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveSubjects_subjectsWithTopics_DirectoriesWithEveryHierarchyCreated() throws IOException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // populate subjects"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Topic topic : topics) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                subject.getTopics().add(topic);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveSubjects(subjects);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File subjectDir \u003d Paths.get(storage.getBaseDir().toString(), subject.getTitle()).toFile();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.exists());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.isDirectory());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            // check if subdirectories are created"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File[] topicDirs \u003d subjectDir.listFiles(File::isDirectory);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotNull(topicDirs);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(subject.getTopics().getList().size(), topicDirs.length);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveTopics_topicsWithoutFlashcards_DirectoriesWithTopicTitlesAndEmptyFileCreated() throws IOException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveTopics(tempDir, topics);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File topicDir \u003d Paths.get(tempDir.toString(), topic.getTitle()).toFile();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File flashcardFile \u003d new File(topicDir, storage.getFlashcardFilename());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.exists());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.isDirectory());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(flashcardFile.exists());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(\"[]\", Files.readString(flashcardFile.toPath()));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveTopics_topicsWithFlashcards_DirectoriesWithTopicTitlesAndPopulatedFileCreated() throws IOException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // populate topics with flashcards"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Flashcard flashcard : flashcards) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                topic.addFlashcard(flashcard);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveTopics(tempDir, topics);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File topicDir \u003d Paths.get(tempDir.toString(), topic.getTitle()).toFile();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File flashcardFile \u003d new File(topicDir, storage.getFlashcardFilename());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.exists());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.isDirectory());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(flashcardFile.exists());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotEquals(\"[]\", Files.readString(flashcardFile.toPath()));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveFlashcards_validFlashcards_readableJsonIsStored() throws IOException {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Path file \u003d Paths.get(tempDir.toString(), storage.getFlashcardFilename());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveFlashcards(tempDir, flashcards);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertTrue(file.toFile().exists());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertEquals(gson.toJson(flashcards), Files.readString(file));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void loadSubjects_validStructure_populatedSubjects() throws IOException, FlashcardSyntaxException,"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            DataLoadingException {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // create valid directory structure"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Topic topic : topics) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Path topicPath \u003d Paths.get(storage.getBaseDir().toString(), subject.getTitle(), topic.getTitle());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Files.createDirectories(topicPath);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                File flashcardFile \u003d Paths.get(topicPath.toString(), storage.getFlashcardFilename()).toFile();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                // write flashcards to file"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                try (FileWriter fileWriter \u003d new FileWriter(flashcardFile)) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    gson.toJson(flashcards, fileWriter);  // store the json to file"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    fileWriter.flush();  // flush to actually write the content"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cSubject\u003e loadedSubjects \u003d storage.loadSubjects();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertEquals(loadedSubjects.size(), subjects.size());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : loadedSubjects) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(subject.getTopics().getList().size(), topics.size());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                assertEquals(topic.getFlashcards().size(), flashcards.size());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveTasks_tasks_correctFormatInFile() throws IOException {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Path subjectPath \u003d storage.getBaseDir().toPath();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveTasks(subjectPath, tasks);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File writtenFile \u003d new File(subjectPath.toString(), storage.getTaskFilename());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (Scanner scanner \u003d new Scanner(writtenFile)) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                assertTrue(tasksStr.stream().anyMatch(s -\u003e s.equals(line)));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void loadTasks_taskFile_correctlyParsedTasks() throws IOException {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Path subjectPath \u003d storage.getBaseDir().toPath();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File taskFile \u003d new File(subjectPath.toString(), storage.getTaskFilename());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(taskFile)) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (String taskStr : tasksStr) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                fileWriter.write(taskStr + \"\\n\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cTask\u003e savedTasks \u003d storage.loadTasks(subjectPath);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (int i \u003d 0; i \u003c savedTasks.size(); i++) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Task t1 \u003d savedTasks.get(i);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Task t2 \u003d tasks.get(i);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(t1.getDescription(), t2.getDescription());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(t1.getIsDone(), t2.getIsDone());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (t1 instanceof Event) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                assertEquals(((Event) t1).getAt(), ((Event) t2).getAt());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            } else if (t1 instanceof Deadline) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                assertEquals(((Deadline) t1).getBy(), ((Deadline) t2).getBy());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private boolean isDirectoryEmpty(File directory) throws IOException {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        boolean isEmpty \u003d true;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (DirectoryStream\u003cPath\u003e stream \u003d Files.newDirectoryStream(directory.toPath())) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            isEmpty \u003d !stream.iterator().hasNext();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return isEmpty;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 1,
      "CookieHoodie": 229
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1
    }
  }
]
