[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.7.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.7.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    implementation group: \u0027com.google.code.gson\u0027, name: \u0027gson\u0027, version: \u00272.8.6\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    mainClassName \u003d \"seedu.revised.Revised\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    archiveBaseName \u003d \"revised\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 4,
      "-": 42,
      "jialerk": 2
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "syncode98"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | I MUTHUKUMAR | [Github](https://github.com/syncode98) | [Portfolio](docs/team/johndoe.md)  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Herman Thong | [Github](https://https://github.com/rashien3) | [Portfolio](docs/team/johndoe.md)  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Sugandha Tuteja | [Github](https://github.com/sugandha929) | [Portfolio](docs/team/johndoe.md)  "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chin Hang | [Github](https://github.com/CookieHoodie/) | [Portfolio](docs/team/chinhang.md)  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jialerk | [Github](https://github.com/jialerk) | [Portfolio](docs/team/johndoe.md)  "
      }
    ],
    "authorContributionMap": {
      "syncode98": 1,
      "sugandha929": 1,
      "CookieHoodie": 1,
      "-": 4,
      "jialerk": 1,
      "rashien3": 2
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": "revisED aims to help students to revise their subjects by adding flashcards or tasks that have"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "syncode98"
        },
        "content": "to be completed. The user can store the flashcards in different topics, which can be created under different"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "subjects. The tasks can be stored under subjects. This application is created to ensure that students would be"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "able to revise, even if they are doing it at the last minute."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "{Give steps to get started quickly}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "1. Down the latest version of `Duke` from [here](http://link.to/duke)."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Subjects"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Topics"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Flashcards"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Quiz "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Results"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* Load "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### Subjects"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### Topics"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### Flashcards"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### Tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "#### Adding a todo: `todo`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a new item to the list of todo items."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `todo n/TODO_NAME d/DEADLINE`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "* The `DEADLINE` can be in a natural language format."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "* The `TODO_NAME` cannot contain punctuation.  "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Write the rest of the User Guide d/next week`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### Quiz"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Prints the questions from the flashcards and requires the user to complete the quiz within a"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "certain time limit.There are two types of quizzes :"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* SubjectQuiz"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* TopicQuiz"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "####SubjectQuiz"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Prints out all the questions that have been saved in all of the topics in the subjects.The user is given"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "2 minutes to complete the quiz."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Format: `quiz NAMEOFSUBJECT`\u003cbr\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Example: `quiz Maths`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Output: `You are about to begin the quiz for maths.You have 2 minutes.`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": "####TopicQuiz"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Prints out all the questions that have been saved in the specific topic topics .The user is given"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "syncode98"
        },
        "content": "1 minute to complete the quiz."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Format: `quiz NAMEOFTOPIC`\u003cbr\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Example: `quiz speed`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Output: `You are about to begin the quiz for speed.You have 1 minute.`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Subsequently, the application prints out the questions from the flashcards.The user has to enter"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "syncode98"
        },
        "content": "the answer.\u003c/br\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Format: `Question NAMEOFQUESTION`\u003cbr\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Example: `Question: What is distance` \u003cbr\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Once the quiz has been completed, the application prints out the scores obtained by the user and"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "syncode98"
        },
        "content": "the questions that the user did not answer incorrectly. "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The score is printed in the following formats:\u003cbr\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* If the user gets full marks : `Result:4/4 -- Excellent`\u003cbr\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* If the user gets enough marks to pass: `Result:2/4 -- Pass`\u003cbr\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "syncode98"
        },
        "content": "* If the user fails: `Result:0/4 -- Fail`\u003cbr\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003cpre\u003e\u003ccode\u003e____________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Result:2/4 -- Pass"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Here are the questions which you got wrong."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "syncode98"
        },
        "content": "           "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Question:distance "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Correct Answer: speed x time "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Your Answer: speed x time x time"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Question:velocity "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Correct Answer: displacement / time"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Your Answer: none"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________\u003c/code\u003e\u003c/pre\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The user can stop the quiz by entering `stop`. The application then prints the score for the user.\u003cbr\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Format: `stop`\u003cbr\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Output:`The quiz has been stopped!`."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003cpre\u003e\u003ccode\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "syncode98"
        },
        "content": "The quiz has been stopped!"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Result:1/2 -- Pass"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "syncode98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003c/code\u003e\u003c/pre\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "syncode98"
        },
        "content": "### Results"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Shows the results that the user has obtained in all of the quizzes so far.This can be done for the subjects or for the"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "syncode98"
        },
        "content": "topics."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Format: `results NAMEOFTOPIC` or `results NAMEOFSUBJECT`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Example:`results maths` or `results speed`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003cpre\u003e\u003ccode\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Quiz 1: 1/1 -- Excellent"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Quiz 2: 0/1 -- Fail"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "syncode98"
        },
        "content": "\u003c/code\u003e\u003c/pre\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: {your answer here}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "syncode98"
        },
        "content": "## Command Summary \u003ca name\u003d\"summary\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Action|Examples"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "syncode98"
        },
        "content": "------|------"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Add todo|`todo assignment` "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Add deadline|"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Add an event|"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Find tasks|"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Complete task|`done 4`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Delete task|`delete 4`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Change to the specific subject |`subject maths`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Change to the specific topic |`topic speed `"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Start a quiz for a subject| `quiz maths`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Start a quiz for a topic| `quiz speed`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "syncode98"
        },
        "content": "View results for a subject | `results maths`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "syncode98"
        },
        "content": "View results for a topic | `results speed`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "syncode98"
        },
        "content": "Exit application|`bye`"
      }
    ],
    "authorContributionMap": {
      "syncode98": 108,
      "-": 32
    }
  },
  {
    "path": "docs/team/chinhang.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "# Ong Chin Hang - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "-": 5
    }
  },
  {
    "path": "docs/team/muthu.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "syncode98"
        },
        "content": "# I MUTHUKUMAR - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "A dedicated individual who is willing to contribute to the team."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "-": 4
    }
  },
  {
    "path": "src/main/java/seedu/revised/Revised.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.quiz.ResultList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.quiz.SubjectQuiz;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.ExportCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.QuizSubjectCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.ReturnSubjectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.SubjectCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.storage.DataLoadingException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.InvalidSubjectCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoFlashCardException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoSubjectException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoTopicException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.RepeatedSubjectException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.parser.SubjectParser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Revised {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String BASE_DIR \u003d \"data\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String EXPORT_DIR \u003d \"export\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String FLASHCARD_FILENAME \u003d \"flashcards.json\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String TASK_FILENAME \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String RESULT_FILENAME \u003d \"results.json\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static final String EXPORT_FILENAME \u003d \"data.json\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private SubjectList subjects;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private ResultList results;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Initialises Duke by loading saved data from the disk, if any."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param baseDir           the name of the directory to store the data into"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param exportDir         the name of the directory to export the data to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param flashcardFilename the name of the file to store all the flashcard info"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param taskFilename      the name of the file to store all the tasks under a subject"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param resultFilename    the name of the file to store all the results of quizzes"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param exportFilename    the name of the file that the data will be exported to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Revised(String baseDir, String exportDir, String flashcardFilename, String taskFilename,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                   String resultFilename, String exportFilename) throws DataLoadingException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage \u003d new Storage.StorageBuilder()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setBaseDir(baseDir)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportDir(exportDir)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setFlashcardFilename(flashcardFilename)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setTaskFilename(taskFilename)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setResultFilename(resultFilename)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportFilename(exportFilename)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        subjects \u003d new SubjectList(storage.loadSubjects());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        results \u003d new ResultList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Runs the Duke program until the user exits the program."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printStart(subjects);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                SubjectCommand c \u003d SubjectParser.parse(fullCommand);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                if (c instanceof ReturnSubjectCommand) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                    Subject subject \u003d c.execute(subjects);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    ((ReturnSubjectCommand) c).goToSubject(subject);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                } else if (c instanceof QuizSubjectCommand) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    Subject subject \u003d c.execute(subjects);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    SubjectQuiz subjectQuiz \u003d new SubjectQuiz(subject);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    subjectQuiz.startQuiz(results);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                } else if (c instanceof ExportCommand) {  // TODO: bad practice, shouldn\u0027t use instanceof here"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    ((ExportCommand) c).execute(subjects, storage);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                    c.execute(subjects);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printIndexError();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (NoSubjectException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printNoSubjectError();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (RepeatedSubjectException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printRepeatedSubjectError();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printOutOfBoundsError();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } catch (NoFlashCardException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printNoFlashcards();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } catch (NoTopicException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printNoTopics();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } catch (InvalidSubjectCommand i) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printInvalidSubjectCommand();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Ui.printError(e);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            storage.saveSubjects(subjects.getList());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Ui.printWritingError();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printBye();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            new Revised(BASE_DIR, EXPORT_DIR, FLASHCARD_FILENAME, TASK_FILENAME, RESULT_FILENAME, EXPORT_FILENAME)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    .run();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (DataLoadingException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Ui.printError(e);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 15,
      "CookieHoodie": 55,
      "-": 7,
      "jialerk": 40,
      "rashien3": 2
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/Flashcard.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class Flashcard {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private String question;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private String answer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Flashcard(String question, String answer) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getQuestion() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getAnswer() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 1,
      "sugandha929": 3,
      "CookieHoodie": 21,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/Subject.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.quiz.Result;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.quiz.ResultList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class Subject {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private TopicList topics;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private ResultList results;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject(String title) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Subject(String title, List\u003cTopic\u003e topics) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, topics, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Subject(String title, List\u003cTopic\u003e topics, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, topics, tasks, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Subject(String title, List\u003cTopic\u003e topics, List\u003cTask\u003e tasks, List\u003cResult\u003e results) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.topics \u003d new TopicList(topics);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.tasks \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.results \u003d new ResultList(results);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public TopicList getTopics() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return topics;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public TaskList getTasks() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public ResultList getResults() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 7,
      "CookieHoodie": 31,
      "jialerk": 12,
      "rashien3": 9
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/SubjectList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SubjectList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private List\u003cSubject\u003e subjectList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public SubjectList(List\u003cSubject\u003e subjectList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.subjectList \u003d subjectList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Adds a \u003ccode\u003eTask\u003c/code\u003e into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subject The \u003ccode\u003eSubject\u003c/code\u003e to add into a \u003ccode\u003eSubjectList\u003c/code\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void add(Subject subject) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.subjectList.add(subject);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Gets a \u003ccode\u003eArrayList\u003c/code\u003e of Subjects in a \u003ccode\u003eSubjectList\u003c/code\u003e instance."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return the \u003ccode\u003eArrayList\u003c/code\u003e of Subjects"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public List\u003cSubject\u003e getList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return this.subjectList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 30
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/Topic.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.quiz.Result;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.quiz.ResultList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class Topic {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cFlashcard\u003e flashcards;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private ResultList results;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Topic(String title) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Topic(String title, List\u003cFlashcard\u003e flashcards) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this(title, flashcards, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Topic(String title, List\u003cFlashcard\u003e flashcards, List\u003cResult\u003e results) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.flashcards \u003d flashcards;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.results \u003d new ResultList(results);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public void addFlashcard(Flashcard flashcard) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        flashcards.add(flashcard);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public boolean removeFlashcard(Flashcard flashcard) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return flashcards.remove(flashcard);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Flashcard removeFlashcard(int index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return flashcards.remove(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public List\u003cFlashcard\u003e getFlashcards() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return this.flashcards;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public ResultList getResults() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 6,
      "sugandha929": 2,
      "CookieHoodie": 34,
      "jialerk": 2,
      "rashien3": 13
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/TopicList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class TopicList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private List\u003cTopic\u003e topics;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public TopicList(List\u003cTopic\u003e topics) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.topics \u003d topics;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Adds a \u003ccode\u003eTopic\u003c/code\u003e into a \u003ccode\u003etopics\u003c/code\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param topic The \u003ccode\u003eSubject\u003c/code\u003e to add into a \u003ccode\u003eSubjectList\u003c/code\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void add(Topic topic) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.topics.add(topic);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Gets the \u003ccode\u003eTopic\u003c/code\u003e at the index."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param index index number of the topic"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003eTopic\u003c/code\u003e with the index number"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Topic get(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return this.topics.get(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Gets a \u003ccode\u003eArrayList\u003c/code\u003e of Topics in a \u003ccode\u003eTopicList\u003c/code\u003e instance."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return the \u003ccode\u003eArrayList\u003c/code\u003e of Topics"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public List\u003cTopic\u003e getList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return this.topics;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean remove(Topic topic) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean remove(int index) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            topics.remove(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        } catch (NullPointerException ex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 1,
      "rashien3": 51
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/quiz/Quiz.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoFlashCardException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoTopicException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public abstract class Quiz {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    protected Result result \u003d new Result(0, 0);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    protected List\u003cFlashcard\u003e flashcards;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    protected List\u003cString\u003e incorrectAnswers \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public abstract void startQuiz(ResultList resultList) throws NoFlashCardException, NoTopicException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public List\u003cString\u003e getIncorrectAnswers() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return incorrectAnswers;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Checks the given answer for its correctness. If the answer is wrong, the question, the correct answer"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * and the wrong answer given by the user is added to the incorrectAnswers List."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @param answer    The answer given by the user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @param flashcard The flashcard for which the user is currently answering the questions"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void checkAnswer(String answer, Flashcard flashcard) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (flashcard.getAnswer().equalsIgnoreCase(answer)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            double updatedResult \u003d this.result.getScore() + 1.0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.result.updateResult(updatedResult);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.incorrectAnswers.add(flashcard.getQuestion());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.incorrectAnswers.add(flashcard.getAnswer());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.incorrectAnswers.add(answer);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 37,
      "CookieHoodie": 2,
      "jialerk": 2
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/quiz/Result.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class Result {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private double score \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private double maxScore;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Result(float score, int maxScore) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.score \u003d score;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.maxScore \u003d maxScore;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.description \u003d \"Fail\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public double getScore() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return score;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public double getMaxScore() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return maxScore;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void setScore(int score) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.score \u003d score;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void setMaxScore(int maxScore) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.maxScore \u003d maxScore;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Updates the current score and sets the description of the result."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @param score The \u003ccode\u003escore\u003c/code\u003e to replace the current score"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void updateResult(double score) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.score \u003d score;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (this.score \u003e\u003d this.maxScore / 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.description \u003d \"Pass\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (this.score \u003d\u003d this.maxScore) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.description \u003d \"Excellent\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.score + \"/\" + this.maxScore + \" -- \" + this.description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 54,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/quiz/ResultList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class ResultList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private List\u003cResult\u003e resultList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public ResultList(List\u003cResult\u003e resultList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.resultList \u003d resultList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Adds a \u003ccode\u003eResult\u003c/code\u003e into a \u003ccode\u003eResultList\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @param result The \u003ccode\u003eResult\u003c/code\u003e to add into a \u003ccode\u003eResultList\u003c/code\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void add(Result result) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.resultList.add(result);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public List\u003cResult\u003e getList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.resultList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 26,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/quiz/SubjectQuiz.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoFlashCardException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoTopicException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class SubjectQuiz extends Quiz {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private Subject subject;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public SubjectQuiz(Subject subject) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.subject \u003d subject;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.flashcards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Transfers the flashcards from the all the topics in a subject to the SubjectQuiz class and"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * sets the maximum score of the quiz."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @throws NoFlashCardException If the topic has no flashcards"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @throws NoTopicException     If the subject has no topic"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void setUpQuiz() throws NoFlashCardException, NoTopicException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (subject.getTopics().getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            throw new NoTopicException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        int maxScore \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            this.flashcards.addAll(topic.getFlashcards());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            maxScore +\u003d topic.getFlashcards().size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.result.setMaxScore(maxScore);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (this.flashcards.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            throw new NoFlashCardException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Begins the quiz for the user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @param results The results of the subject"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @throws NoFlashCardException If the topic has no flashcards"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @throws NoTopicException     If the subject has no topic"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void startQuiz(ResultList results) throws NoFlashCardException, NoTopicException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        setUpQuiz();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.result.setScore(0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printStartSubjectQuiz(this.subject);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Instant end \u003d Instant.now().plusSeconds(120);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String answer \u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Flashcard flashcard : this.flashcards) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (Instant.now().isAfter(end)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printQuestion(flashcard.getQuestion());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            answer \u003d Ui.readCommand().strip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (answer.equals(\"stop\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printStopQuiz();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printScore(this.result);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                checkAnswer(answer, flashcard);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assert answer !\u003d null;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (!answer.equals(\"stop\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printEndQuiz();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printScore(this.result);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (this.result.getScore() \u003c this.result.getMaxScore()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printIncorrectAnswers(this.incorrectAnswers);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.subject.getResults().add(this.result);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 87,
      "CookieHoodie": 2,
      "jialerk": 5
    }
  },
  {
    "path": "src/main/java/seedu/revised/card/quiz/TopicQuiz.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoFlashCardException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class TopicQuiz extends Quiz {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private Topic topic;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public TopicQuiz(Topic topic) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.topic \u003d topic;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.flashcards \u003d topic.getFlashcards();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.result.setMaxScore(this.flashcards.size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Topic getTopic() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return topic;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void setTopic(Topic topic) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.topic \u003d topic;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Checks if the topic has flashcards. Furthermore, this method sets the maximum score for the quiz."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @throws NoFlashCardException If there are no flashcards in this topic"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void setUpQuiz() throws NoFlashCardException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (this.flashcards.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            throw new NoFlashCardException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.result.setMaxScore(this.flashcards.size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * Begins the quiz for the user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @param results The resultsList stored in the Topic"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     * @throws NoFlashCardException If the topic has no flashcards"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void startQuiz(ResultList results) throws NoFlashCardException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        setUpQuiz();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.result.setScore(0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printStartTopicQuiz(this.topic);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Instant end \u003d Instant.now().plusSeconds(60);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String answer \u003d null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Flashcard flashcard : this.flashcards) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (Instant.now().isAfter(end)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printQuestion(flashcard.getQuestion());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            answer \u003d Ui.readCommand().strip();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (answer.equals(\"stop\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printStopQuiz();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printScore(this.result);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                checkAnswer(answer, flashcard);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assert answer !\u003d null;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (!answer.equals(\"stop\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printEndQuiz();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printScore(this.result);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (this.result.getScore() \u003c this.result.getMaxScore()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printIncorrectAnswers(this.incorrectAnswers);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.topic.getResults().add(this.result);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 84,
      "CookieHoodie": 1,
      "jialerk": 4
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " * Various commands to use depending on the various inputs given by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 2,
      "jialerk": 6,
      "rashien3": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcard/AddFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoSubjectException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.RepeatedSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class AddFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public AddFlashcardCommand(String fullCommand) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public Flashcard execute(Topic topic) throws NoSubjectException, RepeatedSubjectException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        int startOfMessage \u003d 4;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        int endOfQuestion \u003d (fullCommand.indexOf(\";\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        int startOfAnswer \u003d endOfQuestion + 2;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        int endOfMessage \u003d fullCommand.length();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        String question \u003d fullCommand.substring(startOfMessage, endOfQuestion);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        String answer \u003d fullCommand.substring(startOfAnswer, endOfMessage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        if (question.isEmpty() || answer.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        for (Flashcard flashcard : topic.getFlashcards()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            if (flashcard.getQuestion().equals(question) \u0026\u0026 flashcard.getAnswer().equals(answer)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                throw new RepeatedSubjectException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Flashcard t \u003d new Flashcard(question, answer);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        topic.addFlashcard(t);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printFlashcard(t, topic.getFlashcards());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 6,
      "sugandha929": 33,
      "CookieHoodie": 3,
      "jialerk": 2
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcard/DeleteFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class DeleteFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public DeleteFlashcardCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Deletes a Flashcard in a \u003ccode\u003eflashcardList\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @param topic the \u003ccode\u003eTopic\u003c/code\u003e instance of the Topic class for the user to delete from"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public Flashcard execute(Topic topic) throws NumberFormatException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        int number \u003d Integer.parseInt(message[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Flashcard flashcard \u003d topic.getFlashcards().get(number - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        topic.getFlashcards().remove(number - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printFlashcardDelete(flashcard, topic.getFlashcards().size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sugandha929": 34,
      "CookieHoodie": 1,
      "jialerk": 3
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcard/ExitFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class ExitFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 11,
      "CookieHoodie": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcard/FlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoSubjectException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.RepeatedSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class FlashcardCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Flashcard execute(Topic topic) throws NoSubjectException, RepeatedSubjectException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 3,
      "jialerk": 13
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcard/ListFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class ListFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public Flashcard execute(Topic topic) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printFlashcardList(topic);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 12,
      "CookieHoodie": 1,
      "jialerk": 3
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/flashcard/SorryFlashcardCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class SorryFlashcardCommand extends FlashcardCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public Flashcard execute(Topic topic) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        Ui.printError();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 18,
      "CookieHoodie": 1,
      "jialerk": 3
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/AddSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoSubjectException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.RepeatedSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": " * Adds an instance of the \u003ccode\u003eDeadline\u003c/code\u003e class into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddSubjectCommand(String fullCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject execute(SubjectList subjectList) throws NoSubjectException, RepeatedSubjectException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 4;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.length();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String title \u003d fullCommand.substring(startOfMessage, endOfMessage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (title.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assert title !\u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if (subject.getTitle().equals(title)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                throw new RepeatedSubjectException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Subject temp \u003d new Subject(title);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        subjectList.getList().add(temp);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printSubject(temp, subjectList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 3,
      "CookieHoodie": 3,
      "jialerk": 44
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/DeleteSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DeleteSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public DeleteSubjectCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Deletes a Task in a \u003ccode\u003etaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param subjectList the \u003ccode\u003eTaskList\u003c/code\u003e instance of the TaskList class for the user to delete from"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject execute(SubjectList subjectList) throws NumberFormatException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int number \u003d Integer.valueOf(message[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Subject subject \u003d subjectList.getList().get(number - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assert !(number \u003c\u003d 0 \u0026\u0026 number \u003e subjectList.getList().size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        subjectList.getList().remove(number - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printSubjectDelete(subject, subjectList.getList().size());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 37
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/ExitSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ExitSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject execute(SubjectList subjectList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 19
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/ExportCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class ExportCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public Subject execute(SubjectList subjectList, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File exportFile \u003d storage.export(subjectList.getList());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Ui.printExportSuccessful(exportFile);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 21
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/FindSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class FindSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public FindSubjectCommand(String fullcommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject execute(SubjectList subjectList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printFindSubject(subjectList,message[1]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 26
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/ListSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ListSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject execute(SubjectList subjectList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printSubjectList(subjectList.getList());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 16
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/QuizSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.InvalidSubjectCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class QuizSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public QuizSubjectCommand(String fullcommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String getFullcommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.fullcommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Subject execute(SubjectList subjectList) throws NoSubjectException, InvalidSubjectCommand {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Subject quizSubject \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (message.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            throw new InvalidSubjectCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (subject.toString().contains(message[1])) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                quizSubject \u003d subject;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (quizSubject \u003d\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return quizSubject;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 35,
      "CookieHoodie": 3,
      "jialerk": 2
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/ResultSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.InvalidSubjectCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class ResultSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public ResultSubjectCommand(String fullcommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Subject execute(SubjectList subjectList) throws NoSubjectException,InvalidSubjectCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (message.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            throw new InvalidSubjectCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Subject quizSubject \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (subject.toString().contains(message[1])) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                quizSubject \u003d subject;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (quizSubject \u003d\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assert (quizSubject !\u003d null) : \"No such subject exists!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printSubjectResults(quizSubject);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 31,
      "CookieHoodie": 3,
      "jialerk": 3
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/ReturnSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.quiz.TopicQuiz;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.TaskCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.QuizTopicCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.ReturnTopicCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.TopicCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.InvalidTopicCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoSubjectException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoTopicException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.RepeatedSubjectException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.task.TaskDeadlineException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.task.TaskEventException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.task.TaskException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.task.TaskTodoException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoFlashCardException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.parser.TopicParser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.TaskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ReturnSubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public ReturnSubjectCommand(String fullcommand) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Subject execute(SubjectList subjectList) throws NoSubjectException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        //Subject currentSubject \u003d new Subject(message[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message[1].isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (subject.getTitle().equals(message[1])) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                return subject;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        throw new NoSubjectException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void goToSubject(Subject subject) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printGoToSubject(subject);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        boolean isSubjectExit \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        while (!isSubjectExit) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Command c \u003d TopicParser.parse(fullCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                if (c instanceof ReturnTopicCommand) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    Topic topic \u003d ((ReturnTopicCommand) c).execute(subject);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((ReturnTopicCommand) c).goToTopic(topic, subject);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                } else if (c instanceof QuizTopicCommand) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    Topic topic \u003d ((QuizTopicCommand) c).execute(subject);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    TopicQuiz topicQuiz \u003d new TopicQuiz(topic);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    topicQuiz.startQuiz(topic.getResults());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                } else if (c instanceof TopicCommand) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((TopicCommand) c).execute(subject);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                } else if (c instanceof TaskCommand) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    TaskList taskList \u003d subject.getTasks();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    ((TaskCommand) c).execute(taskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                isSubjectExit \u003d c.isExit();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                //TODO: implement the storage methods for Topic"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                //topics.saveSubject(topicStorage.getFileName());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                //} catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                //Ui.printWritingError();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printIndexError();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } catch (NoSubjectException | NoTopicException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printNoTopicError();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (RepeatedSubjectException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printRepeatedTopicError();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printOutOfBoundsError();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (TaskTodoException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printTodoError();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (TaskDeadlineException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printDeadlineError();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (TaskEventException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printEventError();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } catch (TaskException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                Ui.printError();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } catch (NoFlashCardException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printNoFlashcards();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } catch (InvalidTopicCommand invalidTopicCommand) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printEnterTopic();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } catch (IllegalArgumentException | DateTimeParseException d) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                Ui.printInvalidFormat();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printBackToSubjects();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 26,
      "CookieHoodie": 15,
      "jialerk": 35,
      "rashien3": 30
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/SorrySubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SorrySubjectCommand extends SubjectCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Subject execute(SubjectList subjectList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printError();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 19,
      "rashien3": 2
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/subject/SubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.InvalidSubjectCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.RepeatedSubjectException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SubjectCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Subject execute(SubjectList subjectList) throws NoSubjectException,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            RepeatedSubjectException, InvalidSubjectCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "CookieHoodie": 4,
      "jialerk": 15
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/AddDeadlineCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.task.TaskDeadlineException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddDeadlineCommand extends TaskCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddDeadlineCommand(String fullCommand) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eDeadline\u003c/code\u003e class into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList An instance of the \u003ccode\u003eTaskList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws TaskDeadlineException If there are no parameters written to initialise the creation of a new Deadline"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *                               class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws TaskDeadlineException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 9;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.indexOf(\"/by\") - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfBy \u003d fullCommand.indexOf(\"/by\") + 4;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfBy \u003d fullCommand.length();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new TaskDeadlineException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String message \u003d fullCommand.substring(startOfMessage, endOfMessage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String by \u003d fullCommand.substring(startOfBy, endOfBy);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HH:mm d-MM-yyyy\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(by, format);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message.isEmpty() || by.isEmpty()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new TaskDeadlineException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Task temp \u003d new Deadline(message, false, dateTime);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            taskList.getList().add(temp);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printTask(temp, taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 9,
      "CookieHoodie": 7,
      "jialerk": 39
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/AddEventCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.task.TaskEventException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddEventCommand extends TaskCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddEventCommand(String fullCommand) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Adds an instance of an \u003ccode\u003eEvent\u003c/code\u003e class into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList An instance of the \u003ccode\u003eTaskList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws TaskEventException If there are no parameters written to initialise the creation of a new Event class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws TaskEventException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 6;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.indexOf(\"/at\") - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfAt \u003d fullCommand.indexOf(\"/at\") + 4;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfAt \u003d fullCommand.length();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new TaskEventException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String message \u003d fullCommand.substring(startOfMessage, endOfMessage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String at \u003d fullCommand.substring(startOfAt, endOfAt);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HH:mm d-MM-yyyy\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(at, format);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message.isEmpty() || at.isEmpty()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new TaskEventException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Task temp \u003d new Event(message, false, dateTime);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().add(temp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printTask(temp, taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 12,
      "CookieHoodie": 6,
      "jialerk": 39
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/AddTodoCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.task.TaskTodoException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddTodoCommand extends TaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddTodoCommand(String fullCommand) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Adds an instance of the \u003ccode\u003eTodo\u003c/code\u003e class into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList An instance of the \u003ccode\u003eTaskList\u003c/code\u003e class for the user to append to"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @throws TaskTodoException If there are no parameters written to initialise the creation of a new Todo class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws TaskTodoException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 5;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.length();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new TaskTodoException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String message \u003d fullCommand.substring(startOfMessage, endOfMessage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (message.isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new TaskTodoException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Task temp \u003d new Todo(message, false);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            taskList.getList().add(temp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            Ui.printTask(temp, taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "syncode98": 7,
      "CookieHoodie": 2,
      "jialerk": 40
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/DeleteTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DeleteTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public DeleteTaskCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Deletes a Task in a \u003ccode\u003etaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param taskList the \u003ccode\u003eTaskList\u003c/code\u003e instance of the TaskList class for the user to delete from"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws NumberFormatException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int number \u003d Integer.valueOf(message[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Task task \u003d taskList.getList().get(number - 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().remove(number - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printDelete(task, taskList.getList().size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 5,
      "jialerk": 30
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/DoneTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": " * Allows marking a \u003ccode\u003eTask\u003c/code\u003e in a \u003ccode\u003eTaskList\u003c/code\u003e as done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DoneTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public DoneTaskCommand(String fullCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Marks a \u003ccode\u003eTask\u003c/code\u003e in a \u003ccode\u003eTaskList\u003c/code\u003e as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param taskList the \u003ccode\u003eTaskList\u003c/code\u003e instance of the TaskList class for the user to obtain the Task in the"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *                 TaskList specified by the user and set it as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws NumberFormatException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int number \u003d Integer.valueOf(message[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().get(number - 1).markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printDone(taskList.getList().get(number - 1));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 8,
      "jialerk": 29
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/ExitTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ExitTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 1,
      "CookieHoodie": 8,
      "jialerk": 11
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/FindTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class FindTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public FindTaskCommand(String fullcommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printFindTask(taskList,message[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 24
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/ListTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": " * A class that allows the user to list down the tasks they input into the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ListTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void execute(Subject subject) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printTaskList(subject);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 16,
      "rashien3": 2
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/SorryTaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SorryTaskCommand extends TaskCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printError();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 18
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/task/TaskCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.task.TaskException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws TaskException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 2,
      "jialerk": 14
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/AddTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.TopicList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.RepeatedSubjectException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": " * Adds an instance of the \u003ccode\u003eTopic\u003c/code\u003e class into a \u003ccode\u003eTopicList\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class AddTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public AddTopicCommand(String fullCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Topic execute(Subject subject) throws NoSubjectException, RepeatedSubjectException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int startOfMessage \u003d 4;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int endOfMessage \u003d fullCommand.length();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String title \u003d fullCommand.substring(startOfMessage, endOfMessage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (title.isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic topic : topicList.getList()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (topic.getTitle().equals(title)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                throw new RepeatedSubjectException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Topic t \u003d new Topic(title);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        topicList.add(t);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printTopic(t, topicList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 3,
      "CookieHoodie": 3,
      "jialerk": 3,
      "rashien3": 43
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/DeleteTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.TopicList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class DeleteTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public DeleteTopicCommand(String fullCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Deletes a Task in a \u003ccode\u003etaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param subject the \u003ccode\u003eSubject\u003c/code\u003e instance of the Subject class for the user to delete from"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Topic execute(Subject subject) throws NumberFormatException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int number \u003d Integer.parseInt(message[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Topic topic \u003d topicList.getList().get(number - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        topicList.getList().remove(number - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printTopicDelete(topic, topicList.getList().size());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 4,
      "rashien3": 34
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/ExitTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ExitTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sugandha929": 10,
      "CookieHoodie": 1,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/FindTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.TopicList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.FindTaskCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class FindTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public FindTopicCommand(String fullcommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Topic execute(Subject subject) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printFindTopic(topicList,message[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        FindTaskCommand findTaskCommand \u003d new FindTaskCommand(this.fullcommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        findTaskCommand.execute(subject.getTasks());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 2,
      "jialerk": 4,
      "rashien3": 26
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/ListTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class ListTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Topic execute(Subject subject) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printTopicList(subject);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printTaskList(subject);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 3,
      "rashien3": 14
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/QuizTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.InvalidTopicCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoTopicException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class QuizTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public QuizTopicCommand(String fullcommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String getFullcommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.fullcommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Topic execute(Subject subject) throws NoTopicException, InvalidTopicCommand {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (message.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            throw new InvalidTopicCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Topic quizTopic \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (topic.toString().contains(message[1])) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                quizTopic \u003d topic;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (quizTopic \u003d\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            throw new NoTopicException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return quizTopic;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 35,
      "CookieHoodie": 3,
      "jialerk": 2
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/ResultTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.InvalidTopicCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoTopicException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class ResultTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public ResultTopicCommand(String fullcommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Topic execute(Subject subject) throws NoTopicException, InvalidTopicCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (message.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            throw new InvalidTopicCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Topic quizTopic \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (topic.toString().contains(message[1])) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                quizTopic \u003d topic;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (quizTopic \u003d\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            throw new NoTopicException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printTopicResults(quizTopic);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 30,
      "CookieHoodie": 3,
      "jialerk": 3
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/ReturnTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.flashcard.FlashcardCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoSubjectException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.RepeatedSubjectException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.parser.FlashcardParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class ReturnTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public ReturnTopicCommand(String fullcommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Topic execute(Subject subject) throws NoSubjectException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d this.fullcommand.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        //Subject currentSubject \u003d new Subject(message[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        if (message[1].isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            throw new NoSubjectException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (topic.getTitle().equals(message[1])) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return topic;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        throw new NoSubjectException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public void goToTopic(Topic topic, Subject subject) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printGoToTopic(topic);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        boolean isTopicExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        while (!isTopicExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            FlashcardCommand c \u003d FlashcardParser.parse(fullCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            isTopicExit \u003d c.isExit();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                c.execute(topic);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            }  catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                Ui.printIndexError();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            } catch (NoSubjectException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                Ui.printNoTopicError();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            } catch (RepeatedSubjectException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                Ui.printRepeatedTopicError();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                Ui.printOutOfBoundsError();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Ui.printBackToTopicsAndTasks();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 4,
      "sugandha929": 10,
      "CookieHoodie": 4,
      "jialerk": 5,
      "rashien3": 36
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/SorryTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class SorryTopicCommand extends TopicCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public Topic execute(Subject subject) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        Ui.printError();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Checks whether the the user exits the program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if user exits the program"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 3,
      "rashien3": 18
    }
  },
  {
    "path": "src/main/java/seedu/revised/command/topic/TopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.InvalidTopicCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoSubjectException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoTopicException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.RepeatedSubjectException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TopicCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Topic execute(Subject subject) throws NoSubjectException, RepeatedSubjectException,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            NoTopicException, InvalidTopicCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "CookieHoodie": 5,
      "jialerk": 13
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/card/InvalidSubjectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class InvalidSubjectCommand extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 3,
      "CookieHoodie": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/card/InvalidTopicCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class InvalidTopicCommand extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 3,
      "CookieHoodie": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/card/NoFlashCardException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class NoFlashCardException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 3,
      "CookieHoodie": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/card/NoSubjectException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class NoSubjectException extends SubjectException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 3
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/card/NoTopicException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "public class NoTopicException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 3,
      "CookieHoodie": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/card/RepeatedSubjectException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class RepeatedSubjectException extends SubjectException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 3
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/card/SubjectException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SubjectException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 3
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/storage/DataLoadingException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "public class DataLoadingException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public DataLoadingException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public DataLoadingException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 11
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/task/TaskDeadlineException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskDeadlineException extends TaskException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 4
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/task/TaskEventException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskEventException extends TaskException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 4
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/task/TaskException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 4
    }
  },
  {
    "path": "src/main/java/seedu/revised/exception/task/TaskTodoException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.exception.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskTodoException extends TaskException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 4
    }
  },
  {
    "path": "src/main/java/seedu/revised/parser/FlashcardParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.flashcard.AddFlashcardCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.flashcard.ExitFlashcardCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.flashcard.FlashcardCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.flashcard.ListFlashcardCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.flashcard.DeleteFlashcardCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.flashcard.SorryFlashcardCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "public class FlashcardParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * Parses the inputs provided by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @param fullCommand input by the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     * @return returns a command instance to execute a command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static FlashcardCommand parse(String fullCommand) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (fullCommand.equals(\"exit\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new ExitFlashcardCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new ListFlashcardCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        } else if (fullCommand.startsWith(\"add\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new AddFlashcardCommand(fullCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new DeleteFlashcardCommand(fullCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            return new SorryFlashcardCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 1,
      "sugandha929": 23,
      "CookieHoodie": 6,
      "jialerk": 1
    }
  },
  {
    "path": "src/main/java/seedu/revised/parser/SubjectParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.AddSubjectCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.DeleteSubjectCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.ExitSubjectCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.ExportCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.FindSubjectCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.ListSubjectCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.ReturnSubjectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.SorrySubjectCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.SubjectCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.QuizSubjectCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.ResultSubjectCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": " * Allows the parsing of inputs provided by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SubjectParser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Parses the inputs provided by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param fullCommand input by the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return returns a command instance to execute a command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static SubjectCommand parse(String fullCommand) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ExitSubjectCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ListSubjectCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } else if (fullCommand.equals(\"export\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return new ExportCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"add\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new DeleteSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new FindSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"subject\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ReturnSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        } else if (fullCommand.startsWith(\"quiz\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            return new QuizSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        } else if (fullCommand.startsWith(\"results\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            return new ResultSubjectCommand(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new SorrySubjectCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 4,
      "CookieHoodie": 13,
      "jialerk": 32
    }
  },
  {
    "path": "src/main/java/seedu/revised/parser/TaskParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.DeleteTaskCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.DoneTaskCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.ExitTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.FindTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.ListTaskCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.SorryTaskCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.TaskCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskParser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * Parses the inputs provided by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param fullCommand input by the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return returns a command instance to execute a command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static TaskCommand parse(String fullCommand) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ExitTaskCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new DoneTaskCommand(fullCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ListTaskCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddTodoCommand(fullCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddDeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddEventCommand(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new DeleteTaskCommand(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new FindTaskCommand(fullCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new SorryTaskCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 2,
      "CookieHoodie": 10,
      "jialerk": 31
    }
  },
  {
    "path": "src/main/java/seedu/revised/parser/TopicParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.AddDeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.AddEventCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.AddTodoCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.DeleteTaskCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.task.DoneTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.QuizTopicCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.AddTopicCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.ExitTopicCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.ListTopicCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.SorryTopicCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.DeleteTopicCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.FindTopicCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.ReturnTopicCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.topic.ResultTopicCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rashien3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rashien3"
        },
        "content": " * Parses the commands on the topic level."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rashien3"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rashien3"
        },
        "content": "public class TopicParser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * Parses the inputs provided by the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @param fullCommand input by the user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     * @return returns a command instance to execute a command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rashien3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        String[] message \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        switch (message[0]) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (fullCommand.equals(\"exit\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new ExitTopicCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new SorryTopicCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new ListTopicCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new SorryTopicCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            String [] commands \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (message[1].equals(\"topic\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new DeleteTopicCommand(commands[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else if (message[1].equals(\"task\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new DeleteTaskCommand(commands[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                return new SorryTopicCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new FindTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"topic\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new ReturnTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddTodoCommand(fullCommand);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddDeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new AddEventCommand(fullCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new DoneTaskCommand(fullCommand);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        case \"quiz\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            return new QuizTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        case \"results\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            return new ResultTopicCommand(fullCommand);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            return new SorryTopicCommand();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rashien3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 6,
      "CookieHoodie": 14,
      "jialerk": 2,
      "rashien3": 55
    }
  },
  {
    "path": "src/main/java/seedu/revised/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.JsonSyntaxException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.storage.DataLoadingException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.quiz.Result;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final File baseDir;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final File exportDir;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String flashcardFilename;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String taskFilename;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String resultFilename;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private final String exportFilename;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private Storage(StorageBuilder builder) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.baseDir \u003d new File(builder.baseDir);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.exportDir \u003d new File(builder.exportDir);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.flashcardFilename \u003d builder.flashcardFilename;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.taskFilename \u003d builder.taskFilename;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.resultFilename \u003d builder.resultFilename;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        this.exportFilename \u003d builder.exportFilename;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Loads and populates subject data from the storage. Subjects and topics will be sorted by their titles in"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * alphabetical order."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws DataLoadingException if fails to load the saved data due to filesystem error"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public List\u003cSubject\u003e loadSubjects() throws DataLoadingException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (!baseDir.exists()) {  // if the data hasn\u0027t been saved before"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File[] subjectDirs \u003d baseDir.listFiles(File::isDirectory);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        if (subjectDirs \u003d\u003d null) {  // error in getting the directories even if they may exist"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new DataLoadingException(\"Error loading saved data from the disk.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return loadSubjects(subjectDirs);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Creates a list of subjects from the saved directories and populates each subject with existing topics, results,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * and flashcards. Subjects and topics will be sorted by their titles in alphabetical order."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectDirs directories of subjects saved previously"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated subjects loaded from the disk"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws DataLoadingException if fails to load the saved data due to filesystem error"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cSubject\u003e loadSubjects(File[] subjectDirs) throws DataLoadingException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cSubject\u003e subjects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (File subjectDir : subjectDirs) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File[] topicDirs \u003d subjectDir.listFiles(File::isDirectory);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (topicDirs \u003d\u003d null) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                throw new DataLoadingException(\"Error loading saved data from the disk.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cTopic\u003e topics \u003d loadTopics(topicDirs);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                tasks \u003d loadTasks(subjectDir.toPath());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                tasks \u003d new ArrayList\u003c\u003e();  // task file may have been deleted by the user"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(subjectDir.toString(), getResultFilename());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cResult\u003e results \u003d loadResults(resultFile);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Subject subject \u003d new Subject(subjectDir.getName(), topics, tasks, results);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            subjects.add(subject);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        subjects.sort(Comparator.comparing(Subject::getTitle));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return subjects;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Creates a list of topics from the saved directories and populates each topic with the existing flashcards"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * and results. Topics will be sorted by their titles in alphabetical order."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param topicDirs directories of topics saved previously"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated topics loaded from the disk"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cTopic\u003e loadTopics(File[] topicDirs) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cTopic\u003e topics \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (File topicDir : topicDirs) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File flashcardFile \u003d new File(topicDir, getFlashcardFilename());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(topicDir, getResultFilename());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cFlashcard\u003e flashcards \u003d loadFlashcards(flashcardFile);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            List\u003cResult\u003e results \u003d loadResults(resultFile);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Topic topic \u003d new Topic(topicDir.getName(), flashcards, results);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            topics.add(topic);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        topics.sort(Comparator.comparing(Topic::getTitle));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return topics;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Loads the json data in the file into an ArrayList of objects (of type specified)."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param type     the type of the object inside the json file"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param jsonFile the file that stores the flashcard data"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated objects with type specified loaded from the file"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static \u003cT\u003e List\u003cT\u003e loadFromJson(Type type, File jsonFile) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cT\u003e objects;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileReader fileReader \u003d new FileReader(jsonFile)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            objects \u003d gson.fromJson(fileReader, type);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (IOException e) {  // file may have been deleted by the user"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            objects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        } catch (JsonSyntaxException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throw new JsonSyntaxException(\"Error reading the json data at \" + jsonFile.getAbsolutePath()"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    + \". Make sure the syntax is correct if you changed it manually.\", e);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assert objects !\u003d null;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return objects;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Loads the data in the file into an ArrayList of Flashcard."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param flashcardFile the file that stores the flashcard data"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated flashcards loaded from the file"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cFlashcard\u003e loadFlashcards(File flashcardFile) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Type objectType \u003d new TypeToken\u003cArrayList\u003cFlashcard\u003e\u003e() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }.getType();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return loadFromJson(objectType, flashcardFile);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Loads the data in the file into an ArrayList of Result."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param resultFile the file that stores the result data"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of populated results loaded from the file"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cResult\u003e loadResults(File resultFile) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Type objectType \u003d new TypeToken\u003cArrayList\u003cResult\u003e\u003e() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }.getType();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return loadFromJson(objectType, resultFile);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Saves the subjects along with all the contents into the storage. Quiz results under the subject will"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * also be saved."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjects subjects to be saved"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if fails to save to the storage"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void saveSubjects(List\u003cSubject\u003e subjects) throws IOException {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assert subjects !\u003d null;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Path subjectPath \u003d Paths.get(getBaseDir().toString(), subject.getTitle());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Files.createDirectories(subjectPath);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(subjectPath.toString(), getResultFilename());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveToJson(resultFile, subject.getResults().getList());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveTasks(subjectPath, subject.getTasks().getList());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveTopics(subjectPath, subject.getTopics().getList());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Saves the topics along with all the contents into the storage. If the topic has no flashcards in it, the file"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * with name {@link Storage#getFlashcardFilename()} with an empty square bracket will be created under it. Similarly"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * , the quiz result will be stored under the path with name {@link Storage#getResultFilename()}."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectPath subject directory where topics will be stored under"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param topics      topics to be saved"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if fails to save to the storage"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void saveTopics(Path subjectPath, List\u003cTopic\u003e topics) throws IOException {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assert topics !\u003d null;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Path topicPath \u003d Paths.get(subjectPath.toString(), topic.getTitle());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Files.createDirectories(topicPath);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File flashcardFile \u003d new File(topicPath.toString(), getFlashcardFilename());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(topicPath.toString(), getResultFilename());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveToJson(flashcardFile, topic.getFlashcards());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            saveToJson(resultFile, topic.getResults().getList());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Save the contents of the list of objects to the file path provided."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * This overwrites the content of the file if it already exists."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param jsonFile File where the objects will be stored into as json"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param objects  list of objects"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if fails to save to the storage"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static \u003cT\u003e void saveToJson(File jsonFile, List\u003cT\u003e objects) throws IOException {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(jsonFile)) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            gson.toJson(objects, fileWriter);  // store the json to file"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            fileWriter.flush();  // flush to actually write the content"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Saves the tasks into the file with name {@link Storage#getTaskFilename()} under the subjectPath."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * This overwrites the content of the file if it already exists."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectPath subject directory where the tasks will be stored under"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if there is an error writing to the file"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public void saveTasks(Path subjectPath, List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File taskFile \u003d new File(subjectPath.toString(), getTaskFilename());"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(taskFile)) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    fileWriter.write(\"T | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                            + task.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    fileWriter.write(\"D | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                            + task.getDescription() + \" | \" + ((Deadline) task).getDateTimeDescription() + \"\\n\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    fileWriter.write(\"E | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                            + task.getDescription() + \" | \" + ((Event) task).getDateTimeDescription() + \"\\n\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Reads the task file contents under the specified subject into a list of tasks."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjectPath subject directory where the tasks were stored under"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return a list of previously saved tasks"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws FileNotFoundException when there are no files found"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public List\u003cTask\u003e loadTasks(Path subjectPath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File taskFile \u003d new File(subjectPath.toString(), getTaskFilename());"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (Scanner scan \u003d new Scanner(taskFile)) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            while (scan.hasNextLine()) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String content \u003d scan.nextLine();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String[] contents \u003d content.split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String legend \u003d contents[0].trim();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                boolean done \u003d Integer.parseInt(contents[1].trim()) \u003d\u003d 1;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String action \u003d contents[2].trim();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String action2 \u003d \"\";"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                LocalDateTime dateTime \u003d null;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM yyyy\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                if (legend.equals(\"D\") || legend.equals(\"E\")) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                    action2 \u003d contents[3].trim();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    dateTime \u003d LocalDateTime.parse(action2, format);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                switch (legend) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    tasks.add(new Todo(action, done));"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    tasks.add(new Deadline(action, done, dateTime));"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    tasks.add(new Event(action, done, dateTime));"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    assert false : legend;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Export the subjects with all their contents into one json file. The file location is specified by"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * {@link Storage#getExportDir()}/{@link Storage#getExportFilename()}."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @param subjects list of subjects to be saved to the storage"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @return the file that the data has been exported to"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * @throws IOException if fails to save to the file"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public File export(List\u003cSubject\u003e subjects) throws IOException {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Files.createDirectories(getExportDir().toPath());  // create export directory"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File file \u003d new File(getExportDir().toString(), getExportFilename());"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        saveToJson(file, subjects);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public File getBaseDir() {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return baseDir;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public File getExportDir() {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return exportDir;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getFlashcardFilename() {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return flashcardFilename;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getTaskFilename() {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return taskFilename;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getResultFilename() {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return resultFilename;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getExportFilename() {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return exportFilename;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static class StorageBuilder {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String baseDir;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String exportDir;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String flashcardFilename;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String taskFilename;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String resultFilename;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        private String exportFilename;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set baseDir property of the Storage to be built."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param baseDir the name of the directory to store the data into"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setBaseDir(String baseDir) {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.baseDir \u003d baseDir;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set exportDir property of the Storage to be built."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param exportDir the name of the directory to export the data to"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setExportDir(String exportDir) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.exportDir \u003d exportDir;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set flashcardFilename property of the Storage to be built."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param flashcardFilename the name of the file to store all the flashcard info"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setFlashcardFilename(String flashcardFilename) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.flashcardFilename \u003d flashcardFilename;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set taskFilename property of the Storage to be built."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param taskFilename the name of the file to store all the tasks under a subject"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setTaskFilename(String taskFilename) {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.taskFilename \u003d taskFilename;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set resultFilename property of the Storage to be built."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param resultFilename the name of the file to store all the results of quizzes"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setResultFilename(String resultFilename) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.resultFilename \u003d resultFilename;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Set exportFilename property of the Storage to be built."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @param exportFilename the name of the file that the data will be exported to"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public StorageBuilder setExportFilename(String exportFilename) {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            this.exportFilename \u003d exportFilename;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * Build a Storage object with all the properties previously set. All the properties must be set before"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * calling this function or an exception will be thrown."
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         *"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         * @return a Storage object with all the properties set."
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "         */"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        public Storage build() {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Storage storage \u003d new Storage(this);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (storage.getBaseDir() \u003d\u003d null || storage.getExportDir() \u003d\u003d null"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    || storage.getFlashcardFilename() \u003d\u003d null || storage.getTaskFilename() \u003d\u003d null"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    || storage.getResultFilename() \u003d\u003d null || storage.getExportFilename() \u003d\u003d null) {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            return storage;"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 13,
      "CookieHoodie": 363,
      "jialerk": 49
    }
  },
  {
    "path": "src/main/java/seedu/revised/task/Deadline.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM yyyy\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String dateTime \u003d this.dateTime.format(formatter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String getDateTimeDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM yyyy\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.dateTime.format(formatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 16,
      "CookieHoodie": 3,
      "jialerk": 13
    }
  },
  {
    "path": "src/main/java/seedu/revised/task/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public Event(String description, boolean isDone, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM yyyy\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String dateTime \u003d this.dateTime.format(formatter);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public String getDateTimeDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM yyyy\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return this.dateTime.format(formatter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 16,
      "CookieHoodie": 3,
      "jialerk": 12
    }
  },
  {
    "path": "src/main/java/seedu/revised/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Checks whether a task is done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return true when a task is done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Prints the String representation of the class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return the String representation of the class"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "syncode98": 6,
      "CookieHoodie": 14,
      "jialerk": 33
    }
  },
  {
    "path": "src/main/java/seedu/revised/task/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Adds a \u003ccode\u003eTask\u003c/code\u003e into a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @param task The \u003ccode\u003eTask\u003c/code\u003e to add into a \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     * Gets a \u003ccode\u003eArrayList\u003c/code\u003e of Tasks in a \u003ccode\u003eTaskList\u003c/code\u003e instance."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     * @return the \u003ccode\u003eArrayList\u003c/code\u003e of Tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 4,
      "jialerk": 28
    }
  },
  {
    "path": "src/main/java/seedu/revised/task/Todo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1,
      "jialerk": 12
    }
  },
  {
    "path": "src/main/java/seedu/revised/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.quiz.Result;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import seedu.revised.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.TaskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private static Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static String readCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printStart(SubjectList subjects) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String logo \u003d \"                               __________\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"                              |  __ |  _ \\\\\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \" ____  ______      _____      |  |__| | | |\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"|  __|/ __ \\\\ \\\\    / /| | ____ |   __| | | |\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"| |  |  __/ \\\\ \\\\__/ / | | \\\\____|  |__| |_| |\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"| |   \\\\___|  \\\\____/  |_| ____/|_____|_____/\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \" Hello! I\u0027m revisED\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (subjects.getList().size() !\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            printUpcomingTasks(subjects);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Alright, What can I do for you?\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printSubjectList(List\u003cSubject\u003e list) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Here are the subject(s) in your list:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject item : list) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            System.out.println(num + \".\" + item);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            num++;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTaskList(Subject subject) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TaskList taskList \u003d subject.getTasks();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"Here are the tasks(s) under \" + subject.getTitle() + \": \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Task t : taskList.getList()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            assert index \u003e 0;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(index + \".\" + t);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printDone(Task task) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                \" Nice! I\u0027ve marked this task as done:\\n   \" + task + \"\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printDelete(Task task, int total) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \" Noted. I\u0027ve removed this task:\\n   \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + task + \"\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \" Now you have \" + total + (total \u003d\u003d 1 ? \" task in the list.\\n\" : \" tasks in the list.\\n\")"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printSubjectDelete(Subject subject, int total) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \" Noted. I\u0027ve removed this subject:\\n   \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + subject + \"\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \" Now you have \" + total + (total \u003d\u003d 1 ? \" subject in the list.\\n\" : \" subjects in the list.\\n\")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printBye() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \" Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printError() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static void printError(Exception err) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + err.getMessage() + \"\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printNoSubjectError() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \" ☹ OOPS!!! I\u0027m sorry, but I can\u0027t find that subject :-(\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printRepeatedSubjectError() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \" ☹ OOPS!!! I\u0027m sorry, but subject is already in the list :-(\\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printTodoError() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \" ☹ OOPS!!! The description of a todo cannot be empty.\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printDeadlineError() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \" ☹ OOPS!!! The description of a deadline cannot be empty.\\n\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printEventError() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \" ☹ OOPS!!! The description of a event cannot be empty.\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printIndexError() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \" ☹ OOPS!!! Invalid index format entered.\\n\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printOutOfBoundsError() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \" ☹ OOPS!!! The index you entered does not exist.\\n\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printFindTask(TaskList taskList, String find) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int taskPresent \u003d 0;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Task task : taskList.getList()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if (task.toString().contains(find)) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printTaskMatch(taskPresent);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                System.out.println(task);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                taskPresent \u003d 1;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assert (taskPresent \u003d\u003d 1 || taskPresent \u003d\u003d 0);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (taskPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\" Sorry! I could not find any task with \" + find + \" in the list.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printFindSubject(SubjectList subjectList, String find) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int subjectPresent \u003d 0;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for (Subject subject : subjectList.getList()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if (subject.toString().contains(find)) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printSubjectMatch(subjectPresent);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                System.out.println(subject);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                subjectPresent \u003d 1;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assert (subjectPresent \u003d\u003d 1 || subjectPresent \u003d\u003d 0);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (subjectPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                    + \" Sorry! I could not find any subject with \" + find + \" in the list.\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printSubjectMatch(int subjectPresent) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (subjectPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            System.out.println(\" Here are the matching subject(s) in your list:\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printTaskMatch(int taskPresent) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (taskPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            System.out.println(\" Here are the matching task(s) in your list:\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void fileNotFoundError() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"File not found. Creating file...\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void createFileError() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"Creating file failed.\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printWritingError() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"Writing to file failed.\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printGoToSubject(Subject subject) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"You are currently looking at the subject: \" + subject.toString() + \"\\n\""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printBackToSubjects() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Going back to the subjects list.\\n\""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTopicList(Subject subject) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        TopicList topicList \u003d subject.getTopics();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"Here are the topic(s) under \" + subject.getTitle() + \": \");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic t : topicList.getList()) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            assert index \u003e 0;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(index + \".\" + t);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printTopicMatch(int topicPresent) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (topicPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    + \" Here are the matching topic(s) in your list:\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printFindTopic(TopicList topicList, String query) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int topicPresent \u003d 0;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        for (Topic topic : topicList.getList()) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            if (topic.toString().contains(query)) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printTopicMatch(topicPresent);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                System.out.println(topic);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                topicPresent \u003d 1;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assert (topicPresent \u003d\u003d 1 || topicPresent \u003d\u003d 0);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if (topicPresent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "rashien3"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                    + \" Sorry! I could not find any topics with \" + query + \" in the list.\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printGoToTopic(Topic topic) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"You are currently looking at the topic: \" + topic.getTitle() + \"\\n\""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printNoTopicError() {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \" ☹ OOPS!!! I\u0027m sorry, but I can\u0027t find that topic :-(\\n\""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printRepeatedTopicError() {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \" ☹ OOPS!!! I\u0027m sorry, but that topic is already in the list :-(\\n\""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "rashien3"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    public static void printTopicDelete(Topic topic, int total) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "rashien3"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \" Noted. I\u0027ve removed this topic:\\n   \""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + topic + \"\\n\""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \" Now you have \" + total + (total \u003d\u003d 1 ? \" task in the list.\\n\" : \" tasks in the list.\\n\")"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "rashien3"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "rashien3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static void printFlashcardDelete(Flashcard flashcard, int total) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                + \" Noted. I\u0027ve removed this flashcard:\\n   \""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                + flashcard.getQuestion() + \"; \" + flashcard.getAnswer() + \"\\n\""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                + \" Now you have \" + total + (total \u003d\u003d 1 ? \" flashcard in the list.\\n\" : \" flashcards in the list.\\n\")"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "sugandha929"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    public static void printFlashcardList(Topic topic) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                + \"Here are the flashcard(s) under \" + topic.getTitle() + \": \");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        for (Flashcard t : topic.getFlashcards()) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            assert index \u003e 0;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            System.out.println(index + \".\" + t.getQuestion() + \"; \" + t.getAnswer());"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printScore(Result result) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Result:\" + result + \"\\n\""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printIncorrectAnswers(List\u003cString\u003e incorrectAnswers) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"Here are the questions which you got wrong.\\n\""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (int i \u003d 0; i \u003c incorrectAnswers.size(); i +\u003d 3) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"Question:\" + incorrectAnswers.get(i));"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"Correct Answer: \" + incorrectAnswers.get(i + 1));"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"Your Answer: \" + incorrectAnswers.get(i + 2));"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printStartSubjectQuiz(Subject subject) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"You are about to begin the quiz for \" + subject + \".You have 2 minutes.\\n\""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printStartTopicQuiz(Topic topic) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"You are about to begin the quiz for \" + topic + \".You have 1 minute.\\n\""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printStopQuiz() {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"The quiz has been stopped!\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printEndQuiz() {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"The quiz has ended!\");"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printSubjectResults(Subject subject) {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (subject.getResults().getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"You do not have any results!\");"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            for (Result result : subject.getResults().getList()) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                assert index \u003e 0;"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                System.out.println(\"Quiz \" + index + \": \" + result);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printSubject(Subject subject, SubjectList subjectList) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Got it. I\u0027ve added this subject:\\n  \" + subject + \"\\n\""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Now you have \" + subjectList.getList().size() + (subjectList.getList().size() \u003d\u003d 1"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                ? \" subject in the list.\\n\" : \" subjects in the list.\\n\")"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printTopic(Topic topic, TopicList topicList) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Got it. I\u0027ve added this topic:\\n  \" + topic + \"\\n\""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Now you have \" + topicList.getList().size() + (topicList.getList().size() \u003d\u003d 1"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                ? \" topic in the list.\\n\" : \" topics in the list.\\n\")"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printFlashcard(Flashcard flashcard, List flashcards) {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Got it. I\u0027ve added this flashcard:\\n  \" + flashcard.getQuestion() + \"; \""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + flashcard.getAnswer() + \"\\n\""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Now you have \" + flashcards.size() + (flashcards.size() \u003d\u003d 1"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                ? \" flashcard in the list.\\n\" : \" flashcards in the list.\\n\")"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printTopicResults(Topic topic) {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        if (topic.getResults().getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(\"You do not have any results!\");"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            for (Result result : topic.getResults().getList()) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                assert index \u003e 0;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                System.out.println(\"Quiz \" + index + \": \" + result);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printQuestion(String question) {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"Question: \" + question);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printBackToTopicsAndTasks() {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Going back to the topics and tasks list.\\n\""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printNoFlashcards() {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"There are no flashcards present yet!\\n\""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printNoTopics() {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"There are no topics present yet!\\n\""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printInvalidSubjectCommand() {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Please enter a subject!\\n\""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printEnterTopic() {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Please enter a topic!\\n\""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Got it. I\u0027ve added this task:\\n  \" + task + \"\\n\""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Now you have \" + taskList.getList().size() + (taskList.getList().size() \u003d\u003d 1"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                ? \" task in the list.\\n\" : \" tasks in the list.\\n\")"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printInvalidFormat() {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"Enter date and time in the following format: HH:MM DD-MM-YYY\\n\""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public static void printUpcomingTasks(SubjectList subjects) {"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        System.out.println(\"Here are the tasks that are due by next week\\n\""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        LocalDateTime nextWeek \u003d LocalDateTime.now().plusDays(7);"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        for (Subject subject : subjects.getList()) {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            System.out.println(subject);"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            if (subject.getTasks().getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                System.out.println(\"You do not have any tasks due by next week!\");"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                for (Task task : subject.getTasks().getList()) {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    if (task.getDateTime() !\u003d null) {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        if (task.getDateTime().isBefore(nextWeek) \u0026 task.getDateTime().isAfter(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                            System.out.println(index + \":\" + task);"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                            index \u003d index + 1;"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    public static void printExportSuccessful(File exportFile) {"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"Your data has been successfully exported to \" + exportFile.getAbsolutePath() + \".\");"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "syncode98": 208,
      "sugandha929": 19,
      "CookieHoodie": 40,
      "jialerk": 154,
      "rashien3": 71
    }
  },
  {
    "path": "src/test/java/seedu/revised/RevisedTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "class RevisedTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "jialerk": 2
    }
  },
  {
    "path": "src/test/java/seedu/revised/card/quiz/SubjectQuizTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoFlashCardException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoTopicException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "class SubjectQuizTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private SubjectList subjects;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private Result result \u003d new Result(0, 0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private List\u003cFlashcard\u003e flashcards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private List\u003cString\u003e incorrectAnswers \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private ResultList results \u003d new ResultList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setup() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjects \u003d new SubjectList("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        new Subject(\"Maths\"),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        new Subject(\"History\"),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        new Subject(\"Science\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                )));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjects.getList().get(1).getTopics().add(new Topic(\"First War\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjects.getList().get(2).getTopics().add(new Topic(\"Evolution\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Flashcard first \u003d new Flashcard(\"middle of solar system\", \"Sun\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Flashcard second \u003d new Flashcard(\"lightspeed\", \"speed of light\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjects.getList().get(2).getTopics().get(0).addFlashcard(first);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjects.getList().get(2).getTopics().get(0).addFlashcard(second);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setUpQuiz_subjectWithoutTopic_throwsNoTopicException() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        SubjectQuiz subjectQuiz \u003d new SubjectQuiz(subjects.getList().get(0));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assertThrows(NoTopicException.class, subjectQuiz::setUpQuiz);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setUpQuiz_subjectWithTopicWithoutFlashcard_throwsNoFlashcardException() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        SubjectQuiz subjectQuiz \u003d new SubjectQuiz(subjects.getList().get(1));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assertThrows(NoFlashCardException.class, subjectQuiz::setUpQuiz);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setUpQuiz_subjectWithTopicsAndFlashcards_checkMaxScore()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            throws NoFlashCardException, NoTopicException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        SubjectQuiz subjectQuiz \u003d new SubjectQuiz(subjects.getList().get(2));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        subjectQuiz.setUpQuiz();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assertEquals(subjectQuiz.result.getMaxScore(), 2.0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 61,
      "CookieHoodie": 2,
      "jialerk": 5
    }
  },
  {
    "path": "src/test/java/seedu/revised/card/quiz/TopicQuizTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.card.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.TopicList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoFlashCardException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "class TopicQuizTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private TopicList topics;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private Result result \u003d new Result(0, 0);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private List\u003cFlashcard\u003e flashcards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private List\u003cString\u003e incorrectAnswers \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    private ResultList results \u003d new ResultList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setup() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        topics \u003d new TopicList("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        new Topic(\"First War\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                        new Topic(\"Evolution\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                )));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Flashcard first \u003d new Flashcard(\"middle of solar system\", \"Sun\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        Flashcard second \u003d new Flashcard(\"lightspeed\", \"speed of light\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        topics.get(1).addFlashcard(first);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        topics.get(1).addFlashcard(second);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setUpQuiz_TopicWithoutFlashcard_throwsNoFlashcardException() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        TopicQuiz topicQuiz \u003d new TopicQuiz(topics.get(0));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assertThrows(NoFlashCardException.class, topicQuiz::setUpQuiz);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void setUpQuiz_TopicsWithFlashcards_checkMaxScore()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "syncode98"
        },
        "content": "            throws NoFlashCardException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        TopicQuiz topicQuiz \u003d new TopicQuiz(topics.get(1));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        topicQuiz.setUpQuiz();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assertEquals(topicQuiz.result.getMaxScore(), 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 49,
      "CookieHoodie": 1,
      "jialerk": 4
    }
  },
  {
    "path": "src/test/java/seedu/revised/command/SubjectCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.AddSubjectCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.DeleteSubjectCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.FindSubjectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.ListSubjectCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.ReturnSubjectCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.command.subject.QuizSubjectCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.NoSubjectException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.RepeatedSubjectException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SubjectCommandTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private SubjectList subjects;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private AddSubjectCommand addCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private DeleteSubjectCommand deleteCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private FindSubjectCommand findCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private ReturnSubjectCommand returnCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private ListSubjectCommand listCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        subjects \u003d new SubjectList("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        new Subject(\"English\"),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        new Subject(\"Chinese\"),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        new Subject(\"Science\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                )));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void addSubject() throws NoSubjectException, RepeatedSubjectException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand \u003d new AddSubjectCommand(\"add Maths\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        addCommand.execute(subjects);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(\"Maths\", subjects.getList().get(3).getTitle());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void deleteSubject() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        deleteCommand \u003d new DeleteSubjectCommand(\"delete 2\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        deleteCommand.execute(subjects);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(Integer.valueOf(\"2\"), subjects.getList().size());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void findSubject() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        findCommand \u003d new FindSubjectCommand(\"find English\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        findCommand.execute(subjects);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void listSubject() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        listCommand \u003d new ListSubjectCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        listCommand.execute(subjects);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    public void quizSubject_command_throwsException() throws NoSubjectException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        QuizSubjectCommand quiz \u003d new QuizSubjectCommand(\"quiz Maths\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assertThrows(NoSubjectException.class, () -\u003e quiz.execute(subjects));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void returnSubject() throws NoSubjectException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        returnCommand \u003d new ReturnSubjectCommand(\"subject Chinese\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Subject testSubject \u003d returnCommand.execute(subjects);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        assertEquals(\"Chinese\", testSubject.getTitle());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 9,
      "CookieHoodie": 8,
      "jialerk": 63
    }
  },
  {
    "path": "src/test/java/seedu/revised/command/subject/QuizSubjectCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "package seedu.revised.command.subject;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.SubjectList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.card.InvalidSubjectCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "syncode98"
        },
        "content": "class QuizSubjectCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    SubjectList subjectList \u003d new SubjectList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    void execute_command_throwsException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String input \u003d \"quiz\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        QuizSubjectCommand quiz \u003d new QuizSubjectCommand(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        assertThrows(InvalidSubjectCommand.class, () -\u003e quiz.execute(subjectList));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "syncode98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "syncode98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "syncode98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 20,
      "CookieHoodie": 2,
      "jialerk": 1
    }
  },
  {
    "path": "src/test/java/seedu/revised/storage/StorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "package seedu.revised.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import org.junit.jupiter.api.io.TempDir;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Flashcard;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Subject;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.card.Topic;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.card.quiz.Result;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import seedu.revised.exception.storage.DataLoadingException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import seedu.revised.task.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "syncode98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cSubject\u003e subjects;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cTopic\u003e topics;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cFlashcard\u003e flashcards;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cString\u003e tasksStr;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private List\u003cResult\u003e results;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @TempDir"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    Path tempDir;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // use tempDir as baseDir to avoid file creation for subjects"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage \u003d new Storage.StorageBuilder()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setBaseDir(tempDir.toString())"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportDir(tempDir.toString())"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setFlashcardFilename(\"flashcards.json\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setTaskFilename(\"tasks.txt\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setResultFilename(\"results.json\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .setExportFilename(\"data.json\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        subjects \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Subject(\"subject1\"),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Subject(\"subject2\"),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Subject(\"subject3\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        topics \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Topic(\"topic1\"),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Topic(\"topic2\"),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Topic(\"topic3\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        flashcards \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Flashcard(\"question1\", \"answer1\"),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Flashcard(\"question2\", \"answer2\"),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Flashcard(\"question3\", \"answer3\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        String dateTimeInput \u003d \"18:00 10-10-2019\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HH:mm d-MM-yyyy\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "syncode98"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeInput, format);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Todo(\"todoTask\", false),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                new Event(\"eventTask\", true, dateTime),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                new Deadline(\"deadlineTask\", false, dateTime)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        results \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Result(100, 100),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Result(50, 100),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                new Result(10, 30)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        tasksStr \u003d new ArrayList\u003c\u003e(List.of("
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                \"T | 0 | todoTask\","
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                \"E | 1 | eventTask | 6:00 PM 10 Oct 2019\","
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                \"D | 0 | deadlineTask | 6:00 PM 10 Oct 2019\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveSubjects_subjectsWithoutTopics_DirectoriesWithSubjectTitlesAndTasksFileAndResultFileCreated()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveSubjects(subjects);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File subjectDir \u003d Paths.get(storage.getBaseDir().toString(), subject.getTitle()).toFile();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.exists());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.isDirectory());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File taskFile \u003d new File(subjectDir, storage.getTaskFilename());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(subjectDir, storage.getResultFilename());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(taskFile.exists());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(resultFile.exists());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveSubjects_subjectsWithTopicsAndResults_DirectoriesWithEveryHierarchyCreated() throws IOException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // populate subjects"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Topic topic : topics) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                subject.getTopics().add(topic);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            results.forEach(result -\u003e subject.getResults().add(result));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveSubjects(subjects);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File subjectDir \u003d Paths.get(storage.getBaseDir().toString(), subject.getTitle()).toFile();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.exists());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(subjectDir.isDirectory());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(subjectDir, storage.getResultFilename());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File taskFile \u003d new File(subjectDir, storage.getTaskFilename());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(taskFile.exists());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(resultFile.exists());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            // check if subdirectories are created"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File[] topicDirs \u003d subjectDir.listFiles(File::isDirectory);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotNull(topicDirs);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(subject.getTopics().getList().size(), topicDirs.length);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotEquals(\"[]\", Files.readString(resultFile.toPath()));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveTopics_topicsWithoutFlashcardsAndResult_DirectoriesWithTopicTitlesAndEmptyFileCreated()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveTopics(tempDir, topics);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File topicDir \u003d Paths.get(tempDir.toString(), topic.getTitle()).toFile();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.exists());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.isDirectory());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File flashcardFile \u003d new File(topicDir, storage.getFlashcardFilename());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(flashcardFile.exists());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(\"[]\", Files.readString(flashcardFile.toPath()));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(topicDir, storage.getResultFilename());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(resultFile.exists());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(\"[]\", Files.readString(resultFile.toPath()));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveTopics_topicsWithFlashcardsAndResults_DirectoriesWithTopicTitlesAndPopulatedFilesCreated()"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // populate topics with flashcards and results"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Flashcard flashcard : flashcards) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sugandha929"
        },
        "content": "                topic.addFlashcard(flashcard);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            results.forEach(result -\u003e topic.getResults().add(result));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveTopics(tempDir, topics);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Topic topic : topics) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File topicDir \u003d Paths.get(tempDir.toString(), topic.getTitle()).toFile();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.exists());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(topicDir.isDirectory());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File flashcardFile \u003d new File(topicDir, storage.getFlashcardFilename());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(flashcardFile.exists());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotEquals(\"[]\", Files.readString(flashcardFile.toPath()));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            File resultFile \u003d new File(topicDir, storage.getResultFilename());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertTrue(resultFile.exists());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotEquals(\"[]\", Files.readString(resultFile.toPath()));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveToJson_validFlashcards_readableJsonIsStored() throws IOException {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File file \u003d new File(tempDir.toString(), storage.getFlashcardFilename());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Storage.saveToJson(file, flashcards);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertTrue(file.exists());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertEquals(gson.toJson(flashcards), Files.readString(file.toPath()));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void loadFromJson_populatedFile_listWithCorrectTypeOfObjectsReturned() throws IOException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File flashcardFile \u003d Paths.get(tempDir.toString(), storage.getFlashcardFilename()).toFile();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // write flashcards to file"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(flashcardFile)) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            gson.toJson(flashcards, fileWriter);  // store the json to file"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            fileWriter.flush();  // flush to actually write the content"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Type type \u003d new TypeToken\u003cArrayList\u003cFlashcard\u003e\u003e() {}.getType();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cFlashcard\u003e loadedFlashcards \u003d Storage.loadFromJson(type, flashcardFile);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertEquals(flashcards.size(), loadedFlashcards.size());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Flashcard flashcard : loadedFlashcards) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertNotNull(flashcard);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void loadSubjects_noSavedData_emptyListOfSubjectsReturned() throws DataLoadingException {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertTrue(storage.loadSubjects().isEmpty());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void loadSubjects_validStructure_populatedSubjects() throws IOException, DataLoadingException {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // create valid directory structure"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Topic topic : topics) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Path topicPath \u003d Paths.get(storage.getBaseDir().toString(), subject.getTitle(), topic.getTitle());"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                Files.createDirectories(topicPath);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                File flashcardFile \u003d new File(topicPath.toString(), storage.getFlashcardFilename());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                File resultFile \u003d new File(topicPath.toString(), storage.getResultFilename());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                // write flashcards to file"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                try (FileWriter fileWriter \u003d new FileWriter(flashcardFile)) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    gson.toJson(flashcards, fileWriter);  // store the json to file"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    fileWriter.flush();  // flush to actually write the content"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                // write results to file"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                try (FileWriter fileWriter \u003d new FileWriter(resultFile)) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    gson.toJson(results, fileWriter);  // store the json to file"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    fileWriter.flush();  // flush to actually write the content"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cSubject\u003e loadedSubjects \u003d storage.loadSubjects();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertEquals(loadedSubjects.size(), subjects.size());"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : loadedSubjects) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(subject.getTopics().getList().size(), topics.size());"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Topic topic : subject.getTopics().getList()) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                assertEquals(topic.getFlashcards().size(), flashcards.size());"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                assertEquals(topic.getResults().getList().size(), results.size());"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            // subject result is not populated"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(subject.getResults().getList().size(), 0);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void saveTasks_tasks_correctFormatInFile() throws IOException {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Path subjectPath \u003d storage.getBaseDir().toPath();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        storage.saveTasks(subjectPath, tasks);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File writtenFile \u003d new File(subjectPath.toString(), storage.getTaskFilename());"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (Scanner scanner \u003d new Scanner(writtenFile)) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                assertTrue(tasksStr.stream().anyMatch(s -\u003e s.equals(line)));"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void loadTasks_taskFile_correctlyParsedTasks() throws IOException {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Path subjectPath \u003d storage.getBaseDir().toPath();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File taskFile \u003d new File(subjectPath.toString(), storage.getTaskFilename());"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        try (FileWriter fileWriter \u003d new FileWriter(taskFile)) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (String taskStr : tasksStr) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                fileWriter.write(taskStr + \"\\n\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        List\u003cTask\u003e savedTasks \u003d storage.loadTasks(subjectPath);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (int i \u003d 0; i \u003c savedTasks.size(); i++) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Task t1 \u003d savedTasks.get(i);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            Task t2 \u003d tasks.get(i);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(t1.getDescription(), t2.getDescription());"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            assertEquals(t1.getIsDone(), t2.getIsDone());"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            if (t1 instanceof Event) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                assertEquals(((Event) t1).getDateTimeDescription(), ((Event) t2).getDateTimeDescription());"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            } else if (t1 instanceof Deadline) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "syncode98"
        },
        "content": "                assertEquals(((Deadline) t1).getDateTimeDescription(), ((Deadline) t2).getDateTimeDescription());"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    void export_populatedSubjects_allContentsAreSaved() throws IOException {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        // populated subjects with data"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        for (Subject subject : subjects) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Topic topic : topics) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                subject.getTopics().add(topic);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                for (Flashcard flashcard : flashcards) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    topic.addFlashcard(flashcard);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                for (Result result : results) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                    topic.getResults().add(result);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Result result : results) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                subject.getResults().add(result);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "                subject.getTasks().add(task);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String jsonString \u003d gson.toJson(subjects);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        File exportFile \u003d storage.export(subjects);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertTrue(exportFile.exists());"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        String storedJson \u003d Files.readString(exportFile.toPath());"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "        assertEquals(jsonString, storedJson);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "syncode98": 11,
      "sugandha929": 1,
      "CookieHoodie": 309,
      "jialerk": 8
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CookieHoodie"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CookieHoodie": 1
    }
  }
]
