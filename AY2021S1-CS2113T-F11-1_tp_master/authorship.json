[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        attributes("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "                \u0027Main-Class\u0027: \u0027seedu.duke.Duke\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        )"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 2,
      "wgzesg": 8,
      "-": 46
    }
  },
  {
    "path": "data/profile/profile.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "  \"name\": \"negger\","
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "  \"age\": 69,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "  \"height\": 188,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "  \"weight\": 90.0,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "  \"expectedWeight\": 69.0"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 7
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "\u003cimg src\u003d\"https://i.imgur.com/W2LwmOA.png\" width\u003d\"100\" height\u003d\"100\"\u003e | Nguyen Tien Khoa | [Github](https://github.com/tienkhoa16) | [Portfolio](docs/team/tienkhoa.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "\u003cimg src\u003d\"https://i.imgur.com/3pna8mw.png\" width\u003d\"100\" height\u003d\"100\"\u003e | Zeon Chua Feiyi | [Github](https://github.com/CFZeon) | [Portfolio](docs/team/zeon.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "\u003cimg src\u003d\"https://avatars0.githubusercontent.com/u/57080256?s\u003d400\u0026u\u003d677af6062d8d0cdeae80ee9f00b50aa01e2c4b84\u0026v\u003d4\" width\u003d\"100\" height\u003d\"100\"\u003e | Zhang Shukai | [Github](https://github.com/zsk612) | [Portfolio](docs/team/shukai.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "\u003cimg src\u003d\"https://i.imgur.com/1mhi7tF.jpeg\" width\u003d\"100\" height\u003d\"100\"\u003e | Yu Jinyang| [Github](https://github.com/yujinyang1998) | [Portfolio](docs/team/jinyang.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "\u003cimg src\u003d\"https://avatars1.githubusercontent.com/u/53573749?s\u003d400\u0026u\u003d624be60ee5061b89cabc5c04b54795fdd4956a72\u0026v\u003d4\" width\u003d\"100\" height\u003d\"100\"\u003e | Wang Zesong | [Github](https://github.com/wgzesg) | [Portfolio](../docs/team/zesong.md)"
      }
    ],
    "authorContributionMap": {
      "zsk612": 5,
      "-": 4
    }
  },
  {
    "path": "docs/team/jinyang.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "# Yu Jinyang - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "zsk612": 1,
      "-": 5
    }
  },
  {
    "path": "docs/team/shukai.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "# Zhang Shukai - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "Develop Diet Manager."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "zsk612": 6
    }
  },
  {
    "path": "docs/team/tienkhoa.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "# Nguyen Tien Khoa - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "Develop User Profile Manager."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "zsk612": 6
    }
  },
  {
    "path": "docs/team/zeon.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "# Zeon Chua Feiyi - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "Develop Diet Manager."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "zsk612": 6
    }
  },
  {
    "path": "docs/team/zesong.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "# Zesong - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "zsk612": 1,
      "-": 5
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.workout.workoutmanager.ExecutionResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import diet.dietsession.Food;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import storage.diet.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import workout.workoutsession.exercise.Exercise;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static commands.workout.workoutmanager.ExecutionResult.SKIPPED;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    protected static final Logger logger \u003d Logger.getLogger(\"java.workout.command\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public ExecutionResult execute(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return SKIPPED;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public void execute(String input, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public void execute(String input, ArrayList\u003cFood\u003e foodList, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public void execute(String[] input, ArrayList\u003cExercise\u003e exercise,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                        String filePath, storage.workout.Storage storage, boolean[] endWorkoutSession) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public void printResponse() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 6,
      "tienkhoa16": 2,
      "wgzesg": 29
    }
  },
  {
    "path": "src/main/java/commands/CommandLib.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.diet.dietmanager.DietSessionCreate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.diet.dietmanager.DietSessionDelete;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.diet.dietmanager.DietSessionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.diet.dietmanager.DietSessionLoad;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.diet.dietmanager.DietSessionWrong;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.diet.dietsession.FoodItemAdd;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.diet.dietsession.FoodItemDelete;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.diet.dietsession.FoodItemShow;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.diet.dietsession.FoodItemWrong;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.workout.workoutmanager.ByeWS;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.workout.workoutmanager.ClearWS;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.workout.workoutmanager.DeleteWS;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.workout.workoutmanager.EditWS;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.workout.workoutmanager.HelpWS;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.workout.workoutmanager.ListWS;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.workout.workoutmanager.NewWS;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.workout.workoutmanager.WrongWS;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import commands.workout.workoutsession.WorkoutSessionAdd;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import commands.workout.workoutsession.WorkoutSessionEnd;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import commands.workout.workoutsession.WorkoutSessionDelete;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import commands.workout.workoutsession.WorkoutSessionList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import commands.workout.workoutsession.WorkoutSessionWrong;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class CommandLib {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public Hashtable\u003cString, Command\u003e library;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public CommandLib() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        library \u003d new Hashtable\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public void initWorkoutManagerCL() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.library.put(\"list\", new ListWS());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.library.put(\"new\", new NewWS());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.library.put(\"delete\", new DeleteWS());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.library.put(\"end\", new ByeWS());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.library.put(\"edit\", new EditWS());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.library.put(\"clear\", new ClearWS());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.library.put(\"help\", new HelpWS());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.library.put(\"wrong\", new WrongWS());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public void initWorkoutSessionCL() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.library.put(\"add\", new WorkoutSessionAdd());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.library.put(\"delete\", new WorkoutSessionDelete());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.library.put(\"list\", new WorkoutSessionList());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.library.put(\"end\", new WorkoutSessionEnd());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.library.put(\"wrong\", new WorkoutSessionWrong());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void initDietManagerCL() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.library.put(\"list\", new DietSessionList());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.library.put(\"meal\", new DietSessionCreate());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.library.put(\"load\", new DietSessionLoad());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.library.put(\"delete\", new DietSessionDelete());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.library.put(\"wrong\", new DietSessionWrong());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public void initDietSessionCL() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.library.put(\"add\", new FoodItemAdd());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.library.put(\"delete\", new FoodItemDelete());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.library.put(\"show\", new FoodItemShow());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.library.put(\"wrong\", new FoodItemWrong());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public Command get(String keyword) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        if (library.containsKey(keyword)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            return library.get(keyword);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            return library.get(\"wrong\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 26,
      "yujinyang1998": 15,
      "tienkhoa16": 17,
      "wgzesg": 21
    }
  },
  {
    "path": "src/main/java/commands/diet/dietmanager/DietSessionCreate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.diet.dietmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import ui.diet.dietmanager.DietManagerUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import diet.dietsession.DietSession;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.diet.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class DietSessionCreate extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void execute(String input, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        DietManagerUi ui \u003d new DietManagerUi();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            DietSession ds \u003d new DietSession(ui.extractMeal(input), ui.extractDate(input));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            ds.start();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"It seems like we ran into some problems saving your session...\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 18,
      "tienkhoa16": 3,
      "wgzesg": 2
    }
  },
  {
    "path": "src/main/java/commands/diet/dietmanager/DietSessionDelete.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.diet.dietmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.diet.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class DietSessionDelete extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    static final String FILEPATH \u003d \"saves/diet/\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void execute(String input, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        File folder \u003d new File(FILEPATH);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        File[] listOfFiles \u003d folder.listFiles();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            assert !input.isEmpty();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            int index \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            assert listOfFiles !\u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            String fileName \u003d listOfFiles[Integer.parseInt(input) - 1].getName();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"Oh no! You have deleted \" + fileName);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            listOfFiles[Integer.parseInt(input) - 1].delete();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"Sorry! It seems like you\u0027ve entered an invalid number or input!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 23,
      "tienkhoa16": 1,
      "wgzesg": 2
    }
  },
  {
    "path": "src/main/java/commands/diet/dietmanager/DietSessionList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.diet.dietmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.diet.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class DietSessionList extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    static final String FILEPATH \u003d \"saves/diet/\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void execute(String input, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        File folder \u003d new File(FILEPATH);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        File[] listOfFiles \u003d folder.listFiles();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            assert listOfFiles.length !\u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            for (int i \u003d 0; i \u003c listOfFiles.length; i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                System.out.println((i + 1) + \". \" + listOfFiles[i].getName());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"Sorry, there is nothing in Diet Manager.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            logger.log(Level.INFO, \"No instances of diet sessions saved\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 20,
      "tienkhoa16": 1,
      "wgzesg": 2,
      "CFZeon": 6
    }
  },
  {
    "path": "src/main/java/commands/diet/dietmanager/DietSessionLoad.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.diet.dietmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import diet.dietsession.DietSession;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.diet.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class DietSessionLoad extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    static final String FILEPATH \u003d \"saves/diet/\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void execute(String input, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        File folder \u003d new File(FILEPATH);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        File[] listOfFiles \u003d folder.listFiles();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            DietSession ds \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            assert listOfFiles !\u003d null : \"List of files should not be null\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            ds \u003d storage.readDietSession(listOfFiles[Integer.parseInt(input) - 1].getName());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            ds.start();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Sorry, there is no file at that index.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            logger.log(Level.INFO, \"No file found at array index\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Sorry, there is no file at that index.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            logger.log(Level.INFO, \"No file found at array index\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            logger.log(Level.INFO, \"failed to execute diet session\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"Sorry, there is no file at that index.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            logger.log(Level.INFO, \"wrong index for loading\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 22,
      "tienkhoa16": 1,
      "wgzesg": 2,
      "CFZeon": 15
    }
  },
  {
    "path": "src/main/java/commands/diet/dietmanager/DietSessionWrong.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.diet.dietmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.diet.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class DietSessionWrong extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void execute(String input, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"Sorry! It seems like you\u0027ve entered an invalid command!\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 8,
      "tienkhoa16": 1,
      "wgzesg": 2
    }
  },
  {
    "path": "src/main/java/commands/diet/dietsession/FoodItemAdd.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.diet.dietsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import diet.dietsession.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import diet.dietsession.DietSessionParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.diet.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class FoodItemAdd extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void execute(String input, ArrayList\u003cFood\u003e foodList, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        DietSessionParser parser \u003d new DietSessionParser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            assert !input.isEmpty();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            Food temp \u003d new Food(parser.processFoodName(input), parser.processFoodCalories(input));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            foodList.add(temp);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"Yay! You have added \" + temp.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"Please specify food info.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"Please write valid calories number.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 24,
      "tienkhoa16": 1,
      "wgzesg": 2
    }
  },
  {
    "path": "src/main/java/commands/diet/dietsession/FoodItemDelete.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.diet.dietsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import diet.dietsession.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.diet.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class FoodItemDelete extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void execute(String input, ArrayList\u003cFood\u003e foodList, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            assert !input.isEmpty();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            int index \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            Food temp \u003d foodList.get(index - 1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"Oh no! You have deleted \" + temp.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            foodList.remove(temp);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"Sorry! It seems like you\u0027ve entered an invalid number or input!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 20,
      "tienkhoa16": 1,
      "wgzesg": 2
    }
  },
  {
    "path": "src/main/java/commands/diet/dietsession/FoodItemShow.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.diet.dietsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import diet.dietsession.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.diet.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class FoodItemShow extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void execute(String input, ArrayList\u003cFood\u003e foodList, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"Here is your food list: \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            for (int i \u003d 0; i \u003c foodList.size(); i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                System.out.println((i + 1) + \". \" + foodList.get(i).toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"Sorry, there is nothing in your food list.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 21,
      "tienkhoa16": 1,
      "wgzesg": 2
    }
  },
  {
    "path": "src/main/java/commands/diet/dietsession/FoodItemWrong.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.diet.dietsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import diet.dietsession.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.diet.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class FoodItemWrong extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void execute(String input, ArrayList\u003cFood\u003e foodList, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"Sorry! It seems like you\u0027ve entered an invalid command!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 11,
      "tienkhoa16": 1,
      "wgzesg": 2
    }
  },
  {
    "path": "src/main/java/commands/profile/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import profile.Profile;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.profile.RedundantParamException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import storage.profile.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.COMMAND_WORD_ADD;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_ADD_TITLE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_PROFILE_EXIST;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A representation of the command for adding profile."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs AddCommand object inheriting abstract class Command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param commandArgs Command arguments from user\u0027s input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param logger Logger to record of information during program execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws RedundantParamException If parameters are provided to Add Command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public AddCommand(String commandArgs, Logger logger) throws RedundantParamException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(logger);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (!commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new RedundantParamException(COMMAND_WORD_ADD);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides execute method of class Command to execute the view profile command requested by user\u0027s input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param profile User\u0027s Profile object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param storage Storage to save data when required."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Result of command execution."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public CommandResult execute(Profile profile, Storage storage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        logger.log(Level.INFO, \"executing AddCommand\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (!profile.isDeleted) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new CommandResult(MESSAGE_PROFILE_EXIST);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return new CommandResult(MESSAGE_ADD_TITLE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Checks if user wants to add profile by checking given command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param command The command to be checked."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Whether the command is an object of type AddCommand."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static boolean isAddCommand(Command command) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return command instanceof AddCommand;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 58
    }
  },
  {
    "path": "src/main/java/commands/profile/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import profile.Profile;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import storage.profile.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A base class for command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected Logger logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs abstract class Command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param logger Logger to record of information during program execution."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Command(Logger logger) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.logger \u003d logger;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Executes a specific command requested by user\u0027s input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param profile User\u0027s Profile object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param storage Storage to save data when required."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Result of command execution."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public abstract CommandResult execute(Profile profile, Storage storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 31
    }
  },
  {
    "path": "src/main/java/commands/profile/CommandResult.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A class representing result shown to user after executing the requested command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private String feedbackMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs CommandResult object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param feedbackMessage Feedback message after executing command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public CommandResult(String feedbackMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.feedbackMessage \u003d feedbackMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides toString method of class Object to get string representation of CommandResult object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return String representation of CommandResult object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return feedbackMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 28
    }
  },
  {
    "path": "src/main/java/commands/profile/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import profile.Profile;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.profile.RedundantParamException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.SchwarzeneggerException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import storage.profile.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.COMMAND_WORD_DELETE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_DELETE_PROFILE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A representation of the command for deleting user profile."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs DeleteCommand object inheriting abstract class Command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param commandArgs Command arguments from user\u0027s input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param logger Logger to record of information during program execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws RedundantParamException If parameters are provided to Delete Command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public DeleteCommand(String commandArgs, Logger logger) throws RedundantParamException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(logger);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (!commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new RedundantParamException(COMMAND_WORD_DELETE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides execute method of class Command to execute the delete profile command requested by user\u0027s input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param profile User\u0027s Profile object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param storage Storage to delete data."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Result of command execution."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public CommandResult execute(Profile profile, Storage storage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            logger.log(Level.INFO, \"executing DeleteCommand\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            profile.isDeleted \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            storage.saveData(profile);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new CommandResult(MESSAGE_DELETE_PROFILE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (SchwarzeneggerException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new CommandResult(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 51
    }
  },
  {
    "path": "src/main/java/commands/profile/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import profile.Profile;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.profile.RedundantParamException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import storage.profile.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.COMMAND_WORD_EXIT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_EXIT_PROFILE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A representation of the command for exiting Profile session."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs ExitCommand object inheriting abstract class Command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param commandArgs Command arguments from user\u0027s input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param logger Logger to record of information during program execution."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws RedundantParamException If parameters are provided to Exit Command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public ExitCommand(String commandArgs, Logger logger) throws RedundantParamException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(logger);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (!commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new RedundantParamException(COMMAND_WORD_EXIT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides execute method of class Command to execute exit command requested by user\u0027s input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param profile User\u0027s Profile object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param storage Storage to save data when required."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Result of command execution."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public CommandResult execute(Profile profile, Storage storage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        logger.log(Level.INFO, \"executing ExitCommand\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return new CommandResult(MESSAGE_EXIT_PROFILE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Checks if user wants to exit Schwarzenegger by checking given command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param command The command to be checked."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Whether the command is an object of type ExitCommand."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return command instanceof ExitCommand;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 54
    }
  },
  {
    "path": "src/main/java/commands/profile/ViewCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import profile.Profile;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.profile.RedundantParamException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import storage.profile.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.COMMAND_WORD_VIEW;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_PROFILE_NOT_EXIST;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_VIEW_PROFILE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A representation of the command for viewing profile."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs ViewCommand object inheriting abstract class Command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param commandArgs Command arguments from user\u0027s input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param logger Logger to record of information during program execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws RedundantParamException If parameters are provided to View Command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public ViewCommand(String commandArgs, Logger logger) throws RedundantParamException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(logger);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (!commandArgs.isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new RedundantParamException(COMMAND_WORD_VIEW);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides execute method of class Command to execute the view profile command requested by user\u0027s input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param profile User\u0027s Profile object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param storage Storage to save data when required."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Result of command execution."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public CommandResult execute(Profile profile, Storage storage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        logger.log(Level.INFO, \"executing ViewCommand\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (profile.isDeleted) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_PROFILE_NOT_EXIST, COMMAND_WORD_VIEW));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_VIEW_PROFILE, profile.toString()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 48
    }
  },
  {
    "path": "src/main/java/commands/workout/workoutmanager/ByeWS.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.workout.workoutmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import workout.workoutmanager.ExitException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import ui.workout.workoutmanager.WorkoutManagerUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class ByeWS extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public ExecutionResult execute(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        logger.info(\"bye command carried out\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        throw new ExitException();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public void printResponse() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        WorkoutManagerUi.printBye();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 8,
      "tienkhoa16": 2,
      "wgzesg": 9
    }
  },
  {
    "path": "src/main/java/commands/workout/workoutmanager/ClearWS.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.workout.workoutmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import storage.workout.WorkOutManagerStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import ui.workout.workoutmanager.WorkoutManagerUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class ClearWS extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public ExecutionResult execute(String[] arg) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        if (!checkConfirmation()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            System.out.println(\"The action aborted\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            return ExecutionResult.ABORTED;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        WorkOutManagerStorage.clear();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return ExecutionResult.OK;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public void printResponse() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        WorkoutManagerUi.printClearResponse();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    private static boolean checkConfirmation() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        System.out.println(\"Are you sure you want to clear all records? This action is irrevocable.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        System.out.println(\"Key in YES to confirm.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        String input \u003d in.next();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return  input.equals(\"YES\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 1,
      "wgzesg": 32
    }
  },
  {
    "path": "src/main/java/commands/workout/workoutmanager/DeleteWS.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.workout.workoutmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.workout.WorkOutManagerStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import ui.workout.workoutmanager.WorkoutManagerUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class DeleteWS extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public ExecutionResult execute(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        logger.info(\"entering delete command\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            index \u003d Integer.parseInt(args[0]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            logger.warning(\"Number format exception caught\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"Input is not a number\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            return ExecutionResult.FAILED;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            logger.warning(\"ArrayIndexOutOfBoundsException caught\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"Insufficient arguments are given.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            return ExecutionResult.FAILED;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        WorkOutManagerStorage.delete(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        logger.info(\"deleted successfully\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return ExecutionResult.OK;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public void printResponse() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        WorkoutManagerUi.printDeleteResponse();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 15,
      "tienkhoa16": 3,
      "wgzesg": 15
    }
  },
  {
    "path": "src/main/java/commands/workout/workoutmanager/EditWS.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.workout.workoutmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import storage.workout.WorkOutManagerStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import ui.workout.workoutmanager.WorkoutManagerUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import workout.workoutsession.WorkoutSession;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class EditWS extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public ExecutionResult execute(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        logger.info(\"entering edit command\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            index \u003d Integer.parseInt(args[0]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            logger.warning(\"Number format exception caught\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            System.out.println(\"Input is not a number\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            return ExecutionResult.FAILED;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            logger.warning(\"ArrayIndexOutOfBoundsException caught\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            System.out.println(\"Insufficient arguments are given.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            return ExecutionResult.FAILED;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        String filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            filePath \u003d WorkOutManagerStorage.edit(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            logger.warning(\"Index Out Of Bounds Exception caught\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            System.out.println(\"Could not found that record. Give an index within the range.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            return ExecutionResult.FAILED;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        WorkoutSession ws \u003d new WorkoutSession(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        logger.info(\"editing workout session created\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        ws.workoutSessionStart();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        logger.info(\"edit successfully\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return ExecutionResult.OK;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public void printResponse() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        WorkoutManagerUi.printFinishNewSessionResponse();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 1,
      "wgzesg": 44
    }
  },
  {
    "path": "src/main/java/commands/workout/workoutmanager/ExecutionResult.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.workout.workoutmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public enum ExecutionResult {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    OK,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    ABORTED,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    FAILED,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    SKIPPED,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    MISSING"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 1,
      "wgzesg": 8
    }
  },
  {
    "path": "src/main/java/commands/workout/workoutmanager/HelpWS.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.workout.workoutmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import static ui.CommonUi.printHelpFormater;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class HelpWS extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public ExecutionResult execute(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        printHelpFormater(\"List\", \"list\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "                \"Show all past sessions\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        printHelpFormater(\"New\", \"new\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "                \"Create a new workout session\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        printHelpFormater(\"Delete\", \"delete x\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "                \"Delete the record indexed at x\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        printHelpFormater(\"Edit\", \"edit x\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "                \"Edit the record indexed at x\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        printHelpFormater(\"Clear\", \"clear\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "                \"Clear all past results\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        printHelpFormater(\"End\", \"end\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "                \"Go back to main menu\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return ExecutionResult.OK;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 1,
      "wgzesg": 24
    }
  },
  {
    "path": "src/main/java/commands/workout/workoutmanager/ListWS.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.workout.workoutmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.workout.WorkOutManagerStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static commands.workout.workoutmanager.ExecutionResult.OK;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class ListWS extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public ExecutionResult execute(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        WorkOutManagerStorage.list(args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        logger.info(\"listed successfully\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return OK;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 7,
      "tienkhoa16": 2,
      "wgzesg": 6
    }
  },
  {
    "path": "src/main/java/commands/workout/workoutmanager/NewWS.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.workout.workoutmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.workout.WorkOutManagerStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import ui.workout.workoutmanager.WorkoutManagerUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import workout.workoutsession.WorkoutSession;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static commands.workout.workoutmanager.ExecutionResult.OK;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import static workout.workoutmanager.WorkoutManagerParser.parseTags;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class NewWS extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public ExecutionResult execute(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "         * When starting a new workout session, a new file is created first."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "         * The file path is passed into workoutSession constructor to instantiate"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": "         * a new workoutSession instance."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "         */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        ArrayList\u003cString\u003e tags \u003d parseTags(args);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        String filePath \u003d WorkOutManagerStorage.add(tags);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        WorkoutSession ws \u003d new WorkoutSession(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        logger.info(\"new workout session created\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        WorkoutManagerUi.printStartNewSessionResponse();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        ws.workoutSessionStart();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        logger.info(\"ended workout session\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return OK;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public void printResponse() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        WorkoutManagerUi.printFinishNewSessionResponse();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 19,
      "tienkhoa16": 4,
      "wgzesg": 16
    }
  },
  {
    "path": "src/main/java/commands/workout/workoutmanager/WrongWS.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package commands.workout.workoutmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import ui.workout.workoutmanager.WorkoutManagerUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static commands.workout.workoutmanager.ExecutionResult.MISSING;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "public class WrongWS extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public ExecutionResult execute(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        logger.log(Level.WARNING, \"command not recognised\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        WorkoutManagerUi.commandNotFoundResponse();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return MISSING;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 2,
      "wgzesg": 15
    }
  },
  {
    "path": "src/main/java/commands/workout/workoutsession/WorkoutSessionAdd.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "package commands.workout.workoutsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import storage.workout.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import ui.workout.workoutsession.WorkoutSessionUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import workout.workoutsession.WorkoutSessionParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import workout.workoutsession.exercise.Exercise;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "public class WorkoutSessionAdd extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public void execute(String[] input, ArrayList\u003cExercise\u003e exercise,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                        String filePath, Storage storage, boolean[] endWorkoutSession) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            exercise.add(WorkoutSessionParser.addParser(input));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            storage.writeToStorage(filePath, exercise);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            WorkoutSessionUi.addFormatError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            WorkoutSessionUi.printError();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 26
    }
  },
  {
    "path": "src/main/java/commands/workout/workoutsession/WorkoutSessionDelete.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "package commands.workout.workoutsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import storage.workout.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import ui.workout.workoutsession.WorkoutSessionUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import workout.workoutsession.WorkoutSessionParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import workout.workoutsession.exercise.Exercise;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "public class WorkoutSessionDelete extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public void execute(String[] input, ArrayList\u003cExercise\u003e exerciseList,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                        String filePath, Storage storage, boolean[] endWorkoutSession) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        exerciseList.remove(WorkoutSessionParser.deleteParser(input));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            storage.writeToStorage(filePath, exerciseList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            WorkoutSessionUi.printError();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 22
    }
  },
  {
    "path": "src/main/java/commands/workout/workoutsession/WorkoutSessionEnd.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "package commands.workout.workoutsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import storage.workout.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import ui.workout.workoutsession.WorkoutSessionUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import workout.workoutsession.exercise.Exercise;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "public class WorkoutSessionEnd extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public void execute(String[] input, ArrayList\u003cExercise\u003e exerciseList,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                        String filePath, Storage storage, boolean[] endWorkoutSession) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        setEndWorkoutSessionT(endWorkoutSession);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            storage.writeToStorage(filePath, exerciseList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            WorkoutSessionUi.printError();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    private void setEndWorkoutSessionT(boolean[] endWorkoutSession) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        endWorkoutSession[0] \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 27
    }
  },
  {
    "path": "src/main/java/commands/workout/workoutsession/WorkoutSessionList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "package commands.workout.workoutsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import storage.workout.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import ui.workout.workoutsession.WorkoutSessionUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import workout.workoutsession.exercise.Exercise;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "public class WorkoutSessionList extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public void execute(String[] input, ArrayList\u003cExercise\u003e exercise,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                        String filePath, Storage storage, boolean[] endWorkoutSession) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        printList(exercise);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            storage.writeToStorage(filePath, exercise);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            WorkoutSessionUi.printError();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    private void printList(ArrayList\u003cExercise\u003e exercise) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        if (exercise.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            WorkoutSessionUi.emptyListError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        for (int i \u003d 0; i \u003c exercise.size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            System.out.println((i + 1) + \": \" + exercise.get(i).toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 32
    }
  },
  {
    "path": "src/main/java/commands/workout/workoutsession/WorkoutSessionWrong.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "package commands.workout.workoutsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import storage.workout.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import ui.workout.workoutsession.WorkoutSessionUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import workout.workoutsession.exercise.Exercise;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "public class WorkoutSessionWrong extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public void execute(String[] input, ArrayList\u003cExercise\u003e exercise,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                        String filePath, Storage storage, boolean[] endWorkoutSession) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        WorkoutSessionUi.inputNotRecognisedError();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 16
    }
  },
  {
    "path": "src/main/java/diet/dietmanager/DietManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package diet.dietmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.CommandLib;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.diet.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import ui.diet.dietmanager.DietManagerUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class DietManager {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final CommandLib cl;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final DietManagerParser parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private final DietManagerUi dietManagerUI;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public DietManager() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        cl \u003d new CommandLib();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        cl.initDietManagerCL();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        parser \u003d new DietManagerParser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        dietManagerUI \u003d new DietManagerUi();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        DietManagerUi.printOpening();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String input \u003d dietManagerUI.getInput();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        while (!input.equals(\"end\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                processCommand(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            } catch (ExitException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            input \u003d dietManagerUI.getInput();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"you have exited Diet Manager.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void processCommand(String input) throws ExitException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String[] commParts \u003d parser.parse(input.trim());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assert !commParts[0].isEmpty();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Command command \u003d cl.get(commParts[0]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assert !commParts[1].isEmpty();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        command.execute(commParts[1], storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 40,
      "tienkhoa16": 4,
      "wgzesg": 2
    }
  },
  {
    "path": "src/main/java/diet/dietmanager/DietManagerParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package diet.dietmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class DietManagerParser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public String[] parse(String comm) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        if (comm.contains(\" \")) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            return comm.split(\" \", 2);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            return new String[]{comm, \"filler\"};"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 11
    }
  },
  {
    "path": "src/main/java/diet/dietmanager/ExitException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package diet.dietmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class ExitException extends Throwable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public ExitException(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 8
    }
  },
  {
    "path": "src/main/java/diet/dietsession/DietSession.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package diet.dietsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.CommandLib;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.diet.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import ui.diet.dietsession.DietSessionUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class DietSession {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final ArrayList\u003cFood\u003e foodList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final String dateInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final String typeInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private final DietSessionUi dietSessionUI;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private transient CommandLib cl;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final DietSessionParser parser \u003d new DietSessionParser();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public boolean endDietSession \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"java.diet.dietsession\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public DietSession(String typeInput, String dateInput) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.cl \u003d new CommandLib();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        cl.initDietSessionCL();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.dateInput \u003d dateInput;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.date \u003d parser.parseDate(dateInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.typeInput \u003d typeInput;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.foodList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        dietSessionUI \u003d new DietSessionUi();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public String getDateInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return dateInput;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public String getTypeInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return typeInput;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void setEndDietSession(Boolean hasEnded) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.endDietSession \u003d hasEnded;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void start() throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        logger.log(Level.INFO, \"starting diet session\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.cl \u003d new CommandLib();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        cl.initDietSessionCL();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        dietSessionUI.printOpening();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        setEndDietSession(false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String input \u003d dietSessionUI.getInput();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        while (!input.equals(\"end\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                processCommand(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            input \u003d dietSessionUI.getInput();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        setEndDietSession(true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        logger.log(Level.INFO, \"saving profile session to file\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            storage.init(typeInput + \" \" + date.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            storage.writeToStorageDietSession(typeInput + \" \" + date.toString(), this);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            logger.log(Level.WARNING, \"save profile session failed\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Failed to save your diet session!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        dietSessionUI.printExit();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void processCommand(String input) throws NullPointerException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String[] commParts \u003d parser.parse(input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Command command \u003d cl.get(commParts[0]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        command.execute(commParts[1], foodList, storage);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 72,
      "tienkhoa16": 6,
      "wgzesg": 2,
      "CFZeon": 11
    }
  },
  {
    "path": "src/main/java/diet/dietsession/DietSessionParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package diet.dietsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class DietSessionParser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public String[] parse(String comm) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        if (comm.contains(\" \")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            return comm.split(\" \", 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            return new String[]{comm, \"filler\"};"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public String processFoodName(String food) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String[] temp \u003d food.trim().split(\"/c\", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return temp[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public double processFoodCalories(String food) throws NumberFormatException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String[] temp \u003d food.trim().split(\"/c\", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return Double.parseDouble(temp[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * Converts the date and time into a LocalDate object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * @param dateInput Date input string"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * @return LocalDate object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public LocalDate parseDate(String dateInput) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        // formatters for dates with time"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        DateTimeFormatter formatterA \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        DateTimeFormatter formatterB \u003d DateTimeFormatter.ofPattern(\"MM-dd-yyyy\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        DateTimeFormatter formatterC \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        LocalDate date \u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            date \u003d LocalDate.parse(dateInput, formatterA);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            // puts the date and time through all available formatters"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                date \u003d LocalDate.parse(dateInput, formatterB);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            // puts the date and time through all available formatters"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                date \u003d LocalDate.parse(dateInput, formatterC);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            // puts the date and time through all available formatters"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                // this uses default formatter of yyyy-MM-dd"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                date \u003d LocalDate.parse(dateInput);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            // puts the date and time through all available formatters"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        // returns null if all the available formatters could not be used"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 70
    }
  },
  {
    "path": "src/main/java/diet/dietsession/ExitException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package diet.dietsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class ExitException extends Throwable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public ExitException(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 8
    }
  },
  {
    "path": "src/main/java/diet/dietsession/Food.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package diet.dietsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class Food {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    protected double calories;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public Food(String name, double calories) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.calories \u003d calories;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return this.name + \" with calories: \" + this.calories;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 16
    }
  },
  {
    "path": "src/main/java/exceptions/ExceptionHandler.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A class that deals with handling exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class ExceptionHandler {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Handles checked exceptions."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param e Checked exceptions in The Schwarzenegger."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Error message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String handleCheckedExceptions(SchwarzeneggerException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return e.getMessage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Handles unchecked exceptions."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param e Unchecked exception in Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Error message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String handleUncheckedExceptions(Exception e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return e.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 27
    }
  },
  {
    "path": "src/main/java/exceptions/SchwarzeneggerException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A base class for the checked exceptions in Schwarzenegger."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public abstract class SchwarzeneggerException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs SchwarzeneggerException object inheriting class Exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public SchwarzeneggerException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 16
    }
  },
  {
    "path": "src/main/java/exceptions/profile/InvalidCommandWordException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package exceptions.profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.SchwarzeneggerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_INVALID_COMMAND_WORD;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception when command word is invalid."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class InvalidCommandWordException extends SchwarzeneggerException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs InvalidCommandException object inheriting abstract class SchwarzeneggerException."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public InvalidCommandWordException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(MESSAGE_INVALID_COMMAND_WORD);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 18
    }
  },
  {
    "path": "src/main/java/exceptions/profile/InvalidSaveFormatException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package exceptions.profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.SchwarzeneggerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_INVALID_SAVE_FORMAT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception when there is corruption in data save format."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class InvalidSaveFormatException extends SchwarzeneggerException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs InvalidSaveFormatException object inheriting abstract class SchwarzeneggerException."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public InvalidSaveFormatException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(MESSAGE_INVALID_SAVE_FORMAT);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 19
    }
  },
  {
    "path": "src/main/java/exceptions/profile/LoadingException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package exceptions.profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.SchwarzeneggerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_LOADING_ERROR;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception while loading data."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class LoadingException extends SchwarzeneggerException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs LoadingException object inheriting abstract class SchwarzeneggerException."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param message The cause of the error."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public LoadingException(String message) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(String.format(MESSAGE_LOADING_ERROR, message));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 20
    }
  },
  {
    "path": "src/main/java/exceptions/profile/RedundantParamException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package exceptions.profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.SchwarzeneggerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_REDUNDANT_PARAM;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception when input parameters are redundant."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class RedundantParamException extends SchwarzeneggerException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs RedundantParamException object inheriting abstract class SchwarzeneggerException."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param commandWord Command with redundant input parameters."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public RedundantParamException(String commandWord) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(String.format(MESSAGE_REDUNDANT_PARAM, commandWord.toUpperCase()));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 20
    }
  },
  {
    "path": "src/main/java/exceptions/profile/SavingException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package exceptions.profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.SchwarzeneggerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_SAVING_ERROR;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Represents exception while saving data."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class SavingException extends SchwarzeneggerException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs SavingException object inheriting abstract class SchwarzeneggerException."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param message The cause of the error."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public SavingException(String message) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        super(String.format(MESSAGE_SAVING_ERROR, message));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 20
    }
  },
  {
    "path": "src/main/java/logger/SchwarzeneggerLogger.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package logger;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static seedu.duke.Constant.LOG_FILE_PATH;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A class to handle file logging."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class SchwarzeneggerLogger {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private Logger logger;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private FileHandler fh;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs SchwarzeneggerLogger object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public SchwarzeneggerLogger() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            File file \u003d new File(LOG_FILE_PATH);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            SimpleFormatter formatter \u003d new SimpleFormatter();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            fh \u003d new FileHandler(LOG_FILE_PATH, true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            fh.setFormatter(formatter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            logger \u003d Logger.getLogger(\"SchwarzeneggerLogger\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            logger.addHandler(fh);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (SecurityException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Gets logger."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return logger."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Logger getLogger() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return logger;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 49
    }
  },
  {
    "path": "src/main/java/profile/Constants.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import ui.CommonUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * Constants used in profile package."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int AGE_LOWER_BOUND \u003d 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int AGE_UPPER_BOUND \u003d 123;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int COMMAND_ARGS_INDEX \u003d 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int COMMAND_SPLIT_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int COMMAND_TYPE_INDEX \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_WORD_ADD \u003d \"add\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_WORD_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_WORD_EXIT \u003d \"exit\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String COMMAND_WORD_VIEW \u003d \"view\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String DATA_FILE \u003d \"profile.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String DATA_FOLDER \u003d \"saves\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String EMPTY_STRING \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int EXAMPLE_AGE \u003d 30;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String EXAMPLE_BMI \u003d \"32.0 (Obesity Class 1)\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final double EXAMPLE_EXPECTED_WEIGHT \u003d 100;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int EXAMPLE_HEIGHT \u003d 188;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String EXAMPLE_NAME \u003d \"Schwarzenegger\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final double EXAMPLE_WEIGHT \u003d 113;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String GREEDY_WHITE_SPACE \u003d \"\\\\s+\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int HEIGHT_LOWER_BOUND \u003d 63;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final int HEIGHT_UPPER_BOUND \u003d 231;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_ADD_TITLE \u003d \"Please enter your details to add a new profile.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_CREATE_PROFILE_ACK \u003d \"Got it. Here\u0027s a confirmation of your profile:\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + CommonUi.LS + \"%s\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_DELETE_PROFILE \u003d \"I\u0027ve deleted your profile.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_EXIT_PROFILE \u003d \"Exiting Profile Session...\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_PROFILE_EXIST \u003d \"There\u0027s currently a profile in the database. \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + \"Please delete it using \\\"delete\\\" command before adding a new one.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_PROFILE_NOT_EXIST \u003d \"There\u0027s no profile to %s. \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + \"Please add a new one using \\\"add\\\" command :D\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_VIEW_PROFILE \u003d \"Here\u0027s your profile:\" + CommonUi.LS + \"%s\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"Hi %s! How can I help you with your profile? :D\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String PROFILE_FOLDER \u003d \"profile\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String PROFILE_STRING_REPRESENTATION \u003d \"\\tName: %s\" + CommonUi.LS + \"\\tAge: %d\" + CommonUi.LS"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + \"\\tHeight: %d cm\" + CommonUi.LS + \"\\tWeight: %.1f kg\" + CommonUi.LS + \"\\tExpected Weight: %.1f kg\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + CommonUi.LS + \"\\tYour BMI: %s\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String EXAMPLE_PROFILE_STRING \u003d String.format(PROFILE_STRING_REPRESENTATION, EXAMPLE_NAME,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            EXAMPLE_AGE, EXAMPLE_HEIGHT, EXAMPLE_WEIGHT, EXAMPLE_EXPECTED_WEIGHT, EXAMPLE_BMI);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final Path PATH_TO_PROFILE_FOLDER \u003d Paths.get(PROJECT_ROOT, DATA_FOLDER, PROFILE_FOLDER);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final Path PATH_TO_PROFILE_FILE \u003d Paths.get(PROJECT_ROOT, DATA_FOLDER, PROFILE_FOLDER, DATA_FILE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String QUESTION_AGE \u003d \"How old are you?\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String QUESTION_EXPECTED_WEIGHT \u003d \"What\u0027s your expected weight in kilograms?\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String QUESTION_HEIGHT \u003d \"What\u0027s your height in centimeters?\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String QUESTION_NAME \u003d \"It seems like you\u0027re new to the Schwarzenegger. How should I call you?\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String QUESTION_WEIGHT \u003d \"What\u0027s your weight in kilograms?\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String SAD_FACE \u003d \":(  OOPS!!! \";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_WORD \u003d SAD_FACE + \"Sorry, but I don\u0027t know what that means.\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_INVALID_SAVE_FORMAT \u003d SAD_FACE + \"Save format in \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + \"data\\\\profile\\\\profile.txt is invalid.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_INVALID_AGE \u003d String.format("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            SAD_FACE + \"Please input an integer from %d to %d for age.\", AGE_LOWER_BOUND, AGE_UPPER_BOUND);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_INVALID_HEIGHT \u003d String.format("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            SAD_FACE + \"Please input an integer from %d to %d for height.\", HEIGHT_LOWER_BOUND, HEIGHT_UPPER_BOUND);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_LOADING_ERROR \u003d SAD_FACE + \"An error has occurred while loading data.\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + CommonUi.LS + \"%s\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_SAVING_ERROR \u003d SAD_FACE + \"An error has occurred while saving data.\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + CommonUi.LS + \"%s\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_REDUNDANT_PARAM \u003d SAD_FACE + \"%s command does not take parameters.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final double WEIGHT_LOWER_BOUND \u003d 2.1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final double WEIGHT_UPPER_BOUND \u003d 635;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String MESSAGE_INVALID_WEIGHT \u003d String.format("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            SAD_FACE + \"Please input a number from %.1f to %.1f for weight.\", WEIGHT_LOWER_BOUND, WEIGHT_UPPER_BOUND);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 77
    }
  },
  {
    "path": "src/main/java/profile/Profile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.PROFILE_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.parser.ProfileParser.checkValidProfile;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A class that manages user profile."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Profile {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected int age;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected int height;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected double weight;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected double expectedWeight;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public transient boolean isDeleted;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs Profile object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param name User\u0027s name."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param age User\u0027s age."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param height User\u0027s height in centimeters."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param weight User\u0027s weight in kilograms."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param expectedWeight User\u0027s expected weight in kilograms."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Profile(String name, int age, int height, double weight, double expectedWeight) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.age \u003d age;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.height \u003d height;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.expectedWeight \u003d expectedWeight;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        isDeleted \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Overrides toString method of class Object to get string presentation of Profile object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return String presentation of Profile object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        assert checkValidProfile(this) : \"Profile is invalid\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return String.format(PROFILE_STRING_REPRESENTATION, getName(), getAge(), getHeight(), getWeight(),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                getExpectedWeight(), getBmiClassification());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Gets user\u0027s name."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return User\u0027s name."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Gets user\u0027s age."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return User\u0027s age."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public int getAge() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return age;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Gets user\u0027s height."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return User\u0027s height."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public int getHeight() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return height;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Gets user\u0027s weight."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return User\u0027s weight."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public double getWeight() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return weight;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Gets user\u0027s expected weight."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return User\u0027s expected weight."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public double getExpectedWeight() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return expectedWeight;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Gets user\u0027s bmi index and classification."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return User\u0027s bmi index and classification."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getBmiClassification() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String classification;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        double bmiIndex \u003d weight / Math.pow((double) height / 100, 2);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (bmiIndex \u003c 18.5) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            classification \u003d \"Underweight\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else if (bmiIndex \u003c\u003d 24.9) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            classification \u003d \"Normal weight\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else if (bmiIndex \u003c\u003d 29.9) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            classification \u003d \"Overweight\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else if (bmiIndex \u003c\u003d 34.9) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            classification \u003d \"Obesity Class 1\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else if (bmiIndex \u003c\u003d 39.9) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            classification \u003d \"Obesity Class 2\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            classification \u003d \"Extreme Obesity Class 3\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return String.format(\"%.1f (%s)\", bmiIndex, classification);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 118
    }
  },
  {
    "path": "src/main/java/profile/ProfileSession.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import logger.SchwarzeneggerLogger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.profile.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.profile.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.profile.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.profile.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.ExceptionHandler;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.SchwarzeneggerException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import profile.parser.ProfileParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import storage.profile.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import ui.profile.ProfileUi;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A class that is responsible for interacting with user when he/she enters Profile Session."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class ProfileSession {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public boolean hasExit;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private ProfileUi profileUi;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private ProfileParser profileParser;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private Profile profile;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private ExceptionHandler exceptionHandler;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private Logger logger;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs ProfileManager object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param schwarzeneggerLogger Logger to record of information during program execution."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public ProfileSession(SchwarzeneggerLogger schwarzeneggerLogger) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            logger \u003d schwarzeneggerLogger.getLogger();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            logger.log(Level.INFO, \"initialising ProfileSession object\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            hasExit \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            profileUi \u003d new ProfileUi();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            storage \u003d new Storage(logger);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            profileParser \u003d new ProfileParser(logger);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            exceptionHandler \u003d new ExceptionHandler();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            profile \u003d storage.loadData(profileUi);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            if (!storage.getHasExistingProfile()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                logger.log(Level.INFO, \"getting first time configuration for user profile\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                profile \u003d profileUi.getProfileConfig();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                storage.saveData(profile);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (SchwarzeneggerException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            logger.log(Level.WARNING, \"processing SchwarzeneggerException\", e);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            profileUi.showToUser(e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            logger.log(Level.WARNING, \"processing uncaught exception\", e);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            profileUi.showToUser(e.toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Runs Profile Session."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        runCommandLoop();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Starts up Profile Session with welcome message."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        logger.log(Level.INFO, \"starting profile session\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        profileUi.greetUser(profile.getName());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Gets user\u0027s command and executes repeatedly until user requests to exit Profile Session."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private void runCommandLoop() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        logger.log(Level.INFO, \"executing profile session loop\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                String userCommand \u003d profileUi.getCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                command \u003d profileParser.parseCommand(userCommand);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                CommandResult result \u003d command.execute(profile, storage);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                profileUi.showToUser(result.toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                if (profile.isDeleted \u0026\u0026 AddCommand.isAddCommand(command)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    profile \u003d profileUi.getProfileConfig();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    storage.saveData(profile);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } catch (SchwarzeneggerException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                logger.log(Level.WARNING, \"processing SchwarzeneggerException\", e);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                profileUi.showToUser(exceptionHandler.handleCheckedExceptions(e));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                logger.log(Level.WARNING, \"processing uncaught exception\", e);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                profileUi.showToUser(exceptionHandler.handleUncheckedExceptions(e));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } while (!ExitCommand.isExit(command));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        logger.log(Level.INFO, \"exiting profile session loop\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Sets hasExit to true to indicate user has requested to exit ProfileSession."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        logger.log(Level.INFO, \"exiting profile session\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        hasExit \u003d true;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 113
    }
  },
  {
    "path": "src/main/java/profile/parser/ProfileParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package profile.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import profile.Profile;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.profile.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.profile.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.profile.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.profile.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.profile.ViewCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.profile.InvalidCommandWordException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.profile.RedundantParamException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.AGE_LOWER_BOUND;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.AGE_UPPER_BOUND;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.COMMAND_ARGS_INDEX;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.COMMAND_SPLIT_LIMIT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.COMMAND_TYPE_INDEX;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.COMMAND_WORD_ADD;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.COMMAND_WORD_DELETE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.COMMAND_WORD_EXIT;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.COMMAND_WORD_VIEW;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.EMPTY_STRING;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.GREEDY_WHITE_SPACE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.HEIGHT_LOWER_BOUND;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.HEIGHT_UPPER_BOUND;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.WEIGHT_LOWER_BOUND;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.WEIGHT_UPPER_BOUND;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A class that deals with making sense of user\u0027s command inside Profile Session."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class ProfileParser {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private Logger logger;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs ProfileParser object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param logger Logger to record of information during program execution."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public ProfileParser(Logger logger) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.logger \u003d logger;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Parses and returns the Command associated with the user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param userInputString User\u0027s raw input string."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Associated command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws InvalidCommandWordException If command word is invalid."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws RedundantParamException If redundant parameters are provided."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Command parseCommand(String userInputString) throws InvalidCommandWordException, RedundantParamException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String[] commandTypeAndParams \u003d splitCommandWordAndArgs(userInputString);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String commandType \u003d commandTypeAndParams[COMMAND_TYPE_INDEX].toLowerCase();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String commandArgs \u003d commandTypeAndParams[COMMAND_ARGS_INDEX];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_WORD_ADD:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new AddCommand(commandArgs, logger);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_WORD_DELETE:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new DeleteCommand(commandArgs, logger);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_WORD_VIEW:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new ViewCommand(commandArgs, logger);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        case COMMAND_WORD_EXIT:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return new ExitCommand(commandArgs, logger);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new InvalidCommandWordException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Splits raw user\u0027s input into command word and command arguments string."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param rawUserInput User\u0027s raw input."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Size 2 array; first element is the command type and second element is the arguments string."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private String[] splitCommandWordAndArgs(String rawUserInput) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String[] split \u003d rawUserInput.trim().split(GREEDY_WHITE_SPACE,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                COMMAND_SPLIT_LIMIT);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return split.length \u003d\u003d COMMAND_SPLIT_LIMIT ? split : new String[]{split[COMMAND_TYPE_INDEX], EMPTY_STRING};"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Verifies if user\u0027s input when creating profile is valid."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param profile User Profile object."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Whether input profile is valid."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static boolean checkValidProfile(Profile profile) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return (checkValidName(profile.getName())"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                \u0026\u0026 checkValidAge(profile.getAge())"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                \u0026\u0026 checkValidHeight(profile.getHeight())"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                \u0026\u0026 checkValidWeight(profile.getWeight())"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                \u0026\u0026 checkValidWeight(profile.getExpectedWeight()));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Verifies if user\u0027s input name is not empty string."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param name User\u0027s input name."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Whether input name is valid."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static boolean checkValidName(String name) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return !name.isEmpty();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Verifies if user\u0027s input age is in the valid range"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * (between {@link AGE_LOWER_BOUND} and {@link AGE_UPPER_BOUND} inclusive)."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param age User\u0027s input age."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Whether input age is valid."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static boolean checkValidAge(int age) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return (age \u003e\u003d AGE_LOWER_BOUND \u0026\u0026 age \u003c\u003d AGE_UPPER_BOUND);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Verifies if user\u0027s input height is in the valid range"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * (between {@link HEIGHT_LOWER_BOUND} and {@link HEIGHT_UPPER_BOUND} inclusive)."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param height User\u0027s input height."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Whether input height is valid."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static boolean checkValidHeight(int height) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return (height \u003e\u003d HEIGHT_LOWER_BOUND \u0026\u0026 height \u003c\u003d HEIGHT_UPPER_BOUND);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Verifies if user\u0027s input weight is in the valid range"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * (between {@link WEIGHT_LOWER_BOUND} and {@link WEIGHT_UPPER_BOUND} inclusive)."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param weight User\u0027s input weight."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Whether input weight is valid."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static boolean checkValidWeight(double weight) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return (weight \u003e\u003d WEIGHT_LOWER_BOUND \u0026\u0026 weight \u003c\u003d WEIGHT_UPPER_BOUND);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 141
    }
  },
  {
    "path": "src/main/java/seedu/duke/Constant.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class Constant {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static final String WORKOUTSESSIONHISTORY \u003d \"saves/workout/history.json\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static final String WORKOUTSESSIONFOLDER \u003d \"saves/workout/workoutSession/\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static final String DIETSESSIONHISTORY \u003d \"saves/diet/history.json\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static final String DIETSESSIONFOLDER \u003d \"saves/diet/dietSession/\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String LOG_FILE_PATH \u003d \"logs/SchwarzeneggerLogs.log\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 8,
      "tienkhoa16": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import diet.dietmanager.DietManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import ui.diet.dietmanager.DietManagerUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import logger.SchwarzeneggerLogger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import profile.ProfileSession;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import workout.workoutmanager.WorkoutManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * The Schwarzenegger program implements an application that keeps track of the user\u0027s gym and diet record."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private final DietManagerUi dietManagerUI;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final DietManager dietManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private SchwarzeneggerLogger schwarzeneggerLogger;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        dietManagerUI \u003d new DietManagerUi();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        dietManager \u003d new DietManager();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        schwarzeneggerLogger \u003d new SchwarzeneggerLogger();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param args Unused in Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Runs Schwarzenegger."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"Greetings from Schwarzenegger!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String response \u003d dietManagerUI.getInput();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        while (!response.equals(\"exit\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            if (response.equals(\"diet\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                dietManager.start();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            if (response.equals(\"profile\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                System.out.println(\"Entering Profile Session...\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                ProfileSession profileSession \u003d new ProfileSession(schwarzeneggerLogger);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                while (!profileSession.hasExit) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    profileSession.run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            if (response.equals(\"workout\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                System.out.println(\"Entering Workout Session...\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "                WorkoutManager workoutManager \u003d new WorkoutManager(schwarzeneggerLogger);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                workoutManager.start();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            response \u003d dietManagerUI.getInput();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"Bye, you have exited the Schwarzenegger.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 26,
      "tienkhoa16": 26,
      "wgzesg": 1,
      "-": 10
    }
  },
  {
    "path": "src/main/java/storage/RuntimeTypeAdapterFactory.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * Copyright (C) 2011 Google Inc."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *      http://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.JsonElement;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.JsonObject;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.JsonParseException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.JsonPrimitive;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.TypeAdapter;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.TypeAdapterFactory;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.internal.Streams;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.stream.JsonReader;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.stream.JsonWriter;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsk612"
        },
        "content": "/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * Adapts values whose runtime type may differ from their declaration type. This"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * is necessary when a field\u0027s type is not the same type that GSON should create"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * when deserializing that field. For example, consider these types:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   abstract class Shape {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     int x;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     int y;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   class Circle extends Shape {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     int radius;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   class Rectangle extends Shape {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     int width;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     int height;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   class Diamond extends Shape {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     int width;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     int height;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   class Drawing {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     Shape bottomShape;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     Shape topShape;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * }\u003c/pre\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * \u003cp\u003eWithout additional type information, the serialized JSON is ambiguous. Is"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * the bottom shape in this drawing a rectangle or a diamond? \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     \"bottomShape\": {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"width\": 10,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"height\": 5,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"x\": 0,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"y\": 0"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     },"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     \"topShape\": {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"radius\": 2,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"x\": 4,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"y\": 1"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   }}\u003c/pre\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * This class addresses this problem by adding type information to the"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * serialized JSON and honoring that type information when the JSON is"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * deserialized: \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     \"bottomShape\": {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"type\": \"Diamond\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"width\": 10,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"height\": 5,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"x\": 0,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"y\": 0"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     },"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     \"topShape\": {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"type\": \"Circle\","
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"radius\": 2,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"x\": 4,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \"y\": 1"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *     }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   }}\u003c/pre\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * Both the type field name ({@code \"type\"}) and the type labels ({@code"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * \"Rectangle\"}) are configurable."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * \u003ch3\u003eRegistering Types\u003c/h3\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * Create a {@code RuntimeTypeAdapterFactory} by passing the base type and type field"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * name to the {@link #of} factory method. If you don\u0027t supply an explicit type"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * field name, {@code \"type\"} will be used. \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   RuntimeTypeAdapterFactory\u003cShape\u003e shapeAdapterFactory"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       \u003d RuntimeTypeAdapterFactory.of(Shape.class, \"type\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * }\u003c/pre\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * Next register all of your subtypes. Every subtype must be explicitly"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * registered. This protects your application from injection attacks. If you"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * don\u0027t supply an explicit type label, the type\u0027s simple name will be used."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   shapeAdapterFactory.registerSubtype(Rectangle.class, \"Rectangle\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   shapeAdapterFactory.registerSubtype(Circle.class, \"Circle\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   shapeAdapterFactory.registerSubtype(Diamond.class, \"Diamond\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * }\u003c/pre\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * Finally, register the type adapter factory in your application\u0027s GSON builder:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   Gson gson \u003d new GsonBuilder()"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       .registerTypeAdapterFactory(shapeAdapterFactory)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       .create();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * }\u003c/pre\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * Like {@code GsonBuilder}, this API supports chaining: \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   RuntimeTypeAdapterFactory\u003cShape\u003e shapeAdapterFactory \u003d RuntimeTypeAdapterFactory.of(Shape.class)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       .registerSubtype(Rectangle.class)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       .registerSubtype(Circle.class)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *       .registerSubtype(Diamond.class);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * }\u003c/pre\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * \u003ch3\u003eSerialization and deserialization\u003c/h3\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * In order to serialize and deserialize a polymorphic object,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * you must specify the base type explicitly."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   Diamond diamond \u003d new Diamond();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   String json \u003d gson.toJson(diamond, Shape.class);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * }\u003c/pre\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * And then:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * \u003cpre\u003e   {@code"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zsk612"
        },
        "content": " *   Shape shape \u003d gson.fromJson(json, Shape.class);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * }\u003c/pre\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zsk612"
        },
        "content": " */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public final class RuntimeTypeAdapterFactory\u003cT\u003e implements TypeAdapterFactory {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final Class\u003c?\u003e baseType;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final String typeFieldName;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final Map\u003cString, Class\u003c?\u003e\u003e labelToSubtype \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final Map\u003cClass\u003c?\u003e, String\u003e subtypeToLabel \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final boolean maintainType;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private RuntimeTypeAdapterFactory(Class\u003c?\u003e baseType, String typeFieldName, boolean maintainType) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        if (typeFieldName \u003d\u003d null || baseType \u003d\u003d null) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.baseType \u003d baseType;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.typeFieldName \u003d typeFieldName;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.maintainType \u003d maintainType;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * Creates a new runtime type adapter using for {@code baseType} using {@code"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * typeFieldName} as the type field name. Type field names are case sensitive."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * {@code maintainType} flag decide if the type will be stored in pojo or not."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static \u003cT\u003e RuntimeTypeAdapterFactory\u003cT\u003e of(Class\u003cT\u003e baseType, String typeFieldName, boolean maintainType) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return new RuntimeTypeAdapterFactory\u003c\u003e(baseType, typeFieldName, maintainType);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * Creates a new runtime type adapter using for {@code baseType} using {@code"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * typeFieldName} as the type field name. Type field names are case sensitive."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static \u003cT\u003e RuntimeTypeAdapterFactory\u003cT\u003e of(Class\u003cT\u003e baseType, String typeFieldName) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return new RuntimeTypeAdapterFactory\u003c\u003e(baseType, typeFieldName, false);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * Creates a new runtime type adapter for {@code baseType} using {@code \"type\"} as"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * the type field name."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static \u003cT\u003e RuntimeTypeAdapterFactory\u003cT\u003e of(Class\u003cT\u003e baseType) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return new RuntimeTypeAdapterFactory\u003c\u003e(baseType, \"type\", false);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * Registers {@code type} identified by {@code label}. Labels are case"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * sensitive."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * @throws IllegalArgumentException if either {@code type} or {@code label}"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     *     have already been registered on this type adapter."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public RuntimeTypeAdapterFactory\u003cT\u003e registerSubtype(Class\u003c? extends T\u003e type, String label) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        if (type \u003d\u003d null || label \u003d\u003d null) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        if (subtypeToLabel.containsKey(type) || labelToSubtype.containsKey(label)) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            throw new IllegalArgumentException(\"types and labels must be unique\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        labelToSubtype.put(label, type);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        subtypeToLabel.put(type, label);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * Registers {@code type} identified by its {@link Class#getSimpleName simple"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * name}. Labels are case sensitive."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * @throws IllegalArgumentException if either {@code type} or its simple name"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     *     have already been registered on this type adapter."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public RuntimeTypeAdapterFactory\u003cT\u003e registerSubtype(Class\u003c? extends T\u003e type) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return registerSubtype(type, type.getSimpleName());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public \u003cR\u003e TypeAdapter\u003cR\u003e create(Gson gson, TypeToken\u003cR\u003e type) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        if (type.getRawType() !\u003d baseType) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        final Map\u003cString, TypeAdapter\u003c?\u003e\u003e labelToDelegate"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        final Map\u003cClass\u003c?\u003e, TypeAdapter\u003c?\u003e\u003e subtypeToDelegate"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        for (Map.Entry\u003cString, Class\u003c?\u003e\u003e entry : labelToSubtype.entrySet()) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            TypeAdapter\u003c?\u003e delegate \u003d gson.getDelegateAdapter(this,"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                    TypeToken.get(entry.getValue()));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            labelToDelegate.put(entry.getKey(), delegate);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            subtypeToDelegate.put(entry.getValue(), delegate);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return new TypeAdapter\u003cR\u003e() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            @Override public R read(JsonReader in) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                JsonElement jsonElement \u003d Streams.parse(in);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                JsonElement labelJsonElement;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                if (maintainType) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                    labelJsonElement \u003d jsonElement.getAsJsonObject().get(typeFieldName);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                    labelJsonElement \u003d jsonElement.getAsJsonObject().remove(typeFieldName);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                if (labelJsonElement \u003d\u003d null) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                    throw new JsonParseException(\"cannot deserialize \" + baseType"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                            + \" because it does not define a field named \" + typeFieldName);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                String label \u003d labelJsonElement.getAsString();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                @SuppressWarnings(\"unchecked\") // registration requires that subtype extends T"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                TypeAdapter\u003cR\u003e delegate \u003d (TypeAdapter\u003cR\u003e) labelToDelegate.get(label);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                if (delegate \u003d\u003d null) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                    throw new JsonParseException(\"cannot deserialize \""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                            + baseType + \" subtype named \""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                            + label + \"; did you forget to register a subtype?\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                return delegate.fromJsonTree(jsonElement);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            @Override public void write(JsonWriter out, R value) throws IOException {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                Class\u003c?\u003e srcType \u003d value.getClass();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                final String label \u003d subtypeToLabel.get(srcType);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                @SuppressWarnings(\"unchecked\") // registration requires that subtype extends T"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                TypeAdapter\u003cR\u003e delegate \u003d (TypeAdapter\u003cR\u003e) subtypeToDelegate.get(srcType);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                if (delegate \u003d\u003d null) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                    throw new JsonParseException(\"cannot serialize \" + srcType.getName()"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                            + \"; did you forget to register a subtype?\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                JsonObject jsonObject \u003d delegate.toJsonTree(value).getAsJsonObject();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                if (maintainType) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                    Streams.write(jsonObject, out);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                JsonObject clone \u003d new JsonObject();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                if (jsonObject.has(typeFieldName)) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                    throw new JsonParseException(\"cannot serialize \" + srcType.getName()"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                            + \" because it already defines a field named \" + typeFieldName);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                clone.add(typeFieldName, new JsonPrimitive(label));"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                for (Map.Entry\u003cString, JsonElement\u003e e : jsonObject.entrySet()) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                    clone.add(e.getKey(), e.getValue());"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                Streams.write(clone, out);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }.nullSafe();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 280
    }
  },
  {
    "path": "src/main/java/storage/diet/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package storage.diet;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.stream.JsonReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import diet.dietsession.DietSession;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import diet.dietsession.Food;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.Reader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * This class holds the data loaded during runtime and read and writes to the local storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private static final String FILEPATH \u003d \"saves/diet/\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private static Gson gson;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private static File file \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"java.storage.diet\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * Initialise the database with locally stored data."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * If the local file is not found. It creates the relevant file and folder."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * @throws IOException If director or file cannot be created."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void init(String filePath) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        logger.log(Level.INFO, \"creating diet session save file\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        gson \u003d new GsonBuilder().setPrettyPrinting()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                .create();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        //creates the file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String fileName \u003d \"saves/diet/\" + filePath + \".json\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        file \u003d new File(fileName);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * Write the content in TaskList to a local file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * @throws IOException If director or file cannot be created."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void writeToStorage(String filePath, ArrayList\u003cFood\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        logger.log(Level.INFO, \"saving file to location\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        FileWriter writer \u003d new FileWriter(file.getPath());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        gson.toJson(taskList, writer);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        logger.log(Level.INFO, \"file saving complete\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * Write the content in dietSession to a local file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * If the local file is not found. It creates the relevant file and folder."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * @throws IOException If director or file cannot be created."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void writeToStorageDietSession(String filePath, DietSession dietSession) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        logger.log(Level.INFO, \"saving file to location\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        File file \u003d new File(FILEPATH + filePath + \".json\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        FileWriter writer \u003d new FileWriter(file.getPath());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        gson.toJson(dietSession, writer);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        logger.log(Level.INFO, \"file saving complete\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void readFileContents(String filePath, ArrayList\u003cFood\u003e taskList) throws FileNotFoundException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Type taskListType \u003d new TypeToken\u003cArrayList\u003cFood\u003e\u003e() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }.getType();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        JsonReader reader \u003d new JsonReader(new FileReader(file.getPath()));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        taskList.addAll(gson.fromJson(reader, taskListType));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public DietSession readDietSession(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        File file \u003d new File(System.getProperty(\"user.dir\") + \"/\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                + FILEPATH + filePath);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        DietSession dietSession;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Reader reader \u003d new FileReader(file.getPath());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        dietSession \u003d gson.fromJson(reader, DietSession.class);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return dietSession;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 99,
      "CFZeon": 4
    }
  },
  {
    "path": "src/main/java/storage/profile/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package storage.profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import com.google.gson.JsonSyntaxException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import com.google.gson.stream.JsonReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import profile.Profile;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.profile.InvalidSaveFormatException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.profile.LoadingException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.profile.SavingException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import ui.profile.ProfileUi;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.EMPTY_STRING;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.PATH_TO_PROFILE_FILE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.PATH_TO_PROFILE_FOLDER;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.parser.ProfileParser.checkValidProfile;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A class that saves and loads user profile data on local hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private boolean hasExistingProfile;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private Gson gson;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private Logger logger;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Constructs Storage object where data file is assumed to be existed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param logger Logger to record of information during program execution."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Storage(Logger logger) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        this.logger \u003d logger;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        hasExistingProfile \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Returns boolean stating if data file is existed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Boolean stating if data file is existed."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public boolean getHasExistingProfile() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return hasExistingProfile;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Loads user profile from data file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param profileUi Ui to show exception message to user if any."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return User profile."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws LoadingException If there are failed or interrupted I/O operations."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Profile loadData(ProfileUi profileUi) throws LoadingException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        Profile profile \u003d null;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (Files.exists(PATH_TO_PROFILE_FOLDER)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                logger.log(Level.INFO, \"starting to decode profile data\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                profile \u003d decodeProfile(PATH_TO_PROFILE_FILE.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                assert profile !\u003d null : \"profile should not be null\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                logger.log(Level.INFO, \"finishing profile data decoding\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                createDataFile(PATH_TO_PROFILE_FILE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } catch (InvalidSaveFormatException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                profileUi.showToUser(e.getMessage());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                hasExistingProfile \u003d false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            createDataFolder(PATH_TO_PROFILE_FOLDER);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            createDataFile(PATH_TO_PROFILE_FILE);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return profile;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Decodes user profile save data to a profile object."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param filePath Path to data file."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Profile object."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws InvalidSaveFormatException If the saving format is invalid."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws FileNotFoundException If data file is not found."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Profile decodeProfile(String filePath) throws InvalidSaveFormatException, FileNotFoundException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            logger.log(Level.INFO, \"decoding profile data\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Type profileType \u003d new TypeToken\u003cProfile\u003e() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }.getType();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            JsonReader reader \u003d new JsonReader(new FileReader(file.getPath()));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Profile profile \u003d gson.fromJson(reader, profileType);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            if (profile \u003d\u003d null || !checkValidProfile(profile)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                logger.log(Level.WARNING, \"processing invalid profile data\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                throw new InvalidSaveFormatException();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            return profile;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (JsonSyntaxException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            logger.log(Level.WARNING, \"processing invalid syntax in data file\", e);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new InvalidSaveFormatException();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates data file."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param pathToDataFile Path to data file."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws LoadingException If there are failed or interrupted I/O operations."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private void createDataFile(Path pathToDataFile) throws LoadingException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            hasExistingProfile \u003d false;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Files.createFile(pathToDataFile);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            logger.log(Level.INFO, \"created data/profile/profile.txt\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new LoadingException(e.getMessage());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Creates data folder."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param pathToDataFolder Path to data folder."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws LoadingException If there are failed or interrupted I/O operations."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private void createDataFolder(Path pathToDataFolder) throws LoadingException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            Files.createDirectories(pathToDataFolder);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            logger.log(Level.INFO, \"created data/profile\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new LoadingException(e.getMessage());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Saves user profile data to hard disk after profile changes."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param profile User\u0027s profile."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws SavingException If there are failed or interrupted I/O operations."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public void saveData(Profile profile) throws SavingException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            logger.log(Level.INFO, \"starting to save profile data\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            FileWriter fw \u003d new FileWriter(PATH_TO_PROFILE_FILE.toString());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            if (profile.isDeleted) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                fw.write(EMPTY_STRING);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                gson.toJson(profile, fw);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                fw.flush();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            logger.log(Level.INFO, \"finishing data saving\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            logger.log(Level.WARNING, \"processing IOException while saving data\", e);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            throw new SavingException(e.getMessage());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 173
    }
  },
  {
    "path": "src/main/java/storage/workout/PastWorkoutSessionRecord.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package storage.workout;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class PastWorkoutSessionRecord implements Comparable\u003cPastWorkoutSessionRecord\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final LocalDateTime creationTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private LocalDateTime lastEditTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    private final ArrayList\u003cString\u003e tags;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public PastWorkoutSessionRecord(String filePath, ArrayList\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        creationTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        lastEditTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public PastWorkoutSessionRecord(String filePath, LocalDateTime creationTime,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "                                    LocalDateTime lastEditTime, ArrayList\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.creationTime \u003d creationTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.lastEditTime \u003d lastEditTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return \"Session created on \" + creationTime.toLocalDate()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                + \", last editted on \" + lastEditTime.toLocalDate();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public int compareTo(PastWorkoutSessionRecord o) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        if (creationTime.isBefore(o.creationTime)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public PastWorkoutSessionRecord edit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return new PastWorkoutSessionRecord(filePath, creationTime, LocalDateTime.now(), this.tags);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 29,
      "wgzesg": 20
    }
  },
  {
    "path": "src/main/java/storage/workout/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package storage.workout;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.stream.JsonReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import workout.workoutsession.exercise.Exercise;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": " * This class holds the data loaded during runtime and read and writes to the local storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private static final String FILEPATH \u003d \"./saves/workout\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    private static Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private static File file \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"java.storage.workout\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * Initialise the database with locally stored data."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * If the local file is not found. It creates the relevant file and folder."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * @throws IOException If director or file cannot be created."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void initialise(String filePath) throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        /*RuntimeTypeAdapterFactory\u003cTask\u003e taskAdapterFactory \u003d RuntimeTypeAdapterFactory"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                .of(Task.class, \"type\", true)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                .registerSubtype(ToDo.class, \"Todo\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                .registerSubtype(Deadline.class, \"Deadline\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                .registerSubtype(Event.class, \"Event\");*/"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        gson \u003d new GsonBuilder().setPrettyPrinting()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                .create();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        //creates the file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String fileName \u003d \"saves/workout/\" + Integer.toString(1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        file \u003d new File(fileName);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * Write the content in TaskList to a local file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * If the local file is not found. It creates the relevant file and folder."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * @throws IOException If director or file cannot be created."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public void writeToStorage(String filePath, ArrayList\u003cExercise\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        FileWriter writer \u003d new FileWriter(file.getPath());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        gson.toJson(taskList, writer);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public void readFileContents(String filePath, ArrayList\u003cExercise\u003e taskList) throws FileNotFoundException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        Type taskListType \u003d new TypeToken\u003cArrayList\u003cExercise\u003e\u003e() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }.getType();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        JsonReader reader \u003d new JsonReader(new FileReader(file.getPath()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            taskList.addAll(gson.fromJson(reader, taskListType));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            System.out.printf(\"\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 67,
      "yujinyang1998": 13
    }
  },
  {
    "path": "src/main/java/storage/workout/WorkOutManagerStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package storage.workout;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import com.google.gson.stream.JsonReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import seedu.duke.Constant;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import ui.workout.workoutmanager.WorkoutManagerUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class WorkOutManagerStorage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * This list contains all the past record files\u0027 file name and some other relevant info."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * It is saved in a file called history.json."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * Each time it initilises, it will read history.json file and save it to this list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * Each time adding/removing record will update this list and write again to local storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private static List\u003cPastWorkoutSessionRecord\u003e pastFiles;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private static Gson gson;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * This variable keeps track of file name."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * It should be replaced with something else,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * TODO:e.g. a hashcode that can identify each file distinctly."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private static int recordCount \u003d 0;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void init() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        readPastRecords();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void list(String[] args) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"the length of list is \" + pastFiles.size());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        for (PastWorkoutSessionRecord wsr : pastFiles) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.print(index + \". \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(wsr);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            index +\u003d 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public static String add(ArrayList\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String newFilePath \u003d Constant.WORKOUTSESSIONFOLDER + recordCount + \".json\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        int code \u003d createfile(newFilePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        PastWorkoutSessionRecord newRecord \u003d new PastWorkoutSessionRecord(newFilePath, tags);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        pastFiles.add(newRecord);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        recordCount \u003d pastFiles.size();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        writePastRecords();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return  newFilePath;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void delete(int index) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        PastWorkoutSessionRecord deletedRecord;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            deletedRecord \u003d pastFiles.get(index - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            pastFiles.remove(index - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"The index is out of bound!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        File myFile \u003d new File(deletedRecord.getFilePath());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        myFile.delete();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        recordCount \u003d pastFiles.size();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        // todo: actually delete the file in the folder based on"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        // the information in the deletedRecord"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        writePastRecords();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public static String edit(int index) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        PastWorkoutSessionRecord editedRecord;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        editedRecord \u003d pastFiles.get(index - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        PastWorkoutSessionRecord newRecord \u003d editedRecord.edit();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        pastFiles.set(index - 1, newRecord);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        recordCount \u003d pastFiles.size();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        // todo: actually delete the file in the folder based on"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        // the information in the deletedRecord"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        writePastRecords();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return newRecord.getFilePath();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public static void clear() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        while (pastFiles.size() !\u003d 0) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            delete(1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private static void readPastRecords() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        File file \u003d new File(Constant.WORKOUTSESSIONHISTORY);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        WorkoutManagerUi.printStartLoading();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Type taskListType \u003d new TypeToken\u003cArrayList\u003cPastWorkoutSessionRecord\u003e\u003e(){}.getType();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            JsonReader reader \u003d new JsonReader(new FileReader(file.getPath()));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            pastFiles \u003d gson.fromJson(reader, taskListType);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            createfile(Constant.WORKOUTSESSIONHISTORY);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            pastFiles \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        recordCount \u003d pastFiles.size();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        WorkoutManagerUi.printFinishLoading();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private static void writePastRecords() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        File file \u003d new File(Constant.WORKOUTSESSIONHISTORY);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        FileWriter writer \u003d null;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            writer \u003d new FileWriter(file.getPath());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            gson.toJson(pastFiles, writer);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"Error occured when saving the progress...\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private static int createfile(String path) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        File file \u003d new File(path);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"The local storage file cannot be created at \" + path);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 114,
      "tienkhoa16": 3,
      "wgzesg": 22
    }
  },
  {
    "path": "src/main/java/ui/CommonUi.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class CommonUi {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected static final String LINE_PREFIX \u003d \"\\t \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public static final String LS \u003d System.lineSeparator() + LINE_PREFIX;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected static final String HORIZONTAL_LINE \u003d LINE_PREFIX"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    protected static final String MESSAGE_FORMAT_GENERAL \u003d HORIZONTAL_LINE + LS + \"%s\" + System.lineSeparator()"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            + HORIZONTAL_LINE + System.lineSeparator();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Shows a message to the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param result Message to be displayed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public void showToUser(String result) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        System.out.println(String.format(MESSAGE_FORMAT_GENERAL, result));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public static void printHelpFormater(String commandName, String commandFormat, String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        System.out.format(\"%-8s - %s\\n\", commandName, commandFormat);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        System.out.format(\"%-8s %s\\n\", \"\", description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 19,
      "wgzesg": 5
    }
  },
  {
    "path": "src/main/java/ui/diet/dietmanager/DietManagerUi.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package ui.diet.dietmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class DietManagerUi {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void printOpening() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"You\u0027re now in diet manager!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void printBye() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"Exiting diet manager!!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assert !in.nextLine().isEmpty();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * Extracts out date and time by looking for date strings in YYYY-MM-DD format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * @param input date string"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * @return date in MMM dd yyyy if the user inputs date in YYYY-MM-DD format;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     *     else returns original string"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * @throws DateTimeParseException if the date string input is not a valid date"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public String extractDate(String input) throws DateTimeParseException, IllegalStateException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            String dateString \u003d input.split(\"/t\")[0].split(\" \", 2)[1].trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            Pattern pattern \u003d Pattern.compile(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            Matcher matcher \u003d pattern.matcher(dateString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            boolean isValidDate \u003d matcher.find();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            String match \u003d matcher.group();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            return LocalDate.parse(match).format(DateTimeFormatter.ofPattern(\"MM-dd-yyyy\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"I do not understand your date input!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MM-dd-yyyy\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"I\u0027ve replaced it with today\u0027s date.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return dtf.format(now);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public String extractMeal(String input) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            return input.split(\"/t\")[1].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            System.out.println(\"Please specify your diet session tag, i.e. breakfast, lunch, dinner\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"Session is tagged as unspecified.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return \"unspecified\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void printStartLoading() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"Loading past diet sessions...\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void printFinishLoading() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"Loading completed!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 71,
      "tienkhoa16": 2
    }
  },
  {
    "path": "src/main/java/ui/diet/dietsession/DietSessionUi.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package ui.diet.dietsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class DietSessionUi {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void printOpening() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"Starting Diet Session!\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void printExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"you have exited Diet Session.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 17,
      "tienkhoa16": 2
    }
  },
  {
    "path": "src/main/java/ui/profile/ProfileUi.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package ui.profile;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import profile.Profile;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import profile.parser.ProfileParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import ui.CommonUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_CREATE_PROFILE_ACK;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_INVALID_AGE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_INVALID_HEIGHT;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_INVALID_WEIGHT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.MESSAGE_WELCOME;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.QUESTION_AGE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.QUESTION_EXPECTED_WEIGHT;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.QUESTION_HEIGHT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.QUESTION_NAME;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.QUESTION_WEIGHT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.SCANNER;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " * A class that deals with interactions with user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class ProfileUi extends CommonUi {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Greets user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param name User\u0027s name."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public void greetUser(String name) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        showToUser(String.format(MESSAGE_WELCOME, name));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Prompts for the command and reads the text entered by the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Full line entered by the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        System.out.print(\"\u003e\u003e\u003e\u003e\u003e \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String inputLine \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        // Silently consume all blank lines"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        while (inputLine.trim().isEmpty()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            System.out.print(\"\u003e\u003e\u003e\u003e\u003e \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            inputLine \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return inputLine;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Prompts for user profile."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return Created profile."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    public Profile getProfileConfig() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        Profile profile \u003d new Profile(getName(), getAge(), getHeight(), getWeight(false), getWeight(true));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        showToUser(String.format(MESSAGE_CREATE_PROFILE_ACK, profile.toString()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return profile;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Gets user\u0027s name for first time config."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return User\u0027s name."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private String getName() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        showToUser(QUESTION_NAME);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        return getCommand();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Gets user\u0027s age for first time config."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return User\u0027s age."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private int getAge() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int age \u003d 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                showToUser(QUESTION_AGE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                age \u003d Integer.parseInt(getCommand());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                if (!ProfileParser.checkValidAge(age)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    showToUser(MESSAGE_INVALID_AGE);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    return age;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                showToUser(MESSAGE_INVALID_AGE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Gets user\u0027s height for first time config."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return User\u0027s height."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private int getHeight() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        int height \u003d 0;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                showToUser(QUESTION_HEIGHT);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                height \u003d Integer.parseInt(getCommand());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                if (!ProfileParser.checkValidHeight(height)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    showToUser(MESSAGE_INVALID_HEIGHT);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    return height;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                showToUser(MESSAGE_INVALID_HEIGHT);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Gets user\u0027s weight for first time config."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @param isExpected If the program is getting expected or current weight of user."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @return User\u0027s expected or current weight."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    private double getWeight(boolean isExpected) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String question;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        if (isExpected) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            question \u003d QUESTION_EXPECTED_WEIGHT;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            question \u003d QUESTION_WEIGHT;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        double weight \u003d 0;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                showToUser(question);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                weight \u003d Double.parseDouble(getCommand());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                if (!ProfileParser.checkValidWeight(weight)) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    showToUser(MESSAGE_INVALID_WEIGHT);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                    return weight;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "                showToUser(MESSAGE_INVALID_WEIGHT);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 153
    }
  },
  {
    "path": "src/main/java/ui/workout/workoutmanager/WorkoutManagerUi.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package ui.workout.workoutmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class WorkoutManagerUi {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void printOpening() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"Let\u0027s manage your workout sessions!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void printBye() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"Bye!\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void printStartLoading() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"Loading history records...\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void printFinishLoading() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"Loading completed!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void printSeperationLine() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"-----------------------------------------\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void printDeleteResponse() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"You have deleted that record!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public static void printClearResponse() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        System.out.println(\"You have cleared all records!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void printStartNewSessionResponse() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"You have started a new workout session!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void printFinishNewSessionResponse() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"Congratulations! You have finished today\u0027s workout!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void commandNotFoundResponse() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"The command not recognised!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 38,
      "tienkhoa16": 2,
      "wgzesg": 4
    }
  },
  {
    "path": "src/main/java/ui/workout/workoutsession/WorkoutSessionUi.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package ui.workout.workoutsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "public class WorkoutSessionUi {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void printError() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.out.println(\"There is an error, please restart the session\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public static void addFormatError() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        System.out.println(\"Wrong format, please enter in the format: \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                + \"add [workout] /n [number of sets] /w \""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                + \"[weight]\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public static void inputNotRecognisedError() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        System.out.println(\"Command not recognised.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public static void emptyListError() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        System.out.println(\"List is empty. Please enter something.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 5,
      "yujinyang1998": 14,
      "tienkhoa16": 2
    }
  },
  {
    "path": "src/main/java/workout/workoutmanager/ExitException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package workout.workoutmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class ExitException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public ExitException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 8
    }
  },
  {
    "path": "src/main/java/workout/workoutmanager/WorkoutManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package workout.workoutmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.CommandLib;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.workout.workoutmanager.ExecutionResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import logger.SchwarzeneggerLogger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.workout.WorkOutManagerStorage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import ui.workout.workoutmanager.WorkoutManagerUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class WorkoutManager {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    private Logger logger;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final CommandLib cl;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public WorkoutManager() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        WorkOutManagerStorage.init();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        cl \u003d new CommandLib();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        cl.initWorkoutManagerCL();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public WorkoutManager(SchwarzeneggerLogger schwarzeneggerLogger) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        this.logger \u003d schwarzeneggerLogger.getLogger();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        logger.log(Level.INFO, \"initialisd workout manager command library\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        logger.log(Level.INFO, \"entered workout manager\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        WorkoutManagerUi.printOpening();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            logger.log(Level.FINE, \"received input\" + command);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            WorkoutManagerUi.printSeperationLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            String[] commParts \u003d WorkoutManagerParser.parse(command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                processCommand(commParts);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            } catch (ExitException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "                logger.log(Level.INFO, \"exiting workout manager\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            WorkoutManagerUi.printSeperationLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    private void processCommand(String[] commands) throws ExitException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Command command \u003d cl.get(commands[0]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        ExecutionResult result \u003d command.execute(Arrays.copyOfRange(commands, 1, commands.length));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        if (result \u003d\u003d ExecutionResult.OK) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            command.printResponse();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 35,
      "tienkhoa16": 5,
      "wgzesg": 20
    }
  },
  {
    "path": "src/main/java/workout/workoutmanager/WorkoutManagerParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package workout.workoutmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class WorkoutManagerParser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static String[] parse(String comm) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return comm.split(\" \");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    public static ArrayList\u003cString\u003e parseTags(String[] arr) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            if (!arr[0].equals(\"/t\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            for (int i \u003d 1; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "                if (!result.contains(arr[i])) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "                    result.add(arr[i]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 10,
      "wgzesg": 19
    }
  },
  {
    "path": "src/main/java/workout/workoutsession/WorkoutSession.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package workout.workoutsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import commands.CommandLib;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.workout.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import workout.workoutsession.exercise.Exercise;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import ui.workout.workoutsession.WorkoutSessionUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class WorkoutSession {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private String filePath \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    private boolean[] endWorkoutSession;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public ArrayList\u003cExercise\u003e exerciseList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    private transient CommandLib cl;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    private final WorkoutSessionParser parser \u003d new WorkoutSessionParser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"java.diet.workoutsession\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public WorkoutSession(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.exerciseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.endWorkoutSession \u003d new boolean[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private void setEndWorkoutSessionF() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.endWorkoutSession[0] \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     * Starts workout session."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public void workoutSessionStart() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        setEndWorkoutSessionF();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        logger.log(Level.INFO, \"starting workout session\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.cl \u003d new CommandLib();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        cl.initWorkoutSessionCL();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            storage.readFileContents(filePath, exerciseList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "            WorkoutSessionUi.printError();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        while (!endWorkoutSession[0]) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                workoutSessionProcessCommand(in.nextLine().trim());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    private void workoutSessionProcessCommand(String input) throws NullPointerException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        String[] commParts \u003d WorkoutSessionParser.workoutSessionParser(input.trim());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        Command command \u003d cl.get(commParts[0]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        command.execute(commParts, exerciseList, filePath, storage, endWorkoutSession);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 33,
      "yujinyang1998": 29,
      "tienkhoa16": 1,
      "wgzesg": 5
    }
  },
  {
    "path": "src/main/java/workout/workoutsession/WorkoutSessionParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package workout.workoutsession;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import workout.workoutsession.exercise.Exercise;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class WorkoutSessionParser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static String[] workoutSessionParser(String input) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return input.split(\" \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public static Exercise addParser(String[] input) throws NumberFormatException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        Exercise exercise \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        String[] returnString \u003d new String[4];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        for (int i \u003d 0; i \u003c returnString.length; i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            returnString[i] \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        int tracker \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        for (String s : input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            if (s.compareTo(\"/n\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                tracker \u003d 2;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            } else if (s.compareTo(\"/w\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                tracker \u003d 3;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            } else if (s.compareTo(\"add\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                tracker \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            } else if (tracker \u003d\u003d 2 || tracker \u003d\u003d 3) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                returnString[tracker] \u003d s;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                returnString[tracker] +\u003d s;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsk612"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        exercise \u003d new Exercise(returnString[1], Integer.parseInt(returnString[2]), Integer.parseInt(returnString[3]));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        return exercise;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static int deleteParser(String[] input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 27,
      "yujinyang1998": 16
    }
  },
  {
    "path": "src/main/java/workout/workoutsession/exercise/Exercise.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package workout.workoutsession.exercise;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class Exercise {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private String moveName \u003d null;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private int repetitions \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private int weight \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public Exercise(String moveName, int repetitions, int weight) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.moveName \u003d moveName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.repetitions \u003d repetitions;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.weight \u003d weight;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        return  moveName"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                + \", Repetitions:\" + repetitions"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                + \", Weight\u003d\" + weight;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 20,
      "yujinyang1998": 3
    }
  },
  {
    "path": "src/test/java/diet/DietTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "package diet;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import ui.diet.dietmanager.DietManagerUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import diet.dietsession.Food;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.diet.dietsession.FoodItemAdd;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.diet.dietsession.FoodItemDelete;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import storage.diet.Storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsk612"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsk612"
        },
        "content": "public class DietTest {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    void extractDate_dateCorrectFormat_returnsDateString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String input \u003d \"/d 2020-11-11 /t lunch\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        DietManagerUi ui \u003d new DietManagerUi();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String dateString \u003d ui.extractDate(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assertEquals(dateString, \"11-11-2020\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    void extract_dateWrongFormat_expectsException() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String input \u003d \"/d 2020-22-22 /t lunch\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        DietManagerUi ui \u003d new DietManagerUi();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assertThrows(DateTimeParseException.class, () -\u003e ui.extractDate(input));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    void extract_dateNoDate_returnsCurrentDate() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String input \u003d \"/d\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        DietManagerUi ui \u003d new DietManagerUi();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String dateString \u003d ui.extractDate(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MM-dd-yyyy\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String outputString \u003d dtf.format(now);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assertEquals(dateString, outputString);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    void extractMeal_mealCorrectFormat_returnsMealString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String input \u003d \"/d 2020-11-11 /t lunch\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        DietManagerUi ui \u003d new DietManagerUi();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String mealString \u003d ui.extractMeal(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assertEquals(mealString, \"lunch\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    void extract_dateNoMeal_returnsUnspecified() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String input \u003d \"/d 2020-11-11 /t\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        DietManagerUi ui \u003d new DietManagerUi();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String mealString \u003d ui.extractMeal(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assertEquals(mealString, \"unspecified\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    void toString_correctInput_returnsCorrectString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Food fd \u003d new Food(\"biscuit\", 400.00);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String output \u003d fd.toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assertEquals(\"biscuit with calories: 400.0\", output);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    ArrayList\u003cFood\u003e foodList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    void testAdd_correctInput_returnsMoreFood() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Command command \u003d new FoodItemAdd();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        command.execute(\"melon /c 500\", foodList, storage);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assertEquals(1, foodList.size());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    void testDelete_correctInput_returnsFewerFood() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Command command \u003d new FoodItemDelete();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        command.execute(\"1\", foodList, storage);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assertEquals(0, foodList.size());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    private static final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    public static void setUp() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    void testAdd_noCalories_returnsWarning() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Command command \u003d new FoodItemAdd();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        command.execute(\"melon\", foodList, storage);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String warning \u003d \"Please specify your food info.\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assertEquals(warning, outputStreamCaptor.toString().trim());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    void testAdd_wrongFormatForCalories_returnsWarning() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Command command \u003d new FoodItemAdd();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        command.execute(\"melon /c no calories\", foodList, storage);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String warning \u003d \"Please specify your food info.\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assertEquals(warning, outputStreamCaptor.toString().trim());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    void testDelete_IndexTooLarge_returnsWarning() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Command command \u003d new FoodItemDelete();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        command.execute(Integer.toString((foodList.size() + 4)), foodList, storage);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String warning \u003d \"Sorry, the index is not found.\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assertEquals(outputStreamCaptor.toString().trim(), warning);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    void testDelete_WrongFormatForIndex_returnsWarning() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Command command \u003d new FoodItemDelete();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        command.execute(\"a\", foodList, storage);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String warning \u003d \"Sorry, the index is not found.\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assertEquals(outputStreamCaptor.toString().trim(), warning);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    void processCommandForDietSession_WrongCommand_returnsWarning() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        Command command \u003d new FoodItemWrong();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        command.execute(\"hahaha\", foodList, null);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String warning \u003d \"I do not understand your date input!\\n\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                + \"I\u0027ve replaced it with today\u0027s date.\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                + \"Yay! You have added melon with calories: 500.0\\n\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                + \"Sorry! It seems like you\u0027ve entered an invalid command!\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assertEquals(warning, outputStreamCaptor.toString().trim());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    void processCommandForDietManager_WrongCommand_returnsWarning() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        diet.dietmanager.command.Command command \u003d new DietSessionWrong();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        command.execute(\"hahaha\", null);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        String warning \u003d \"I do not understand your date input!\\n\" +"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                \"I\u0027ve replaced it with today\u0027s date.\\n\" +"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                \"Yay! You have added melon with calories: 500.0\\n\" +"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                \"Sorry! It seems like you\u0027ve entered an invalid command!\\n\" +"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zsk612"
        },
        "content": "                \"Sorry! It seems like you\u0027ve entered an invalid command!\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zsk612"
        },
        "content": "        assertEquals(warning, outputStreamCaptor.toString().trim());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zsk612"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zsk612"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zsk612"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zsk612"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsk612": 151,
      "tienkhoa16": 8,
      "wgzesg": 1,
      "CFZeon": 2
    }
  },
  {
    "path": "src/test/java/profile/storage/StorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "package profile.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import logger.SchwarzeneggerLogger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import profile.Profile;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.profile.InvalidSaveFormatException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import exceptions.SchwarzeneggerException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import storage.profile.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import static profile.Constants.EXAMPLE_PROFILE_STRING;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Tests decodeProfile method of class Storage when data from file is valid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * @throws SchwarzeneggerException If there are exceptions while decoding data."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    void testDecodeProfile_exampleProfileData_returnsExampleProfileString() throws SchwarzeneggerException,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            FileNotFoundException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        SchwarzeneggerLogger schwarzeneggerLoggerTest \u003d new SchwarzeneggerLogger();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        Storage storage \u003d new Storage(schwarzeneggerLoggerTest.getLogger());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String inputFilePath \u003d System.getProperty(\"user.dir\") + \"/src/test/java/profile/storage/exampleProfileData.txt\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        Profile testProfile \u003d storage.decodeProfile(inputFilePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        assertEquals(EXAMPLE_PROFILE_STRING, testProfile.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     * Tests decodeProfile method of class Storage when data from file is invalid."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    void testDecodeProfile_invalidDataInput_throwsInvalidSaveFormatException() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        SchwarzeneggerLogger schwarzeneggerLoggerTest \u003d new SchwarzeneggerLogger();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        Storage storage \u003d new Storage(schwarzeneggerLoggerTest.getLogger());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        String inputFilePath \u003d System.getProperty(\"user.dir\") + \"/src/test/java/profile/storage/invalidProfileData.txt\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        assertThrows(InvalidSaveFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "            storage.decodeProfile(inputFilePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "        });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 45
    }
  },
  {
    "path": "src/test/java/profile/storage/exampleProfileData.txt",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "  \"name\": \"Schwarzenegger\","
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "  \"age\": 30,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "  \"height\": 188,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "  \"weight\": 113.0,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "  \"expectedWeight\": 100.0"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 7
    }
  },
  {
    "path": "src/test/java/profile/storage/invalidProfileData.txt",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "  \"name\": \"Schwarzenegger\","
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "  \"age\": 30,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 4
    }
  },
  {
    "path": "src/test/java/workout/workoutmanager/CommandLibTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "package workout.workoutmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import commands.CommandLib;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.workout.workoutmanager.WrongWS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.workout.workoutmanager.ByeWS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.workout.workoutmanager.DeleteWS;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.workout.workoutmanager.ListWS;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tienkhoa16"
        },
        "content": "import commands.workout.workoutmanager.NewWS;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "class CommandLibTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    void get_WorkoutManagerUnrecognisedCommand_returnNull() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        CommandLib cl \u003d new CommandLib();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        cl.initWorkoutManagerCL();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        assertTrue(cl.get(\"asdf\") instanceof WrongWS);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    void get_list_returnListCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        CommandLib cl \u003d new CommandLib();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        cl.initWorkoutManagerCL();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        assertTrue(cl.get(\"list\") instanceof ListWS);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    void get_delete_returnDeleteCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        CommandLib cl \u003d new CommandLib();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        cl.initWorkoutManagerCL();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        assertTrue(cl.get(\"delete\") instanceof DeleteWS);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    void get_new_returnNewCommand() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        CommandLib cl \u003d new CommandLib();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        cl.initWorkoutManagerCL();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        assertTrue(cl.get(\"new\") instanceof NewWS);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wgzesg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    void get_bye_returnByeCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        CommandLib cl \u003d new CommandLib();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        cl.initWorkoutManagerCL();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "        assertTrue(cl.get(\"end\") instanceof ByeWS);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wgzesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tienkhoa16": 5,
      "wgzesg": 44
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsk612"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "zsk612": 1
    }
  }
]
