[
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "![](https://commons.wikimedia.org/wiki/File:Red_Panda_(28072942347).jpg) | Lusi Wu Qi | [Github](https://github.com/lusi711) | [Portfolio](team/lusi.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003cimg src\u003d \"https://raw.githubusercontent.com/chuckiex3/tp/MooiSuetYengFrancene-AboutUs.md/docs/images/raccoon-holding-cat-56a9a1535f9b58b7d0fd836e.jpg\" width\u003d150\u003e | Mooi Suet Yeng, Francene | [Github](https://github.com/chuckiex3) | [Portfolio](team/francene.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003cimg src\u003d\"https://raw.githubusercontent.com/NeilBaner/tp/neilbaner-AboutUs/docs/images/neil_coverimage.jpg\" width\u003d150\u003e | Neil Banerjee | [Github](https://github.com/neilbaner) | [Portfolio](team/neilbaner.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003cimg src\u003d\"https://imgur.com/AruRSrV.jpg\" width\u003d150\u003e | Neo Yao Jie, Joel | [Github](https://github.com/yaowzers) | [Portfolio](team/joel.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003cimg src\u003d\"https://thumbs.dreamstime.com/b/cat-looking-computer-screen-curious-young-blue-tabby-maine-coon-standing-chair-front-table-notebook-190121850.jpg\" width\u003d150\u003e | Nguyen Ngoc Long | [Github](https://github.com/longngng) | [Portfolio](team/longnguyen.md)"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 5,
      "-": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "# Zer0Note"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Zer0Note is a *note taking and organisation* app that combines the features of OneNote \u0026 Notion with the speed of vim \u0026 emacsâ€‹."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 2,
      "-": 6
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Navigation Panel"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "- [Quick Start](https://ay2021s1-cs2113t-t12-3.github.io/tp/UserGuide.html/#quick-start)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "- [Features](https://ay2021s1-cs2113t-t12-3.github.io/tp/UserGuide.html/#features)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  - [Mode Switch](https://ay2021s1-cs2113t-t12-3.github.io/tp/UserGuide.html/#mode-switch)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  - [Timetable Mode](https://ay2021s1-cs2113t-t12-3.github.io/tp/UserGuide.html/#timetable-mode)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    - [Add a `task`](https://ay2021s1-cs2113t-t12-3.github.io/tp/UserGuide.html/#adding-a-task)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  - [Notebook Mode](https://ay2021s1-cs2113t-t12-3.github.io/tp/UserGuide.html/#notebook-mode)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    - [Add a `notebook`](https://ay2021s1-cs2113t-t12-3.github.io/tp/UserGuide.html/#adding-a-notebook)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    - [Add a `section`](https://ay2021s1-cs2113t-t12-3.github.io/tp/UserGuide.html/#adding-a-section)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    - [Add a `page`](https://ay2021s1-cs2113t-t12-3.github.io/tp/UserGuide.html/#adding-a-page)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    - [`Select`](https://ay2021s1-cs2113t-t12-3.github.io/tp/UserGuide.html/#select)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "- [Command Summary](https://ay2021s1-cs2113t-t12-3.github.io/tp/UserGuide.html/#command-summary)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Zer0Note is a note taking and organisation application that combines the ease of use and feature set of graphical tools with the interaction speed of command-line based tools like vim and emacs."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "{Give steps to get started quickly}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1. Down the latest version of `Zer0Note` from [here](https://github.com/AY2021S1-CS2113T-T12-3/tp/releases)."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for Zer0Note."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "4. Double click the file to start the app."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "5. Type the command in the command box and press Enter to execute it. e.g. typing `help` and pressing Enter will open the help window."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "{Give detailed description of each feature}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e:exclamation: Words within `[square brackets]` are the expected user inputs."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e\u003e e.g. in `add /n[NOTEBOOK]`, `NOTEBOOK` is a parameter which can be used as `add /n`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Timetable Mode"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "In `Timetable` mode, you can..."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Adding a task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Adds a `task` with a `deadline` to the task list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Format: `add /t[task] /by[dd/MM/yyyy] [hhmm]`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `task`: name of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `dd/MM/yyyy`: the due date of the task, in the format day/month/year."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `hhmm`: time the task is due, in 24h format."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`add /tcoding /by19-10-2020 1900`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Added: coding"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1:[x] coding (by: Oct 19 2020 07.00 PM)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Notebook Mode"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "In `Notebook mode`, you can `add`/`select` a `notebook`, `section` or `page`."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Adding a notebook"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Adds a `notebook`  into the `notebook shelf`."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Format: `add /n[NOTEBOOK]`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `NOTEBOOK`: the name of the notebook."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`add /nCS2101`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`Added notebook with title: CS2101`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Adding a section"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Adds a `section`  into the [selected](https://ay2021s1-cs2113t-t12-3.github.io/tp/UserGuide.html/#select) `notebook`."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e:exclamation: You must select a `notebook` before adding a section!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Format: `add /s[SECTION]`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `SECTION`: the name of the section in the selected `notebook`."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`add /sW1: Java`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`Added section with title: W1: Java`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Adding a page"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Adds a `page`  into the [selected](https://ay2021s1-cs2113t-t12-3.github.io/tp/UserGuide.html/#select) `section`."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e:exclamation: You must select a `section` before adding a page!"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Format: `add /p[PAGE]; [PAGE CONTENT]`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `PAGE`: the name of the page in the selected `section`."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `PAGE CONTENT`: the contents that you would like to store in the `page`."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`add /pHELLO WORLD; System.out.println(\"Hello World!\");`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`Added page with title: HELLO WORLD`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Select"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Select a `notebook`, `section`, `page` or a combination of the three."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Format: `select /n[NOTEBOOK] /s[SECTION] /p[NUMBER]`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `NOTEBOOK`: the title of the expected `notebook`."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `SECTION`: the title of the expected `section` in `notebook`."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `PAGE`: the page number in the expected `section`."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Examples of usage:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "In *NOTEBOOK MODE*,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `select /nCS2101 /sW2 /p1` - selects page 1 in the notebook `CS2101`, under the section `W2`."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `select /nCS2101 /sW2` - selects section entitled `W2` in the notebook `CS2101`."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `select /nCS2101` - selects the notebook entitled `CS2101`."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `select /all` - navigates back into `NOTEBOOK MODE`, where you can list to see all available notebooks."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e These commands can be run anywhere(i.e in a selected notebook or section) once you\u0027re in NOTEBOOK MODE.  "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "In a selected *NOTEBOOK*,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `select /s1: What is OOP? /p1` - selects page 1 in the section `1: What is OOP?`, in the selected `notebook`."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `select /s1: What is OOP?` - selects the section entitled `1: What is OOP?` in the selected `notebook`."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "In a selected *SECTION*,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `select /p1` - selects page 1 in the selected `section`."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer?"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: {your answer here}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "{Give a \u0027cheat sheet\u0027 of commands here}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "**Command** | **Format** | **Example**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "----------- | ---------- | -----------"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "*TIMETABLE MODE* `add` | add /tTASK /by[dd/MM/yyyy] [hhmm] | add /tcoding /by19-10-2020 1705"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "*NOTEBOOK MODE* `add` | 1) add /nNOTEBOOK 2) add /sSECTION 3) add /pPAGE; CONTENT | add /nCS2101"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "*NOTEBOOK MODE* `select` | 1) select /nNOTEBOOK 2) select /sSECTION 3) select /pNUMBER | select /nCS2101"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 105,
      "-": 36
    }
  },
  {
    "path": "docs/originalUG.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "{Give a product intro}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "{Give steps to get started quickly}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1. Down the latest version of `Duke` from [here](http://link.to/duke)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "{Give detailed description of each feature}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Adding a todo: `todo`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Adds a new item to the list of todo items."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Format: `todo n/TODO_NAME d/DEADLINE`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* The `DEADLINE` can be in a natural language format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* The `TODO_NAME` cannot contain punctuation.  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`todo n/Write the rest of the User Guide d/next week`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "**Q**: How do I transfer my data to another computer?"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "**A**: {your answer here}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "{Give a \u0027cheat sheet\u0027 of commands here}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* Add todo `todo n/TODO_NAME d/DEADLINE`"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 42
    }
  },
  {
    "path": "docs/team/francene.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "# Mooi Suet Yeng, Francene - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 6
    }
  },
  {
    "path": "docs/team/joel.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "# Neo Yao Jie, Joel - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 1,
      "-": 5
    }
  },
  {
    "path": "docs/team/lusi.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "# Lusi Wu Qi - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 6
    }
  },
  {
    "path": "docs/team/neilbaner.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "# Neil Banerjee"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.CliUserInterface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final TaskList tasksList \u003d new TaskList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static boolean notQuit \u003d true;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        CliUserInterface ui \u003d new CliUserInterface();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        ui.run();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 1,
      "Lusi711": 5,
      "neilbaner": 2,
      "-": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/AddCommandNotebookException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class AddCommandNotebookException extends ZeroNoteException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public AddCommandNotebookException(String problematicInput) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        super(problematicInput);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Unable to add notebook/section/page\" + problematicInput);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/EmptyPageException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class EmptyPageException extends ZeroNoteException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Empty page!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Format for adding a page: add /pPAGE TITLE; PAGE CONTENT\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/IncorrectAppModeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class IncorrectAppModeException extends ZeroNoteException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Please check that you are in the correct mode.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/IncorrectDeadlineFormatException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user has input the date/time wrongly."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class IncorrectDeadlineFormatException extends ZeroNoteException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"You have entered the date and time wrongly. \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Oops! Your deadline should be in this format\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"dd-MM-yyyy HHmm where time is in 24h\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 8,
      "neilbaner": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user has input an invalid command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class InvalidCommandException extends ZeroNoteException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public InvalidCommandException(String problematicInput) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        super(problematicInput);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"You have entered an invalid command: \" + problematicInput);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 7,
      "Lusi711": 4,
      "neilbaner": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidNotebookException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user has input an invalid notebook name."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class InvalidNotebookException extends ZeroNoteException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public InvalidNotebookException(String problematicInput) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.problematicInput \u003d problematicInput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"You have entered an invalid notebook name \" + problematicInput);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Format for adding notebook: add /nNOTEBOOK TITLE\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Format for selecting notebook: select /nNOTEBOOK TITLE\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 12,
      "neilbaner": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidPageException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user has input an invalid page name."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class InvalidPageException extends ZeroNoteException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Entered invalid page\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Format for adding page: add /pPAGE; CONTENT\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Format for selecting page: select /pNUMBER\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 9,
      "neilbaner": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidSectionException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user has input an invalid section name."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class InvalidSectionException extends ZeroNoteException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public InvalidSectionException(String problematicInput) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.problematicInput \u003d problematicInput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Invalid Section Name \" + problematicInput);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Format for adding section: add /sSECTION\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Format for selecting section: select /sSECTION\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 12,
      "neilbaner": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidUserInputException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class InvalidUserInputException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/NotebookOutOfBoundsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user has input a notebook that does not exist."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class NotebookOutOfBoundsException extends ZeroNoteException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public NotebookOutOfBoundsException(int input) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.problematicInput \u003d Integer.toString(input);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Notebook at index: \" + problematicInput + \"does not exist.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/TaskTitleException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//TODO create a ZeroNoteException class that all the regular exceptions will inherit from."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user\u0027s input is missing a title."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class TaskTitleException extends ZeroNoteException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Your task is missing a title!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Please type in the format: add /tTITLE /byDEADLINE\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 10,
      "neilbaner": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/TaskWrongFormatException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user\u0027s input does not follow the correct format expected."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class TaskWrongFormatException extends ZeroNoteException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"The input \\\"\" + problematicInput + \"\\\" doesn\u0027t follow the format expected. \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 6,
      "neilbaner": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/ZeroNoteException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public abstract class ZeroNoteException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public String problematicInput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public ZeroNoteException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public ZeroNoteException(String enteredCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.problematicInput \u003d enteredCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public abstract void printErrorMessage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/notebooks/Notebook.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.notebooks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Notebook {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private final ArrayList\u003cSection\u003e sectionArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public Notebook(String title) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        sectionArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Get the title of this notebook."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @return the title of the notebook"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Set the title of this notebook."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param title the desired new title of the notebook"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Add a new section with a given title to this notebook."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param title the title of the section to be added"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void addSection(String title) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        sectionArrayList.add(new Section(title));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Remove a section from the notebook."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param indexToRemove the index of the section to remove"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Section removeSection(int indexToRemove) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return sectionArrayList.remove(indexToRemove);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Find a section with a given title in this notebook."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param searchKey the title of the section to search for in the notebook"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @return the index of the section with the given title, -1 if not found"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public int findSection(String searchKey) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        for (Section s : sectionArrayList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            if (s.getTitle().equals(searchKey)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                return index;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Section getSectionAtIndex(int index) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return sectionArrayList.get(index);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public ArrayList\u003cSection\u003e getSectionArrayList() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return sectionArrayList;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 5,
      "Lusi711": 2,
      "neilbaner": 56,
      "longngng": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/notebooks/NotebookShelf.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.notebooks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.NotebookOutOfBoundsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class NotebookShelf {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final ArrayList\u003cNotebook\u003e notebooksArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public NotebookShelf() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        notebooksArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public ArrayList\u003cNotebook\u003e getNotebooksArrayList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return notebooksArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Find the notebook on the shelf with the given title."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param title the title of the notebook we want to find"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @return the index of the notebook we want to find"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public int findNotebook(String title) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        for (Notebook n : notebooksArrayList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            if (n.getTitle().equals(title)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                return index;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Get the notebook at a particular index in the ArrayList. Use findNotebook() to get an index from a given title."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param index the index of the notebook to be found"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @return The notebook at that index"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public Notebook getNotebookAtIndex(int index) throws NotebookOutOfBoundsException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (index \u003c 0 | index \u003e notebooksArrayList.size()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new NotebookOutOfBoundsException(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return notebooksArrayList.get(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Add a notebook with a given title to the shelf."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param title the title of the notebook to be added"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void addNotebook(String title) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        notebooksArrayList.add(new Notebook(title));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Notebook removeNotebook(int indexToRemove) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return notebooksArrayList.remove(indexToRemove);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 7,
      "Lusi711": 10,
      "neilbaner": 43,
      "longngng": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/notebooks/Page.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.notebooks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Page {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private String content;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Page(String title, String content) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getContent() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setContent(String content) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void printPage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 4,
      "neilbaner": 6,
      "longngng": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/notebooks/Section.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.notebooks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Section {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private final ArrayList\u003cPage\u003e pageArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Section(String title) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        pageArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void addPage(String title, String content) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        pageArrayList.add(new Page(title, content));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public int getPage(String searchKey) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        for (Page p : pageArrayList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            if (p.getTitle().equals(searchKey)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                return index;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void getPage(int pageIndex) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Page page \u003d pageArrayList.get(pageIndex);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            page.printPage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (IndexOutOfBoundsException | NullPointerException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"page \u003c\" + (pageIndex + 1) + \"\u003e doesn\u0027t exist\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Page removePage(int indexToRemove) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return pageArrayList.remove(indexToRemove);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void removePage(String titleToRemove) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        int indexToRemove \u003d getPage(titleToRemove);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        if (indexToRemove \u003e\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            removePage(indexToRemove);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            System.out.println(\"doesn\u0027t exist\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Page getPageAtIndex(int index) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return pageArrayList.get(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public ArrayList\u003cPage\u003e getPageArrayList() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return pageArrayList;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 13,
      "Lusi711": 2,
      "neilbaner": 36,
      "longngng": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Represents the storage of where Zer0Note is loading from and saving information to."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    // To include String filepath"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    // Saves the given task to txt format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public void saveTask(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        File file \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            file.getParentFile().mkdir(); // create a directory"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            file.createNewFile(); // create a .txt file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            // checks whether the file exist"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            if (file.length() \u003e 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                FileWriter saveFile \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                saveFile.write(System.lineSeparator() + task.toTxtFormat());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                saveFile.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                FileWriter saveFile \u003d new FileWriter(this.filepath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                saveFile.write(task.toTxtFormat());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                saveFile.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            System.out.println(\"Error in IO!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void saveToFile(AppState currentAppState) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        // TODO: Implement"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public AppState readFromFile() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        // TODO: Implement"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return new AppState();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 42,
      "neilbaner": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final String title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected DateFormat dateTime \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\"); // in 24h format"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected DateFormat outputFormat \u003d new SimpleDateFormat(\"MMM dd yyyy hh.mm aa\"); // in 12h format"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private LocalDate dueDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private LocalTime dueTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public Task(String title, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public LocalDate getDueDate() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String[] dayTime \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        dueDate \u003d LocalDate.parse(dayTime[0].trim());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String[] dayTime \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        dueTime \u003d LocalTime.parse(dayTime[1].trim());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return dueTime;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String reformatDate() throws ParseException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Date date \u003d dateTime.parse(by);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return outputFormat.format(date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return (isDone ? \"o\" : \"x\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return \"[\" + this.getStatusIcon() + \"] \" + this.title + \" (by: \" + reformatDate() + \")\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tAn error occurred while reading the given deadline.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String getTaskInMessagesFormat() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.title;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toTxtFormat() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        // ..."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 47,
      "Lusi711": 1,
      "yAOwzers": 17,
      "neilbaner": 7,
      "longngng": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        taskArrayList.add(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Task removeTask(int indexToRemove) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        Task removedTask \u003d taskArrayList.remove(indexToRemove);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return removedTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return taskArrayList.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Task getTask(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return taskArrayList.get(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Task markAsDone(int i) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        Task task \u003d this.taskArrayList.get(i - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskArrayList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return taskArrayList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 6,
      "Lusi711": 13,
      "yAOwzers": 6,
      "neilbaner": 9,
      "longngng": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/AppMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package seedu.duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "public enum AppMode {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "    TIMETABLE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "    NOTEBOOK_SHELF,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "    NOTEBOOK_BOOK,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    NOTEBOOK_SECTION,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    NOTEBOOK_PAGE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case TIMETABLE:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return \"timetable\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case NOTEBOOK_BOOK:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return \"notebook book\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case NOTEBOOK_SECTION:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return \"notebook section\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case NOTEBOOK_PAGE:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return \"notebook page\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case NOTEBOOK_SHELF:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return \"notebook\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 9,
      "longngng": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/AppState.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.notebooks.Notebook;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.notebooks.NotebookShelf;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.notebooks.Section;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class AppState {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private AppMode appMode;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private NotebookShelf currentBookShelf;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private Notebook currentNotebook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private Section currentSection;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private int indexOfCurrentNotebook;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private int indexOfCurrentSection;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public AppState() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        appMode \u003d AppMode.TIMETABLE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        currentBookShelf \u003d new NotebookShelf();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public AppMode getAppMode() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return appMode;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setAppMode(AppMode appMode) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.appMode \u003d appMode;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public NotebookShelf getCurrentBookShelf() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return currentBookShelf;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setCurrentBookShelf(NotebookShelf currentBookShelf) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.currentBookShelf \u003d currentBookShelf;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Notebook getCurrentNotebook() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return currentNotebook;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void setCurrentNotebook(Notebook currentNotebook) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.currentNotebook \u003d currentNotebook;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Section getCurrentSection() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return currentSection;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void setCurrentSection(Section currentSection) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.currentSection \u003d currentSection;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void setTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public int getIndexOfCurrentNotebook() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return indexOfCurrentNotebook;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setIndexOfCurrentNotebook(int indexOfCurrentNotebook) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.indexOfCurrentNotebook \u003d indexOfCurrentNotebook;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Task markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        Task task \u003d this.taskList.markAsDone(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public int getIndexOfCurrentSection() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return indexOfCurrentSection;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void setIndexOfCurrentSection(int indexOfCurrentSection) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.indexOfCurrentSection \u003d indexOfCurrentSection;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 16,
      "Lusi711": 22,
      "yAOwzers": 7,
      "neilbaner": 3,
      "longngng": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/CliMessages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Notebook;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Page;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Section;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * A class containing all the messages displayed to the user during operation."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * @author neilbaner"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class CliMessages {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String REMOVE_TASK_SUCCESS_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void printAddedTaskMessage(TaskList tasksList, String title) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Added: \" + title);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(tasksList.getNumberOfTasks() + \":\" + tasksList.getTask(tasksList.getNumberOfTasks() - 1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static void printRemoveNotebookMessage(Notebook notebook) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this notebook: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"\\t\" + notebook.getTitle());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static void printRemoveSectionMessage(Section section) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this section: \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"\\t\" + section.getTitle());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static void printRemovePageMessage(Page page) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this page: \" + page.getTitle());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        page.printPage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printRemoveTaskMessage(Task deletedTask, int numberOfTasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(REMOVE_TASK_SUCCESS_MESSAGE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(deletedTask.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (numberOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tNow you have \" + numberOfTasks + \" task in the list.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tNow you have \" + numberOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    //TODO: fill these sections with the appropriate user documentation, possibly taken from the final UG"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printAddTaskHelp() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printAddNotebookSectionPageHelp() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printDoneTaskHelp() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printExitHelp() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printListTaskHelp() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printListNotebookSectionPageHelp() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printModeSwitchHelp() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printRemoveTaskHelp() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printRemoveNotebookSectionPageHelp() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printSelectHelp() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printNotebookModeHelp() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Here are some commands to help you work with the Notebook mode: \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printAddNotebookSectionPageHelp();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printListNotebookSectionPageHelp();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printSelectHelp();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printRemoveNotebookSectionPageHelp();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printTimetableModeHelp() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Here are some commands to help you work with the Timetable mode: \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printAddTaskHelp();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printDoneTaskHelp();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printListTaskHelp();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printRemoveTaskHelp();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printGeneralHelp() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Here are some general commands that will work throughout Zer0Note: \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printModeSwitchHelp();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printExitHelp();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printAllHelp() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Here are all the commands you need to know to operate Zer0Note: \");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printGeneralHelp();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printNotebookModeHelp();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printTimetableModeHelp();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printGoodBye() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Bye!\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public void printMarkDone(Task task) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String markDoneMessage \u003d \"Yay! I\u0027ve marked these task as done:\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String taskDetails \u003d task.getTask();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        System.out.println(markDoneMessage + \"\\n \" + task.getTaskInMessagesFormat());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 12,
      "Lusi711": 27,
      "yAOwzers": 6,
      "neilbaner": 83
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/CliUserInterface.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.exceptions.ZeroNoteException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.Exit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class CliUserInterface {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private AppState appState;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private boolean toQuit \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public CliUserInterface() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private void loadState() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        appState \u003d storage.readFromFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private void saveState() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        storage.saveToFile(appState);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        startUI();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        loadState();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Scanner keyboard \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        while (!toQuit) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            userInput \u003d keyboard.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            if (userInput.equals(Exit.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                saveState();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                toQuit \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                executeCommand(userInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            } catch (ZeroNoteException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                e.printErrorMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private void executeCommand(String userInput) throws ZeroNoteException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "longngng"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "longngng"
        },
        "content": "        CliCommand command \u003d parser.getCommandFromInput(userInput, appState);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "longngng"
        },
        "content": "        command.execute();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private void startUI() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Welcome to\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\" _ _ _                  _ _ _   _    _            _\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"|_ _  |   _ _    _  _  |  _  | |  \\\\ | |   _ _   _| |_    _ _\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"  /  /  /  _  \\\\ | |/_\\\\ | | | | |   \\\\| |  /   \\\\ |_   _| /   _ \\\\\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\" /  /_  |  _ _/ | |    | |_| | |  |\\\\  | |  [] |  | |_  |  _ _/\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"|_ _ _|  \\\\ _ _| |_|    |_ _ _| | _| \\\\_|  \\\\ _ /   |_ _|  \\\\ _ _|\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"You are now in timetable mode\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String printExit() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"GOODBYE HOPE TO SEE YOU AGAIN\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 23,
      "yAOwzers": 7,
      "neilbaner": 35,
      "longngng": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/InputParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.EmptyPageException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.IncorrectAppModeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.IncorrectDeadlineFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.InvalidNotebookException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.InvalidPageException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.InvalidSectionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.NotebookOutOfBoundsException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.TaskTitleException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.TaskWrongFormatException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.ZeroNoteException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.notebooks.Notebook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.notebooks.NotebookShelf;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.notebooks.Section;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.userinterface.command.Done;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.command.Exit;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.command.Help;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.command.ModeSwitch;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.notebook.AddCommandNotebookMode;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.notebook.ListCommandNotebookMode;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.notebook.RemoveCommandNotebookMode;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.notebook.SelectCommandNotebookMode;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.timetable.AddCommandTimetableMode;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.timetable.ListCommandTimetableMode;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.timetable.RemoveCommandTimetableMode;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static seedu.duke.userinterface.command.notebook.AddCommandNotebookMode.CONTENT_DELIMITER;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static seedu.duke.userinterface.command.notebook.AddCommandNotebookMode.NOTEBOOK_DELIMITER;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static seedu.duke.userinterface.command.notebook.AddCommandNotebookMode.PAGE_DELIMITER;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static seedu.duke.userinterface.command.notebook.AddCommandNotebookMode.SECTION_DELIMITER;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static seedu.duke.userinterface.command.notebook.SelectCommandNotebookMode.SHOW_ALL;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import static seedu.duke.userinterface.command.timetable.AddCommandTimetableMode.DEADLINE_DELIMITER;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import static seedu.duke.userinterface.command.timetable.AddCommandTimetableMode.TASK_DELIMITER;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class InputParser {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses the user\u0027s input to extract the task title in TIMETABLE mode."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the user\u0027s input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return the task title."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws TaskWrongFormatException when the user\u0027s input does not include the TASK_DELIMITER."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws TaskTitleException       when the user\u0027s input does not include a task title."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static String parseTaskTitle(String input) throws TaskWrongFormatException, TaskTitleException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.startsWith(TASK_DELIMITER)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String taskTitle \u003d input.replace(TASK_DELIMITER, \"\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (taskTitle.isBlank()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new TaskTitleException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int indexPos \u003d taskTitle.indexOf(\"/by\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            taskTitle \u003d taskTitle.substring(0, indexPos).trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return taskTitle;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new TaskWrongFormatException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses user\u0027s input to extract deadline in TIMETABLE mode."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the user\u0027s input."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return deadline in the format dd-MM-yyyy hhMM, where time is in 24h format."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws IncorrectDeadlineFormatException when the deadline input is in the wrong format."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws TaskWrongFormatException         when the deadline input is blank."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static String parseDeadline(String input) throws TaskWrongFormatException, IncorrectDeadlineFormatException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        int dividerPos \u003d input.indexOf(DEADLINE_DELIMITER);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        input \u003d input.substring(dividerPos);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.startsWith(DEADLINE_DELIMITER)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            String deadline \u003d input.replace(DEADLINE_DELIMITER, \"\").trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (deadline.isBlank()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new TaskWrongFormatException();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (!correctTimeFormat(deadline)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new IncorrectDeadlineFormatException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return deadline;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new IncorrectDeadlineFormatException();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Checks if [deadline] input by the user is in the correct format."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param by is the string containing the deadline\u0027s due date and time."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return true when the input is in the correct format, otherwise false."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private static boolean correctTimeFormat(String by) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        DateTimeFormatter dateTime \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(by, dateTime);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (DateTimeParseException d) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses user\u0027s input to extract notebook title, section title or page number whenever applicable."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param argument contains notebook title, section title or/and page number."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param appState is the state of the application."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void extractParams(String argument, AppState appState)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throws InvalidNotebookException, InvalidSectionException, InvalidPageException, InvalidCommandException,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            NotebookOutOfBoundsException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (argument.startsWith(NOTEBOOK_DELIMITER)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            extractNotebookParams(argument, appState);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else if (argument.startsWith(SECTION_DELIMITER)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            extractSectionParams(argument, appState);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else if (argument.startsWith(PAGE_DELIMITER)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Section section \u003d appState.getCurrentSection();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int pageNum \u003d parsePageNumber(argument);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            section.getPage(pageNum);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else if (argument.startsWith(SHOW_ALL)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            appState.setAppMode(AppMode.NOTEBOOK_SHELF);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidCommandException(argument);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Extracts the notebook title, as well as the section title and page number, if provided."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param argument is the user\u0027s input."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param appState is the current mode the user is in."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidNotebookException when the notebook title input by the user does not exist."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidSectionException  when the section title input by the user does not exist."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidPageException     when the page number input by the user does not exist."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void extractNotebookParams(String argument, AppState appState)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throws InvalidNotebookException, InvalidSectionException, InvalidPageException,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            NotebookOutOfBoundsException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Notebook notebook;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Section section \u003d null;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String notebookTitle \u003d parseNotebookTitle(argument);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        NotebookShelf notebookShelf \u003d appState.getCurrentBookShelf();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        int notebookIndex \u003d notebookShelf.findNotebook(notebookTitle);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (notebookIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidNotebookException(notebookTitle);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        notebook \u003d notebookShelf.getNotebookAtIndex(notebookIndex);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        appState.setAppMode(AppMode.NOTEBOOK_BOOK);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        appState.setCurrentNotebook(notebook);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"now in \" + appState.getAppMode() + \": \" + appState.getCurrentNotebook().getTitle());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (argument.contains(SECTION_DELIMITER)) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String sectionTitle \u003d InputParser.parseSectionTitle(argument);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int sectionIndex \u003d notebook.findSection(sectionTitle);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (sectionIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new InvalidSectionException(sectionTitle);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            section \u003d notebook.getSectionAtIndex(sectionIndex);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            appState.setAppMode(AppMode.NOTEBOOK_SECTION);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            appState.setCurrentSection(section);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"now in \" + appState.getAppMode() + \": \" + appState.getCurrentSection().getTitle());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (argument.contains(PAGE_DELIMITER) \u0026\u0026 section !\u003d null) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int pageNum \u003d parsePageNumber(argument);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            section.getPage(pageNum);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses the user\u0027s input to extract the section title, and the page number if provided by the user."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param argument is the user\u0027s input."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param appState is the current mode the user is in."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidSectionException when the section title input by the user does not exist."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidPageException    when the page number input by the user does not exist."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void extractSectionParams(String argument, AppState appState) throws InvalidSectionException,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            InvalidPageException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Notebook notebook \u003d appState.getCurrentNotebook();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String sectionTitle \u003d parseSectionTitle(argument);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        int sectionIndex \u003d notebook.findSection(sectionTitle);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (sectionIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidSectionException(sectionTitle);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Section section \u003d notebook.getSectionAtIndex(sectionIndex);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        appState.setAppMode(AppMode.NOTEBOOK_SECTION);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        appState.setCurrentSection(section);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"now in \" + appState.getAppMode() + \": \" + appState.getCurrentSection().getTitle());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (argument.contains(PAGE_DELIMITER)) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int pageNum \u003d parsePageNumber(argument);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (pageNum \u003e section.getPageArrayList().size()) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new InvalidPageException();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            section.getPage(pageNum);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses notebook title from the user\u0027s input."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the input from the user."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return the notebook title input by the user."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidNotebookException when user\u0027s input is in the wrong format."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static String parseNotebookTitle(String input) throws InvalidNotebookException {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.startsWith(NOTEBOOK_DELIMITER)) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            String notebookTitle \u003d input.replace(NOTEBOOK_DELIMITER, \"\").trim();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (notebookTitle.isBlank()) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new InvalidNotebookException(null);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (notebookTitle.contains(SECTION_DELIMITER)) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                int indexPos \u003d notebookTitle.indexOf(SECTION_DELIMITER);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                notebookTitle \u003d notebookTitle.substring(0, indexPos).trim();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return notebookTitle;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidNotebookException(input);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses section title from the user\u0027s input."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the user\u0027s input."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return the section title input by the user."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidSectionException when the user\u0027s input does not contain the section delimiter, or when the"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *                                 section title is blank."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static String parseSectionTitle(String input) throws InvalidSectionException {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int dividerPos \u003d input.indexOf(SECTION_DELIMITER);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            input \u003d input.substring(dividerPos);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidSectionException(input);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.startsWith(SECTION_DELIMITER)) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String sectionTitle \u003d input.replace(SECTION_DELIMITER, \"\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (sectionTitle.isBlank()) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new InvalidSectionException(null);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (sectionTitle.contains(PAGE_DELIMITER)) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                int indexPos \u003d sectionTitle.indexOf(PAGE_DELIMITER);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                sectionTitle \u003d sectionTitle.substring(0, indexPos).trim();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return sectionTitle;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidSectionException(input);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public int parseTaskIndex(String args) throws NumberFormatException {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return Integer.parseInt(args) - 1;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses the page number input by the user."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the user\u0027s input."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return the page number input by the user."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidPageException when the page input by the user is blank, or when the user\u0027s input is in the"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *                              wrong format."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public int parsePageNumber(String input) throws InvalidPageException {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int dividerPos \u003d input.indexOf(PAGE_DELIMITER);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            input \u003d input.substring(dividerPos);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidPageException();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.startsWith(PAGE_DELIMITER)) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                String page \u003d input.replace(PAGE_DELIMITER, \"\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                if (page.isBlank()) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    throw new InvalidPageException();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                return Integer.parseInt(page) - 1;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new InvalidPageException();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidPageException();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses the page title input by the user."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the user\u0027s input."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return the page title input by the user."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidPageException when the user\u0027s input is in the wrong format, or when the page title is blank."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws EmptyPageException   when the user\u0027s page input does not contain the content delimiter."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String parsePageTitle(String input) throws InvalidPageException, EmptyPageException {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.startsWith(PAGE_DELIMITER)) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String pageTitle \u003d input.replace(PAGE_DELIMITER, \"\").trim();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (pageTitle.isBlank()) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new InvalidPageException();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (!pageTitle.contains(CONTENT_DELIMITER)) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new EmptyPageException();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int indexPos \u003d pageTitle.indexOf(CONTENT_DELIMITER);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            pageTitle \u003d pageTitle.substring(0, indexPos).trim();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return pageTitle;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidPageException();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses the page contents of the user\u0027s input."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the user\u0027s input."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return contents in the page input by the user."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidPageException when the user\u0027s input does not contain the page content delimiter, or when there"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *                              is no content."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String parsePageContent(String input) throws InvalidPageException, EmptyPageException {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        int dividerPos \u003d input.indexOf(CONTENT_DELIMITER);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        input \u003d input.substring(dividerPos);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.startsWith(CONTENT_DELIMITER)) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String content \u003d input.replace(CONTENT_DELIMITER, \"\").trim();"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (content.isBlank()) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new EmptyPageException();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return content;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidPageException();"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public CliCommand getCommandFromInput(String userInput, AppState appState) throws ZeroNoteException {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String trimmedInput \u003d userInput.trim();"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String[] input \u003d trimmedInput.split(\" \", 2); // split input into command and arguments"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String commandWord \u003d input[0];"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String argument \u003d \"\";"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        if (input.length \u003e 1) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            argument \u003d input[1].trim();"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "longngng"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case AddCommandTimetableMode.COMMAND_WORD:"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (appState.getAppMode() \u003d\u003d AppMode.TIMETABLE) {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                return new AddCommandTimetableMode(argument, appState);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                String titleToAdd;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                String contentToAdd;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                if (appState.getAppMode() \u003d\u003d AppMode.NOTEBOOK_SHELF) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                    titleToAdd \u003d parseNotebookTitle(argument);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                    return new AddCommandNotebookMode(titleToAdd, appState);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                } else if (appState.getAppMode() \u003d\u003d AppMode.NOTEBOOK_BOOK) {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                    titleToAdd \u003d parseSectionTitle(argument);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                    return new AddCommandNotebookMode(titleToAdd, appState);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                } else if (appState.getAppMode() \u003d\u003d AppMode.NOTEBOOK_SECTION) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    titleToAdd \u003d parsePageTitle(argument);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    contentToAdd \u003d parsePageContent(argument);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                    return new AddCommandNotebookMode(titleToAdd, contentToAdd, appState);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    throw new InvalidCommandException(userInput);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case ListCommandTimetableMode.COMMAND_WORD:"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (appState.getAppMode() \u003d\u003d AppMode.TIMETABLE) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new ListCommandTimetableMode(argument, appState);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new ListCommandNotebookMode(argument, appState);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        case RemoveCommandTimetableMode.COMMAND_WORD:"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (appState.getAppMode() \u003d\u003d AppMode.TIMETABLE) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                return new RemoveCommandTimetableMode(parseTaskIndex(argument), appState);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                String notebookTitleToRemove \u003d \"\";"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                String sectionTitleToRemove \u003d \"\";"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                int pageNumberToRemove \u003d -1;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                if (argument.contains(NOTEBOOK_DELIMITER)) {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    notebookTitleToRemove \u003d parseNotebookTitle(argument);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                if (argument.contains(SECTION_DELIMITER)) {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    sectionTitleToRemove \u003d parseSectionTitle(argument);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                }"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                if (argument.contains(PAGE_DELIMITER)) {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    pageNumberToRemove \u003d parsePageNumber(argument);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new RemoveCommandNotebookMode(notebookTitleToRemove,"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                        sectionTitleToRemove, pageNumberToRemove, appState);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case SelectCommandNotebookMode.COMMAND_WORD:"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (appState.getAppMode() !\u003d AppMode.TIMETABLE) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new SelectCommandNotebookMode(argument, appState);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new IncorrectAppModeException();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        case Exit.COMMAND_WORD:"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new Exit(argument, appState);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        case Help.COMMAND_WORD:"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new Help(argument);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        case Done.COMMAND_WORD:"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            return new Done(argument, appState);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case ModeSwitch.COMMAND_WORD:"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return new ModeSwitch(argument, appState);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "longngng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidCommandException(userInput);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 328,
      "Lusi711": 30,
      "yAOwzers": 3,
      "neilbaner": 37,
      "longngng": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/Add.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Add extends CliCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private String argument;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private AppState uiMode;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public Add(String argument, AppState uiMode) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.uiMode \u003d uiMode;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 8,
      "Lusi711": 1,
      "yAOwzers": 2,
      "neilbaner": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/CliCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public abstract class CliCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"mode\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    protected AppState appState;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected String commandParams;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static String getCommandWord() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return COMMAND_WORD;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public abstract void execute();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public AppState getAppState() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return appState;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void setAppState(AppState appState) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.appState \u003d appState;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String getCommandParams() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return commandParams;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void setCommandParams(String params) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        commandParams \u003d params;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 5,
      "Lusi711": 1,
      "neilbaner": 21,
      "longngng": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/Done.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.exceptions.InvalidUserInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.notebooks.NotebookShelf;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.userinterface.CliMessages;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.userinterface.CliUserInterface;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Done extends CliCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private AppState appState;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private String argument;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private CliMessages messages \u003d new CliMessages();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Done(String argument, AppState appState) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.appState \u003d appState;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            int indexOfNumberAfterDone \u003d Integer.parseInt(this.argument);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            Task taskDone \u003d this.appState.markTaskAsDone(indexOfNumberAfterDone);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            messages.printMarkDone(taskDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            System.out.println(\"I\u0027m sorry, please enter a valid number!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 29,
      "neilbaner": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/Exit.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.CliMessages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Exit extends CliCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Exit(String argument, AppState appState) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.setAppState(appState);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.setCommandParams(argument);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        CliMessages messages \u003d new CliMessages();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        messages.printGoodBye();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 10,
      "longngng": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/Help.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.CliMessages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * This class is to be instantiated when the user enters the keyword \"help\". The arguments for the command are then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * passed into the Help object, and executing it will display help appropriately."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * @author neilbaner"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Help extends CliCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    // the arguments added by the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    String commandArgs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Constructor for Help."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param commandArgs the arguments input by the user. Precondition: these must be all lowercase, and with all"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *                    leading and trailing spaces stripped."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Help(String commandArgs) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.commandArgs \u003d commandArgs;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Executes the command, based on the arguments entered by the user. If the arguments are not recognised, then we"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * print all the help available."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        CliMessages messages \u003d new CliMessages();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        switch (commandArgs) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        case \"notebook\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            messages.printNotebookModeHelp();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        case \"timetable\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            messages.printTimetableModeHelp();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            messages.printAllHelp();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 47
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/ModeSwitch.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.AppMode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class ModeSwitch extends CliCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"mode\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public ModeSwitch(String argument, AppState appState) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.setAppState(appState);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.setCommandParams(argument);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "        switch (commandParams) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case (\"/t\"):"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "            appState.setAppMode(AppMode.TIMETABLE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"You are now in \" + appState.getAppMode() + \" mode\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case (\"/n\"):"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "            appState.setAppMode(AppMode.NOTEBOOK_SHELF);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"You are now in \" + appState.getAppMode() + \" mode\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"Error\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 2,
      "neilbaner": 8,
      "longngng": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/notebook/AddCommandNotebookMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.AddCommandNotebookException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.ZeroNoteException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.notebooks.Notebook;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.notebooks.NotebookShelf;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.notebooks.Section;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class AddCommandNotebookMode extends CliCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String NOTEBOOK_DELIMITER \u003d \"/n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String SECTION_DELIMITER \u003d \"/s\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String PAGE_DELIMITER \u003d \"/p\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String CONTENT_DELIMITER \u003d \";\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final String title;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private String content;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final NotebookShelf currentBookshelf;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final Notebook currentNotebook;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final Section currentSection;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public AddCommandNotebookMode(String title, AppState appState) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.appState \u003d appState;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        assert title !\u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        currentBookshelf \u003d appState.getCurrentBookShelf();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        currentNotebook \u003d appState.getCurrentNotebook();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        currentSection \u003d appState.getCurrentSection();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public AddCommandNotebookMode(String title, String content, AppState appState) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this(title, appState);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            switch (appState.getAppMode()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            case NOTEBOOK_SHELF:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                currentBookshelf.addNotebook(title);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                System.out.println(\"Added notebook with title: \" + title);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            case NOTEBOOK_BOOK:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                currentNotebook.addSection(title);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                System.out.println(\"Added section with title : \" + title);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            case NOTEBOOK_SECTION:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                currentSection.addPage(title, content);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                System.out.println(\"Added page with title: \" + title);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new AddCommandNotebookException(title);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (ZeroNoteException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            e.printErrorMessage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 16,
      "neilbaner": 43
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/notebook/ListCommandNotebookMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.notebooks.Notebook;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.notebooks.NotebookShelf;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.notebooks.Page;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.notebooks.Section;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class ListCommandNotebookMode extends CliCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public ListCommandNotebookMode(String argument, AppState appState) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.setAppState(appState);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.setCommandParams(argument);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    // TODO: Break into functions and avoid repeated code, arrowhead code"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void listBookshelf_nsp(NotebookShelf notebookShelf) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Notebook notebook : notebookShelf.getNotebooksArrayList()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"* \" + notebook.getTitle());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "            for (Section section : notebook.getSectionArrayList()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"  |-- \" + section.getTitle());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "                for (Page page : section.getPageArrayList()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"        |-- \" + page.getTitle());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"            \" + page.getContent());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    // TODO: Break into functions and avoid repeated code, arrowhead code"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void listBookshelf_ns(NotebookShelf notebookShelf) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Notebook notebook : notebookShelf.getNotebooksArrayList()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"* \" + notebook.getTitle());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "            for (Section section : notebook.getSectionArrayList()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"  |-- \" + section.getTitle());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    // TODO: Break into functions and avoid repeated code, arrowhead code"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void listBookshelf_n(NotebookShelf notebookShelf) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Notebook notebook : notebookShelf.getNotebooksArrayList()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"* \" + notebook.getTitle());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    // TODO: Break into functions and avoid repeated code, arrowhead code"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void listNotebook_sp(Notebook notebook) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Section section : notebook.getSectionArrayList()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"* \" + section.getTitle());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "longngng"
        },
        "content": "            for (Page page : section.getPageArrayList()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"  |-- \" + page.getTitle());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"        \" + page.getContent());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    // TODO: Break into functions and avoid repeated code, arrowhead code"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void listNotebook_s(Notebook notebook) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Section section : notebook.getSectionArrayList()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"* \" + section.getTitle());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    // TODO: Break into functions and avoid repeated code, arrowhead code"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void listSection(Section section) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Page page : section.getPageArrayList()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"* \" + page.getTitle());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"    \" + page.getContent());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        switch (appState.getAppMode()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case NOTEBOOK_SHELF:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            switch (commandParams) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case (\"/s\"):"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                listBookshelf_ns(appState.getCurrentBookShelf());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case (\"/a\"):"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                listBookshelf_nsp(appState.getCurrentBookShelf());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                listBookshelf_n(appState.getCurrentBookShelf());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case NOTEBOOK_BOOK:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            switch (commandParams) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case (\"/a\"):"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "longngng"
        },
        "content": "                listNotebook_sp(appState.getCurrentNotebook());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "longngng"
        },
        "content": "                listNotebook_s(appState.getCurrentNotebook());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case NOTEBOOK_SECTION:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            listSection(appState.getCurrentSection());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            // TODO: Replace with an exception"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"Error in list class\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 32,
      "yAOwzers": 1,
      "neilbaner": 17,
      "longngng": 61
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/notebook/RemoveCommandNotebookMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.exceptions.IncorrectAppModeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.NotebookOutOfBoundsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.exceptions.ZeroNoteException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Notebook;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.NotebookShelf;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Page;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Section;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.CliMessages;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class RemoveCommandNotebookMode extends CliCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private NotebookShelf currentBookshelf;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private Notebook currentNotebook;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String notebookTitleToRemove;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private Section currentSection;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String sectionTitleToRemove;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private int pageNumberToRemove;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public RemoveCommandNotebookMode(String notebookTitle, String sectionTitle,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                                     int pageNumber, AppState appState) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.appState \u003d appState;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        notebookTitleToRemove \u003d notebookTitle;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        sectionTitleToRemove \u003d sectionTitle;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        pageNumberToRemove \u003d pageNumber;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        currentBookshelf \u003d appState.getCurrentBookShelf();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        currentNotebook \u003d appState.getCurrentNotebook();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        currentSection \u003d appState.getCurrentSection();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            switch (appState.getAppMode()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case NOTEBOOK_SHELF:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                removeFromNotebookShelf();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case NOTEBOOK_BOOK:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                removeFromNotebook();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case NOTEBOOK_SECTION:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                removeFromSection();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                throw new IncorrectAppModeException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (ZeroNoteException zne) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            zne.printErrorMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void removeFromSection() throws InvalidCommandException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (pageNumberToRemove \u003e -1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Page pageRemoved \u003d currentSection.removePage(pageNumberToRemove);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            CliMessages.printRemovePageMessage(pageRemoved);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            throw new InvalidCommandException(\"Please enter in the format:\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    + \"delete /pPAGE_NUMBER\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void removeFromNotebook() throws InvalidCommandException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (!sectionTitleToRemove.equals(\"\") \u0026\u0026 pageNumberToRemove \u003e -1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            int indexOfSectionToRemove \u003d currentNotebook.findSection(sectionTitleToRemove);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Section section \u003d currentNotebook.getSectionAtIndex(indexOfSectionToRemove);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Page pageRemoved \u003d section.removePage(pageNumberToRemove);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            CliMessages.printRemovePageMessage(pageRemoved);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else if (!sectionTitleToRemove.equals(\"\") \u0026\u0026 pageNumberToRemove \u003d\u003d -1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            int indexOfSectionToRemove \u003d currentNotebook.findSection(sectionTitleToRemove);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Section sectionRemoved \u003d currentNotebook.removeSection(indexOfSectionToRemove);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            CliMessages.printRemoveSectionMessage(sectionRemoved);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            throw new InvalidCommandException(\"Please enter in the format:\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    + \"delete /sSECTION /pPAGE_NUMBER\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private void removeFromNotebookShelf() throws InvalidCommandException, NotebookOutOfBoundsException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        CliMessages cliMessages \u003d new CliMessages();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        int indexOfNotebookToRemove \u003d currentBookshelf.findNotebook(notebookTitleToRemove);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (!notebookTitleToRemove.equals(\"\") \u0026\u0026 !sectionTitleToRemove.equals(\"\")"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                \u0026\u0026 pageNumberToRemove \u003e -1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Notebook notebook \u003d currentBookshelf.getNotebookAtIndex(indexOfNotebookToRemove);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            int indexOfSectionToRemove \u003d notebook.findSection(sectionTitleToRemove);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Section section \u003d notebook.getSectionAtIndex(indexOfSectionToRemove);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Page pageRemoved \u003d section.removePage(pageNumberToRemove);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            CliMessages.printRemovePageMessage(pageRemoved);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else if (!notebookTitleToRemove.equals(\"\") \u0026\u0026 !sectionTitleToRemove.equals(\"\")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                \u0026\u0026 pageNumberToRemove \u003d\u003d -1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Notebook notebook \u003d currentBookshelf.getNotebookAtIndex(indexOfNotebookToRemove);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            int indexOfSectionToRemove \u003d notebook.findSection(sectionTitleToRemove);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Section sectionRemoved \u003d notebook.removeSection(indexOfSectionToRemove);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            CliMessages.printRemoveSectionMessage(sectionRemoved);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else if (!notebookTitleToRemove.equals(\"\") \u0026\u0026 sectionTitleToRemove.equals(\"\")"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                \u0026\u0026 pageNumberToRemove \u003d\u003d -1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Notebook notebookRemoved \u003d currentBookshelf.removeNotebook(indexOfNotebookToRemove);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            CliMessages.printRemoveNotebookMessage(notebookRemoved);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            throw new InvalidCommandException(\"Please enter in the format:\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    + \"delete /nNOTEBOOK /sSECTION /pPAGE_NUMBER\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 2,
      "Lusi711": 99,
      "neilbaner": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/notebook/SelectCommandNotebookMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.ZeroNoteException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.InputParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class SelectCommandNotebookMode extends CliCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"select\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String SHOW_ALL \u003d \"/all\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public SelectCommandNotebookMode(String argument, AppState uiMode) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.setAppState(uiMode);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            switch (appState.getAppMode()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case NOTEBOOK_SHELF:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case NOTEBOOK_BOOK:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case NOTEBOOK_SECTION:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                parser.extractParams(argument, appState);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tError occurred when selecting\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (ZeroNoteException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            e.printErrorMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 27,
      "neilbaner": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/timetable/AddCommandTimetableMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.IncorrectDeadlineFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.TaskTitleException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.TaskWrongFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.CliMessages;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.InputParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class AddCommandTimetableMode extends CliCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    //TODO have subclasses of CliCommand for commands with and without arguments, and the subclass with arguments could"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    // contain these fields to be overridden."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String TASK_DELIMITER \u003d \"/t\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String DEADLINE_DELIMITER \u003d \"/by\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private static InputParser parser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final CliMessages messages \u003d new CliMessages();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public AddCommandTimetableMode(String argument, AppState appState) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.appState \u003d appState;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        parser \u003d new InputParser();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        TaskList currentTaskList \u003d appState.getTaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            if (argument.contains(\"/by\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                String title \u003d InputParser.parseTaskTitle(argument);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                String deadline \u003d InputParser.parseDeadline(argument);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                currentTaskList.addTask(new Task(title, deadline));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                messages.printAddedTaskMessage(currentTaskList, title);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new TaskWrongFormatException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (TaskTitleException t) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tYour task is missing a title!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tPlease type in the format: add /tTITLE /byDEADLINE\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | TaskWrongFormatException w) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tPlease type in the format: add /tTITLE /byDEADLINE\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (IncorrectDeadlineFormatException d) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tOops! Your deadline should be in this format\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tdd-MM-yyyy HHmm where time is in 24h\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 35,
      "Lusi711": 1,
      "neilbaner": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/timetable/DoneCommandTimetableMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class DoneCommandTimetableMode extends CliCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/timetable/ListCommandTimetableMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class ListCommandTimetableMode extends CliCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public ListCommandTimetableMode(String argument, AppState appState) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.setAppState(appState);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.commandParams \u003d argument;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "            if (appState.getTaskList().getTaskArrayList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"The list of tasks is empty\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "            switch (commandParams) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case \"/d\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "                printDoneTasks();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case \"/u\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "                printUndoneTasks();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "                printAllTasks();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"The list of tasks is empty\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private void printAllTasks() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Task task : appState.getTaskList().getTaskArrayList()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.print(i++ + \":\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private void printDoneTasks() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Task task : appState.getTaskList().getTaskArrayList()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "longngng"
        },
        "content": "            if (task.isDone()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.print(i++ + \":\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private void printUndoneTasks() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Task task : appState.getTaskList().getTaskArrayList()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "longngng"
        },
        "content": "            if (!task.isDone()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.print(i++ + \":\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 1,
      "neilbaner": 4,
      "longngng": 62
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/timetable/RemoveCommandTimetableMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.CliMessages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class RemoveCommandTimetableMode extends CliCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private final int indexToRemove;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public RemoveCommandTimetableMode(int indexToRemove, AppState uiMode) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.setAppState(uiMode);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.indexToRemove \u003d indexToRemove;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            TaskList taskList \u003d appState.getTaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            Task deletedTask \u003d taskList.removeTask(indexToRemove);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            numberOfTasks \u003d taskList.getNumberOfTasks();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            CliMessages.printRemoveTaskMessage(deletedTask, numberOfTasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (IndexOutOfBoundsException ioe) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (numberOfTasks \u003e 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                System.out.println(\"Please enter a valid index between 1 and \" + numberOfTasks + \".\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                System.out.println(\"There are no tasks in the list.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            System.out.println(\"Please enter a valid number.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 26,
      "neilbaner": 12
    }
  },
  {
    "path": "src/test/java/seedu/duke/userinterface/InputParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package seedu.duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "class InputParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    void parseTaskIndex_validNumber_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String num \u003d \"2\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        assertEquals(1,parser.parseTaskIndex(num));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    void parseTaskIndex_InvalidString_numberFormatExceptionThrown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String num \u003d \"num\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        Assertions.assertThrows(NumberFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            parser.parseTaskIndex(num);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        });"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 24
    }
  },
  {
    "path": "src/test/java/seedu/duke/userinterface/command/AddNotebookTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.userinterface.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.AppMode;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.InputParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class AddNotebookTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    void addNotebook_wrongFormat_expectException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        AppState appState \u003d new AppState();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        appState.setAppMode(AppMode.NOTEBOOK_PAGE);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String inputString \u003d \"add notebook\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        assertThrows(InvalidCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            parser.getCommandFromInput(inputString, appState);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    void addNotebook_wrongMode_expectException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        AppState appState \u003d new AppState();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        appState.setAppMode(AppMode.NOTEBOOK_PAGE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String inputString \u003d \"add /nNOTEBOOK\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        assertThrows(InvalidCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            parser.getCommandFromInput(inputString, appState);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 33
    }
  },
  {
    "path": "src/test/java/seedu/duke/userinterface/command/AddTaskTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.userinterface.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.IncorrectDeadlineFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.TaskWrongFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.InputParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class AddTaskTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    void addTask_dateFormat_expectException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String inputString \u003d \"/by18 Oct\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        assertThrows(IncorrectDeadlineFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            parser.parseDeadline(inputString);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        });"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    void addTask_correctFormat() throws TaskWrongFormatException, IncorrectDeadlineFormatException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String inputString \u003d \"/by18-10-2020 1900\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String expectedString \u003d \"18-10-2020 1900\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        assertEquals(expectedString, parser.parseDeadline(inputString));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 29
    }
  },
  {
    "path": "src/test/java/seedu/duke/userinterface/command/RemoveTaskTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package seedu.duke.userinterface.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.timetable.AddCommandTimetableMode;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.timetable.RemoveCommandTimetableMode;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "class RemoveTaskTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    void execute_DeleteTaskOne_NoTasksInTaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        TaskList taskslist \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        AppState appState \u003d new AppState();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String input \u003d \"add /tTask1 /by12-10-2020 2252\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        AddCommandTimetableMode addTimetableMode \u003d new AddCommandTimetableMode(input,appState);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        addTimetableMode.execute();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        RemoveCommandTimetableMode removeTimetableMode \u003d new RemoveCommandTimetableMode(1,appState);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        removeTimetableMode.execute();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        assertEquals(taskslist.getNumberOfTasks(), 0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 20,
      "neilbaner": 6
    }
  },
  {
    "path": "src/test/java/seedu/duke/userinterface/command/SelectNotebookTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.userinterface.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.IncorrectAppModeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.AppMode;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.InputParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class SelectNotebookTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    void selectNotebook_in_wrongMode() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        AppState appState \u003d new AppState();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        appState.setAppMode(AppMode.TIMETABLE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String inputString \u003d \"select /nNOTEBOOK\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        assertThrows(IncorrectAppModeException.class, () -\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            parser.getCommandFromInput(inputString, appState);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "add /ttask /by15-10-2020 2359"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "mode /n"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "add /nNotebook 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "select /nNotebook 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "add /sSection 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "select /sSection 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "add /pPage 1; some text"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "add /pPage 3; some text"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "mode /n"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "delete /nNotebook 1 /sSection 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 10,
      "yAOwzers": 3,
      "neilbaner": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew clean shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "cd ..\\..\\text-ui-test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "FC ACTUAL.TXT EXPECTED-WIN.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 1,
      "-": 18
    }
  }
]
